2025-01-18 16:24:30,712 - DEBUG - reading configuration file from C:\Users\ajjay\AppData\Local\snowflake\config.toml
2025-01-18 16:24:30,720 - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.10.11, Platform: Windows-10-10.0.22635-SP0
2025-01-18 16:24:30,720 - DEBUG - connect
2025-01-18 16:24:30,720 - DEBUG - __config
2025-01-18 16:24:30,721 - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 16:24:30,721 - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 16:24:30,721 - DEBUG - use_numpy: False
2025-01-18 16:24:30,721 - DEBUG - initialized
2025-01-18 16:24:30,721 - DEBUG - REST API object was created: gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 16:24:30,721 - DEBUG - authenticate
2025-01-18 16:24:30,722 - DEBUG - account=gmcpdcz-mt01740, user=preciousjunk, database=DEV_SRC_INGEST, schema=EPA_PROCESSED, warehouse=app_wh, role=None, request_id=b379ee24-0be6-4fe5-986b-7055b5b8e3ea
2025-01-18 16:24:30,722 - DEBUG - body['data']: {'CLIENT_APP_ID': 'PythonSnowpark', 'CLIENT_APP_VERSION': '1.26.0', 'SVN_REVISION': None, 'ACCOUNT_NAME': 'gmcpdcz-mt01740', 'LOGIN_NAME': 'preciousjunk', 'CLIENT_ENVIRONMENT': {'APPLICATION': 'streamlit:SnowparkML', 'OS': 'Windows', 'OS_VERSION': 'Windows-10-10.0.22635-SP0', 'PYTHON_VERSION': '3.10.11', 'PYTHON_RUNTIME': 'CPython', 'PYTHON_COMPILER': 'MSC v.1929 64 bit (AMD64)', 'OCSP_MODE': 'FAIL_OPEN', 'TRACING': 10, 'LOGIN_TIMEOUT': None, 'NETWORK_TIMEOUT': None, 'SOCKET_TIMEOUT': None}, 'PASSWORD': '******', 'SESSION_PARAMETERS': {'CLIENT_PREFETCH_THREADS': 4}}
2025-01-18 16:24:30,722 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 16:24:30,723 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 16:24:30,723 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 16:24:30,723 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 16:24:30,724 - DEBUG - Request guid: 48f86dd0-1436-43d3-a7b6-1222b3ecbe75
2025-01-18 16:24:30,724 - DEBUG - socket timeout: 60
2025-01-18 16:24:30,726 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 16:24:31,162 - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None
2025-01-18 16:24:31,201 - DEBUG - cache directory: C:\Users\ajjay\AppData\Local\Snowflake\Caches
2025-01-18 16:24:31,202 - DEBUG - ocsp_response_cache_uri: file://C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 16:24:31,202 - DEBUG - OCSP_VALIDATION_CACHE size: 0
2025-01-18 16:24:31,202 - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 16:24:31,202 - DEBUG - OCSP dynamic cache server RETRY URL: None
2025-01-18 16:24:31,202 - DEBUG - The cache is older than 1 day. Deleted the cache file: C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 16:24:31,202 - DEBUG - Failed to locate OCSP response cache file. No worry. It will validate with OCSP server: C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 16:24:31,202 - DEBUG - validating certificate: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 16:24:31,202 - DEBUG - # of certificates: 4
2025-01-18 16:24:31,203 - DEBUG - subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 16:24:31,203 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 16:24:31,203 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 16:24:31,204 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 16:24:31,206 - DEBUG - reading certificate bundle: D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\certifi\cacert.pem
2025-01-18 16:24:31,219 - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 16:24:31,221 - DEBUG - cache miss for subject: 'OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])'
2025-01-18 16:24:31,221 - DEBUG - started downloading OCSP response cache file: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 16:24:31,224 - DEBUG - Starting new HTTP connection (1): ocsp.snowflakecomputing.com:80
2025-01-18 16:24:31,362 - DEBUG - http://ocsp.snowflakecomputing.com:80 "GET /ocsp_response_cache.json HTTP/1.1" 200 296928
2025-01-18 16:24:31,417 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-04-15 00:00:00+00:00
2025-01-18 16:24:31,419 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 16:24:31,420 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 16:24:31,421 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 16:24:31,423 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 16:24:31,424 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 16:24:31,432 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-14 15:50:15+00:00
2025-01-18 16:24:31,472 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:12+00:00
2025-01-18 16:24:31,474 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,475 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,476 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,477 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,478 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,480 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,482 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,483 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,484 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:33+00:00
2025-01-18 16:24:31,485 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,487 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,488 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,489 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,490 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,491 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,492 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,494 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,495 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,496 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,498 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,499 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,500 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,501 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,502 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:12+00:00
2025-01-18 16:24:31,503 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,505 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:12+00:00
2025-01-18 16:24:31,527 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:12+00:00
2025-01-18 16:24:31,528 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-02-16 15:50:14+00:00
2025-01-18 16:24:31,539 - DEBUG - ended downloading OCSP response cache file. elapsed time: 0.31796741485595703s
2025-01-18 16:24:31,539 - DEBUG - downloaded OCSP response cache file from http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 16:24:31,539 - DEBUG - # of certificates: 310
2025-01-18 16:24:31,541 - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])
2025-01-18 16:24:31,541 - DEBUG - using OCSP response cache
2025-01-18 16:24:31,542 - DEBUG - Certificate is NOT attached in Basic OCSP Response. Using issuer's certificate
2025-01-18 16:24:31,542 - DEBUG - Verifying the OCSP response is signed by the issuer.
2025-01-18 16:24:31,545 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 16:24:31,545 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 16:24:31,545 - DEBUG - using OCSP response cache
2025-01-18 16:24:31,546 - DEBUG - Certificate is attached in Basic OCSP Response
2025-01-18 16:24:31,546 - DEBUG - Verifying the attached certificate is signed by the issuer
2025-01-18 16:24:31,546 - DEBUG - Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 16:24:31,547 - DEBUG - Verifying the OCSP response is signed by the issuer.
2025-01-18 16:24:31,549 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 16:24:31,549 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 16:24:31,550 - DEBUG - using OCSP response cache
2025-01-18 16:24:31,551 - DEBUG - Certificate is attached in Basic OCSP Response
2025-01-18 16:24:31,551 - DEBUG - Verifying the attached certificate is signed by the issuer
2025-01-18 16:24:31,551 - DEBUG - Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 16:24:31,551 - DEBUG - Verifying the OCSP response is signed by the issuer.
2025-01-18 16:24:31,553 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 16:24:31,553 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 16:24:31,554 - DEBUG - using OCSP response cache
2025-01-18 16:24:31,555 - DEBUG - Certificate is attached in Basic OCSP Response
2025-01-18 16:24:31,555 - DEBUG - Verifying the attached certificate is signed by the issuer
2025-01-18 16:24:31,555 - DEBUG - Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 16:24:31,556 - DEBUG - Verifying the OCSP response is signed by the issuer.
2025-01-18 16:24:31,557 - DEBUG - Attempting to acquire lock 2315986300272 on C:\Users\ajjay\AppData\Local\Snowflake\Caches\ocsp_response_validation_cache.lock
2025-01-18 16:24:31,557 - DEBUG - Lock 2315986300272 acquired on C:\Users\ajjay\AppData\Local\Snowflake\Caches\ocsp_response_validation_cache.lock
2025-01-18 16:24:31,560 - DEBUG - Attempting to release lock 2315986300272 on C:\Users\ajjay\AppData\Local\Snowflake\Caches\ocsp_response_validation_cache.lock
2025-01-18 16:24:31,560 - DEBUG - Lock 2315986300272 released on C:\Users\ajjay\AppData\Local\Snowflake\Caches\ocsp_response_validation_cache.lock
2025-01-18 16:24:31,561 - DEBUG - writing OCSP response cache file to C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 16:24:31,561 - DEBUG - encoding OCSP response cache to JSON
2025-01-18 16:24:31,592 - DEBUG - ok
2025-01-18 16:24:31,768 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /session/v1/login-request?request_id=b379ee24-0be6-4fe5-986b-7055b5b8e3ea&databaseName=DEV_SRC_INGEST&schemaName=EPA_PROCESSED&warehouse=app_wh&request_guid=48f86dd0-1436-43d3-a7b6-1222b3ecbe75 HTTP/1.1" 200 281
2025-01-18 16:24:31,769 - DEBUG - SUCCESS
2025-01-18 16:24:31,769 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 16:24:31,769 - DEBUG - ret[code] = 390197, after post request
2025-01-18 16:24:31,769 - DEBUG - completed authentication
2025-01-18 16:30:06,485 - DEBUG - reading configuration file from C:\Users\ajjay\AppData\Local\snowflake\config.toml
2025-01-18 16:30:06,489 - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.10.11, Platform: Windows-10-10.0.22635-SP0
2025-01-18 16:30:06,489 - DEBUG - connect
2025-01-18 16:30:06,489 - DEBUG - __config
2025-01-18 16:30:06,489 - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 16:30:06,489 - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 16:30:06,489 - DEBUG - use_numpy: False
2025-01-18 16:30:06,490 - DEBUG - initialized
2025-01-18 16:30:06,490 - DEBUG - REST API object was created: gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 16:30:06,490 - DEBUG - authenticate
2025-01-18 16:30:06,490 - DEBUG - account=gmcpdcz-mt01740, user=preciousjunk, database=DEV_SRC_INGEST, schema=EPA_PROCESSED, warehouse=app_wh, role=None, request_id=81d82de2-f5ff-4ef9-a668-0bbff05a131e
2025-01-18 16:30:06,490 - DEBUG - body['data']: {'CLIENT_APP_ID': 'PythonSnowpark', 'CLIENT_APP_VERSION': '1.26.0', 'SVN_REVISION': None, 'ACCOUNT_NAME': 'gmcpdcz-mt01740', 'LOGIN_NAME': 'preciousjunk', 'CLIENT_ENVIRONMENT': {'APPLICATION': 'streamlit:SnowparkML', 'OS': 'Windows', 'OS_VERSION': 'Windows-10-10.0.22635-SP0', 'PYTHON_VERSION': '3.10.11', 'PYTHON_RUNTIME': 'CPython', 'PYTHON_COMPILER': 'MSC v.1929 64 bit (AMD64)', 'OCSP_MODE': 'FAIL_OPEN', 'TRACING': 10, 'LOGIN_TIMEOUT': None, 'NETWORK_TIMEOUT': None, 'SOCKET_TIMEOUT': None}, 'PASSWORD': '******', 'SESSION_PARAMETERS': {'CLIENT_PREFETCH_THREADS': 4}}
2025-01-18 16:30:06,491 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 16:30:06,491 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 16:30:06,491 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 16:30:06,491 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 16:30:06,491 - DEBUG - Request guid: 896cce16-0cb7-429b-9f79-5e2cf175b472
2025-01-18 16:30:06,491 - DEBUG - socket timeout: 60
2025-01-18 16:30:06,492 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 16:30:06,952 - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None
2025-01-18 16:30:06,953 - DEBUG - ocsp_response_cache_uri: file://C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 16:30:06,953 - DEBUG - OCSP_VALIDATION_CACHE size: 310
2025-01-18 16:30:06,953 - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 16:30:06,953 - DEBUG - OCSP dynamic cache server RETRY URL: None
2025-01-18 16:30:06,953 - DEBUG - validating certificate: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 16:30:06,953 - DEBUG - # of certificates: 4
2025-01-18 16:30:06,954 - DEBUG - subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 16:30:06,954 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 16:30:06,954 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 16:30:06,955 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 16:30:06,956 - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 16:30:06,957 - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])
2025-01-18 16:30:06,958 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 16:30:06,959 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 16:30:06,960 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 16:30:06,960 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 16:30:06,962 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 16:30:06,962 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 16:30:06,964 - DEBUG - ok
2025-01-18 16:30:07,105 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /session/v1/login-request?request_id=81d82de2-f5ff-4ef9-a668-0bbff05a131e&databaseName=DEV_SRC_INGEST&schemaName=EPA_PROCESSED&warehouse=app_wh&request_guid=896cce16-0cb7-429b-9f79-5e2cf175b472 HTTP/1.1" 200 281
2025-01-18 16:30:07,106 - DEBUG - SUCCESS
2025-01-18 16:30:07,106 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 16:30:07,106 - DEBUG - ret[code] = 390197, after post request
2025-01-18 16:30:07,106 - DEBUG - completed authentication
2025-01-18 16:30:34,844 - DEBUG - reading configuration file from C:\Users\ajjay\AppData\Local\snowflake\config.toml
2025-01-18 16:30:34,847 - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.10.11, Platform: Windows-10-10.0.22635-SP0
2025-01-18 16:30:34,848 - DEBUG - connect
2025-01-18 16:30:34,848 - DEBUG - __config
2025-01-18 16:30:34,848 - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 16:30:34,849 - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 16:30:34,849 - DEBUG - use_numpy: False
2025-01-18 16:30:34,849 - DEBUG - initialized
2025-01-18 16:30:34,849 - DEBUG - REST API object was created: gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 16:30:34,849 - DEBUG - authenticate
2025-01-18 16:30:34,849 - DEBUG - account=gmcpdcz-mt01740, user=preciousjunk, database=DEV_SRC_INGEST, schema=EPA_PROCESSED, warehouse=app_wh, role=None, request_id=b4ab197b-dc54-4b00-84ac-ef5269976736
2025-01-18 16:30:34,849 - DEBUG - body['data']: {'CLIENT_APP_ID': 'PythonSnowpark', 'CLIENT_APP_VERSION': '1.26.0', 'SVN_REVISION': None, 'ACCOUNT_NAME': 'gmcpdcz-mt01740', 'LOGIN_NAME': 'preciousjunk', 'CLIENT_ENVIRONMENT': {'APPLICATION': 'streamlit:SnowparkML', 'OS': 'Windows', 'OS_VERSION': 'Windows-10-10.0.22635-SP0', 'PYTHON_VERSION': '3.10.11', 'PYTHON_RUNTIME': 'CPython', 'PYTHON_COMPILER': 'MSC v.1929 64 bit (AMD64)', 'OCSP_MODE': 'FAIL_OPEN', 'TRACING': 10, 'LOGIN_TIMEOUT': None, 'NETWORK_TIMEOUT': None, 'SOCKET_TIMEOUT': None}, 'PASSWORD': '******', 'SESSION_PARAMETERS': {'CLIENT_PREFETCH_THREADS': 4}}
2025-01-18 16:30:34,849 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 16:30:34,850 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 16:30:34,850 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 16:30:34,850 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 16:30:34,850 - DEBUG - Request guid: ce885ecc-4931-4a79-8049-cc3ddc3a46f2
2025-01-18 16:30:34,850 - DEBUG - socket timeout: 60
2025-01-18 16:30:34,851 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 16:30:35,271 - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None
2025-01-18 16:30:35,272 - DEBUG - ocsp_response_cache_uri: file://C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 16:30:35,272 - DEBUG - OCSP_VALIDATION_CACHE size: 310
2025-01-18 16:30:35,272 - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 16:30:35,272 - DEBUG - OCSP dynamic cache server RETRY URL: None
2025-01-18 16:30:35,272 - DEBUG - validating certificate: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 16:30:35,272 - DEBUG - # of certificates: 4
2025-01-18 16:30:35,272 - DEBUG - subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 16:30:35,273 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 16:30:35,273 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 16:30:35,273 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 16:30:35,275 - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 16:30:35,276 - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])
2025-01-18 16:30:35,278 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 16:30:35,278 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 16:30:35,279 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 16:30:35,279 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 16:30:35,280 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 16:30:35,280 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 16:30:35,282 - DEBUG - ok
2025-01-18 16:30:35,427 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /session/v1/login-request?request_id=b4ab197b-dc54-4b00-84ac-ef5269976736&databaseName=DEV_SRC_INGEST&schemaName=EPA_PROCESSED&warehouse=app_wh&request_guid=ce885ecc-4931-4a79-8049-cc3ddc3a46f2 HTTP/1.1" 200 281
2025-01-18 16:30:35,428 - DEBUG - SUCCESS
2025-01-18 16:30:35,428 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 16:30:35,428 - DEBUG - ret[code] = 390197, after post request
2025-01-18 16:30:35,428 - DEBUG - completed authentication
2025-01-18 16:55:46,154 - DEBUG - reading configuration file from C:\Users\ajjay\AppData\Local\snowflake\config.toml
2025-01-18 16:55:46,156 - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.10.11, Platform: Windows-10-10.0.22635-SP0
2025-01-18 16:55:46,156 - DEBUG - connect
2025-01-18 16:55:46,157 - DEBUG - __config
2025-01-18 16:55:46,157 - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 16:55:46,157 - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 16:55:46,157 - DEBUG - use_numpy: False
2025-01-18 16:55:46,158 - DEBUG - initialized
2025-01-18 16:55:46,158 - DEBUG - REST API object was created: gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 16:55:46,158 - DEBUG - authenticate
2025-01-18 16:55:46,158 - DEBUG - account=gmcpdcz-mt01740, user=ajjaykannan, database=DEV_SRC_INGEST, schema=EPA_PROCESSED, warehouse=app_wh, role=None, request_id=87c7ebe4-0086-4d07-b6c6-6bf999f02ec7
2025-01-18 16:55:46,158 - DEBUG - body['data']: {'CLIENT_APP_ID': 'PythonSnowpark', 'CLIENT_APP_VERSION': '1.26.0', 'SVN_REVISION': None, 'ACCOUNT_NAME': 'gmcpdcz-mt01740', 'LOGIN_NAME': 'ajjaykannan', 'CLIENT_ENVIRONMENT': {'APPLICATION': 'streamlit:SnowparkML', 'OS': 'Windows', 'OS_VERSION': 'Windows-10-10.0.22635-SP0', 'PYTHON_VERSION': '3.10.11', 'PYTHON_RUNTIME': 'CPython', 'PYTHON_COMPILER': 'MSC v.1929 64 bit (AMD64)', 'OCSP_MODE': 'FAIL_OPEN', 'TRACING': 10, 'LOGIN_TIMEOUT': None, 'NETWORK_TIMEOUT': None, 'SOCKET_TIMEOUT': None}, 'PASSWORD': '******', 'SESSION_PARAMETERS': {'CLIENT_PREFETCH_THREADS': 4}}
2025-01-18 16:55:46,159 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 16:55:46,159 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 16:55:46,159 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 16:55:46,159 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 16:55:46,159 - DEBUG - Request guid: de1793aa-690d-4d25-aa92-e443f3fc6cae
2025-01-18 16:55:46,160 - DEBUG - socket timeout: 60
2025-01-18 16:55:46,162 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 16:55:46,719 - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None
2025-01-18 16:55:46,769 - DEBUG - cache directory: C:\Users\ajjay\AppData\Local\Snowflake\Caches
2025-01-18 16:55:46,770 - DEBUG - ocsp_response_cache_uri: file://C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 16:55:46,771 - DEBUG - OCSP_VALIDATION_CACHE size: 310
2025-01-18 16:55:46,771 - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 16:55:46,771 - DEBUG - OCSP dynamic cache server RETRY URL: None
2025-01-18 16:55:46,771 - DEBUG - validating certificate: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 16:55:46,771 - DEBUG - # of certificates: 4
2025-01-18 16:55:46,771 - DEBUG - subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 16:55:46,772 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 16:55:46,773 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 16:55:46,774 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 16:55:46,776 - DEBUG - reading certificate bundle: D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\certifi\cacert.pem
2025-01-18 16:55:46,795 - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 16:55:46,797 - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])
2025-01-18 16:55:46,799 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 16:55:46,800 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 16:55:46,802 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 16:55:46,802 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 16:55:46,804 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 16:55:46,805 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 16:55:46,808 - DEBUG - ok
2025-01-18 16:55:56,082 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /session/v1/login-request?request_id=87c7ebe4-0086-4d07-b6c6-6bf999f02ec7&databaseName=DEV_SRC_INGEST&schemaName=EPA_PROCESSED&warehouse=app_wh&request_guid=de1793aa-690d-4d25-aa92-e443f3fc6cae HTTP/1.1" 200 1910
2025-01-18 16:55:56,084 - DEBUG - SUCCESS
2025-01-18 16:55:56,084 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 16:55:56,084 - DEBUG - ret[code] = None, after post request
2025-01-18 16:55:56,084 - DEBUG - completed authentication
2025-01-18 16:55:56,084 - DEBUG - token = ******
2025-01-18 16:55:56,084 - DEBUG - master_token = ******
2025-01-18 16:55:56,085 - DEBUG - id_token = NULL
2025-01-18 16:55:56,085 - DEBUG - mfa_token = NULL
2025-01-18 16:55:56,087 - DEBUG - cursor
2025-01-18 16:55:56,087 - INFO - Snowpark Session information: 
"version" : 1.26.0,
"python.version" : 3.10.11,
"python.connector.version" : 3.12.4,
"python.connector.session.id" : 1980125954371002,
"os.name" : Windows

2025-01-18 16:55:56,089 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000201BED29D50>
2025-01-18 16:55:56,089 - DEBUG - created a new SFPoolManager
2025-01-18 16:55:56,090 - INFO - Querying the server for client info
2025-01-18 16:55:56,090 - DEBUG - cursor
2025-01-18 16:55:56,090 - DEBUG - executing SQL/command
2025-01-18 16:55:56,090 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 16:55:56,090 - DEBUG - sequence counter: 1
2025-01-18 16:55:56,090 - DEBUG - Request id: 9fc6ce99-48df-4b07-abe4-fb5c18b23592
2025-01-18 16:55:56,090 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 16:55:56,090 - DEBUG - is_file_transfer: True
2025-01-18 16:55:56,090 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:55:56,090 - DEBUG - _cmd_query
2025-01-18 16:55:56,090 - DEBUG - serialize_to_dict() called
2025-01-18 16:55:56,091 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[1], is_file_transfer=[False]
2025-01-18 16:55:56,093 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 16:55:56,117 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 16:55:56,117 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 16:55:56,117 - DEBUG - Request guid: 9d72637a-e42f-4775-8262-49555ff63f33
2025-01-18 16:55:56,117 - DEBUG - socket timeout: 60
2025-01-18 16:55:56,299 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=9fc6ce99-48df-4b07-abe4-fb5c18b23592&request_guid=9d72637a-e42f-4775-8262-49555ff63f33 HTTP/1.1" 200 2808
2025-01-18 16:55:56,300 - DEBUG - SUCCESS
2025-01-18 16:55:56,300 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 16:55:56,300 - DEBUG - ret[code] = None, after post request
2025-01-18 16:55:56,300 - DEBUG - Query id: 01b9cd9f-0002-4c78-0007-08ea001f7b86
2025-01-18 16:55:56,301 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737240951705308, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 16:55:56,301 - DEBUG - deserialize {'id': 0, 'timestamp': 1737240951705308, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 16:55:56,301 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 16:55:56,301 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 16:55:56,301 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 16:55:56,301 - DEBUG - deserialize_json_dict() returns
2025-01-18 16:55:56,301 - DEBUG - Cache Entry: (0, 1737240951705308, 0)
2025-01-18 16:55:56,301 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:55:56,302 - DEBUG - sfqid: 01b9cd9f-0002-4c78-0007-08ea001f7b86
2025-01-18 16:55:56,302 - DEBUG - query execution done
2025-01-18 16:55:56,302 - DEBUG - SUCCESS
2025-01-18 16:55:56,302 - DEBUG - PUT OR GET: False
2025-01-18 16:55:56,302 - DEBUG - Query result format: arrow
2025-01-18 16:55:56,303 - INFO - Number of results in first chunk: 1
2025-01-18 16:55:56,303 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 16:55:56,305 - DEBUG - Arrow BatchSize: 1
2025-01-18 16:55:56,305 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 16:55:56,305 - DEBUG - Batches read: 0
2025-01-18 16:55:56,305 - DEBUG - beginning to schedule result batch downloads
2025-01-18 16:55:56,305 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 16:55:56,307 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000201BE8AB310>, telemetry enabled: True
2025-01-18 16:55:56,308 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 16:55:56,308 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 16:55:56,308 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 16:55:56,308 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 16:55:56,406 - DEBUG - executing SQL/command
2025-01-18 16:55:56,406 - DEBUG - query: [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 16:55:56,406 - DEBUG - sequence counter: 2
2025-01-18 16:55:56,407 - DEBUG - Request id: b4159a5b-c48a-4136-9952-a0f590bd9890
2025-01-18 16:55:56,407 - DEBUG - running query [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 16:55:56,407 - DEBUG - is_file_transfer: True
2025-01-18 16:55:56,407 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:55:56,408 - DEBUG - _cmd_query
2025-01-18 16:55:56,408 - DEBUG - serialize_to_dict() called
2025-01-18 16:55:56,408 - DEBUG - Cache Entry: (0, 1737240951705308, 0)
2025-01-18 16:55:56,408 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737240951705308, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 16:55:56,408 - DEBUG - sql=[SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...], sequence_id=[2], is_file_transfer=[False]
2025-01-18 16:55:56,409 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 16:55:56,410 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 16:55:56,410 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 16:55:56,410 - DEBUG - Request guid: 6642044e-5bca-46df-8bff-672458847748
2025-01-18 16:55:56,410 - DEBUG - socket timeout: 60
2025-01-18 16:55:56,582 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=b4159a5b-c48a-4136-9952-a0f590bd9890&request_guid=6642044e-5bca-46df-8bff-672458847748 HTTP/1.1" 200 2301
2025-01-18 16:55:56,585 - DEBUG - SUCCESS
2025-01-18 16:55:56,585 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 16:55:56,585 - DEBUG - ret[code] = None, after post request
2025-01-18 16:55:56,585 - DEBUG - Query id: 01b9cd9f-0002-4c76-0007-08ea001fb84a
2025-01-18 16:55:56,585 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737240951996755, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 16:55:56,585 - DEBUG - Cache Entry: (0, 1737240951705308, 0)
2025-01-18 16:55:56,585 - DEBUG - deserialize {'id': 0, 'timestamp': 1737240951996755, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 16:55:56,586 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 16:55:56,586 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 16:55:56,586 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 16:55:56,586 - DEBUG - deserialize_json_dict() returns
2025-01-18 16:55:56,586 - DEBUG - Cache Entry: (0, 1737240951996755, 0)
2025-01-18 16:55:56,586 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:55:56,586 - DEBUG - sfqid: 01b9cd9f-0002-4c76-0007-08ea001fb84a
2025-01-18 16:55:56,586 - DEBUG - query execution done
2025-01-18 16:55:56,587 - DEBUG - SUCCESS
2025-01-18 16:55:56,587 - DEBUG - PUT OR GET: False
2025-01-18 16:55:56,587 - DEBUG - Query result format: arrow
2025-01-18 16:55:56,587 - INFO - Number of results in first chunk: 1
2025-01-18 16:55:56,587 - DEBUG - Execute query [queryID: 01b9cd9f-0002-4c76-0007-08ea001fb84a] 
        SELECT LOCATION, LATITUDE, LONGITUDE
        FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS 
        WHERE USER_ID = 'default_user'
        
2025-01-18 16:55:56,587 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 16:55:56,587 - DEBUG - Arrow BatchSize: 1
2025-01-18 16:55:56,587 - DEBUG - Arrow chunk info: batchCount 1, columnCount 3, use_numpy: 0
2025-01-18 16:55:56,587 - DEBUG - Batches read: 0
2025-01-18 16:55:56,588 - DEBUG - beginning to schedule result batch downloads
2025-01-18 16:55:56,588 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 16:55:56,673 - DEBUG - executing SQL/command
2025-01-18 16:55:56,673 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 16:55:56,673 - DEBUG - sequence counter: 3
2025-01-18 16:55:56,673 - DEBUG - Request id: 59dd884c-8200-4f9c-970e-0e34f9bde0d2
2025-01-18 16:55:56,674 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 16:55:56,674 - DEBUG - is_file_transfer: True
2025-01-18 16:55:56,674 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:55:56,674 - DEBUG - _cmd_query
2025-01-18 16:55:56,674 - DEBUG - serialize_to_dict() called
2025-01-18 16:55:56,675 - DEBUG - Cache Entry: (0, 1737240951996755, 0)
2025-01-18 16:55:56,675 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737240951996755, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 16:55:56,675 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[3], is_file_transfer=[False]
2025-01-18 16:55:56,677 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 16:55:56,678 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 16:55:56,678 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 16:55:56,678 - DEBUG - Request guid: e771aaa0-c790-4cf6-8fb2-691fe3c98e45
2025-01-18 16:55:56,678 - DEBUG - socket timeout: 60
2025-01-18 16:55:56,759 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=59dd884c-8200-4f9c-970e-0e34f9bde0d2&request_guid=e771aaa0-c790-4cf6-8fb2-691fe3c98e45 HTTP/1.1" 200 1682
2025-01-18 16:55:56,760 - DEBUG - SUCCESS
2025-01-18 16:55:56,760 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 16:55:56,760 - DEBUG - ret[code] = None, after post request
2025-01-18 16:55:56,760 - DEBUG - Query id: 01b9cd9f-0002-4c71-0007-08ea001f8b7a
2025-01-18 16:55:56,761 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737240952176593, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 16:55:56,761 - DEBUG - Cache Entry: (0, 1737240951996755, 0)
2025-01-18 16:55:56,761 - DEBUG - deserialize {'id': 0, 'timestamp': 1737240952176593, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 16:55:56,761 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 16:55:56,761 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 16:55:56,761 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 16:55:56,761 - DEBUG - deserialize_json_dict() returns
2025-01-18 16:55:56,761 - DEBUG - Cache Entry: (0, 1737240952176593, 0)
2025-01-18 16:55:56,761 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:55:56,761 - DEBUG - sfqid: 01b9cd9f-0002-4c71-0007-08ea001f8b7a
2025-01-18 16:55:56,761 - DEBUG - query execution done
2025-01-18 16:55:56,761 - DEBUG - SUCCESS
2025-01-18 16:55:56,762 - DEBUG - PUT OR GET: False
2025-01-18 16:55:56,762 - DEBUG - Query result format: arrow
2025-01-18 16:55:56,762 - INFO - Number of results in first chunk: 0
2025-01-18 16:55:56,764 - DEBUG - executing SQL/command
2025-01-18 16:55:56,764 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 16:55:56,764 - DEBUG - sequence counter: 4
2025-01-18 16:55:56,764 - DEBUG - Request id: 97f31b9d-ee92-41ee-8fdd-e6dbb9e9b656
2025-01-18 16:55:56,764 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 16:55:56,764 - DEBUG - is_file_transfer: True
2025-01-18 16:55:56,765 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:55:56,765 - DEBUG - _cmd_query
2025-01-18 16:55:56,765 - DEBUG - serialize_to_dict() called
2025-01-18 16:55:56,765 - DEBUG - Cache Entry: (0, 1737240952176593, 0)
2025-01-18 16:55:56,765 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737240952176593, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 16:55:56,765 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[4], is_file_transfer=[False]
2025-01-18 16:55:56,766 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 16:55:56,767 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 16:55:56,767 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 16:55:56,767 - DEBUG - Request guid: 933fac09-7ae9-4d60-8f33-7795cc04b89e
2025-01-18 16:55:56,767 - DEBUG - socket timeout: 60
2025-01-18 16:55:56,840 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=97f31b9d-ee92-41ee-8fdd-e6dbb9e9b656&request_guid=933fac09-7ae9-4d60-8f33-7795cc04b89e HTTP/1.1" 200 1557
2025-01-18 16:55:56,841 - DEBUG - SUCCESS
2025-01-18 16:55:56,841 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 16:55:56,841 - DEBUG - ret[code] = None, after post request
2025-01-18 16:55:56,841 - DEBUG - Query id: 01b9cd9f-0002-4c79-0007-08ea001f6c52
2025-01-18 16:55:56,841 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737240952253138, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 16:55:56,842 - DEBUG - Cache Entry: (0, 1737240952176593, 0)
2025-01-18 16:55:56,842 - DEBUG - deserialize {'id': 0, 'timestamp': 1737240952253138, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 16:55:56,842 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 16:55:56,842 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 16:55:56,842 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 16:55:56,842 - DEBUG - deserialize_json_dict() returns
2025-01-18 16:55:56,842 - DEBUG - Cache Entry: (0, 1737240952253138, 0)
2025-01-18 16:55:56,842 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:55:56,843 - DEBUG - sfqid: 01b9cd9f-0002-4c79-0007-08ea001f6c52
2025-01-18 16:55:56,843 - DEBUG - query execution done
2025-01-18 16:55:56,843 - DEBUG - SUCCESS
2025-01-18 16:55:56,843 - DEBUG - PUT OR GET: False
2025-01-18 16:55:56,843 - DEBUG - Query result format: arrow
2025-01-18 16:55:56,843 - INFO - Number of results in first chunk: 0
2025-01-18 16:55:56,846 - DEBUG - executing SQL/command
2025-01-18 16:55:56,846 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 16:55:56,846 - DEBUG - sequence counter: 5
2025-01-18 16:55:56,846 - DEBUG - Request id: a8fdfd0e-3bed-4d0d-b460-1ad1019e64cc
2025-01-18 16:55:56,846 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 16:55:56,846 - DEBUG - is_file_transfer: True
2025-01-18 16:55:56,846 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:55:56,846 - DEBUG - _cmd_query
2025-01-18 16:55:56,846 - DEBUG - serialize_to_dict() called
2025-01-18 16:55:56,847 - DEBUG - Cache Entry: (0, 1737240952253138, 0)
2025-01-18 16:55:56,847 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737240952253138, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 16:55:56,847 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[5], is_file_transfer=[False]
2025-01-18 16:55:56,848 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 16:55:56,848 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 16:55:56,848 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 16:55:56,848 - DEBUG - Request guid: 5d105313-2b91-4c49-9168-8b5aa1028f7b
2025-01-18 16:55:56,848 - DEBUG - socket timeout: 60
2025-01-18 16:55:56,919 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=a8fdfd0e-3bed-4d0d-b460-1ad1019e64cc&request_guid=5d105313-2b91-4c49-9168-8b5aa1028f7b HTTP/1.1" 200 1555
2025-01-18 16:55:56,920 - DEBUG - SUCCESS
2025-01-18 16:55:56,920 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 16:55:56,920 - DEBUG - ret[code] = None, after post request
2025-01-18 16:55:56,921 - DEBUG - Query id: 01b9cd9f-0002-4c71-0007-08ea001f8b7e
2025-01-18 16:55:56,921 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737240952332643, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 16:55:56,921 - DEBUG - Cache Entry: (0, 1737240952253138, 0)
2025-01-18 16:55:56,921 - DEBUG - deserialize {'id': 0, 'timestamp': 1737240952332643, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 16:55:56,921 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 16:55:56,921 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 16:55:56,921 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 16:55:56,921 - DEBUG - deserialize_json_dict() returns
2025-01-18 16:55:56,921 - DEBUG - Cache Entry: (0, 1737240952332643, 0)
2025-01-18 16:55:56,921 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:55:56,921 - DEBUG - sfqid: 01b9cd9f-0002-4c71-0007-08ea001f8b7e
2025-01-18 16:55:56,921 - DEBUG - query execution done
2025-01-18 16:55:56,922 - DEBUG - SUCCESS
2025-01-18 16:55:56,922 - DEBUG - PUT OR GET: False
2025-01-18 16:55:56,922 - DEBUG - Query result format: arrow
2025-01-18 16:55:56,922 - INFO - Number of results in first chunk: 0
2025-01-18 16:55:56,923 - DEBUG - executing SQL/command
2025-01-18 16:55:56,923 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 16:55:56,923 - DEBUG - sequence counter: 6
2025-01-18 16:55:56,923 - DEBUG - Request id: 26d9ed66-c119-4d2f-b1a3-d2600b5fccf9
2025-01-18 16:55:56,923 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 16:55:56,923 - DEBUG - is_file_transfer: True
2025-01-18 16:55:56,923 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:55:56,923 - DEBUG - _cmd_query
2025-01-18 16:55:56,924 - DEBUG - serialize_to_dict() called
2025-01-18 16:55:56,924 - DEBUG - Cache Entry: (0, 1737240952332643, 0)
2025-01-18 16:55:56,924 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737240952332643, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 16:55:56,924 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[6], is_file_transfer=[False]
2025-01-18 16:55:56,925 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 16:55:56,925 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 16:55:56,926 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 16:55:56,926 - DEBUG - Request guid: 14387a60-39a4-4d2c-a64a-b6c556883fdf
2025-01-18 16:55:56,926 - DEBUG - socket timeout: 60
2025-01-18 16:55:57,627 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=26d9ed66-c119-4d2f-b1a3-d2600b5fccf9&request_guid=14387a60-39a4-4d2c-a64a-b6c556883fdf HTTP/1.1" 200 2802
2025-01-18 16:55:57,628 - DEBUG - SUCCESS
2025-01-18 16:55:57,628 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 16:55:57,628 - DEBUG - ret[code] = None, after post request
2025-01-18 16:55:57,629 - DEBUG - Query id: 01b9cd9f-0002-4c77-0007-08ea001fd7b2
2025-01-18 16:55:57,629 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737240953048310, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 16:55:57,629 - DEBUG - Cache Entry: (0, 1737240952332643, 0)
2025-01-18 16:55:57,629 - DEBUG - deserialize {'id': 0, 'timestamp': 1737240953048310, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 16:55:57,629 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 16:55:57,629 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 16:55:57,629 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 16:55:57,629 - DEBUG - deserialize_json_dict() returns
2025-01-18 16:55:57,630 - DEBUG - Cache Entry: (0, 1737240953048310, 0)
2025-01-18 16:55:57,630 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:55:57,630 - DEBUG - sfqid: 01b9cd9f-0002-4c77-0007-08ea001fd7b2
2025-01-18 16:55:57,630 - DEBUG - query execution done
2025-01-18 16:55:57,630 - DEBUG - SUCCESS
2025-01-18 16:55:57,631 - DEBUG - PUT OR GET: False
2025-01-18 16:55:57,631 - DEBUG - Query result format: arrow
2025-01-18 16:55:57,631 - INFO - Number of results in first chunk: 54
2025-01-18 16:55:57,631 - DEBUG - Execute query [queryID: 01b9cd9f-0002-4c77-0007-08ea001fd7b2]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 16:55:57,631 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 16:55:57,632 - DEBUG - Arrow BatchSize: 1
2025-01-18 16:55:57,632 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 16:55:57,632 - DEBUG - Batches read: 0
2025-01-18 16:55:57,632 - DEBUG - beginning to schedule result batch downloads
2025-01-18 16:55:57,632 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 16:56:40,109 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000201BED29D50>
2025-01-18 16:56:40,110 - INFO - Querying the server for client info
2025-01-18 16:56:40,110 - DEBUG - cursor
2025-01-18 16:56:40,111 - DEBUG - executing SQL/command
2025-01-18 16:56:40,112 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 16:56:40,112 - DEBUG - sequence counter: 7
2025-01-18 16:56:40,114 - DEBUG - Request id: aee303ca-d6db-41d2-bc45-c10f6d1151ba
2025-01-18 16:56:40,114 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 16:56:40,115 - DEBUG - is_file_transfer: True
2025-01-18 16:56:40,115 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:56:40,115 - DEBUG - _cmd_query
2025-01-18 16:56:40,115 - DEBUG - serialize_to_dict() called
2025-01-18 16:56:40,115 - DEBUG - Cache Entry: (0, 1737240953048310, 0)
2025-01-18 16:56:40,115 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737240953048310, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 16:56:40,115 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[7], is_file_transfer=[False]
2025-01-18 16:56:40,116 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 16:56:40,117 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 16:56:40,117 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 16:56:40,117 - DEBUG - Request guid: dba2f17d-098c-4500-a684-bf04a04be7d1
2025-01-18 16:56:40,117 - DEBUG - socket timeout: 60
2025-01-18 16:56:40,224 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=aee303ca-d6db-41d2-bc45-c10f6d1151ba&request_guid=dba2f17d-098c-4500-a684-bf04a04be7d1 HTTP/1.1" 200 2804
2025-01-18 16:56:40,226 - DEBUG - SUCCESS
2025-01-18 16:56:40,226 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 16:56:40,226 - DEBUG - ret[code] = None, after post request
2025-01-18 16:56:40,228 - DEBUG - Query id: 01b9cda0-0002-4c79-0007-08ea001f6c5a
2025-01-18 16:56:40,228 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737240995641610, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 16:56:40,228 - DEBUG - Cache Entry: (0, 1737240953048310, 0)
2025-01-18 16:56:40,228 - DEBUG - deserialize {'id': 0, 'timestamp': 1737240995641610, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 16:56:40,228 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 16:56:40,228 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 16:56:40,228 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 16:56:40,228 - DEBUG - deserialize_json_dict() returns
2025-01-18 16:56:40,228 - DEBUG - Cache Entry: (0, 1737240995641610, 0)
2025-01-18 16:56:40,228 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:56:40,228 - DEBUG - sfqid: 01b9cda0-0002-4c79-0007-08ea001f6c5a
2025-01-18 16:56:40,228 - DEBUG - query execution done
2025-01-18 16:56:40,228 - DEBUG - SUCCESS
2025-01-18 16:56:40,228 - DEBUG - PUT OR GET: False
2025-01-18 16:56:40,228 - DEBUG - Query result format: arrow
2025-01-18 16:56:40,229 - INFO - Number of results in first chunk: 1
2025-01-18 16:56:40,229 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 16:56:40,229 - DEBUG - Arrow BatchSize: 1
2025-01-18 16:56:40,229 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 16:56:40,229 - DEBUG - Batches read: 0
2025-01-18 16:56:40,231 - DEBUG - beginning to schedule result batch downloads
2025-01-18 16:56:40,231 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 16:56:40,231 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000201BE8AB310>, telemetry enabled: True
2025-01-18 16:56:40,232 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 16:56:40,232 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 16:56:40,232 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 16:56:40,232 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 16:56:40,249 - DEBUG - cursor
2025-01-18 16:56:40,250 - DEBUG - executing SQL/command
2025-01-18 16:56:40,250 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 16:56:40,250 - DEBUG - sequence counter: 8
2025-01-18 16:56:40,250 - DEBUG - Request id: caae3abe-85b9-4518-9edc-4d3ef7b31bb6
2025-01-18 16:56:40,250 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 16:56:40,250 - DEBUG - is_file_transfer: True
2025-01-18 16:56:40,250 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:56:40,250 - DEBUG - _cmd_query
2025-01-18 16:56:40,251 - DEBUG - serialize_to_dict() called
2025-01-18 16:56:40,251 - DEBUG - Cache Entry: (0, 1737240995641610, 0)
2025-01-18 16:56:40,251 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737240995641610, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 16:56:40,251 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[8], is_file_transfer=[False]
2025-01-18 16:56:40,253 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 16:56:40,253 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 16:56:40,253 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 16:56:40,253 - DEBUG - Request guid: 5b42d31a-060e-4a1d-ba36-4adb845d76e6
2025-01-18 16:56:40,253 - DEBUG - socket timeout: 60
2025-01-18 16:56:40,330 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=caae3abe-85b9-4518-9edc-4d3ef7b31bb6&request_guid=5b42d31a-060e-4a1d-ba36-4adb845d76e6 HTTP/1.1" 200 1684
2025-01-18 16:56:40,331 - DEBUG - SUCCESS
2025-01-18 16:56:40,332 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 16:56:40,332 - DEBUG - ret[code] = None, after post request
2025-01-18 16:56:40,332 - DEBUG - Query id: 01b9cda0-0002-4c76-0007-08ea001fb852
2025-01-18 16:56:40,332 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737240995755605, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 16:56:40,332 - DEBUG - Cache Entry: (0, 1737240995641610, 0)
2025-01-18 16:56:40,332 - DEBUG - deserialize {'id': 0, 'timestamp': 1737240995755605, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 16:56:40,332 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 16:56:40,333 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 16:56:40,333 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 16:56:40,333 - DEBUG - deserialize_json_dict() returns
2025-01-18 16:56:40,333 - DEBUG - Cache Entry: (0, 1737240995755605, 0)
2025-01-18 16:56:40,333 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:56:40,333 - DEBUG - sfqid: 01b9cda0-0002-4c76-0007-08ea001fb852
2025-01-18 16:56:40,333 - DEBUG - query execution done
2025-01-18 16:56:40,334 - DEBUG - SUCCESS
2025-01-18 16:56:40,334 - DEBUG - PUT OR GET: False
2025-01-18 16:56:40,334 - DEBUG - Query result format: arrow
2025-01-18 16:56:40,335 - INFO - Number of results in first chunk: 0
2025-01-18 16:56:40,338 - DEBUG - executing SQL/command
2025-01-18 16:56:40,338 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 16:56:40,338 - DEBUG - sequence counter: 9
2025-01-18 16:56:40,338 - DEBUG - Request id: 392a8266-4d76-4db0-8695-e647aab06b6c
2025-01-18 16:56:40,338 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 16:56:40,339 - DEBUG - is_file_transfer: True
2025-01-18 16:56:40,339 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:56:40,339 - DEBUG - _cmd_query
2025-01-18 16:56:40,339 - DEBUG - serialize_to_dict() called
2025-01-18 16:56:40,339 - DEBUG - Cache Entry: (0, 1737240995755605, 0)
2025-01-18 16:56:40,339 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737240995755605, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 16:56:40,339 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[9], is_file_transfer=[False]
2025-01-18 16:56:40,341 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 16:56:40,342 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 16:56:40,343 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 16:56:40,343 - DEBUG - Request guid: bf45c5de-13d4-41b3-825e-5329409e19ba
2025-01-18 16:56:40,343 - DEBUG - socket timeout: 60
2025-01-18 16:56:40,433 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=392a8266-4d76-4db0-8695-e647aab06b6c&request_guid=bf45c5de-13d4-41b3-825e-5329409e19ba HTTP/1.1" 200 1554
2025-01-18 16:56:40,434 - DEBUG - SUCCESS
2025-01-18 16:56:40,435 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 16:56:40,435 - DEBUG - ret[code] = None, after post request
2025-01-18 16:56:40,435 - DEBUG - Query id: 01b9cda0-0002-4c72-0007-08ea001fa97a
2025-01-18 16:56:40,435 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737240995858521, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 16:56:40,435 - DEBUG - Cache Entry: (0, 1737240995755605, 0)
2025-01-18 16:56:40,435 - DEBUG - deserialize {'id': 0, 'timestamp': 1737240995858521, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 16:56:40,435 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 16:56:40,435 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 16:56:40,435 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 16:56:40,435 - DEBUG - deserialize_json_dict() returns
2025-01-18 16:56:40,435 - DEBUG - Cache Entry: (0, 1737240995858521, 0)
2025-01-18 16:56:40,435 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:56:40,436 - DEBUG - sfqid: 01b9cda0-0002-4c72-0007-08ea001fa97a
2025-01-18 16:56:40,436 - DEBUG - query execution done
2025-01-18 16:56:40,436 - DEBUG - SUCCESS
2025-01-18 16:56:40,436 - DEBUG - PUT OR GET: False
2025-01-18 16:56:40,436 - DEBUG - Query result format: arrow
2025-01-18 16:56:40,436 - INFO - Number of results in first chunk: 0
2025-01-18 16:56:40,438 - DEBUG - executing SQL/command
2025-01-18 16:56:40,438 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 16:56:40,438 - DEBUG - sequence counter: 10
2025-01-18 16:56:40,438 - DEBUG - Request id: 5221fc0f-00eb-4046-863f-a01f70a27a6f
2025-01-18 16:56:40,438 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 16:56:40,438 - DEBUG - is_file_transfer: True
2025-01-18 16:56:40,439 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:56:40,439 - DEBUG - _cmd_query
2025-01-18 16:56:40,439 - DEBUG - serialize_to_dict() called
2025-01-18 16:56:40,439 - DEBUG - Cache Entry: (0, 1737240995858521, 0)
2025-01-18 16:56:40,439 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737240995858521, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 16:56:40,439 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[10], is_file_transfer=[False]
2025-01-18 16:56:40,440 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 16:56:40,441 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 16:56:40,441 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 16:56:40,441 - DEBUG - Request guid: ea79b25b-e03d-4491-8ffa-5cc702d5e34a
2025-01-18 16:56:40,441 - DEBUG - socket timeout: 60
2025-01-18 16:56:40,533 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=5221fc0f-00eb-4046-863f-a01f70a27a6f&request_guid=ea79b25b-e03d-4491-8ffa-5cc702d5e34a HTTP/1.1" 200 1554
2025-01-18 16:56:40,534 - DEBUG - SUCCESS
2025-01-18 16:56:40,535 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 16:56:40,535 - DEBUG - ret[code] = None, after post request
2025-01-18 16:56:40,535 - DEBUG - Query id: 01b9cda0-0002-4c70-0007-08ea001f9a5a
2025-01-18 16:56:40,535 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737240995944059, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 16:56:40,535 - DEBUG - Cache Entry: (0, 1737240995858521, 0)
2025-01-18 16:56:40,535 - DEBUG - deserialize {'id': 0, 'timestamp': 1737240995944059, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 16:56:40,535 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 16:56:40,535 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 16:56:40,536 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 16:56:40,536 - DEBUG - deserialize_json_dict() returns
2025-01-18 16:56:40,536 - DEBUG - Cache Entry: (0, 1737240995944059, 0)
2025-01-18 16:56:40,536 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:56:40,536 - DEBUG - sfqid: 01b9cda0-0002-4c70-0007-08ea001f9a5a
2025-01-18 16:56:40,536 - DEBUG - query execution done
2025-01-18 16:56:40,536 - DEBUG - SUCCESS
2025-01-18 16:56:40,536 - DEBUG - PUT OR GET: False
2025-01-18 16:56:40,536 - DEBUG - Query result format: arrow
2025-01-18 16:56:40,537 - INFO - Number of results in first chunk: 0
2025-01-18 16:56:40,539 - DEBUG - executing SQL/command
2025-01-18 16:56:40,540 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 16:56:40,540 - DEBUG - sequence counter: 11
2025-01-18 16:56:40,541 - DEBUG - Request id: b8129d95-81e5-42ba-a02c-6818778ebab9
2025-01-18 16:56:40,542 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 16:56:40,542 - DEBUG - is_file_transfer: True
2025-01-18 16:56:40,542 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:56:40,542 - DEBUG - _cmd_query
2025-01-18 16:56:40,542 - DEBUG - serialize_to_dict() called
2025-01-18 16:56:40,542 - DEBUG - Cache Entry: (0, 1737240995944059, 0)
2025-01-18 16:56:40,542 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737240995944059, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 16:56:40,542 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[11], is_file_transfer=[False]
2025-01-18 16:56:40,544 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 16:56:40,545 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 16:56:40,545 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 16:56:40,545 - DEBUG - Request guid: 87f15301-d5a7-460f-b9a8-ae2bba3a4072
2025-01-18 16:56:40,546 - DEBUG - socket timeout: 60
2025-01-18 16:56:40,637 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=b8129d95-81e5-42ba-a02c-6818778ebab9&request_guid=87f15301-d5a7-460f-b9a8-ae2bba3a4072 HTTP/1.1" 200 2807
2025-01-18 16:56:40,638 - DEBUG - SUCCESS
2025-01-18 16:56:40,638 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 16:56:40,638 - DEBUG - ret[code] = None, after post request
2025-01-18 16:56:40,638 - DEBUG - Query id: 01b9cda0-0002-4c71-0007-08ea001f8b82
2025-01-18 16:56:40,639 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737240996054625, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 16:56:40,639 - DEBUG - Cache Entry: (0, 1737240995944059, 0)
2025-01-18 16:56:40,639 - DEBUG - deserialize {'id': 0, 'timestamp': 1737240996054625, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 16:56:40,639 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 16:56:40,639 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 16:56:40,639 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 16:56:40,639 - DEBUG - deserialize_json_dict() returns
2025-01-18 16:56:40,639 - DEBUG - Cache Entry: (0, 1737240996054625, 0)
2025-01-18 16:56:40,639 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:56:40,639 - DEBUG - sfqid: 01b9cda0-0002-4c71-0007-08ea001f8b82
2025-01-18 16:56:40,639 - DEBUG - query execution done
2025-01-18 16:56:40,639 - DEBUG - SUCCESS
2025-01-18 16:56:40,640 - DEBUG - PUT OR GET: False
2025-01-18 16:56:40,640 - DEBUG - Query result format: arrow
2025-01-18 16:56:40,640 - INFO - Number of results in first chunk: 54
2025-01-18 16:56:40,640 - DEBUG - Execute query [queryID: 01b9cda0-0002-4c71-0007-08ea001f8b82]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 16:56:40,640 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 16:56:40,640 - DEBUG - Arrow BatchSize: 1
2025-01-18 16:56:40,640 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 16:56:40,640 - DEBUG - Batches read: 0
2025-01-18 16:56:40,640 - DEBUG - beginning to schedule result batch downloads
2025-01-18 16:56:40,640 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 16:56:40,654 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 16:56:40,663 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 16:56:41,113 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 16:56:41,144 - DEBUG - calling method search on class CortexSearchServiceResource after submitting telemetry if enabled
2025-01-18 16:56:41,146 - INFO - performing a HTTP POST call to /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query
2025-01-18 16:56:41,146 - DEBUG - request has path params: {'database': 'DEV_SRC_INGEST', 'schema': 'EPA_PROCESSED', 'service_name': 'CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST'}, query_params: [], header params: {'Accept': 'application/json', 'Content-Type': 'application/json'} and body: QueryRequest(query='Tell me about roundup', columns=['chunk', 'relative_path', 'PRODUCTNAME', 'COMPANYNAME', 'CATEGORY_EPA_TYPE', 'SIGNAL_WORD'], filter=None, limit=10, experimental=None)
2025-01-18 16:56:41,153 - DEBUG - making an http POST call to 'https://gmcpdcz-mt01740.snowflakecomputing.com:443/api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query'
2025-01-18 16:56:41,154 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 16:56:41,706 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query HTTP/1.1" 200 None
2025-01-18 16:56:41,707 - DEBUG - created a RESTResponse with status 200 and length of 18392
2025-01-18 16:56:41,707 - DEBUG - response body: b'{\n  "results" : [ {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\"\\n]",\n    "chunk" : "{\\"content\\":\\"\\\\n# FRQNT PANEL\\\\n\\\\n# Roundup* L&G READY-TO-USE by Moasanto Grass & Weed Killer\\\\n  \\\\n[graphics of weeds dying in 1-7 days]\\\\n* .READY.TO-USE, RBCUIRES NO\\\\n* : SYSTEMIC GRASS AND WEED KILLER FOR SPOT TREATMENT OF UNDESIRABLB VEGETATION\\\\n* . KILLS LARELID E WEEDS AND GRASSES, ROOTS AND ALL\\\\nGUARANTEEDT AESIN NTIH OREAETLACATEN  \\\\nS YTITACTKNGUAWANEEORXOAR KONEKRAE\\\\n* :_DOES NOT HAVE SOIL ACTIVTTY\\\\n+-SUTABLB-FOR- USE-AROUND-FLOWER-BEDS TREES,-SHRUTS FENCES-WALKS -AND-SPOT TRRATMEIT IN LAWNS\\\\nSHRURSAND ORWN RENOXATION (This Taun renovation*phrase no for 24 Oz container sixe.)\\\\n* : THIS 24 OZ BOTTLE CAN BE REFILLED WTIH ONE TABLET OF ROUNDUF QUIK STIK GRASS & WEED KILLER!. SEE STORAGE AND DISPOSAL SECTION FOR MORE INFORMATION. H\\\\nRd thai laST Wlor wg thT p?x3a? Ox ony msR4ng ioTT nmRRan (moved io back panel)NOTICEt- Dwyor-axoumo all soponaibility for mfoty and uce not in macrdan vith axeptablo-raturm at once unopanod (moved to back panel)Keep out ad reach ot chlldren. CAUTION!Soo haak penai for Preenutionary Statemanta and Direstions for Uce.  \\\\nBEST AYAILA&1.  \\\\nBEST AYAILA&1.BPA-Rrg Na S04 320 (moved to back panel)\\\\n## MONSAATO COMRANY\\\\nAGRICULTURAL PRODUCTS-&T LOUIS, MIS$OURI-63167 USA (moved to back panel)  \\\\nACTIVE INGREDIENT:\\\\n|in the form of is isopropylamine k|0.96%|\\\\n| :---: | :---: |\\\\n  \\\\n:*1 ...(delered isems below are moved to back panel)ny non porn(6)CTradamerk of Menseno Company  \\\\nNET 24 fi z (1pi 8m} (delcied)  \\\\n:MONSANTO COMPANY-1993  \\\\nA000.X 1 (print piae",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "SHACKLE HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/SHACKLE_HERBICIDE_524-330.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "chunk" : "this product in 5 to 20 gallons of spray solution per acre. Carefully select proper nozzle and spray pressure to avoid spraying a fine mist. For best results with ground application equipment, use flat spray nozzles. Check for even distribution of spray droplets.For aerial applications. All labeled treatments may be made by aerial equipment where appropriate, provided that the applicator complies with the precautions and restrictions specified on this product\'s labeling. in particular in the \\\\\\"Aerial Equipment\\\\\\" section. Apply this product in 3 to 15 gallons of water per acre. See the \\\\\\"APPLICATION EQUIPMENT AND TECHNIQUES\\\\\\" section of this label for procedures to avoid spray drift that may cause injury to any vegetation not intended for treatment. Use of appropriate buffer zones will help prevent injury to adjacent vegetation.For proper stewardship of aerial applications over the top of Roundup Ready crops, Monsanto recommends that growers and applicators read and follow all precautions and procedures contained in the use guide \\\\\\"A Guide to On-Target Aerial Application.\\\\\\" Copies of this publication are available by calling 1-800-ROUNDUP (1-800-768-6387).ATTENTION: AVOID DRIFT. EXTREME CARE MUST BE USED WHEN APPLYING THIS PRODUCT TO PREVENT INJURY TO DESIRABLE PLANTS AND CROPS WHICH DO NOT CONTAIN A GLYPHOSATE TOLERANT GENE.TANK MIXTURE: Tank mixtures with other herbicides, insecticides, fungicides, micronutrients or foliar fertilizers may result in reduced weed control or crop injury",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "chunk" : "weeds in a Roundup Ready crop by applying glyphosate to the weeds and to the Roundup Ready crop, are protected under several U.S. Patents, including 5,352,605 and 5,633,435. A license to use Roundup Ready seed must be obtained prior to use. Monsanto retains ownership of the gene and process technologies, and the Purchaser of the seed receives the right to use the licensed genes and technologies subject to the limited use license conditions. Seed containing a Roundup Ready trait cannot be used for research and demonstration, reverse engineering or in connection with herbicide registration. Progeny seed containing the Roundup Ready trait cannot be saved for replanting or transferred to others for replanting. Contact your Authorized Monsanto Retailer for information on obtaining a limited use iicense.Sprayer Preparation: It is important that sprayer and mixing equipment be clean and free of pesticide residue before making applications of this product. Follow the cleaning procedures specified on the label of the product(s) previously used. THOROUGHLY CLEAN THE SPRAY TANK AND ALL LINES AND FILTERS TO ELIMINATE POTENTIAL CONTAMINATION FROM OTHER HERBICIDES PRIOR TO MIXING AND APPLYING THIS PRODUCT.For ground broadcast applications. Apply this product in 5 to 20 gallons of spray solution per acre. Carefully select proper nozzle and spray pressure to avoid spraying a fine mist. For best results with ground application equipment, use flat spray nozzles. Check for even distribution of spray",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "\\\\nSincerely, Vuku KWztxd g James A. Tompkins Product Manager 25 Herbicide Branch Registration Division (7505P)\\\\n# MASTER LABEL FOR EPA REG. NO. 524-454\\\\n  \\\\n[Based on EPA approved Text Stamped Nov. 15, 2001] Registered Brand Names:\\\\n# ROUNDUP ORIGINAL II HERBICIDE ROUNDUP ORIGINAL RT HERBICIDE RASCAL PLUS HERBICIDE MON 8709 HERBICIDE HONCHO PLUS HERBICIDE\\\\n  \\\\nTable of Contents for Master Labei\\\\n||Main Label for Food Crop Uses|Page 2|\\\\n| :---: | :---: | :---: |\\\\n|II.|Main Label for Industrial, Turf, & Ornamental Uses|Page 70|\\\\n|III.|Supplementai Labeling|Page 100|\\\\n**See each label part for more detailed table of contents**Master Label 524-454Version: 3-Jun-2000  \\\\n3/119\\\\n# [INSERT BRAND NAME] Herbicide\\\\n  \\\\nComplete Directions for Use  \\\\nEPA Reg. No. 524-454AVOID CONTACT OF HERBICIDE WITH FOLIAGE, GREEN STEMS, EXPOSED NON-WOODY ROOTS OR FRUIT OF CROPS (EXCEPT AS SPECIFIED FOR INDIVIDUAL ROUNDUP READYD CROPS), DESIRABLE PLANTS AND TREES, BECAUSE SEVERE INJURY OR DESTRUCTION MAY RESULT.Herbicide for Roundup Ready\\\\\\" Crops.Selective broad-spectrum weed control in Roundup Ready crops. Non-selective, broad-spectrum weed control for many agricultural systems and farmsteads.A member of the Roundup Family of Agricultural Herbicides by MonsantoThe President\'s Green Chemistry Award was presented in 1996 to Monsanto for its innovative \\\\\\"zero-waste\\\\\\" process in the manufacture of Roundup Herbicide.Not all products recommended on this label are registered for use in California. Check the",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "[INSERT BRAND NAME] will control labeled annual grasses and broadleaf weeds in Roundup Ready Flex cotton. To maximize yield potential, spray cotton early to elininate competing weeds. Many perennial weeds will be controlled or suppressed with one or more applications of this product. In general, an initial application of 1 quart per acre on 1 to 3 inch tall annual grass and broadleaf weeds is recommended. This product may be applied by ground application equipment at rates up to 2 quarts per acre per application postemergence to Roundup Ready Flex cotton. In addition tobroadcast applications, post-directed equipment may be used to achieve weed coverage.NOTE: For specific rates of application and instructions, refer to the \\\\\\"ANNUAL\\\\\\" and \\\\\\"PERENNIAL WEEDS RATE TABLES\\\\\\" in the labei book}et for [INSERT BRAND NAME].PRECAUTIONS, RESTRICTIONS: The maximum rate for any single in-crop application of this product is 2 quarts per acre made using ground application equipment. In-crop application rates above 1 quart per acre made alone, or with the addition of other crop chemical products containing surfactant, may cause a crop response, including leaf speckling or leaf necrosis. Do not exceed a maximum rate of 3 pints per acre of this product when making applications by air. Between layby and 60 percent open bolls, the maximum combined total rate of this product that may be applied is 2 quarts per acre. The maximum combined total of all applications made from crop emergence to 60 percent open",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "Ready Canola (Winter Varieties)|\\\\n|12.4|Roundup Ready Corn 2|\\\\n|12.5|Roundup Ready Gene Cotton|\\\\n|12.6|Roundup Ready Flex Cotton|\\\\n|12.7|Roundup Ready Gene Soybeans|\\\\n|12.8|Roundup Ready Gene Sugar Beets|\\\\n  \\\\n13 13.0 NON-CROP USES AROUND THE FARMSTEAD\\\\n|13.1|General Weed Control and Trim-And-Edge|\\\\n| :---: | :---: |\\\\n|13.2|Greenhouse/Shade house|\\\\n|13.3|Chemical Mowing|\\\\n|13.4|Cut Stumps|\\\\n|13.5|Habitat Management|\\\\n  \\\\n14 14.0 ANNUAL WEEDS RATE SECTION\\\\n|14.1|Annual Weeds -- Tank Mixtures with 2,4-D, Dicamba, or Tordon 22K|\\\\n| :---: | :---: |\\\\n|14.2|Annual Weeds - Hand-Held or Backpack Equipment|\\\\n|14.3|Annual Weeds - Tank Mixtures with Atrazine for Fallow and Reduced Tillage Systems|\\\\n\\\\n* 15 15.0 PERENNIAL WEEDS RATE SECTION\\\\n* 16 16.0 WOODY BRUSH AND TREES RATE SECTION\\\\n* 17 17.0 LIMIT OF WARRANTY AND LIABILITY\\\\n  \\\\n1.0 INGREDIENTS  \\\\nACTIVE INGREDIENT:\\\\n|*Glyphosate, N-(phosphonomethyl)glycine, in the form of its isopropylamine salt .|41.0%|\\\\n| :---: | :---: |\\\\n|OTHER INGREDIENTS:....|59.0%|\\\\n||100.0%|\\\\n*Contains 480 grams per liter or 4 pounds per U.S. gallon of the active ingredient glyphosate, in the form of its isopropylamine salt. Equivalent to 356 grams per liter or 3 pounds per U.S. gallon of the acid, glyphosate.license granted under any non-U.S. patent(s).\\\\n## 2.0 IMPORTANT PHONE NUMBERS\\\\nVersion: 3-Jun-2006Master Label 524-454\\\\n* I. MAIN LABEL FOR FOOD CROP USES\\\\n1. FOR PRODUCT INFORMATION OR ASSISTANCE IN USING THIS PRODUCT, CALL TOLL-FREE,\\\\n1-800-332-3111\\\\n2. IN CASE OF",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "Monsanto suppiemental labeling for this product include all applications of this product that can be made onto the specified Roundup Ready crops during the complete cropping season. DO NOT combine these treatment instructions with those for crops in the \\\\\\"ANNUAL AND PERENNIAL CROPS (ALPHABETICAL)\\\\\\" section of this label that do not contain a glyphosate tolerant gene, unless otherwise directed in this product\'s labeling.MONSANTO COMPANY RECOMMENDS USE OF THIS PRODUCT FOR POSTEMERGENCE (IN- CROP) APPLICATION ONLY ON CROPS DESIGNATED AS CONTAINING A GLYPHOSATE TOLERANT GENE. Applying this product to crops that are not designated as Roundup Ready will result in severe crop injury and yield loss. Avoid contact with foliage, green stems, or fruit of crops, or any desirable plants that do not contain a glyphosate tolerant gene, since severe plant injury or destruction will result. The Roundup Ready designation indicates that the crop contains a patented gene that provides tolerance to this product. Information on Roundup Ready crops may be obtained from your seed supplier or Monsanto representative. Roundup Ready crops must be purchased from an authorized licensed seed supplier.NOTE: Roundup Ready seed, and the method of selectively controlling weeds in a Roundup Ready crop by applying glyphosate to the weeds and to the Roundup Ready crop, are protected under several U.S. Patents, including 5,352,605 and 5,633,435. A license to use Roundup Ready seed must be obtained prior to use. Monsanto",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "General Information\\\\nAVOID CONTACT OF HERBICIDE WITH FOLIAGE, GREEN STEMS, EXPOSED NON-WOODY ROOTS OR FRUIT OF CROPS (EXCEPT AS SPECIFIED FOR INDIVIDUAL ROUNDUP READY CROPS), DESIRABLE PLANTS AND TREES, BECAUSE SEVERE INJURY OR DESTRUCTION MAY RESULT.See \\\\\\"GENERAL INFORMATION\\\\\\" and \\\\\\"MIXING\\\\\\" sections of the label booklet for [INSERT BRAND NAME] for essential product performance information.The Roundup Ready designation indicates that the alfalfa contains a patented gene that provides tolerance to this product. Information on Roundup Ready alfalfa varieties may be obtained from your seed supplier or Monsanto representative. Roundup Ready crop varieties must be purchased from an\'authorized licensed seed supplier.See the \\\\\\"ROUNDUP READY CROPS\\\\\\" section of the [INSERT BRAND NAME] label booklet for general precautionary instructions for use in Roundup Ready crops. Do NOT combine the instructions in this supplemental label with other recommendations listed in the \\\\\\"PASTURE GRASSES, FORAGE LEGUMES, AND RANGELANDS\\\\\\" section of the [INSERT BRAND NAME] label booklet intended for alfalfa varieties that do not contain a glyphosate tolerance gene.\\\\n## DIRECTIONS FOR USE\\\\nThis product will control many troublesome emerged weeds with over-the-top apptications in Roundup Ready alfalfa grown for seed. Over-the-top applications may be made from emergence through the late vegetative stage, and spot treatments may be made from early bud stage through seed harvest.For ground applications with broadcast",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "quarts per acre|\\\\n|Maximum preharvest application rate|1 quart per acre|\\\\nGENERAL PRECAUTIONS/RESTRICTIONS: See the \\\\\\"ROUNDUP READY CROPS\\\\\\" section of this label for general precautionary instructions for use in Roundup Ready crops. See the \\\\\\"GENERAL INFORMATION\\\\\\" section of this label for more information on \\\\\\"Annual Maximum Application Rates.\\\\\\" Refer to individual tank mixture product label for restrictions and precautions, use according to the most restrictive precautionary statements for each product in the tank mixture.\\\\n## Preplant, At-Planting, Preemergence\\\\nUSE INSTRUCTIONS: This product may be applied before, during or after planting.TANK MIXTURES: This product may be tank-mixed with 2,4-D, Banvel or Clarity and applied prior to planting only This product may be tank-mixed with the following products and applied prior to crop emergence. Ensure that the specific product being used in the tank mixture is registered for application prior to emergence of soybeans. Read and follow label directions of all products in the tank mixture.[Insert active ingredient(s) or brand name of product(s) containing the following active ingredients that, at the time of printing, are registered for use preplant, at-planting and/or preemergence to soybeans: alachlor, atrazine, carfentrazone-ethyl, chlorimuron ethyl, clethodim, clomazone, cloransulam-methyl, dimethenamid, dimethenamid-p, fenoxyprop, fluazifop-p-butyl, flufenacet, flumetsulam, flumiclorac pentyl ester, flumioxazin, fomesafen, imazaquin,",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "SEQUENTIAL APPLICATION OF THIS PRODUCT WILL BE REQUIRED TO CONTROL NEW FLUSHES OF WEEDS IN THE ROUNDUP READY SOYBEAN CROP. To control giant ragweed, it is recommended that 1 quart per acre of this product be applied when the weed is 8 to 12 inches tall to increase control and possibly avoid the need for a sequential application.Version: 3-Jun-2006Master Label 524-454\\\\n## 1. MAIN LABEL FOR FOOD CROP USES\\\\nTANK MIXTURES: This product may be tank-mixed with the following products and applied postemergence (in-crop) over the top of Roundup Ready soybeans. Ensure that the specific product being used in the tank mixture is registered for application postemergence (in-crop) to soybeans. Read and follow label directions of all products in the tank mixture.[Insert active ingredient(s) or brand name of product(s) containing the following active ingredients that, at the time of printing, are registered for use postemergence (in-crop) to soybeans: acifluorfen, bentazonchlorimuron ethyl, clethodim, imazethapyr, cloransulam-methyl, fenoxyprop, fluazifop-p- butyl, flumiclorac pentyl ester, fomesafen, imazamox, imazethapyr, lactofen, pendimethalin, quizalofop P-ethyl. sethoxydem, thifensulfuron-methyl.Arrow, Assure II, Basagran, Classic, Cobra, Extreme, FirstRate, Flexstar, Fusilade DX, Fusion, Harmony GT XP, Poast, Poast Plus, Pursuit, Pursuit Plus, Raptor, Reflex, Select, Select MAX, Synchrony STS, Targa, Ultra Blazer.]PRECAUTIONS, RESTRICTIONS: The combined total application from crop emergence",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  } ],\n  "request_id" : "b0f3d545-47ad-4a09-9fc9-368b40c5e399"\n}'
2025-01-18 16:56:41,714 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 16:56:41,716 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 16:56:42,118 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 16:56:57,052 - DEBUG - executing SQL/command
2025-01-18 16:56:57,052 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_src_ingest.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACK...]
2025-01-18 16:56:57,052 - DEBUG - sequence counter: 12
2025-01-18 16:56:57,052 - DEBUG - Request id: 1d90230a-c184-451f-b426-df60ec47b226
2025-01-18 16:56:57,052 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_src_ingest.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACK...]
2025-01-18 16:56:57,052 - DEBUG - is_file_transfer: True
2025-01-18 16:56:57,052 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:56:57,052 - DEBUG - _cmd_query
2025-01-18 16:56:57,052 - DEBUG - serialize_to_dict() called
2025-01-18 16:56:57,053 - DEBUG - Cache Entry: (0, 1737240996054625, 0)
2025-01-18 16:56:57,053 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737240996054625, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 16:56:57,053 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_src_ingest.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACK...], sequence_id=[12], is_file_transfer=[False]
2025-01-18 16:56:57,056 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 16:56:57,056 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 16:56:57,056 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 16:56:57,056 - DEBUG - Request guid: 08fa2ffe-9a97-49b7-9464-aff3a99bc55b
2025-01-18 16:56:57,057 - DEBUG - socket timeout: 60
2025-01-18 16:56:57,465 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=1d90230a-c184-451f-b426-df60ec47b226&request_guid=08fa2ffe-9a97-49b7-9464-aff3a99bc55b HTTP/1.1" 200 3659
2025-01-18 16:56:57,466 - DEBUG - SUCCESS
2025-01-18 16:56:57,466 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 16:56:57,467 - DEBUG - ret[code] = None, after post request
2025-01-18 16:56:57,467 - DEBUG - Query id: 01b9cda0-0002-4c71-0007-08ea001f8b86
2025-01-18 16:56:57,467 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737241012876949, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 16:56:57,467 - DEBUG - Cache Entry: (0, 1737240996054625, 0)
2025-01-18 16:56:57,467 - DEBUG - deserialize {'id': 0, 'timestamp': 1737241012876949, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 16:56:57,467 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 16:56:57,467 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 16:56:57,467 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 16:56:57,467 - DEBUG - deserialize_json_dict() returns
2025-01-18 16:56:57,467 - DEBUG - Cache Entry: (0, 1737241012876949, 0)
2025-01-18 16:56:57,467 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:56:57,467 - DEBUG - sfqid: 01b9cda0-0002-4c71-0007-08ea001f8b86
2025-01-18 16:56:57,467 - DEBUG - query execution done
2025-01-18 16:56:57,468 - DEBUG - SUCCESS
2025-01-18 16:56:57,468 - DEBUG - PUT OR GET: False
2025-01-18 16:56:57,468 - DEBUG - Query result format: arrow
2025-01-18 16:56:57,468 - INFO - Number of results in first chunk: 54
2025-01-18 16:56:57,468 - DEBUG - Execute query [queryID: 01b9cda0-0002-4c71-0007-08ea001f8b86] select GET_PRESIGNED_URL(@DEV_src_ingest.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACKLE_HERBICIDE_524-330.pdf', 360) as URL_LINK from directory(@DEV_src_ingest.EPA_RAW.PDF_STORE)
2025-01-18 16:56:57,468 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 16:56:57,468 - DEBUG - Arrow BatchSize: 1
2025-01-18 16:56:57,476 - DEBUG - Batches read: 1
2025-01-18 16:56:57,498 - DEBUG - beginning to schedule result batch downloads
2025-01-18 16:56:57,509 - DEBUG - executing SQL/command
2025-01-18 16:56:57,509 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_src_ingest.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...]
2025-01-18 16:56:57,509 - DEBUG - sequence counter: 13
2025-01-18 16:56:57,509 - DEBUG - Request id: 660f3320-d44c-4e3b-9908-368d2b74ffea
2025-01-18 16:56:57,509 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_src_ingest.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...]
2025-01-18 16:56:57,509 - DEBUG - is_file_transfer: True
2025-01-18 16:56:57,510 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:56:57,510 - DEBUG - _cmd_query
2025-01-18 16:56:57,510 - DEBUG - serialize_to_dict() called
2025-01-18 16:56:57,510 - DEBUG - Cache Entry: (0, 1737241012876949, 0)
2025-01-18 16:56:57,510 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737241012876949, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 16:56:57,510 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_src_ingest.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...], sequence_id=[13], is_file_transfer=[False]
2025-01-18 16:56:57,512 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 16:56:57,512 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 16:56:57,512 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 16:56:57,513 - DEBUG - Request guid: c38bac4b-6618-484c-a39a-2f7e09e1ddf6
2025-01-18 16:56:57,513 - DEBUG - socket timeout: 60
2025-01-18 16:56:57,890 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=660f3320-d44c-4e3b-9908-368d2b74ffea&request_guid=c38bac4b-6618-484c-a39a-2f7e09e1ddf6 HTTP/1.1" 200 3710
2025-01-18 16:56:57,891 - DEBUG - SUCCESS
2025-01-18 16:56:57,891 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 16:56:57,891 - DEBUG - ret[code] = None, after post request
2025-01-18 16:56:57,891 - DEBUG - Query id: 01b9cda0-0002-4c78-0007-08ea001f7b8e
2025-01-18 16:56:57,891 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737241013320526, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 16:56:57,891 - DEBUG - Cache Entry: (0, 1737241012876949, 0)
2025-01-18 16:56:57,891 - DEBUG - deserialize {'id': 0, 'timestamp': 1737241013320526, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 16:56:57,891 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 16:56:57,891 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 16:56:57,891 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 16:56:57,891 - DEBUG - deserialize_json_dict() returns
2025-01-18 16:56:57,891 - DEBUG - Cache Entry: (0, 1737241013320526, 0)
2025-01-18 16:56:57,892 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 16:56:57,892 - DEBUG - sfqid: 01b9cda0-0002-4c78-0007-08ea001f7b8e
2025-01-18 16:56:57,892 - DEBUG - query execution done
2025-01-18 16:56:57,892 - DEBUG - SUCCESS
2025-01-18 16:56:57,892 - DEBUG - PUT OR GET: False
2025-01-18 16:56:57,892 - DEBUG - Query result format: arrow
2025-01-18 16:56:57,892 - INFO - Number of results in first chunk: 54
2025-01-18 16:56:57,892 - DEBUG - Execute query [queryID: 01b9cda0-0002-4c78-0007-08ea001f7b8e] select GET_PRESIGNED_URL(@DEV_src_ingest.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf', 360) as URL_LINK from directory(@DEV_src_ingest.EPA_RAW.PDF_STORE)
2025-01-18 16:56:57,892 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 16:56:57,893 - DEBUG - Arrow BatchSize: 1
2025-01-18 16:56:57,893 - DEBUG - Batches read: 1
2025-01-18 16:56:57,893 - DEBUG - beginning to schedule result batch downloads
2025-01-18 16:57:15,667 - INFO - Closing session: 1980125954371002
2025-01-18 16:57:15,668 - INFO - Canceling all running queries
2025-01-18 16:57:15,668 - DEBUG - cursor
2025-01-18 16:57:15,668 - DEBUG - executing SQL/command
2025-01-18 16:57:15,668 - DEBUG - query: [select system$cancel_all_queries(1980125954371002)]
2025-01-18 16:57:15,668 - DEBUG - sequence counter: 14
2025-01-18 16:57:15,669 - DEBUG - Request id: 478d373e-82b1-4f56-bbd4-a11af7fbb4fd
2025-01-18 16:57:15,669 - DEBUG - running query [select system$cancel_all_queries(1980125954371002)]
2025-01-18 16:57:15,669 - DEBUG - is_file_transfer: True
2025-01-18 16:57:15,669 - DEBUG - _cmd_query
2025-01-18 16:57:15,669 - DEBUG - serialize_to_dict() called
2025-01-18 16:57:15,669 - DEBUG - Cache Entry: (0, 1737241013320526, 0)
2025-01-18 16:57:15,669 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737241013320526, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 16:57:15,669 - DEBUG - sql=[select system$cancel_all_queries(1980125954371002)], sequence_id=[14], is_file_transfer=[False]
2025-01-18 16:57:15,670 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 16:57:15,671 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 16:57:15,671 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 16:57:15,671 - DEBUG - Request guid: db8ad84d-39e4-49bf-a7dc-9e2804657fae
2025-01-18 16:57:15,671 - DEBUG - socket timeout: 60
2025-01-18 16:57:15,816 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=478d373e-82b1-4f56-bbd4-a11af7fbb4fd&request_guid=db8ad84d-39e4-49bf-a7dc-9e2804657fae HTTP/1.1" 200 1949
2025-01-18 16:57:15,817 - DEBUG - SUCCESS
2025-01-18 16:57:15,817 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 16:57:15,817 - DEBUG - ret[code] = None, after post request
2025-01-18 16:57:15,817 - DEBUG - Query id: 01b9cda1-0002-4c71-0007-08ea001f8b92
2025-01-18 16:57:15,817 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737241031228438, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 16:57:15,817 - DEBUG - Cache Entry: (0, 1737241013320526, 0)
2025-01-18 16:57:15,818 - DEBUG - deserialize {'id': 0, 'timestamp': 1737241031228438, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 16:57:15,818 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 16:57:15,818 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 16:57:15,818 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 16:57:15,818 - DEBUG - deserialize_json_dict() returns
2025-01-18 16:57:15,818 - DEBUG - Cache Entry: (0, 1737241031228438, 0)
2025-01-18 16:57:15,818 - DEBUG - sfqid: 01b9cda1-0002-4c71-0007-08ea001f8b92
2025-01-18 16:57:15,819 - DEBUG - query execution done
2025-01-18 16:57:15,819 - DEBUG - SUCCESS
2025-01-18 16:57:15,819 - DEBUG - PUT OR GET: False
2025-01-18 16:57:15,819 - DEBUG - Query result format: arrow
2025-01-18 16:57:15,819 - INFO - Number of results in first chunk: 1
2025-01-18 16:57:15,819 - DEBUG - Execute query [queryID: 01b9cda1-0002-4c71-0007-08ea001f8b92] select system$cancel_all_queries(1980125954371002)
2025-01-18 16:57:15,819 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 16:57:15,819 - DEBUG - Arrow BatchSize: 1
2025-01-18 16:57:15,819 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 16:57:15,820 - DEBUG - Batches read: 0
2025-01-18 16:57:15,820 - DEBUG - beginning to schedule result batch downloads
2025-01-18 16:57:15,820 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 16:57:15,820 - INFO - closed
2025-01-18 16:57:15,820 - DEBUG - Closing telemetry client.
2025-01-18 16:57:15,827 - DEBUG - Sending 1 logs to telemetry. Data is {'logs': [{'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_imported_packages', 'value': "{'sre_parse', 'platform', 'tokenize', 'http', 'jwt', 'argparse', 'colorama', 'public', 'tomlkit', 'concurrent', 'nturl2path', 'rich', 'enum', 'mmap', 'logging', 'tzlocal', 'urllib', 'pywin32_bootstrap', 'inspect', 'sortedcontainers', 'pygments', 'packaging', 'selectors', 'stat', 'cryptography', 'urllib3', 'pyexpat', 'plistlib', 'codecs', 'win32com', 'pytz', 'zoneinfo', 'ast', 'ntpath', 'toml', 'cython_runtime', 'math', 'errno', 'git', 'socket', 'platformdirs', 'filelock', 'tornado', 'pkg_resources', 're', 'secrets', 'getopt', 'pkgutil', 'jiter', 'signal', 'getpass', 'ssl', 'snowflake', 'gitdb', 'queue', 'shutil', 'pyarrow', 'absl', 'uuid', 'random', 'token', 'tarfile', 'hmac', 'html', 'attr', 'decimal', 'binascii', 'bisect', 'cachetools', 'pickle', 'idna', 'textwrap', 'webbrowser', 'statistics', 'base64', 'locale', 'OpenSSL', 'contextlib', 'site', 'stringprep', 'shlex', 'annotated_types', 'unittest', 'json', 'six', 'blinker', 'sniffio', 'linecache', 'sys', 'posixpath', 'gc', 'winreg', 'copy', 'dataclasses', 'pydantic_core', 'sre_compile', 'pythoncom', 'struct', 'pydoc', 'sysconfig', 'threading', 'copyreg', 'zlib', 'time', 'builtins', 'watchdog', 'marshal', 'pathlib', 'configparser', 'ctypes', 'itertools', 'quopri', 'keyword', 'typing', 'importlib', 'email', 'functools', 'pprint', 'weakref', 'streamlit', 'xml', 'fnmatch', 'numbers', 'smmap', 'datetime', 'pywin32_system32', 'dateutil', 'openai', 'hashlib', 'collections', 'mimetypes', 'sre_constants', 'uu', 'abc', 'traceback', 'glob', 'anyio', 'zipimport', 'gzip', 'array', 'runpy', 'tempfile', 'certifi', 'string', 'contextvars', 'asyncio', 'unicodedata', 'reprlib', 'csv', 'pandas', 'subprocess', 'asn1crypto', 'encodings', 'nt', 'typing_extensions', 'plotly', 'calendar', 'select', 'bz2', 'msvcrt', 'gettext', 'click', 'pydantic', 'opcode', 'pywintypes', 'requests', 'atexit', 'cmath', 'heapq', 'colorsys', 'PIL', 'types', 'google', 'charset_normalizer', 'multiprocessing', 'os', 'distro', 'dis', 'httpx', 'cloudpickle', 'win32api', 'difflib', 'zipfile', 'numpy', 'yaml', 'genericpath', 'ipaddress', 'timeit', 'operator', 'fractions', 'lzma', 'io', 'warnings'}"}, 'timestamp': '1737240956087'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_session_created', 'data': {'start_time': 1737240956087, 'created_by_snowpark': 1}}, 'timestamp': '1737240956087'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954371002, 'thread_ident': 10656}}, 'timestamp': '1737240956087'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_time_consume_first_result', 'query_id': '01b9cd9f-0002-4c78-0007-08ea001f7b86', 'value': 4568}, 'timestamp': '1737240956302'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_time_consume_first_result', 'query_id': '01b9cd9f-0002-4c76-0007-08ea001fb84a', 'value': 4567}, 'timestamp': '1737240956586'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_time_consume_last_result', 'query_id': '01b9cd9f-0002-4c76-0007-08ea001fb84a', 'value': 2}, 'timestamp': '1737240956588'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '5bb9aa14-afd8-4419-95bc-4041a7f9bc91', 'query_plan_complexity': {'column': 1}, 'thread_ident': 10656}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cd9f-0002-4c76-0007-08ea001fb84a']}}, 'timestamp': '1737240956588'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_time_consume_first_result', 'query_id': '01b9cd9f-0002-4c71-0007-08ea001f8b7a', 'value': 4568}, 'timestamp': '1737240956761'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954371002, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.08937382698059082, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737240956762'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_time_consume_first_result', 'query_id': '01b9cd9f-0002-4c79-0007-08ea001f6c52', 'value': 4568}, 'timestamp': '1737240956843'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954371002, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.07837510108947754, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737240956843'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_time_consume_first_result', 'query_id': '01b9cd9f-0002-4c71-0007-08ea001f8b7e', 'value': 4570}, 'timestamp': '1737240956921'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954371002, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.07667064666748047, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737240956922'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_time_consume_first_result', 'query_id': '01b9cd9f-0002-4c77-0007-08ea001fd7b2', 'value': 4569}, 'timestamp': '1737240957630'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_time_consume_last_result', 'query_id': '01b9cd9f-0002-4c77-0007-08ea001fd7b2', 'value': 2}, 'timestamp': '1737240957632'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '887b995a-4df4-42c5-8fc3-545ce611d7d6', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 10656}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cd9f-0002-4c77-0007-08ea001fd7b2']}}, 'timestamp': '1737240957634'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_time_consume_first_result', 'query_id': '01b9cda0-0002-4c79-0007-08ea001f6c5a', 'value': 4567}, 'timestamp': '1737241000228'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954371002, 'thread_ident': 18284}}, 'timestamp': '1737241000250'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_time_consume_first_result', 'query_id': '01b9cda0-0002-4c76-0007-08ea001fb852', 'value': 4570}, 'timestamp': '1737241000334'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954371002, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.08668923377990723, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737241000335'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_time_consume_first_result', 'query_id': '01b9cda0-0002-4c72-0007-08ea001fa97a', 'value': 4569}, 'timestamp': '1737241000436'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954371002, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.09920835494995117, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737241000436'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_time_consume_first_result', 'query_id': '01b9cda0-0002-4c70-0007-08ea001f9a5a', 'value': 4569}, 'timestamp': '1737241000536'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954371002, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.09833741188049316, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737241000537'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_time_consume_first_result', 'query_id': '01b9cda0-0002-4c71-0007-08ea001f8b82', 'value': 4566}, 'timestamp': '1737241000639'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_time_consume_last_result', 'query_id': '01b9cda0-0002-4c71-0007-08ea001f8b82', 'value': 1}, 'timestamp': '1737241000640'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'bb08d4b1-f990-4ef0-89ab-db609043bf17', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 18284}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cda0-0002-4c71-0007-08ea001f8b82']}}, 'timestamp': '1737241000641'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737241001137'}, {'message': {'source': 'snowflake.core', 'version': '1.0.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'python_api', 'data': {'class_name': 'CortexSearchServiceResource', 'func_name': 'search'}}, 'timestamp': '1737241001144'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737241017049'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_time_consume_first_result', 'query_id': '01b9cda0-0002-4c71-0007-08ea001f8b86', 'value': 4567}, 'timestamp': '1737241017468'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_fetch_pandas_all', 'query_id': '01b9cda0-0002-4c71-0007-08ea001f8b86', 'value': 1}, 'timestamp': '1737241017468'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_time_consume_last_result', 'query_id': '01b9cda0-0002-4c71-0007-08ea001f8b86', 'value': 31}, 'timestamp': '1737241017498'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'e09b1a81-4e59-4f8f-ac8c-59ddb3b786a7', 'query_plan_complexity': {'column': 1}, 'thread_ident': 18284}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9cda0-0002-4c71-0007-08ea001f8b86']}}, 'timestamp': '1737241017501'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_time_consume_first_result', 'query_id': '01b9cda0-0002-4c78-0007-08ea001f7b8e', 'value': 4566}, 'timestamp': '1737241017892'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_fetch_pandas_all', 'query_id': '01b9cda0-0002-4c78-0007-08ea001f7b8e', 'value': 1}, 'timestamp': '1737241017892'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_time_consume_last_result', 'query_id': '01b9cda0-0002-4c78-0007-08ea001f7b8e', 'value': 1}, 'timestamp': '1737241017893'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '86510677-4ae2-4f6c-9666-f256fd08dbc3', 'query_plan_complexity': {'column': 1}, 'thread_ident': 18284}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9cda0-0002-4c78-0007-08ea001f7b8e']}}, 'timestamp': '1737241017894'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954371002, 'thread_ident': 24664}}, 'timestamp': '1737241035668'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_time_consume_first_result', 'query_id': '01b9cda1-0002-4c71-0007-08ea001f8b92', 'value': 4567}, 'timestamp': '1737241035819'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit:SnowparkML', 'type': 'client_time_consume_last_result', 'query_id': '01b9cda1-0002-4c71-0007-08ea001f8b92', 'value': 1}, 'timestamp': '1737241035820'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_temp_table_cleanup', 'data': {'session_id': 1980125954371002, 'temp_table_cleaner_enabled': False, 'num_temp_tables_cleaned': 0, 'num_temp_tables_created': 0}}, 'timestamp': '1737241035820'}]}.
2025-01-18 16:57:15,829 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 16:57:15,830 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 16:57:15,830 - DEBUG - remaining request timeout: 5000 ms, retry cnt: 1
2025-01-18 16:57:15,830 - DEBUG - Request guid: e5d61f99-3f0f-4872-bcf2-96088a944e0f
2025-01-18 16:57:15,830 - DEBUG - socket timeout: 60
2025-01-18 16:57:15,890 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /telemetry/send?request_guid=e5d61f99-3f0f-4872-bcf2-96088a944e0f HTTP/1.1" 200 86
2025-01-18 16:57:15,891 - DEBUG - SUCCESS
2025-01-18 16:57:15,891 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 16:57:15,891 - DEBUG - ret[code] = None, after post request
2025-01-18 16:57:15,891 - DEBUG - Successfully uploading metrics to telemetry.
2025-01-18 16:57:15,891 - INFO - No async queries seem to be running, deleting session
2025-01-18 16:57:15,892 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 16:57:15,892 - DEBUG - remaining request timeout: 5000 ms, retry cnt: 1
2025-01-18 16:57:15,892 - DEBUG - Request guid: eff64216-db3d-4571-b5a0-4c6acb5a196f
2025-01-18 16:57:15,892 - DEBUG - socket timeout: 60
2025-01-18 16:57:15,986 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /session?delete=true&request_guid=eff64216-db3d-4571-b5a0-4c6acb5a196f HTTP/1.1" 200 76
2025-01-18 16:57:15,987 - DEBUG - SUCCESS
2025-01-18 16:57:15,987 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 16:57:15,987 - DEBUG - ret[code] = None, after post request
2025-01-18 16:57:15,990 - DEBUG - clear_cache() called
2025-01-18 16:57:15,990 - DEBUG - Session is closed
2025-01-18 16:57:15,990 - INFO - Closed session: 1980125954371002
2025-01-18 17:12:14,489 - DEBUG - reading configuration file from C:\Users\ajjay\AppData\Local\snowflake\config.toml
2025-01-18 17:12:14,491 - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.10.11, Platform: Windows-10-10.0.22635-SP0
2025-01-18 17:12:14,492 - DEBUG - connect
2025-01-18 17:12:14,492 - DEBUG - __config
2025-01-18 17:12:14,492 - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 17:12:14,492 - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 17:12:14,493 - DEBUG - use_numpy: False
2025-01-18 17:12:14,493 - DEBUG - initialized
2025-01-18 17:12:14,493 - DEBUG - REST API object was created: gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 17:12:14,494 - DEBUG - authenticate
2025-01-18 17:12:14,494 - DEBUG - account=gmcpdcz-mt01740, user=preciousjunk, database=DEV_SRC_INGEST, schema=EPA_PROCESSED, warehouse=app_wh, role=app_role, request_id=5da8dcbc-def0-4372-8225-269b3b0ca345
2025-01-18 17:12:14,494 - DEBUG - body['data']: {'CLIENT_APP_ID': 'PythonConnector', 'CLIENT_APP_VERSION': '3.12.4', 'SVN_REVISION': None, 'ACCOUNT_NAME': 'gmcpdcz-mt01740', 'LOGIN_NAME': 'preciousjunk', 'CLIENT_ENVIRONMENT': {'APPLICATION': 'streamlit', 'OS': 'Windows', 'OS_VERSION': 'Windows-10-10.0.22635-SP0', 'PYTHON_VERSION': '3.10.11', 'PYTHON_RUNTIME': 'CPython', 'PYTHON_COMPILER': 'MSC v.1929 64 bit (AMD64)', 'OCSP_MODE': 'FAIL_OPEN', 'TRACING': 10, 'LOGIN_TIMEOUT': None, 'NETWORK_TIMEOUT': None, 'SOCKET_TIMEOUT': None}, 'PASSWORD': '******', 'SESSION_PARAMETERS': {'CLIENT_PREFETCH_THREADS': 4}}
2025-01-18 17:12:14,495 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 17:12:14,495 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 17:12:14,495 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 17:12:14,495 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 17:12:14,496 - DEBUG - Request guid: d6f99bad-55a9-4b88-98c7-0ffff62dbf1e
2025-01-18 17:12:14,496 - DEBUG - socket timeout: 60
2025-01-18 17:12:14,498 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 17:12:15,167 - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None
2025-01-18 17:12:15,218 - DEBUG - cache directory: C:\Users\ajjay\AppData\Local\Snowflake\Caches
2025-01-18 17:12:15,221 - DEBUG - ocsp_response_cache_uri: file://C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 17:12:15,221 - DEBUG - OCSP_VALIDATION_CACHE size: 310
2025-01-18 17:12:15,221 - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 17:12:15,222 - DEBUG - OCSP dynamic cache server RETRY URL: None
2025-01-18 17:12:15,222 - DEBUG - validating certificate: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 17:12:15,222 - DEBUG - # of certificates: 4
2025-01-18 17:12:15,224 - DEBUG - subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 17:12:15,225 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 17:12:15,227 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 17:12:15,229 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 17:12:15,233 - DEBUG - reading certificate bundle: D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\certifi\cacert.pem
2025-01-18 17:12:15,271 - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 17:12:15,274 - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])
2025-01-18 17:12:15,278 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 17:12:15,279 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 17:12:15,282 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 17:12:15,283 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 17:12:15,286 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 17:12:15,287 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 17:12:15,291 - DEBUG - ok
2025-01-18 17:12:15,453 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /session/v1/login-request?request_id=5da8dcbc-def0-4372-8225-269b3b0ca345&databaseName=DEV_SRC_INGEST&schemaName=EPA_PROCESSED&warehouse=app_wh&roleName=app_role&request_guid=d6f99bad-55a9-4b88-98c7-0ffff62dbf1e HTTP/1.1" 200 281
2025-01-18 17:12:15,454 - DEBUG - SUCCESS
2025-01-18 17:12:15,454 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 17:12:15,454 - DEBUG - ret[code] = 390197, after post request
2025-01-18 17:12:15,454 - DEBUG - completed authentication
2025-01-18 17:50:31,631 - DEBUG - reading configuration file from C:\Users\ajjay\AppData\Local\snowflake\config.toml
2025-01-18 17:50:31,632 - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.10.11, Platform: Windows-10-10.0.22635-SP0
2025-01-18 17:50:31,632 - DEBUG - connect
2025-01-18 17:50:31,632 - DEBUG - __config
2025-01-18 17:50:31,632 - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 17:50:31,632 - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 17:50:31,632 - DEBUG - use_numpy: False
2025-01-18 17:50:31,633 - DEBUG - initialized
2025-01-18 17:50:31,633 - DEBUG - REST API object was created: gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 17:54:01,733 - DEBUG - reading configuration file from C:\Users\ajjay\AppData\Local\snowflake\config.toml
2025-01-18 17:54:01,734 - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.10.11, Platform: Windows-10-10.0.22635-SP0
2025-01-18 17:54:01,735 - DEBUG - connect
2025-01-18 17:54:01,735 - DEBUG - __config
2025-01-18 17:54:01,735 - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 17:54:01,735 - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 17:54:01,735 - DEBUG - use_numpy: False
2025-01-18 17:54:01,735 - DEBUG - initialized
2025-01-18 17:54:01,735 - DEBUG - REST API object was created: gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 17:55:16,213 - DEBUG - reading configuration file from C:\Users\ajjay\AppData\Local\snowflake\config.toml
2025-01-18 17:55:16,214 - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.10.11, Platform: Windows-10-10.0.22635-SP0
2025-01-18 17:55:16,214 - DEBUG - connect
2025-01-18 17:55:16,214 - DEBUG - __config
2025-01-18 17:55:16,214 - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 17:55:16,214 - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 17:55:16,215 - DEBUG - use_numpy: False
2025-01-18 17:55:16,215 - DEBUG - initialized
2025-01-18 17:55:16,215 - DEBUG - REST API object was created: gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 17:55:20,755 - DEBUG - reading configuration file from C:\Users\ajjay\AppData\Local\snowflake\config.toml
2025-01-18 17:55:20,756 - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.10.11, Platform: Windows-10-10.0.22635-SP0
2025-01-18 17:55:20,756 - DEBUG - connect
2025-01-18 17:55:20,757 - DEBUG - __config
2025-01-18 17:55:20,757 - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 17:55:20,757 - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 17:55:20,757 - DEBUG - use_numpy: False
2025-01-18 17:55:20,757 - DEBUG - initialized
2025-01-18 17:55:20,757 - DEBUG - REST API object was created: gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 17:55:23,923 - DEBUG - reading configuration file from C:\Users\ajjay\AppData\Local\snowflake\config.toml
2025-01-18 17:55:23,925 - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.10.11, Platform: Windows-10-10.0.22635-SP0
2025-01-18 17:55:23,925 - DEBUG - connect
2025-01-18 17:55:23,926 - DEBUG - __config
2025-01-18 17:55:23,926 - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 17:55:23,926 - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 17:55:23,926 - DEBUG - use_numpy: False
2025-01-18 17:55:23,926 - DEBUG - initialized
2025-01-18 17:55:23,926 - DEBUG - REST API object was created: gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 17:56:01,492 - DEBUG - reading configuration file from C:\Users\ajjay\AppData\Local\snowflake\config.toml
2025-01-18 17:56:01,493 - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.10.11, Platform: Windows-10-10.0.22635-SP0
2025-01-18 17:56:01,494 - DEBUG - connect
2025-01-18 17:56:01,494 - DEBUG - __config
2025-01-18 17:56:01,494 - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 17:56:01,494 - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 17:56:01,494 - DEBUG - use_numpy: False
2025-01-18 17:56:01,494 - DEBUG - initialized
2025-01-18 17:56:01,494 - DEBUG - REST API object was created: gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 17:56:01,576 - DEBUG - Public key fingerprint is SHA256:MMhnSja/3AZz/s91ePEYdo5p27RfYwIdt7+BsyWAYGg=
2025-01-18 17:56:01,578 - DEBUG - authenticate
2025-01-18 17:56:01,578 - DEBUG - account=gmcpdcz-mt01740, user=preciousjunk, database=DEV_SRC_INGEST, schema=EPA_PROCESSED, warehouse=app_wh, role=app_role, request_id=2c201a92-7139-4c03-a90f-9c44edebb7b5
2025-01-18 17:56:01,578 - DEBUG - body['data']: {'CLIENT_APP_ID': 'PythonConnector', 'CLIENT_APP_VERSION': '3.12.4', 'SVN_REVISION': None, 'ACCOUNT_NAME': 'gmcpdcz-mt01740', 'LOGIN_NAME': 'preciousjunk', 'CLIENT_ENVIRONMENT': {'APPLICATION': 'streamlit', 'OS': 'Windows', 'OS_VERSION': 'Windows-10-10.0.22635-SP0', 'PYTHON_VERSION': '3.10.11', 'PYTHON_RUNTIME': 'CPython', 'PYTHON_COMPILER': 'MSC v.1929 64 bit (AMD64)', 'OCSP_MODE': 'FAIL_OPEN', 'TRACING': 10, 'LOGIN_TIMEOUT': None, 'NETWORK_TIMEOUT': None, 'SOCKET_TIMEOUT': None}, 'AUTHENTICATOR': 'SNOWFLAKE_JWT', 'TOKEN': '******', 'SESSION_PARAMETERS': {'CLIENT_PREFETCH_THREADS': 4}}
2025-01-18 17:56:01,579 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 17:56:01,579 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 17:56:01,579 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 17:56:01,579 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 17:56:01,579 - DEBUG - Request guid: 8911ddb2-392d-4486-8821-cf6fe9f911cc
2025-01-18 17:56:01,579 - DEBUG - socket timeout: 10
2025-01-18 17:56:01,580 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 17:56:01,988 - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None
2025-01-18 17:56:02,018 - DEBUG - cache directory: C:\Users\ajjay\AppData\Local\Snowflake\Caches
2025-01-18 17:56:02,019 - DEBUG - ocsp_response_cache_uri: file://C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 17:56:02,019 - DEBUG - OCSP_VALIDATION_CACHE size: 310
2025-01-18 17:56:02,019 - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 17:56:02,019 - DEBUG - OCSP dynamic cache server RETRY URL: None
2025-01-18 17:56:02,019 - DEBUG - validating certificate: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 17:56:02,019 - DEBUG - # of certificates: 4
2025-01-18 17:56:02,020 - DEBUG - subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 17:56:02,020 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 17:56:02,020 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 17:56:02,021 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 17:56:02,023 - DEBUG - reading certificate bundle: D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\certifi\cacert.pem
2025-01-18 17:56:02,036 - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 17:56:02,037 - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])
2025-01-18 17:56:02,038 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 17:56:02,039 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 17:56:02,040 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 17:56:02,041 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 17:56:02,043 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 17:56:02,043 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 17:56:02,045 - DEBUG - ok
2025-01-18 17:56:02,197 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /session/v1/login-request?request_id=2c201a92-7139-4c03-a90f-9c44edebb7b5&databaseName=DEV_SRC_INGEST&schemaName=EPA_PROCESSED&warehouse=app_wh&roleName=app_role&request_guid=8911ddb2-392d-4486-8821-cf6fe9f911cc HTTP/1.1" 200 1783
2025-01-18 17:56:02,199 - DEBUG - SUCCESS
2025-01-18 17:56:02,199 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 17:56:02,199 - DEBUG - ret[code] = None, after post request
2025-01-18 17:56:02,199 - DEBUG - completed authentication
2025-01-18 17:56:02,199 - DEBUG - token = ******
2025-01-18 17:56:02,199 - DEBUG - master_token = ******
2025-01-18 17:56:02,199 - DEBUG - id_token = NULL
2025-01-18 17:56:02,199 - DEBUG - mfa_token = NULL
2025-01-18 17:56:02,201 - DEBUG - cursor
2025-01-18 17:56:02,201 - INFO - Snowpark Session information: 
"version" : 1.26.0,
"python.version" : 3.10.11,
"python.connector.version" : 3.12.4,
"python.connector.session.id" : 1980125954378850,
"os.name" : Windows

2025-01-18 17:56:02,201 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x000002606B4E3B50>
2025-01-18 17:56:02,202 - DEBUG - created a new SFPoolManager
2025-01-18 17:56:02,202 - INFO - Querying the server for client info
2025-01-18 17:56:02,202 - DEBUG - cursor
2025-01-18 17:56:02,202 - DEBUG - executing SQL/command
2025-01-18 17:56:02,202 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 17:56:02,202 - DEBUG - sequence counter: 1
2025-01-18 17:56:02,202 - DEBUG - Request id: a9330ea7-870b-4414-a405-7a21b53e7b62
2025-01-18 17:56:02,203 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 17:56:02,203 - DEBUG - is_file_transfer: True
2025-01-18 17:56:02,203 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:02,203 - DEBUG - _cmd_query
2025-01-18 17:56:02,203 - DEBUG - serialize_to_dict() called
2025-01-18 17:56:02,203 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[1], is_file_transfer=[False]
2025-01-18 17:56:02,203 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 17:56:02,205 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 17:56:02,205 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 17:56:02,205 - DEBUG - Request guid: b9b4f4b0-13a1-4e66-8102-f97e303fc83b
2025-01-18 17:56:02,205 - DEBUG - socket timeout: 60
2025-01-18 17:56:02,378 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=a9330ea7-870b-4414-a405-7a21b53e7b62&request_guid=b9b4f4b0-13a1-4e66-8102-f97e303fc83b HTTP/1.1" 200 2616
2025-01-18 17:56:02,378 - DEBUG - SUCCESS
2025-01-18 17:56:02,378 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 17:56:02,378 - DEBUG - ret[code] = None, after post request
2025-01-18 17:56:02,378 - DEBUG - Query id: 01b9cddb-0002-4c72-0007-08ea001fac9e
2025-01-18 17:56:02,378 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737244557784530, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 17:56:02,378 - DEBUG - deserialize {'id': 0, 'timestamp': 1737244557784530, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 17:56:02,378 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 17:56:02,379 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:02,379 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:02,379 - DEBUG - deserialize_json_dict() returns
2025-01-18 17:56:02,379 - DEBUG - Cache Entry: (0, 1737244557784530, 0)
2025-01-18 17:56:02,379 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:02,379 - DEBUG - sfqid: 01b9cddb-0002-4c72-0007-08ea001fac9e
2025-01-18 17:56:02,379 - DEBUG - query execution done
2025-01-18 17:56:02,379 - DEBUG - SUCCESS
2025-01-18 17:56:02,379 - DEBUG - PUT OR GET: False
2025-01-18 17:56:02,379 - DEBUG - Query result format: arrow
2025-01-18 17:56:02,379 - INFO - Number of results in first chunk: 1
2025-01-18 17:56:02,379 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 17:56:02,380 - DEBUG - Arrow BatchSize: 1
2025-01-18 17:56:02,380 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 17:56:02,380 - DEBUG - Batches read: 0
2025-01-18 17:56:02,380 - DEBUG - beginning to schedule result batch downloads
2025-01-18 17:56:02,380 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 17:56:02,380 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x000002606AF72740>, telemetry enabled: True
2025-01-18 17:56:02,381 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 17:56:02,381 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 17:56:02,381 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 17:56:02,381 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 17:56:02,394 - DEBUG - executing SQL/command
2025-01-18 17:56:02,394 - DEBUG - query: [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 17:56:02,394 - DEBUG - sequence counter: 2
2025-01-18 17:56:02,394 - DEBUG - Request id: 506c3583-3212-4c58-9621-be170c3f09e7
2025-01-18 17:56:02,394 - DEBUG - running query [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 17:56:02,394 - DEBUG - is_file_transfer: True
2025-01-18 17:56:02,394 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:02,394 - DEBUG - _cmd_query
2025-01-18 17:56:02,394 - DEBUG - serialize_to_dict() called
2025-01-18 17:56:02,394 - DEBUG - Cache Entry: (0, 1737244557784530, 0)
2025-01-18 17:56:02,394 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737244557784530, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 17:56:02,394 - DEBUG - sql=[SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...], sequence_id=[2], is_file_transfer=[False]
2025-01-18 17:56:02,396 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 17:56:02,397 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 17:56:02,397 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 17:56:02,397 - DEBUG - Request guid: cf84b095-af5b-4cf5-85f0-3bb270f8262f
2025-01-18 17:56:02,397 - DEBUG - socket timeout: 60
2025-01-18 17:56:02,855 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=506c3583-3212-4c58-9621-be170c3f09e7&request_guid=cf84b095-af5b-4cf5-85f0-3bb270f8262f HTTP/1.1" 200 2117
2025-01-18 17:56:02,855 - DEBUG - SUCCESS
2025-01-18 17:56:02,855 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 17:56:02,855 - DEBUG - ret[code] = None, after post request
2025-01-18 17:56:02,856 - DEBUG - Query id: 01b9cddb-0002-4c79-0007-08ea001f6ef6
2025-01-18 17:56:02,856 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737244558233325, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 17:56:02,856 - DEBUG - Cache Entry: (0, 1737244557784530, 0)
2025-01-18 17:56:02,856 - DEBUG - deserialize {'id': 0, 'timestamp': 1737244558233325, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 17:56:02,856 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 17:56:02,856 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:02,856 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:02,856 - DEBUG - deserialize_json_dict() returns
2025-01-18 17:56:02,856 - DEBUG - Cache Entry: (0, 1737244558233325, 0)
2025-01-18 17:56:02,856 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:02,856 - DEBUG - sfqid: 01b9cddb-0002-4c79-0007-08ea001f6ef6
2025-01-18 17:56:02,856 - DEBUG - query execution done
2025-01-18 17:56:02,856 - DEBUG - SUCCESS
2025-01-18 17:56:02,856 - DEBUG - PUT OR GET: False
2025-01-18 17:56:02,856 - DEBUG - Query result format: arrow
2025-01-18 17:56:02,856 - INFO - Number of results in first chunk: 1
2025-01-18 17:56:02,856 - DEBUG - Execute query [queryID: 01b9cddb-0002-4c79-0007-08ea001f6ef6] 
        SELECT LOCATION, LATITUDE, LONGITUDE
        FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS 
        WHERE USER_ID = 'default_user'
        
2025-01-18 17:56:02,856 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 17:56:02,856 - DEBUG - Arrow BatchSize: 1
2025-01-18 17:56:02,856 - DEBUG - Arrow chunk info: batchCount 1, columnCount 3, use_numpy: 0
2025-01-18 17:56:02,856 - DEBUG - Batches read: 0
2025-01-18 17:56:02,857 - DEBUG - beginning to schedule result batch downloads
2025-01-18 17:56:02,857 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 17:56:02,864 - DEBUG - executing SQL/command
2025-01-18 17:56:02,864 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 17:56:02,864 - DEBUG - sequence counter: 3
2025-01-18 17:56:02,864 - DEBUG - Request id: ca8dce71-6a49-4564-b9c6-4a0f393d9fd8
2025-01-18 17:56:02,864 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 17:56:02,864 - DEBUG - is_file_transfer: True
2025-01-18 17:56:02,864 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:02,864 - DEBUG - _cmd_query
2025-01-18 17:56:02,864 - DEBUG - serialize_to_dict() called
2025-01-18 17:56:02,864 - DEBUG - Cache Entry: (0, 1737244558233325, 0)
2025-01-18 17:56:02,864 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737244558233325, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 17:56:02,864 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[3], is_file_transfer=[False]
2025-01-18 17:56:02,865 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 17:56:02,865 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 17:56:02,865 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 17:56:02,866 - DEBUG - Request guid: 4a9df02a-a75c-458a-950f-53514cbd97d9
2025-01-18 17:56:02,866 - DEBUG - socket timeout: 60
2025-01-18 17:56:02,949 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=ca8dce71-6a49-4564-b9c6-4a0f393d9fd8&request_guid=4a9df02a-a75c-458a-950f-53514cbd97d9 HTTP/1.1" 200 1502
2025-01-18 17:56:02,949 - DEBUG - SUCCESS
2025-01-18 17:56:02,950 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 17:56:02,950 - DEBUG - ret[code] = None, after post request
2025-01-18 17:56:02,950 - DEBUG - Query id: 01b9cddb-0002-4c70-0007-08ea001f9d56
2025-01-18 17:56:02,950 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737244558351404, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 17:56:02,950 - DEBUG - Cache Entry: (0, 1737244558233325, 0)
2025-01-18 17:56:02,950 - DEBUG - deserialize {'id': 0, 'timestamp': 1737244558351404, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 17:56:02,950 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 17:56:02,950 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:02,950 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:02,950 - DEBUG - deserialize_json_dict() returns
2025-01-18 17:56:02,950 - DEBUG - Cache Entry: (0, 1737244558351404, 0)
2025-01-18 17:56:02,950 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:02,950 - DEBUG - sfqid: 01b9cddb-0002-4c70-0007-08ea001f9d56
2025-01-18 17:56:02,950 - DEBUG - query execution done
2025-01-18 17:56:02,951 - DEBUG - SUCCESS
2025-01-18 17:56:02,951 - DEBUG - PUT OR GET: False
2025-01-18 17:56:02,951 - DEBUG - Query result format: arrow
2025-01-18 17:56:02,951 - INFO - Number of results in first chunk: 0
2025-01-18 17:56:02,952 - DEBUG - executing SQL/command
2025-01-18 17:56:02,952 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 17:56:02,952 - DEBUG - sequence counter: 4
2025-01-18 17:56:02,952 - DEBUG - Request id: a0291d65-e97a-4864-b460-34c3a3fd8406
2025-01-18 17:56:02,952 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 17:56:02,952 - DEBUG - is_file_transfer: True
2025-01-18 17:56:02,952 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:02,952 - DEBUG - _cmd_query
2025-01-18 17:56:02,952 - DEBUG - serialize_to_dict() called
2025-01-18 17:56:02,952 - DEBUG - Cache Entry: (0, 1737244558351404, 0)
2025-01-18 17:56:02,952 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737244558351404, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 17:56:02,952 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[4], is_file_transfer=[False]
2025-01-18 17:56:02,953 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 17:56:02,953 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 17:56:02,953 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 17:56:02,953 - DEBUG - Request guid: f75e8a93-2565-40e1-b7b9-cce52df4fa7e
2025-01-18 17:56:02,954 - DEBUG - socket timeout: 60
2025-01-18 17:56:03,010 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=a0291d65-e97a-4864-b460-34c3a3fd8406&request_guid=f75e8a93-2565-40e1-b7b9-cce52df4fa7e HTTP/1.1" 200 1376
2025-01-18 17:56:03,010 - DEBUG - SUCCESS
2025-01-18 17:56:03,011 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 17:56:03,011 - DEBUG - ret[code] = None, after post request
2025-01-18 17:56:03,011 - DEBUG - Query id: 01b9cddb-0002-4c70-0007-08ea001f9d5a
2025-01-18 17:56:03,011 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737244558413556, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 17:56:03,011 - DEBUG - Cache Entry: (0, 1737244558351404, 0)
2025-01-18 17:56:03,011 - DEBUG - deserialize {'id': 0, 'timestamp': 1737244558413556, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 17:56:03,011 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 17:56:03,011 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:03,011 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:03,011 - DEBUG - deserialize_json_dict() returns
2025-01-18 17:56:03,011 - DEBUG - Cache Entry: (0, 1737244558413556, 0)
2025-01-18 17:56:03,011 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:03,011 - DEBUG - sfqid: 01b9cddb-0002-4c70-0007-08ea001f9d5a
2025-01-18 17:56:03,011 - DEBUG - query execution done
2025-01-18 17:56:03,011 - DEBUG - SUCCESS
2025-01-18 17:56:03,011 - DEBUG - PUT OR GET: False
2025-01-18 17:56:03,011 - DEBUG - Query result format: arrow
2025-01-18 17:56:03,011 - INFO - Number of results in first chunk: 0
2025-01-18 17:56:03,012 - DEBUG - executing SQL/command
2025-01-18 17:56:03,012 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 17:56:03,012 - DEBUG - sequence counter: 5
2025-01-18 17:56:03,013 - DEBUG - Request id: b0d8aaa4-4f6e-4199-a357-c95de8705878
2025-01-18 17:56:03,013 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 17:56:03,013 - DEBUG - is_file_transfer: True
2025-01-18 17:56:03,013 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:03,013 - DEBUG - _cmd_query
2025-01-18 17:56:03,013 - DEBUG - serialize_to_dict() called
2025-01-18 17:56:03,013 - DEBUG - Cache Entry: (0, 1737244558413556, 0)
2025-01-18 17:56:03,013 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737244558413556, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 17:56:03,013 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[5], is_file_transfer=[False]
2025-01-18 17:56:03,013 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 17:56:03,014 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 17:56:03,014 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 17:56:03,014 - DEBUG - Request guid: dc730315-3117-4c8c-bea4-49a1b6e10386
2025-01-18 17:56:03,014 - DEBUG - socket timeout: 60
2025-01-18 17:56:03,081 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=b0d8aaa4-4f6e-4199-a357-c95de8705878&request_guid=dc730315-3117-4c8c-bea4-49a1b6e10386 HTTP/1.1" 200 1376
2025-01-18 17:56:03,081 - DEBUG - SUCCESS
2025-01-18 17:56:03,081 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 17:56:03,081 - DEBUG - ret[code] = None, after post request
2025-01-18 17:56:03,081 - DEBUG - Query id: 01b9cddb-0002-4c71-0007-08ea001f8df2
2025-01-18 17:56:03,081 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737244558466082, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 17:56:03,081 - DEBUG - Cache Entry: (0, 1737244558413556, 0)
2025-01-18 17:56:03,081 - DEBUG - deserialize {'id': 0, 'timestamp': 1737244558466082, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 17:56:03,082 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 17:56:03,082 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:03,082 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:03,082 - DEBUG - deserialize_json_dict() returns
2025-01-18 17:56:03,082 - DEBUG - Cache Entry: (0, 1737244558466082, 0)
2025-01-18 17:56:03,082 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:03,082 - DEBUG - sfqid: 01b9cddb-0002-4c71-0007-08ea001f8df2
2025-01-18 17:56:03,082 - DEBUG - query execution done
2025-01-18 17:56:03,082 - DEBUG - SUCCESS
2025-01-18 17:56:03,082 - DEBUG - PUT OR GET: False
2025-01-18 17:56:03,082 - DEBUG - Query result format: arrow
2025-01-18 17:56:03,082 - INFO - Number of results in first chunk: 0
2025-01-18 17:56:03,083 - DEBUG - executing SQL/command
2025-01-18 17:56:03,083 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 17:56:03,083 - DEBUG - sequence counter: 6
2025-01-18 17:56:03,083 - DEBUG - Request id: 68dc4c88-aede-44eb-a7ce-e5ebeb2cdad3
2025-01-18 17:56:03,084 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 17:56:03,084 - DEBUG - is_file_transfer: True
2025-01-18 17:56:03,084 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:03,084 - DEBUG - _cmd_query
2025-01-18 17:56:03,084 - DEBUG - serialize_to_dict() called
2025-01-18 17:56:03,084 - DEBUG - Cache Entry: (0, 1737244558466082, 0)
2025-01-18 17:56:03,084 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737244558466082, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 17:56:03,084 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[6], is_file_transfer=[False]
2025-01-18 17:56:03,085 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 17:56:03,085 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 17:56:03,085 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 17:56:03,085 - DEBUG - Request guid: 3805ff9f-8a91-46a0-9fe2-56a473362830
2025-01-18 17:56:03,085 - DEBUG - socket timeout: 60
2025-01-18 17:56:03,243 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=68dc4c88-aede-44eb-a7ce-e5ebeb2cdad3&request_guid=3805ff9f-8a91-46a0-9fe2-56a473362830 HTTP/1.1" 200 2619
2025-01-18 17:56:03,244 - DEBUG - SUCCESS
2025-01-18 17:56:03,244 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 17:56:03,244 - DEBUG - ret[code] = None, after post request
2025-01-18 17:56:03,244 - DEBUG - Query id: 01b9cddb-0002-4c78-0007-08ea001f7e7e
2025-01-18 17:56:03,244 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737244558648902, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 17:56:03,244 - DEBUG - Cache Entry: (0, 1737244558466082, 0)
2025-01-18 17:56:03,244 - DEBUG - deserialize {'id': 0, 'timestamp': 1737244558648902, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 17:56:03,244 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 17:56:03,244 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:03,244 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:03,244 - DEBUG - deserialize_json_dict() returns
2025-01-18 17:56:03,245 - DEBUG - Cache Entry: (0, 1737244558648902, 0)
2025-01-18 17:56:03,245 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:03,245 - DEBUG - sfqid: 01b9cddb-0002-4c78-0007-08ea001f7e7e
2025-01-18 17:56:03,245 - DEBUG - query execution done
2025-01-18 17:56:03,245 - DEBUG - SUCCESS
2025-01-18 17:56:03,245 - DEBUG - PUT OR GET: False
2025-01-18 17:56:03,245 - DEBUG - Query result format: arrow
2025-01-18 17:56:03,245 - INFO - Number of results in first chunk: 54
2025-01-18 17:56:03,245 - DEBUG - Execute query [queryID: 01b9cddb-0002-4c78-0007-08ea001f7e7e]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 17:56:03,245 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 17:56:03,245 - DEBUG - Arrow BatchSize: 1
2025-01-18 17:56:03,245 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 17:56:03,245 - DEBUG - Batches read: 0
2025-01-18 17:56:03,245 - DEBUG - beginning to schedule result batch downloads
2025-01-18 17:56:03,245 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 17:56:13,820 - DEBUG - cursor
2025-01-18 17:56:13,821 - INFO - Snowpark Session information: 
"version" : 1.26.0,
"python.version" : 3.10.11,
"python.connector.version" : 3.12.4,
"python.connector.session.id" : 1980125954378850,
"os.name" : Windows

2025-01-18 17:56:13,821 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x000002606B4F0550>
2025-01-18 17:56:13,821 - INFO - Querying the server for client info
2025-01-18 17:56:13,821 - DEBUG - cursor
2025-01-18 17:56:13,822 - DEBUG - executing SQL/command
2025-01-18 17:56:13,822 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 17:56:13,822 - DEBUG - sequence counter: 7
2025-01-18 17:56:13,822 - DEBUG - Request id: 71ebec52-56c7-4ad2-856a-bdb262459e51
2025-01-18 17:56:13,822 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 17:56:13,822 - DEBUG - is_file_transfer: True
2025-01-18 17:56:13,822 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:13,822 - DEBUG - _cmd_query
2025-01-18 17:56:13,823 - DEBUG - serialize_to_dict() called
2025-01-18 17:56:13,823 - DEBUG - Cache Entry: (0, 1737244558648902, 0)
2025-01-18 17:56:13,823 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737244558648902, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 17:56:13,823 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[7], is_file_transfer=[False]
2025-01-18 17:56:13,824 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 17:56:13,824 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 17:56:13,824 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 17:56:13,824 - DEBUG - Request guid: da29b424-cbba-46f0-b627-92d99efb4a6d
2025-01-18 17:56:13,824 - DEBUG - socket timeout: 60
2025-01-18 17:56:13,942 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=71ebec52-56c7-4ad2-856a-bdb262459e51&request_guid=da29b424-cbba-46f0-b627-92d99efb4a6d HTTP/1.1" 200 2619
2025-01-18 17:56:13,943 - DEBUG - SUCCESS
2025-01-18 17:56:13,943 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 17:56:13,943 - DEBUG - ret[code] = None, after post request
2025-01-18 17:56:13,943 - DEBUG - Query id: 01b9cddc-0002-4c76-0007-08ea001fbb16
2025-01-18 17:56:13,943 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737244569349305, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 17:56:13,943 - DEBUG - Cache Entry: (0, 1737244558648902, 0)
2025-01-18 17:56:13,943 - DEBUG - deserialize {'id': 0, 'timestamp': 1737244569349305, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 17:56:13,943 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 17:56:13,944 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:13,944 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:13,944 - DEBUG - deserialize_json_dict() returns
2025-01-18 17:56:13,944 - DEBUG - Cache Entry: (0, 1737244569349305, 0)
2025-01-18 17:56:13,944 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:13,944 - DEBUG - sfqid: 01b9cddc-0002-4c76-0007-08ea001fbb16
2025-01-18 17:56:13,944 - DEBUG - query execution done
2025-01-18 17:56:13,944 - DEBUG - SUCCESS
2025-01-18 17:56:13,944 - DEBUG - PUT OR GET: False
2025-01-18 17:56:13,944 - DEBUG - Query result format: arrow
2025-01-18 17:56:13,944 - INFO - Number of results in first chunk: 1
2025-01-18 17:56:13,944 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 17:56:13,944 - DEBUG - Arrow BatchSize: 1
2025-01-18 17:56:13,944 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 17:56:13,944 - DEBUG - Batches read: 0
2025-01-18 17:56:13,944 - DEBUG - beginning to schedule result batch downloads
2025-01-18 17:56:13,944 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 17:56:13,945 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x000002606AF72740>, telemetry enabled: True
2025-01-18 17:56:13,945 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 17:56:13,945 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 17:56:13,945 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 17:56:13,945 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 17:56:13,949 - DEBUG - executing SQL/command
2025-01-18 17:56:13,949 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 17:56:13,949 - DEBUG - sequence counter: 8
2025-01-18 17:56:13,949 - DEBUG - Request id: e05f3847-ba60-4dd3-9a60-ee2708665ade
2025-01-18 17:56:13,949 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 17:56:13,949 - DEBUG - is_file_transfer: True
2025-01-18 17:56:13,949 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:13,949 - DEBUG - _cmd_query
2025-01-18 17:56:13,949 - DEBUG - serialize_to_dict() called
2025-01-18 17:56:13,949 - DEBUG - Cache Entry: (0, 1737244569349305, 0)
2025-01-18 17:56:13,949 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737244569349305, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 17:56:13,950 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[8], is_file_transfer=[False]
2025-01-18 17:56:13,950 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 17:56:13,951 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 17:56:13,951 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 17:56:13,951 - DEBUG - Request guid: 90e68a77-84c7-4aed-b636-1e4c0231bb27
2025-01-18 17:56:13,951 - DEBUG - socket timeout: 60
2025-01-18 17:56:14,008 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=e05f3847-ba60-4dd3-9a60-ee2708665ade&request_guid=90e68a77-84c7-4aed-b636-1e4c0231bb27 HTTP/1.1" 200 1502
2025-01-18 17:56:14,008 - DEBUG - SUCCESS
2025-01-18 17:56:14,008 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 17:56:14,008 - DEBUG - ret[code] = None, after post request
2025-01-18 17:56:14,008 - DEBUG - Query id: 01b9cddc-0002-4c78-0007-08ea001f7e8a
2025-01-18 17:56:14,008 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737244569413047, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 17:56:14,008 - DEBUG - Cache Entry: (0, 1737244569349305, 0)
2025-01-18 17:56:14,009 - DEBUG - deserialize {'id': 0, 'timestamp': 1737244569413047, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 17:56:14,009 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 17:56:14,009 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:14,009 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:14,009 - DEBUG - deserialize_json_dict() returns
2025-01-18 17:56:14,009 - DEBUG - Cache Entry: (0, 1737244569413047, 0)
2025-01-18 17:56:14,009 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:14,009 - DEBUG - sfqid: 01b9cddc-0002-4c78-0007-08ea001f7e8a
2025-01-18 17:56:14,009 - DEBUG - query execution done
2025-01-18 17:56:14,009 - DEBUG - SUCCESS
2025-01-18 17:56:14,009 - DEBUG - PUT OR GET: False
2025-01-18 17:56:14,009 - DEBUG - Query result format: arrow
2025-01-18 17:56:14,009 - INFO - Number of results in first chunk: 0
2025-01-18 17:56:14,011 - DEBUG - executing SQL/command
2025-01-18 17:56:14,011 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 17:56:14,011 - DEBUG - sequence counter: 9
2025-01-18 17:56:14,011 - DEBUG - Request id: 637baddd-65ca-4bf3-94ba-e888f1f66e48
2025-01-18 17:56:14,011 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 17:56:14,011 - DEBUG - is_file_transfer: True
2025-01-18 17:56:14,011 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:14,011 - DEBUG - _cmd_query
2025-01-18 17:56:14,011 - DEBUG - serialize_to_dict() called
2025-01-18 17:56:14,011 - DEBUG - Cache Entry: (0, 1737244569413047, 0)
2025-01-18 17:56:14,011 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737244569413047, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 17:56:14,011 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[9], is_file_transfer=[False]
2025-01-18 17:56:14,012 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 17:56:14,012 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 17:56:14,012 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 17:56:14,012 - DEBUG - Request guid: 12c54369-198d-4566-9b77-328df5143043
2025-01-18 17:56:14,012 - DEBUG - socket timeout: 60
2025-01-18 17:56:14,074 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=637baddd-65ca-4bf3-94ba-e888f1f66e48&request_guid=12c54369-198d-4566-9b77-328df5143043 HTTP/1.1" 200 1375
2025-01-18 17:56:14,075 - DEBUG - SUCCESS
2025-01-18 17:56:14,075 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 17:56:14,075 - DEBUG - ret[code] = None, after post request
2025-01-18 17:56:14,075 - DEBUG - Query id: 01b9cddc-0002-4c72-0007-08ea001faca6
2025-01-18 17:56:14,075 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737244569471059, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 17:56:14,075 - DEBUG - Cache Entry: (0, 1737244569413047, 0)
2025-01-18 17:56:14,075 - DEBUG - deserialize {'id': 0, 'timestamp': 1737244569471059, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 17:56:14,075 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 17:56:14,075 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:14,075 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:14,075 - DEBUG - deserialize_json_dict() returns
2025-01-18 17:56:14,075 - DEBUG - Cache Entry: (0, 1737244569471059, 0)
2025-01-18 17:56:14,075 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:14,076 - DEBUG - sfqid: 01b9cddc-0002-4c72-0007-08ea001faca6
2025-01-18 17:56:14,076 - DEBUG - query execution done
2025-01-18 17:56:14,076 - DEBUG - SUCCESS
2025-01-18 17:56:14,076 - DEBUG - PUT OR GET: False
2025-01-18 17:56:14,076 - DEBUG - Query result format: arrow
2025-01-18 17:56:14,076 - INFO - Number of results in first chunk: 0
2025-01-18 17:56:14,077 - DEBUG - executing SQL/command
2025-01-18 17:56:14,077 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 17:56:14,077 - DEBUG - sequence counter: 10
2025-01-18 17:56:14,077 - DEBUG - Request id: 304495cd-3088-42d2-a700-7b9719cab82e
2025-01-18 17:56:14,077 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 17:56:14,077 - DEBUG - is_file_transfer: True
2025-01-18 17:56:14,077 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:14,077 - DEBUG - _cmd_query
2025-01-18 17:56:14,077 - DEBUG - serialize_to_dict() called
2025-01-18 17:56:14,077 - DEBUG - Cache Entry: (0, 1737244569471059, 0)
2025-01-18 17:56:14,077 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737244569471059, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 17:56:14,077 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[10], is_file_transfer=[False]
2025-01-18 17:56:14,078 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 17:56:14,078 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 17:56:14,078 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 17:56:14,078 - DEBUG - Request guid: b7233597-4fa5-43ff-bd0e-cffc9fd7b8e3
2025-01-18 17:56:14,078 - DEBUG - socket timeout: 60
2025-01-18 17:56:14,137 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=304495cd-3088-42d2-a700-7b9719cab82e&request_guid=b7233597-4fa5-43ff-bd0e-cffc9fd7b8e3 HTTP/1.1" 200 1375
2025-01-18 17:56:14,138 - DEBUG - SUCCESS
2025-01-18 17:56:14,138 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 17:56:14,139 - DEBUG - ret[code] = None, after post request
2025-01-18 17:56:14,139 - DEBUG - Query id: 01b9cddc-0002-4c79-0007-08ea001f6efa
2025-01-18 17:56:14,139 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737244569539198, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 17:56:14,139 - DEBUG - Cache Entry: (0, 1737244569471059, 0)
2025-01-18 17:56:14,139 - DEBUG - deserialize {'id': 0, 'timestamp': 1737244569539198, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 17:56:14,139 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 17:56:14,139 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:14,139 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:14,139 - DEBUG - deserialize_json_dict() returns
2025-01-18 17:56:14,139 - DEBUG - Cache Entry: (0, 1737244569539198, 0)
2025-01-18 17:56:14,139 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:14,139 - DEBUG - sfqid: 01b9cddc-0002-4c79-0007-08ea001f6efa
2025-01-18 17:56:14,139 - DEBUG - query execution done
2025-01-18 17:56:14,139 - DEBUG - SUCCESS
2025-01-18 17:56:14,139 - DEBUG - PUT OR GET: False
2025-01-18 17:56:14,139 - DEBUG - Query result format: arrow
2025-01-18 17:56:14,139 - INFO - Number of results in first chunk: 0
2025-01-18 17:56:14,140 - DEBUG - executing SQL/command
2025-01-18 17:56:14,140 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 17:56:14,140 - DEBUG - sequence counter: 11
2025-01-18 17:56:14,140 - DEBUG - Request id: 66011632-d33a-4746-b74d-d8bb9a5a9fc2
2025-01-18 17:56:14,140 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 17:56:14,140 - DEBUG - is_file_transfer: True
2025-01-18 17:56:14,140 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:14,140 - DEBUG - _cmd_query
2025-01-18 17:56:14,140 - DEBUG - serialize_to_dict() called
2025-01-18 17:56:14,140 - DEBUG - Cache Entry: (0, 1737244569539198, 0)
2025-01-18 17:56:14,140 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737244569539198, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 17:56:14,141 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[11], is_file_transfer=[False]
2025-01-18 17:56:14,141 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 17:56:14,141 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 17:56:14,141 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 17:56:14,141 - DEBUG - Request guid: b938ef9b-613d-422d-aa79-5ad0b4b536d8
2025-01-18 17:56:14,142 - DEBUG - socket timeout: 60
2025-01-18 17:56:14,300 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=66011632-d33a-4746-b74d-d8bb9a5a9fc2&request_guid=b938ef9b-613d-422d-aa79-5ad0b4b536d8 HTTP/1.1" 200 2619
2025-01-18 17:56:14,300 - DEBUG - SUCCESS
2025-01-18 17:56:14,300 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 17:56:14,301 - DEBUG - ret[code] = None, after post request
2025-01-18 17:56:14,301 - DEBUG - Query id: 01b9cddc-0002-4c72-0007-08ea001facaa
2025-01-18 17:56:14,301 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737244569704749, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 17:56:14,301 - DEBUG - Cache Entry: (0, 1737244569539198, 0)
2025-01-18 17:56:14,301 - DEBUG - deserialize {'id': 0, 'timestamp': 1737244569704749, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 17:56:14,301 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 17:56:14,301 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:14,301 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 17:56:14,301 - DEBUG - deserialize_json_dict() returns
2025-01-18 17:56:14,301 - DEBUG - Cache Entry: (0, 1737244569704749, 0)
2025-01-18 17:56:14,301 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 17:56:14,301 - DEBUG - sfqid: 01b9cddc-0002-4c72-0007-08ea001facaa
2025-01-18 17:56:14,301 - DEBUG - query execution done
2025-01-18 17:56:14,301 - DEBUG - SUCCESS
2025-01-18 17:56:14,301 - DEBUG - PUT OR GET: False
2025-01-18 17:56:14,301 - DEBUG - Query result format: arrow
2025-01-18 17:56:14,301 - INFO - Number of results in first chunk: 54
2025-01-18 17:56:14,301 - DEBUG - Execute query [queryID: 01b9cddc-0002-4c72-0007-08ea001facaa]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 17:56:14,301 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 17:56:14,301 - DEBUG - Arrow BatchSize: 1
2025-01-18 17:56:14,301 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 17:56:14,302 - DEBUG - Batches read: 0
2025-01-18 17:56:14,302 - DEBUG - beginning to schedule result batch downloads
2025-01-18 17:56:14,302 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 17:56:14,310 - DEBUG - Sending 1 logs to telemetry. Data is {'logs': [{'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_imported_packages', 'value': "{'webbrowser', 'pyarrow', 'OpenSSL', 'xml', 'urllib', 'pythoncom', 'stat', 'site', 'builtins', 'absl', 'hmac', 'requests', 'sniffio', 'platform', 'httpx', 'base64', 'gzip', 'cachetools', 'cryptography', 'subprocess', 'pyexpat', 'pkgutil', 'pydantic', 'time', 'tomlkit', 'platformdirs', 'zipimport', 'array', 'errno', 'heapq', 'git', 'mmap', 'pywin32_bootstrap', 'signal', 'getpass', 'dis', 'tzlocal', 'email', 'pprint', 'smmap', 'pygments', 'idna', 'msvcrt', 'collections', 'select', 'tokenize', 'fractions', 'filelock', 'hashlib', 'numbers', 'sortedcontainers', 'shlex', 'runpy', 'asyncio', 'importlib', 'genericpath', 'fnmatch', 'yaml', 'http', 'copy', 'click', 'logging', 'contextlib', 'traceback', 'linecache', 'textwrap', 'decimal', 'gc', 'streamlit', 'plotly', 'packaging', 'win32com', 'tornado', 'nturl2path', 'gettext', 'ctypes', 'shutil', 'operator', 'os', 'snowflake', 'token', 'sys', 'copyreg', 'cython_runtime', 'urllib3', 'anyio', 'gitdb', 'inspect', 'six', 're', 'annotated_types', 'glob', 'concurrent', 'attr', 'winreg', 'queue', 'struct', 'configparser', 'keyword', 'cloudpickle', 'weakref', 'charset_normalizer', 'types', 'enum', 'zipfile', 'reprlib', 'tarfile', 'lzma', 'getopt', 'ntpath', 'ssl', 'public', 'pandas', 'datetime', 'pywintypes', 'uuid', 'sre_constants', 'dataclasses', 'contextvars', 'jwt', 'abc', 'colorsys', 'pickle', 'tempfile', 'threading', 'sre_compile', 'openai', 'unicodedata', 'binascii', 'multiprocessing', 'dateutil', 'asn1crypto', 'io', 'plistlib', 'itertools', 'selectors', 'rich', 'zlib', 'marshal', 'string', 'sre_parse', 'pydoc', 'zoneinfo', 'atexit', 'functools', 'typing', 'posixpath', 'calendar', 'blinker', 'locale', 'watchdog', 'typing_extensions', 'opcode', 'jiter', 'pathlib', 'ipaddress', 'pytz', 'argparse', 'bz2', 'unittest', 'json', 'win32api', 'secrets', 'cmath', 'certifi', 'socket', 'timeit', 'google', 'codecs', 'stringprep', 'encodings', 'statistics', 'html', 'nt', 'numpy', 'difflib', 'uu', 'warnings', 'mimetypes', 'csv', 'random', 'colorama', 'ast', 'PIL', 'pywin32_system32', 'quopri', 'distro', 'sysconfig', 'math', 'pkg_resources', 'bisect', 'pydantic_core', 'toml'}"}, 'timestamp': '1737244562200'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_session_created', 'data': {'start_time': 1737244562201, 'created_by_snowpark': 0}}, 'timestamp': '1737244562201'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954378850, 'thread_ident': 12828}}, 'timestamp': '1737244562201'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cddb-0002-4c72-0007-08ea001fac9e', 'value': 4588}, 'timestamp': '1737244562379'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cddb-0002-4c79-0007-08ea001f6ef6', 'value': 4587}, 'timestamp': '1737244562856'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cddb-0002-4c79-0007-08ea001f6ef6', 'value': 1}, 'timestamp': '1737244562857'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '0d9fb17c-1394-4d25-bcd0-542e4d648d46', 'query_plan_complexity': {'column': 1}, 'thread_ident': 12828}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cddb-0002-4c79-0007-08ea001f6ef6']}}, 'timestamp': '1737244562857'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cddb-0002-4c70-0007-08ea001f9d56', 'value': 4586}, 'timestamp': '1737244562951'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954378850, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.08742427825927734, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737244562951'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cddb-0002-4c70-0007-08ea001f9d5a', 'value': 4584}, 'timestamp': '1737244563011'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954378850, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.059403181076049805, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737244563012'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cddb-0002-4c71-0007-08ea001f8df2', 'value': 4585}, 'timestamp': '1737244563082'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954378850, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.07045936584472656, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737244563082'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cddb-0002-4c78-0007-08ea001f7e7e', 'value': 4587}, 'timestamp': '1737244563245'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cddb-0002-4c78-0007-08ea001f7e7e', 'value': 0}, 'timestamp': '1737244563245'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'a5a96575-41c0-4306-8ef5-0da84c473c70', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 12828}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cddb-0002-4c78-0007-08ea001f7e7e']}}, 'timestamp': '1737244563246'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_session_created', 'data': {'start_time': 1737244573820, 'created_by_snowpark': 0}}, 'timestamp': '1737244573820'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954378850, 'thread_ident': 7448}}, 'timestamp': '1737244573821'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cddc-0002-4c76-0007-08ea001fbb16', 'value': 4586}, 'timestamp': '1737244573944'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cddc-0002-4c78-0007-08ea001f7e8a', 'value': 4585}, 'timestamp': '1737244574009'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954378850, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.06060957908630371, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737244574010'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cddc-0002-4c72-0007-08ea001faca6', 'value': 4585}, 'timestamp': '1737244574076'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954378850, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.0654900074005127, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737244574076'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cddc-0002-4c79-0007-08ea001f6efa', 'value': 4591}, 'timestamp': '1737244574139'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954378850, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.06175398826599121, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737244574139'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cddc-0002-4c72-0007-08ea001facaa', 'value': 4585}, 'timestamp': '1737244574301'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cddc-0002-4c72-0007-08ea001facaa', 'value': 1}, 'timestamp': '1737244574302'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'a7b04203-65c1-4b2f-b55d-2922a646b07a', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 7448}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cddc-0002-4c72-0007-08ea001facaa']}}, 'timestamp': '1737244574302'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}, 'error_info': 'SnowflakeMLException(\'SnowparkSessionException("(1300) (1409): More than one active session is detected. When you call function \\\'udf\\\' or use decorator \\\'@udf\\\', you must specify the \\\'session\\\' parameter if you created multiple sessions.Alternatively, you can use \\\'session.udf.register\\\' to register UDFs", None)\')', 'error_code': '1300'}, 'timestamp': '1737244574307'}]}.
2025-01-18 17:56:14,312 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\ml\_internal\telemetry.py", line 542, in wrap
    return ctx.run(execute_func_with_statement_params)
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\ml\_internal\telemetry.py", line 503, in execute_func_with_statement_params
    result = func(*args, **kwargs)
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\cortex\_complete.py", line 323, in Complete
    return _complete_impl(
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\cortex\_complete.py", line 288, in _complete_impl
    return _complete_non_streaming_impl(function, model, prompt, options, session, deadline)
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\cortex\_complete.py", line 248, in _complete_non_streaming_impl
    return _complete_non_streaming_immediate(
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\cortex\_complete.py", line 227, in _complete_non_streaming_immediate
    response = _complete_rest(model=model, prompt=prompt, options=options, session=session, deadline=deadline)
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\cortex\_complete.py", line 263, in _complete_rest
    response = _call_complete_rest(model=model, prompt=prompt, options=options, session=session, deadline=deadline)
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\cortex\_complete.py", line 70, in inner
    response = func(*args, **kwargs)
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\cortex\_complete.py", line 167, in _call_complete_rest
    session = session or context.get_active_session()
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\snowpark\context.py", line 32, in get_active_session
    return snowflake.snowpark.session._get_active_session()
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\snowpark\session.py", line 282, in _get_active_session
    raise SnowparkClientExceptionMessages.MORE_THAN_ONE_ACTIVE_SESSIONS()
snowflake.snowpark.exceptions.SnowparkSessionException: (1409): More than one active session is detected. When you call function 'udf' or use decorator '@udf', you must specify the 'session' parameter if you created multiple sessions.Alternatively, you can use 'session.udf.register' to register UDFs

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 17:56:14,326 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 17:56:14,326 - DEBUG - remaining request timeout: 5000 ms, retry cnt: 1
2025-01-18 17:56:14,326 - DEBUG - Request guid: fda27180-b065-4c9d-9456-08c85efa0e19
2025-01-18 17:56:14,326 - DEBUG - socket timeout: 60
2025-01-18 17:56:14,394 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /telemetry/send?request_guid=fda27180-b065-4c9d-9456-08c85efa0e19 HTTP/1.1" 200 86
2025-01-18 17:56:14,395 - DEBUG - SUCCESS
2025-01-18 17:56:14,396 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 17:56:14,396 - DEBUG - ret[code] = None, after post request
2025-01-18 17:56:14,396 - DEBUG - Successfully uploading metrics to telemetry.
2025-01-18 17:57:13,083 - INFO - Closing session: 1980125954378850
2025-01-18 17:57:13,083 - INFO - Canceling all running queries
2025-01-18 17:57:13,083 - DEBUG - cursor
2025-01-18 17:57:13,083 - DEBUG - executing SQL/command
2025-01-18 17:57:13,083 - DEBUG - query: [select system$cancel_all_queries(1980125954378850)]
2025-01-18 17:57:13,083 - DEBUG - sequence counter: 12
2025-01-18 17:57:13,083 - DEBUG - Request id: 57ac619e-be6a-446f-8ae3-e57b761c761b
2025-01-18 17:57:13,083 - DEBUG - running query [select system$cancel_all_queries(1980125954378850)]
2025-01-18 17:57:13,083 - DEBUG - is_file_transfer: True
2025-01-18 17:57:13,083 - DEBUG - _cmd_query
2025-01-18 17:57:13,083 - DEBUG - serialize_to_dict() called
2025-01-18 17:57:13,083 - DEBUG - Cache Entry: (0, 1737244569704749, 0)
2025-01-18 17:57:13,084 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737244569704749, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 17:57:13,084 - DEBUG - sql=[select system$cancel_all_queries(1980125954378850)], sequence_id=[12], is_file_transfer=[False]
2025-01-18 17:57:13,084 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 17:57:13,084 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 17:57:13,085 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 17:57:13,085 - DEBUG - Request guid: 38c8090b-74d6-4969-809e-c70803962ea3
2025-01-18 17:57:13,085 - DEBUG - socket timeout: 60
2025-01-18 17:57:13,173 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=57ac619e-be6a-446f-8ae3-e57b761c761b&request_guid=38c8090b-74d6-4969-809e-c70803962ea3 HTTP/1.1" 200 1762
2025-01-18 17:57:13,174 - DEBUG - SUCCESS
2025-01-18 17:57:13,174 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 17:57:13,174 - DEBUG - ret[code] = None, after post request
2025-01-18 17:57:13,174 - DEBUG - Query id: 01b9cddd-0002-4c72-0007-08ea001facb2
2025-01-18 17:57:13,175 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737244628572097, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 17:57:13,175 - DEBUG - Cache Entry: (0, 1737244569704749, 0)
2025-01-18 17:57:13,175 - DEBUG - deserialize {'id': 0, 'timestamp': 1737244628572097, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 17:57:13,175 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 17:57:13,175 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 17:57:13,175 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 17:57:13,175 - DEBUG - deserialize_json_dict() returns
2025-01-18 17:57:13,175 - DEBUG - Cache Entry: (0, 1737244628572097, 0)
2025-01-18 17:57:13,175 - DEBUG - sfqid: 01b9cddd-0002-4c72-0007-08ea001facb2
2025-01-18 17:57:13,175 - DEBUG - query execution done
2025-01-18 17:57:13,175 - DEBUG - SUCCESS
2025-01-18 17:57:13,175 - DEBUG - PUT OR GET: False
2025-01-18 17:57:13,175 - DEBUG - Query result format: arrow
2025-01-18 17:57:13,176 - INFO - Number of results in first chunk: 1
2025-01-18 17:57:13,176 - DEBUG - Execute query [queryID: 01b9cddd-0002-4c72-0007-08ea001facb2] select system$cancel_all_queries(1980125954378850)
2025-01-18 17:57:13,176 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 17:57:13,176 - DEBUG - Arrow BatchSize: 1
2025-01-18 17:57:13,176 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 17:57:13,176 - DEBUG - Batches read: 0
2025-01-18 17:57:13,176 - DEBUG - beginning to schedule result batch downloads
2025-01-18 17:57:13,176 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 17:57:13,176 - INFO - closed
2025-01-18 17:57:13,176 - DEBUG - Closing telemetry client.
2025-01-18 17:57:13,176 - DEBUG - Sending 1 logs to telemetry. Data is {'logs': [{'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954378850, 'thread_ident': 20500}}, 'timestamp': '1737244633083'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cddd-0002-4c72-0007-08ea001facb2', 'value': 4586}, 'timestamp': '1737244633175'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cddd-0002-4c72-0007-08ea001facb2', 'value': 1}, 'timestamp': '1737244633176'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_temp_table_cleanup', 'data': {'session_id': 1980125954378850, 'temp_table_cleaner_enabled': False, 'num_temp_tables_cleaned': 0, 'num_temp_tables_created': 0}}, 'timestamp': '1737244633176'}]}.
2025-01-18 17:57:13,177 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 17:57:13,177 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 17:57:13,177 - DEBUG - remaining request timeout: 5000 ms, retry cnt: 1
2025-01-18 17:57:13,177 - DEBUG - Request guid: b0a48393-bea7-4b84-88ea-009b8c83e7dc
2025-01-18 17:57:13,177 - DEBUG - socket timeout: 60
2025-01-18 17:57:13,230 - DEBUG - Hit retryable client error. Retrying... Ignore the following error stack: Event loop is closed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 1080, in _request_exec
    raw_ret = session.request(
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\vendored\requests\sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\vendored\requests\sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\vendored\requests\adapters.py", line 486, in send
    resp = conn.urlopen(
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\vendored\urllib3\connectionpool.py", line 715, in urlopen
    httplib_response = self._make_request(
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\vendored\urllib3\connectionpool.py", line 467, in _make_request
    six.raise_from(e, None)
  File "<string>", line 3, in raise_from
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\vendored\urllib3\connectionpool.py", line 462, in _make_request
    httplib_response = conn.getresponse()
  File "C:\Users\ajjay\AppData\Local\Programs\Python\Python310\lib\http\client.py", line 1375, in getresponse
    response.begin()
  File "C:\Users\ajjay\AppData\Local\Programs\Python\Python310\lib\http\client.py", line 318, in begin
    version, status, reason = self._read_status()
  File "C:\Users\ajjay\AppData\Local\Programs\Python\Python310\lib\http\client.py", line 279, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "C:\Users\ajjay\AppData\Local\Programs\Python\Python310\lib\socket.py", line 705, in readinto
    return self._sock.recv_into(b)
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\vendored\urllib3\contrib\pyopenssl.py", line 330, in recv_into
    if not util.wait_for_read(self.socket, self.socket.gettimeout()):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\vendored\urllib3\util\wait.py", line 145, in wait_for_read
    return wait_for_socket(sock, read=True, timeout=timeout)
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\vendored\urllib3\util\wait.py", line 85, in select_wait_for_socket
    rready, wready, xready = _retry_on_intr(fn, timeout)
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\vendored\urllib3\util\wait.py", line 43, in _retry_on_intr
    return fn(timeout)
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\streamlit\web\bootstrap.py", line 44, in signal_handler
    server.stop()
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\streamlit\web\server\server.py", line 432, in stop
    self._runtime.stop()
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\streamlit\runtime\runtime.py", line 324, in stop
    async_objs.eventloop.call_soon_threadsafe(stop_on_eventloop)
  File "C:\Users\ajjay\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py", line 798, in call_soon_threadsafe
    self._check_closed()
  File "C:\Users\ajjay\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py", line 515, in _check_closed
    raise RuntimeError('Event loop is closed')
RuntimeError: Event loop is closed
2025-01-18 17:57:13,315 - DEBUG - retrying: errorclass=<class 'RuntimeError'>, error=Event loop is closed, counter=1, sleeping=1(s)
2025-01-18 17:57:14,327 - DEBUG - Update retry count to 1
2025-01-18 17:57:14,327 - DEBUG - Update sleep time to 2 seconds
2025-01-18 17:57:14,327 - DEBUG - remaining request timeout: 3850 ms, retry cnt: 2
2025-01-18 17:57:14,327 - DEBUG - Request guid: ebaa2973-da88-42a8-a0ea-ea6984b12b7e
2025-01-18 17:57:14,327 - DEBUG - socket timeout: 60
2025-01-18 17:57:14,328 - DEBUG - Starting new HTTPS connection (2): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 17:57:14,793 - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None
2025-01-18 17:57:14,793 - DEBUG - ocsp_response_cache_uri: file://C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 17:57:14,793 - DEBUG - OCSP_VALIDATION_CACHE size: 310
2025-01-18 17:57:14,793 - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 17:57:14,793 - DEBUG - OCSP dynamic cache server RETRY URL: None
2025-01-18 17:57:14,793 - DEBUG - validating certificate: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 17:57:14,793 - DEBUG - # of certificates: 4
2025-01-18 17:57:14,794 - DEBUG - subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 17:57:14,794 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 17:57:14,795 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 17:57:14,796 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 17:57:14,798 - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 17:57:14,799 - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])
2025-01-18 17:57:14,800 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 17:57:14,800 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 17:57:14,801 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 17:57:14,803 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 17:57:14,804 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 17:57:14,804 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 17:57:14,806 - DEBUG - ok
2025-01-18 17:57:14,869 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /telemetry/send?request_guid=ebaa2973-da88-42a8-a0ea-ea6984b12b7e HTTP/1.1" 200 86
2025-01-18 17:57:14,869 - DEBUG - SUCCESS
2025-01-18 17:57:14,869 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 17:57:14,869 - DEBUG - ret[code] = None, after post request
2025-01-18 17:57:14,869 - DEBUG - Successfully uploading metrics to telemetry.
2025-01-18 17:57:14,869 - INFO - No async queries seem to be running, deleting session
2025-01-18 17:57:14,869 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 17:57:14,869 - DEBUG - remaining request timeout: 5000 ms, retry cnt: 1
2025-01-18 17:57:14,869 - DEBUG - Request guid: c1cd7158-ccd3-439f-b70e-ca7fd9f17f45
2025-01-18 17:57:14,870 - DEBUG - socket timeout: 60
2025-01-18 17:57:14,979 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /session?delete=true&request_guid=c1cd7158-ccd3-439f-b70e-ca7fd9f17f45 HTTP/1.1" 200 76
2025-01-18 17:57:14,979 - DEBUG - SUCCESS
2025-01-18 17:57:14,979 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 17:57:14,979 - DEBUG - ret[code] = None, after post request
2025-01-18 17:57:14,981 - DEBUG - clear_cache() called
2025-01-18 17:57:14,981 - DEBUG - Session is closed
2025-01-18 17:57:14,981 - INFO - Closed session: 1980125954378850
2025-01-18 17:57:14,981 - DEBUG - No-op because session 1980125954378850 had been previously closed.
2025-01-18 17:57:14,981 - DEBUG - Rest object has been destroyed, cannot close session
2025-01-18 17:57:14,981 - INFO - Closed session: 1980125954378850
2025-01-18 18:03:43,549 - DEBUG - reading configuration file from C:\Users\ajjay\AppData\Local\snowflake\config.toml
2025-01-18 18:03:43,550 - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.10.11, Platform: Windows-10-10.0.22635-SP0
2025-01-18 18:03:43,550 - DEBUG - connect
2025-01-18 18:03:43,550 - DEBUG - __config
2025-01-18 18:03:43,550 - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:03:43,551 - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:03:43,551 - DEBUG - use_numpy: False
2025-01-18 18:03:43,551 - DEBUG - initialized
2025-01-18 18:03:43,551 - DEBUG - REST API object was created: gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:03:43,619 - DEBUG - Public key fingerprint is SHA256:MMhnSja/3AZz/s91ePEYdo5p27RfYwIdt7+BsyWAYGg=
2025-01-18 18:03:43,622 - DEBUG - authenticate
2025-01-18 18:03:43,622 - DEBUG - account=gmcpdcz-mt01740, user=preciousjunk, database=DEV_SRC_INGEST, schema=EPA_PROCESSED, warehouse=app_wh, role=app_role, request_id=fddaa27e-3b69-4d8b-a9c7-971d2bd65d50
2025-01-18 18:03:43,622 - DEBUG - body['data']: {'CLIENT_APP_ID': 'PythonConnector', 'CLIENT_APP_VERSION': '3.12.4', 'SVN_REVISION': None, 'ACCOUNT_NAME': 'gmcpdcz-mt01740', 'LOGIN_NAME': 'preciousjunk', 'CLIENT_ENVIRONMENT': {'APPLICATION': 'streamlit', 'OS': 'Windows', 'OS_VERSION': 'Windows-10-10.0.22635-SP0', 'PYTHON_VERSION': '3.10.11', 'PYTHON_RUNTIME': 'CPython', 'PYTHON_COMPILER': 'MSC v.1929 64 bit (AMD64)', 'OCSP_MODE': 'FAIL_OPEN', 'TRACING': 10, 'LOGIN_TIMEOUT': None, 'NETWORK_TIMEOUT': None, 'SOCKET_TIMEOUT': None}, 'AUTHENTICATOR': 'SNOWFLAKE_JWT', 'TOKEN': '******', 'SESSION_PARAMETERS': {'CLIENT_PREFETCH_THREADS': 4}}
2025-01-18 18:03:43,622 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 18:03:43,622 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 18:03:43,622 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:03:43,622 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:03:43,623 - DEBUG - Request guid: 607e7b76-c493-4c75-aa97-f71d5ed18918
2025-01-18 18:03:43,623 - DEBUG - socket timeout: 10
2025-01-18 18:03:43,624 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:03:44,056 - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None
2025-01-18 18:03:44,081 - DEBUG - cache directory: C:\Users\ajjay\AppData\Local\Snowflake\Caches
2025-01-18 18:03:44,082 - DEBUG - ocsp_response_cache_uri: file://C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 18:03:44,082 - DEBUG - OCSP_VALIDATION_CACHE size: 310
2025-01-18 18:03:44,082 - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 18:03:44,082 - DEBUG - OCSP dynamic cache server RETRY URL: None
2025-01-18 18:03:44,082 - DEBUG - validating certificate: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:03:44,082 - DEBUG - # of certificates: 4
2025-01-18 18:03:44,083 - DEBUG - subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:03:44,083 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:03:44,084 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:03:44,084 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:03:44,086 - DEBUG - reading certificate bundle: D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\certifi\cacert.pem
2025-01-18 18:03:44,098 - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:03:44,099 - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])
2025-01-18 18:03:44,101 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:03:44,101 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:03:44,103 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:03:44,103 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:03:44,104 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 18:03:44,105 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:03:44,107 - DEBUG - ok
2025-01-18 18:03:44,328 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /session/v1/login-request?request_id=fddaa27e-3b69-4d8b-a9c7-971d2bd65d50&databaseName=DEV_SRC_INGEST&schemaName=EPA_PROCESSED&warehouse=app_wh&roleName=app_role&request_guid=607e7b76-c493-4c75-aa97-f71d5ed18918 HTTP/1.1" 200 1777
2025-01-18 18:03:44,329 - DEBUG - SUCCESS
2025-01-18 18:03:44,329 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:03:44,329 - DEBUG - ret[code] = None, after post request
2025-01-18 18:03:44,329 - DEBUG - completed authentication
2025-01-18 18:03:44,330 - DEBUG - token = ******
2025-01-18 18:03:44,330 - DEBUG - master_token = ******
2025-01-18 18:03:44,330 - DEBUG - id_token = NULL
2025-01-18 18:03:44,330 - DEBUG - mfa_token = NULL
2025-01-18 18:03:44,331 - DEBUG - cursor
2025-01-18 18:03:44,332 - INFO - Snowpark Session information: 
"version" : 1.26.0,
"python.version" : 3.10.11,
"python.connector.version" : 3.12.4,
"python.connector.session.id" : 1980125954386450,
"os.name" : Windows

2025-01-18 18:03:44,332 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000218579EF100>
2025-01-18 18:03:44,333 - DEBUG - created a new SFPoolManager
2025-01-18 18:03:44,333 - INFO - Querying the server for client info
2025-01-18 18:03:44,333 - DEBUG - cursor
2025-01-18 18:03:44,333 - DEBUG - executing SQL/command
2025-01-18 18:03:44,333 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:03:44,333 - DEBUG - sequence counter: 1
2025-01-18 18:03:44,333 - DEBUG - Request id: aef4e551-648b-43f3-8e22-d9b19de6784c
2025-01-18 18:03:44,333 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:03:44,333 - DEBUG - is_file_transfer: True
2025-01-18 18:03:44,333 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:44,333 - DEBUG - _cmd_query
2025-01-18 18:03:44,333 - DEBUG - serialize_to_dict() called
2025-01-18 18:03:44,333 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[1], is_file_transfer=[False]
2025-01-18 18:03:44,334 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:03:44,335 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:03:44,335 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:03:44,335 - DEBUG - Request guid: 2a60963f-7969-4522-806b-f94abf74cc27
2025-01-18 18:03:44,335 - DEBUG - socket timeout: 60
2025-01-18 18:03:44,451 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=aef4e551-648b-43f3-8e22-d9b19de6784c&request_guid=2a60963f-7969-4522-806b-f94abf74cc27 HTTP/1.1" 200 2621
2025-01-18 18:03:44,452 - DEBUG - SUCCESS
2025-01-18 18:03:44,452 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:03:44,453 - DEBUG - ret[code] = None, after post request
2025-01-18 18:03:44,453 - DEBUG - Query id: 01b9cde3-0002-4c7a-0007-08ea001ff2d2
2025-01-18 18:03:44,453 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245019844578, 'priority': 0, 'context': 'COrjJA=='}]}
2025-01-18 18:03:44,453 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245019844578, 'priority': 0, 'context': 'COrjJA=='}
2025-01-18 18:03:44,453 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:03:44,453 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:44,453 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:44,453 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:03:44,453 - DEBUG - Cache Entry: (0, 1737245019844578, 0)
2025-01-18 18:03:44,453 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:44,453 - DEBUG - sfqid: 01b9cde3-0002-4c7a-0007-08ea001ff2d2
2025-01-18 18:03:44,453 - DEBUG - query execution done
2025-01-18 18:03:44,453 - DEBUG - SUCCESS
2025-01-18 18:03:44,454 - DEBUG - PUT OR GET: False
2025-01-18 18:03:44,454 - DEBUG - Query result format: arrow
2025-01-18 18:03:44,454 - INFO - Number of results in first chunk: 1
2025-01-18 18:03:44,454 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:03:44,454 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:03:44,454 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:03:44,454 - DEBUG - Batches read: 0
2025-01-18 18:03:44,454 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:03:44,454 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:03:44,455 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x000002185746E3B0>, telemetry enabled: True
2025-01-18 18:03:44,455 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:03:44,455 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:03:44,455 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:03:44,455 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:03:44,463 - DEBUG - executing SQL/command
2025-01-18 18:03:44,463 - DEBUG - query: [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:03:44,464 - DEBUG - sequence counter: 2
2025-01-18 18:03:44,464 - DEBUG - Request id: 2567308f-b6e3-4c60-9256-0e1bc83c063d
2025-01-18 18:03:44,464 - DEBUG - running query [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:03:44,464 - DEBUG - is_file_transfer: True
2025-01-18 18:03:44,464 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:44,464 - DEBUG - _cmd_query
2025-01-18 18:03:44,464 - DEBUG - serialize_to_dict() called
2025-01-18 18:03:44,464 - DEBUG - Cache Entry: (0, 1737245019844578, 0)
2025-01-18 18:03:44,464 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245019844578, 'priority': 0, 'context': {'base64Data': 'COrjJA=='}}]}
2025-01-18 18:03:44,464 - DEBUG - sql=[SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...], sequence_id=[2], is_file_transfer=[False]
2025-01-18 18:03:44,465 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:03:44,465 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:03:44,465 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:03:44,465 - DEBUG - Request guid: a6684546-e116-46d3-bf24-2a6cf1a4935b
2025-01-18 18:03:44,465 - DEBUG - socket timeout: 60
2025-01-18 18:03:44,593 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=2567308f-b6e3-4c60-9256-0e1bc83c063d&request_guid=a6684546-e116-46d3-bf24-2a6cf1a4935b HTTP/1.1" 200 2116
2025-01-18 18:03:44,593 - DEBUG - SUCCESS
2025-01-18 18:03:44,594 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:03:44,594 - DEBUG - ret[code] = None, after post request
2025-01-18 18:03:44,594 - DEBUG - Query id: 01b9cde3-0002-4c71-0007-08ea001f8e5a
2025-01-18 18:03:44,594 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245019983233, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 18:03:44,594 - DEBUG - Cache Entry: (0, 1737245019844578, 0)
2025-01-18 18:03:44,594 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245019983233, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 18:03:44,594 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:03:44,594 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:44,594 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:44,594 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:03:44,594 - DEBUG - Cache Entry: (0, 1737245019983233, 0)
2025-01-18 18:03:44,594 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:44,594 - DEBUG - sfqid: 01b9cde3-0002-4c71-0007-08ea001f8e5a
2025-01-18 18:03:44,594 - DEBUG - query execution done
2025-01-18 18:03:44,594 - DEBUG - SUCCESS
2025-01-18 18:03:44,594 - DEBUG - PUT OR GET: False
2025-01-18 18:03:44,594 - DEBUG - Query result format: arrow
2025-01-18 18:03:44,594 - INFO - Number of results in first chunk: 1
2025-01-18 18:03:44,594 - DEBUG - Execute query [queryID: 01b9cde3-0002-4c71-0007-08ea001f8e5a] 
        SELECT LOCATION, LATITUDE, LONGITUDE
        FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS 
        WHERE USER_ID = 'default_user'
        
2025-01-18 18:03:44,595 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:03:44,595 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:03:44,595 - DEBUG - Arrow chunk info: batchCount 1, columnCount 3, use_numpy: 0
2025-01-18 18:03:44,595 - DEBUG - Batches read: 0
2025-01-18 18:03:44,595 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:03:44,595 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:03:44,599 - DEBUG - executing SQL/command
2025-01-18 18:03:44,599 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:03:44,601 - DEBUG - sequence counter: 3
2025-01-18 18:03:44,601 - DEBUG - Request id: 0890f518-a942-4e50-a100-8d5e14e3fd84
2025-01-18 18:03:44,601 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:03:44,601 - DEBUG - is_file_transfer: True
2025-01-18 18:03:44,601 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:44,601 - DEBUG - _cmd_query
2025-01-18 18:03:44,601 - DEBUG - serialize_to_dict() called
2025-01-18 18:03:44,601 - DEBUG - Cache Entry: (0, 1737245019983233, 0)
2025-01-18 18:03:44,601 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245019983233, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 18:03:44,601 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[3], is_file_transfer=[False]
2025-01-18 18:03:44,601 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:03:44,602 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:03:44,602 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:03:44,602 - DEBUG - Request guid: 49838c50-b58e-4c8c-9910-f6f2dd79d8ef
2025-01-18 18:03:44,602 - DEBUG - socket timeout: 60
2025-01-18 18:03:44,674 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=0890f518-a942-4e50-a100-8d5e14e3fd84&request_guid=49838c50-b58e-4c8c-9910-f6f2dd79d8ef HTTP/1.1" 200 1504
2025-01-18 18:03:44,674 - DEBUG - SUCCESS
2025-01-18 18:03:44,674 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:03:44,674 - DEBUG - ret[code] = None, after post request
2025-01-18 18:03:44,674 - DEBUG - Query id: 01b9cde3-0002-4c79-0007-08ea001f6f5a
2025-01-18 18:03:44,674 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245020052747, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:03:44,675 - DEBUG - Cache Entry: (0, 1737245019983233, 0)
2025-01-18 18:03:44,675 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245020052747, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:03:44,675 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:03:44,675 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:44,675 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:44,675 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:03:44,675 - DEBUG - Cache Entry: (0, 1737245020052747, 0)
2025-01-18 18:03:44,675 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:44,675 - DEBUG - sfqid: 01b9cde3-0002-4c79-0007-08ea001f6f5a
2025-01-18 18:03:44,675 - DEBUG - query execution done
2025-01-18 18:03:44,676 - DEBUG - SUCCESS
2025-01-18 18:03:44,676 - DEBUG - PUT OR GET: False
2025-01-18 18:03:44,676 - DEBUG - Query result format: arrow
2025-01-18 18:03:44,676 - INFO - Number of results in first chunk: 0
2025-01-18 18:03:44,677 - DEBUG - executing SQL/command
2025-01-18 18:03:44,677 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:03:44,677 - DEBUG - sequence counter: 4
2025-01-18 18:03:44,677 - DEBUG - Request id: 3bf1e11d-c4c9-46b8-bc47-9621a9a3da83
2025-01-18 18:03:44,677 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:03:44,678 - DEBUG - is_file_transfer: True
2025-01-18 18:03:44,678 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:44,678 - DEBUG - _cmd_query
2025-01-18 18:03:44,678 - DEBUG - serialize_to_dict() called
2025-01-18 18:03:44,678 - DEBUG - Cache Entry: (0, 1737245020052747, 0)
2025-01-18 18:03:44,678 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245020052747, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:03:44,678 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[4], is_file_transfer=[False]
2025-01-18 18:03:44,678 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:03:44,679 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:03:44,679 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:03:44,679 - DEBUG - Request guid: 7103550e-d8c3-4569-a57f-00fde8d1974e
2025-01-18 18:03:44,679 - DEBUG - socket timeout: 60
2025-01-18 18:03:44,730 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=3bf1e11d-c4c9-46b8-bc47-9621a9a3da83&request_guid=7103550e-d8c3-4569-a57f-00fde8d1974e HTTP/1.1" 200 1375
2025-01-18 18:03:44,731 - DEBUG - SUCCESS
2025-01-18 18:03:44,731 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:03:44,731 - DEBUG - ret[code] = None, after post request
2025-01-18 18:03:44,731 - DEBUG - Query id: 01b9cde3-0002-4c79-0007-08ea001f6f5e
2025-01-18 18:03:44,731 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245020125226, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:03:44,731 - DEBUG - Cache Entry: (0, 1737245020052747, 0)
2025-01-18 18:03:44,731 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245020125226, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:03:44,731 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:03:44,731 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:44,731 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:44,731 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:03:44,731 - DEBUG - Cache Entry: (0, 1737245020125226, 0)
2025-01-18 18:03:44,731 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:44,731 - DEBUG - sfqid: 01b9cde3-0002-4c79-0007-08ea001f6f5e
2025-01-18 18:03:44,731 - DEBUG - query execution done
2025-01-18 18:03:44,731 - DEBUG - SUCCESS
2025-01-18 18:03:44,731 - DEBUG - PUT OR GET: False
2025-01-18 18:03:44,731 - DEBUG - Query result format: arrow
2025-01-18 18:03:44,731 - INFO - Number of results in first chunk: 0
2025-01-18 18:03:44,732 - DEBUG - executing SQL/command
2025-01-18 18:03:44,732 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:03:44,732 - DEBUG - sequence counter: 5
2025-01-18 18:03:44,732 - DEBUG - Request id: 906f18a7-217d-4d12-8825-d939a3851350
2025-01-18 18:03:44,732 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:03:44,733 - DEBUG - is_file_transfer: True
2025-01-18 18:03:44,733 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:44,733 - DEBUG - _cmd_query
2025-01-18 18:03:44,733 - DEBUG - serialize_to_dict() called
2025-01-18 18:03:44,733 - DEBUG - Cache Entry: (0, 1737245020125226, 0)
2025-01-18 18:03:44,733 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245020125226, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:03:44,733 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[5], is_file_transfer=[False]
2025-01-18 18:03:44,733 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:03:44,734 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:03:44,734 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:03:44,734 - DEBUG - Request guid: ed05c2e1-ba75-4fc8-ae37-00146b4207ab
2025-01-18 18:03:44,734 - DEBUG - socket timeout: 60
2025-01-18 18:03:44,807 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=906f18a7-217d-4d12-8825-d939a3851350&request_guid=ed05c2e1-ba75-4fc8-ae37-00146b4207ab HTTP/1.1" 200 1375
2025-01-18 18:03:44,808 - DEBUG - SUCCESS
2025-01-18 18:03:44,808 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:03:44,808 - DEBUG - ret[code] = None, after post request
2025-01-18 18:03:44,808 - DEBUG - Query id: 01b9cde3-0002-4c5d-0007-08ea001fcab2
2025-01-18 18:03:44,808 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245020211259, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:03:44,808 - DEBUG - Cache Entry: (0, 1737245020125226, 0)
2025-01-18 18:03:44,808 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245020211259, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:03:44,808 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:03:44,808 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:44,808 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:44,808 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:03:44,808 - DEBUG - Cache Entry: (0, 1737245020211259, 0)
2025-01-18 18:03:44,808 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:44,808 - DEBUG - sfqid: 01b9cde3-0002-4c5d-0007-08ea001fcab2
2025-01-18 18:03:44,808 - DEBUG - query execution done
2025-01-18 18:03:44,808 - DEBUG - SUCCESS
2025-01-18 18:03:44,808 - DEBUG - PUT OR GET: False
2025-01-18 18:03:44,809 - DEBUG - Query result format: arrow
2025-01-18 18:03:44,809 - INFO - Number of results in first chunk: 0
2025-01-18 18:03:44,809 - DEBUG - executing SQL/command
2025-01-18 18:03:44,809 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:03:44,809 - DEBUG - sequence counter: 6
2025-01-18 18:03:44,809 - DEBUG - Request id: dee63856-84e9-489f-9fef-fe61ce109ebe
2025-01-18 18:03:44,809 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:03:44,809 - DEBUG - is_file_transfer: True
2025-01-18 18:03:44,809 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:44,809 - DEBUG - _cmd_query
2025-01-18 18:03:44,809 - DEBUG - serialize_to_dict() called
2025-01-18 18:03:44,809 - DEBUG - Cache Entry: (0, 1737245020211259, 0)
2025-01-18 18:03:44,809 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245020211259, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:03:44,809 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[6], is_file_transfer=[False]
2025-01-18 18:03:44,812 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:03:44,812 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:03:44,813 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:03:44,813 - DEBUG - Request guid: d3d46178-9160-486b-93f3-8e1402482e35
2025-01-18 18:03:44,813 - DEBUG - socket timeout: 60
2025-01-18 18:03:44,967 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=dee63856-84e9-489f-9fef-fe61ce109ebe&request_guid=d3d46178-9160-486b-93f3-8e1402482e35 HTTP/1.1" 200 2617
2025-01-18 18:03:44,967 - DEBUG - SUCCESS
2025-01-18 18:03:44,968 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:03:44,968 - DEBUG - ret[code] = None, after post request
2025-01-18 18:03:44,968 - DEBUG - Query id: 01b9cde3-0002-4d87-0007-08ea001fe3b6
2025-01-18 18:03:44,968 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245020372301, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:03:44,968 - DEBUG - Cache Entry: (0, 1737245020211259, 0)
2025-01-18 18:03:44,968 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245020372301, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:03:44,968 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:03:44,968 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:44,968 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:44,968 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:03:44,968 - DEBUG - Cache Entry: (0, 1737245020372301, 0)
2025-01-18 18:03:44,968 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:44,968 - DEBUG - sfqid: 01b9cde3-0002-4d87-0007-08ea001fe3b6
2025-01-18 18:03:44,968 - DEBUG - query execution done
2025-01-18 18:03:44,968 - DEBUG - SUCCESS
2025-01-18 18:03:44,968 - DEBUG - PUT OR GET: False
2025-01-18 18:03:44,968 - DEBUG - Query result format: arrow
2025-01-18 18:03:44,968 - INFO - Number of results in first chunk: 54
2025-01-18 18:03:44,968 - DEBUG - Execute query [queryID: 01b9cde3-0002-4d87-0007-08ea001fe3b6]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:03:44,969 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:03:44,969 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:03:44,969 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:03:44,969 - DEBUG - Batches read: 0
2025-01-18 18:03:44,969 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:03:44,969 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:03:50,571 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000218579EF100>
2025-01-18 18:03:50,571 - INFO - Querying the server for client info
2025-01-18 18:03:50,571 - DEBUG - cursor
2025-01-18 18:03:50,571 - DEBUG - executing SQL/command
2025-01-18 18:03:50,571 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:03:50,571 - DEBUG - sequence counter: 7
2025-01-18 18:03:50,571 - DEBUG - Request id: 1e17300b-be44-447a-bc86-a64882ba8063
2025-01-18 18:03:50,571 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:03:50,571 - DEBUG - is_file_transfer: True
2025-01-18 18:03:50,571 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:50,571 - DEBUG - _cmd_query
2025-01-18 18:03:50,571 - DEBUG - serialize_to_dict() called
2025-01-18 18:03:50,571 - DEBUG - Cache Entry: (0, 1737245020372301, 0)
2025-01-18 18:03:50,572 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245020372301, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:03:50,572 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[7], is_file_transfer=[False]
2025-01-18 18:03:50,573 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:03:50,574 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:03:50,574 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:03:50,574 - DEBUG - Request guid: 4d6e64f9-35c3-436d-8d4b-b0d2a452d82e
2025-01-18 18:03:50,574 - DEBUG - socket timeout: 60
2025-01-18 18:03:50,748 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=1e17300b-be44-447a-bc86-a64882ba8063&request_guid=4d6e64f9-35c3-436d-8d4b-b0d2a452d82e HTTP/1.1" 200 2618
2025-01-18 18:03:50,749 - DEBUG - SUCCESS
2025-01-18 18:03:50,749 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:03:50,749 - DEBUG - ret[code] = None, after post request
2025-01-18 18:03:50,749 - DEBUG - Query id: 01b9cde3-0002-4c72-0007-08ea001facd2
2025-01-18 18:03:50,749 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245026118961, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:03:50,749 - DEBUG - Cache Entry: (0, 1737245020372301, 0)
2025-01-18 18:03:50,749 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245026118961, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:03:50,749 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:03:50,749 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:50,749 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:50,749 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:03:50,749 - DEBUG - Cache Entry: (0, 1737245026118961, 0)
2025-01-18 18:03:50,749 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:50,749 - DEBUG - sfqid: 01b9cde3-0002-4c72-0007-08ea001facd2
2025-01-18 18:03:50,749 - DEBUG - query execution done
2025-01-18 18:03:50,749 - DEBUG - SUCCESS
2025-01-18 18:03:50,749 - DEBUG - PUT OR GET: False
2025-01-18 18:03:50,749 - DEBUG - Query result format: arrow
2025-01-18 18:03:50,749 - INFO - Number of results in first chunk: 1
2025-01-18 18:03:50,749 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:03:50,749 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:03:50,749 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:03:50,749 - DEBUG - Batches read: 0
2025-01-18 18:03:50,751 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:03:50,751 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:03:50,751 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x000002185746E3B0>, telemetry enabled: True
2025-01-18 18:03:50,751 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:03:50,751 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:03:50,751 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:03:50,751 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:03:50,754 - DEBUG - cursor
2025-01-18 18:03:50,754 - DEBUG - executing SQL/command
2025-01-18 18:03:50,754 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:03:50,755 - DEBUG - sequence counter: 8
2025-01-18 18:03:50,755 - DEBUG - Request id: 7af2fc53-20bc-4aa0-886e-56baae9d3153
2025-01-18 18:03:50,755 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:03:50,755 - DEBUG - is_file_transfer: True
2025-01-18 18:03:50,755 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:50,755 - DEBUG - _cmd_query
2025-01-18 18:03:50,755 - DEBUG - serialize_to_dict() called
2025-01-18 18:03:50,755 - DEBUG - Cache Entry: (0, 1737245026118961, 0)
2025-01-18 18:03:50,755 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245026118961, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:03:50,755 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[8], is_file_transfer=[False]
2025-01-18 18:03:50,755 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:03:50,756 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:03:50,756 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:03:50,756 - DEBUG - Request guid: dbafc67a-8624-429a-8208-c894916492c9
2025-01-18 18:03:50,756 - DEBUG - socket timeout: 60
2025-01-18 18:03:50,820 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=7af2fc53-20bc-4aa0-886e-56baae9d3153&request_guid=dbafc67a-8624-429a-8208-c894916492c9 HTTP/1.1" 200 1502
2025-01-18 18:03:50,821 - DEBUG - SUCCESS
2025-01-18 18:03:50,821 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:03:50,821 - DEBUG - ret[code] = None, after post request
2025-01-18 18:03:50,821 - DEBUG - Query id: 01b9cde3-0002-4c78-0007-08ea001f7eea
2025-01-18 18:03:50,821 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245026221449, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:03:50,821 - DEBUG - Cache Entry: (0, 1737245026118961, 0)
2025-01-18 18:03:50,821 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245026221449, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:03:50,821 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:03:50,821 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:50,821 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:50,821 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:03:50,822 - DEBUG - Cache Entry: (0, 1737245026221449, 0)
2025-01-18 18:03:50,822 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:50,822 - DEBUG - sfqid: 01b9cde3-0002-4c78-0007-08ea001f7eea
2025-01-18 18:03:50,822 - DEBUG - query execution done
2025-01-18 18:03:50,822 - DEBUG - SUCCESS
2025-01-18 18:03:50,822 - DEBUG - PUT OR GET: False
2025-01-18 18:03:50,822 - DEBUG - Query result format: arrow
2025-01-18 18:03:50,822 - INFO - Number of results in first chunk: 0
2025-01-18 18:03:50,823 - DEBUG - executing SQL/command
2025-01-18 18:03:50,823 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:03:50,823 - DEBUG - sequence counter: 9
2025-01-18 18:03:50,823 - DEBUG - Request id: 6f0f7c6d-1afc-40c1-91e0-40e96a73d3e8
2025-01-18 18:03:50,823 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:03:50,823 - DEBUG - is_file_transfer: True
2025-01-18 18:03:50,823 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:50,824 - DEBUG - _cmd_query
2025-01-18 18:03:50,824 - DEBUG - serialize_to_dict() called
2025-01-18 18:03:50,824 - DEBUG - Cache Entry: (0, 1737245026221449, 0)
2025-01-18 18:03:50,824 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245026221449, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:03:50,824 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[9], is_file_transfer=[False]
2025-01-18 18:03:50,824 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:03:50,824 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:03:50,825 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:03:50,825 - DEBUG - Request guid: 2b941ca0-2889-4b3c-beb9-9b7f1e93391b
2025-01-18 18:03:50,825 - DEBUG - socket timeout: 60
2025-01-18 18:03:50,891 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=6f0f7c6d-1afc-40c1-91e0-40e96a73d3e8&request_guid=2b941ca0-2889-4b3c-beb9-9b7f1e93391b HTTP/1.1" 200 1375
2025-01-18 18:03:50,892 - DEBUG - SUCCESS
2025-01-18 18:03:50,892 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:03:50,892 - DEBUG - ret[code] = None, after post request
2025-01-18 18:03:50,893 - DEBUG - Query id: 01b9cde3-0002-4c77-0007-08ea001fdaf6
2025-01-18 18:03:50,893 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245026295871, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:03:50,893 - DEBUG - Cache Entry: (0, 1737245026221449, 0)
2025-01-18 18:03:50,893 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245026295871, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:03:50,893 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:03:50,893 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:50,893 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:50,893 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:03:50,893 - DEBUG - Cache Entry: (0, 1737245026295871, 0)
2025-01-18 18:03:50,893 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:50,893 - DEBUG - sfqid: 01b9cde3-0002-4c77-0007-08ea001fdaf6
2025-01-18 18:03:50,893 - DEBUG - query execution done
2025-01-18 18:03:50,893 - DEBUG - SUCCESS
2025-01-18 18:03:50,893 - DEBUG - PUT OR GET: False
2025-01-18 18:03:50,893 - DEBUG - Query result format: arrow
2025-01-18 18:03:50,893 - INFO - Number of results in first chunk: 0
2025-01-18 18:03:50,894 - DEBUG - executing SQL/command
2025-01-18 18:03:50,894 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:03:50,894 - DEBUG - sequence counter: 10
2025-01-18 18:03:50,894 - DEBUG - Request id: f5376a15-326c-432a-baa8-0229eb17dfe3
2025-01-18 18:03:50,894 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:03:50,894 - DEBUG - is_file_transfer: True
2025-01-18 18:03:50,894 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:50,894 - DEBUG - _cmd_query
2025-01-18 18:03:50,894 - DEBUG - serialize_to_dict() called
2025-01-18 18:03:50,894 - DEBUG - Cache Entry: (0, 1737245026295871, 0)
2025-01-18 18:03:50,894 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245026295871, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:03:50,894 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[10], is_file_transfer=[False]
2025-01-18 18:03:50,895 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:03:50,895 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:03:50,895 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:03:50,896 - DEBUG - Request guid: 3da68db5-72f0-4a2e-a17a-de1749a82616
2025-01-18 18:03:50,896 - DEBUG - socket timeout: 60
2025-01-18 18:03:50,966 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=f5376a15-326c-432a-baa8-0229eb17dfe3&request_guid=3da68db5-72f0-4a2e-a17a-de1749a82616 HTTP/1.1" 200 1375
2025-01-18 18:03:50,967 - DEBUG - SUCCESS
2025-01-18 18:03:50,967 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:03:50,967 - DEBUG - ret[code] = None, after post request
2025-01-18 18:03:50,967 - DEBUG - Query id: 01b9cde3-0002-4c76-0007-08ea001fbb7e
2025-01-18 18:03:50,967 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245026370449, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:03:50,967 - DEBUG - Cache Entry: (0, 1737245026295871, 0)
2025-01-18 18:03:50,967 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245026370449, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:03:50,967 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:03:50,967 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:50,967 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:50,967 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:03:50,968 - DEBUG - Cache Entry: (0, 1737245026370449, 0)
2025-01-18 18:03:50,968 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:50,968 - DEBUG - sfqid: 01b9cde3-0002-4c76-0007-08ea001fbb7e
2025-01-18 18:03:50,968 - DEBUG - query execution done
2025-01-18 18:03:50,968 - DEBUG - SUCCESS
2025-01-18 18:03:50,968 - DEBUG - PUT OR GET: False
2025-01-18 18:03:50,968 - DEBUG - Query result format: arrow
2025-01-18 18:03:50,968 - INFO - Number of results in first chunk: 0
2025-01-18 18:03:50,969 - DEBUG - executing SQL/command
2025-01-18 18:03:50,969 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:03:50,969 - DEBUG - sequence counter: 11
2025-01-18 18:03:50,969 - DEBUG - Request id: 033b9056-20ea-4710-a18b-4cd51bf646cf
2025-01-18 18:03:50,969 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:03:50,969 - DEBUG - is_file_transfer: True
2025-01-18 18:03:50,969 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:50,969 - DEBUG - _cmd_query
2025-01-18 18:03:50,969 - DEBUG - serialize_to_dict() called
2025-01-18 18:03:50,969 - DEBUG - Cache Entry: (0, 1737245026370449, 0)
2025-01-18 18:03:50,969 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245026370449, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:03:50,969 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[11], is_file_transfer=[False]
2025-01-18 18:03:50,970 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:03:50,970 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:03:50,970 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:03:50,970 - DEBUG - Request guid: b4519056-e685-44e4-aaf1-243c45117355
2025-01-18 18:03:50,970 - DEBUG - socket timeout: 60
2025-01-18 18:03:51,062 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=033b9056-20ea-4710-a18b-4cd51bf646cf&request_guid=b4519056-e685-44e4-aaf1-243c45117355 HTTP/1.1" 200 2619
2025-01-18 18:03:51,063 - DEBUG - SUCCESS
2025-01-18 18:03:51,063 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:03:51,063 - DEBUG - ret[code] = None, after post request
2025-01-18 18:03:51,063 - DEBUG - Query id: 01b9cde3-0002-4c5d-0007-08ea001fcab6
2025-01-18 18:03:51,063 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245026469858, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:03:51,063 - DEBUG - Cache Entry: (0, 1737245026370449, 0)
2025-01-18 18:03:51,063 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245026469858, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:03:51,063 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:03:51,063 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:51,063 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:03:51,063 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:03:51,063 - DEBUG - Cache Entry: (0, 1737245026469858, 0)
2025-01-18 18:03:51,064 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:03:51,064 - DEBUG - sfqid: 01b9cde3-0002-4c5d-0007-08ea001fcab6
2025-01-18 18:03:51,064 - DEBUG - query execution done
2025-01-18 18:03:51,064 - DEBUG - SUCCESS
2025-01-18 18:03:51,064 - DEBUG - PUT OR GET: False
2025-01-18 18:03:51,064 - DEBUG - Query result format: arrow
2025-01-18 18:03:51,064 - INFO - Number of results in first chunk: 54
2025-01-18 18:03:51,064 - DEBUG - Execute query [queryID: 01b9cde3-0002-4c5d-0007-08ea001fcab6]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:03:51,064 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:03:51,064 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:03:51,064 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:03:51,064 - DEBUG - Batches read: 0
2025-01-18 18:03:51,064 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:03:51,064 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:03:51,072 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:03:51,075 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:03:51,690 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:03:51,720 - DEBUG - calling method search on class CortexSearchServiceResource after submitting telemetry if enabled
2025-01-18 18:03:51,722 - INFO - performing a HTTP POST call to /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query
2025-01-18 18:03:51,722 - DEBUG - request has path params: {'database': 'DEV_SRC_INGEST', 'schema': 'EPA_PROCESSED', 'service_name': 'CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST'}, query_params: [], header params: {'Accept': 'application/json', 'Content-Type': 'application/json'} and body: QueryRequest(query='Tell me about roundup', columns=['chunk', 'relative_path', 'PRODUCTNAME', 'COMPANYNAME', 'CATEGORY_EPA_TYPE', 'SIGNAL_WORD'], filter=None, limit=10, experimental=None)
2025-01-18 18:03:51,726 - DEBUG - making an http POST call to 'https://gmcpdcz-mt01740.snowflakecomputing.com:443/api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query'
2025-01-18 18:03:51,727 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:03:51,956 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query HTTP/1.1" 404 0
2025-01-18 18:03:51,956 - DEBUG - created a RESTResponse with status 404 and length of 350
2025-01-18 18:03:51,956 - DEBUG - response body: b'{"code":"390404","message":"Cortex Search Service DEV_SRC_INGEST.EPA_PROCESSED.CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST does not exist or access is not authorized for the current role. If you are using JWT authentication, the role will be the \\"DEFAULT_ROLE\\" of the current user","request_id":"806cb4fe-f096-4a16-af93-c71fa7572616","error_code":"390404"}'
2025-01-18 18:03:51,956 - DEBUG - An exception of type NotFoundError was created, it's probably going to be raised.
2025-01-18 18:03:51,956 - DEBUG - This exception has the following args: ('(404)\nReason: Not Found\nError Message: Cortex Search Service DEV_SRC_INGEST.EPA_PROCESSED.CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST does not exist or access is not authorized for the current role. If you are using JWT authentication, the role will be the "DEFAULT_ROLE" of the current user\nHTTP response code: 404\nRequest ID: 806cb4fe-f096-4a16-af93-c71fa7572616\nError Code: 390404\n',).
2025-01-18 18:11:14,717 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000218579EF100>
2025-01-18 18:11:14,717 - INFO - Querying the server for client info
2025-01-18 18:11:14,717 - DEBUG - cursor
2025-01-18 18:11:14,717 - DEBUG - executing SQL/command
2025-01-18 18:11:14,717 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:11:14,717 - DEBUG - sequence counter: 12
2025-01-18 18:11:14,717 - DEBUG - Request id: 2fc048e2-5678-42f4-81c8-3b6b6b69b493
2025-01-18 18:11:14,717 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:11:14,717 - DEBUG - is_file_transfer: True
2025-01-18 18:11:14,717 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:14,717 - DEBUG - _cmd_query
2025-01-18 18:11:14,719 - DEBUG - serialize_to_dict() called
2025-01-18 18:11:14,719 - DEBUG - Cache Entry: (0, 1737245026469858, 0)
2025-01-18 18:11:14,719 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245026469858, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:11:14,719 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[12], is_file_transfer=[False]
2025-01-18 18:11:14,720 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:11:14,721 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:11:14,721 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:11:14,721 - DEBUG - Request guid: ccc4f1c2-398a-4d57-9d8a-88cf74dc47a3
2025-01-18 18:11:14,721 - DEBUG - socket timeout: 60
2025-01-18 18:11:14,722 - DEBUG - Resetting dropped connection: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:11:15,244 - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None
2025-01-18 18:11:15,244 - DEBUG - ocsp_response_cache_uri: file://C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 18:11:15,244 - DEBUG - OCSP_VALIDATION_CACHE size: 310
2025-01-18 18:11:15,244 - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 18:11:15,244 - DEBUG - OCSP dynamic cache server RETRY URL: None
2025-01-18 18:11:15,244 - DEBUG - validating certificate: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:11:15,244 - DEBUG - # of certificates: 4
2025-01-18 18:11:15,245 - DEBUG - subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:11:15,245 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:11:15,246 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:11:15,246 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:11:15,249 - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:11:15,250 - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])
2025-01-18 18:11:15,252 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:11:15,252 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:11:15,253 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:11:15,254 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:11:15,255 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 18:11:15,256 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:11:15,257 - DEBUG - ok
2025-01-18 18:11:15,408 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=2fc048e2-5678-42f4-81c8-3b6b6b69b493&request_guid=ccc4f1c2-398a-4d57-9d8a-88cf74dc47a3 HTTP/1.1" 200 2618
2025-01-18 18:11:15,408 - DEBUG - SUCCESS
2025-01-18 18:11:15,408 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:11:15,408 - DEBUG - ret[code] = None, after post request
2025-01-18 18:11:15,408 - DEBUG - Query id: 01b9cdeb-0002-4c70-0007-08ea001f9df6
2025-01-18 18:11:15,408 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245470809313, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:11:15,408 - DEBUG - Cache Entry: (0, 1737245026469858, 0)
2025-01-18 18:11:15,408 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245470809313, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:11:15,408 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:11:15,408 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:15,408 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:15,408 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:11:15,408 - DEBUG - Cache Entry: (0, 1737245470809313, 0)
2025-01-18 18:11:15,408 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:15,408 - DEBUG - sfqid: 01b9cdeb-0002-4c70-0007-08ea001f9df6
2025-01-18 18:11:15,408 - DEBUG - query execution done
2025-01-18 18:11:15,409 - DEBUG - SUCCESS
2025-01-18 18:11:15,409 - DEBUG - PUT OR GET: False
2025-01-18 18:11:15,409 - DEBUG - Query result format: arrow
2025-01-18 18:11:15,409 - INFO - Number of results in first chunk: 1
2025-01-18 18:11:15,409 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:11:15,409 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:11:15,409 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:11:15,409 - DEBUG - Batches read: 0
2025-01-18 18:11:15,409 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:11:15,409 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:11:15,409 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x000002185746E3B0>, telemetry enabled: True
2025-01-18 18:11:15,410 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:11:15,410 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:11:15,410 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:11:15,410 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:11:15,412 - DEBUG - cursor
2025-01-18 18:11:15,412 - DEBUG - executing SQL/command
2025-01-18 18:11:15,413 - DEBUG - query: [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:11:15,413 - DEBUG - sequence counter: 13
2025-01-18 18:11:15,413 - DEBUG - Request id: fcc9431a-7679-4fd0-aded-7f7f3adb2a29
2025-01-18 18:11:15,413 - DEBUG - running query [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:11:15,413 - DEBUG - is_file_transfer: True
2025-01-18 18:11:15,413 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:15,413 - DEBUG - _cmd_query
2025-01-18 18:11:15,413 - DEBUG - serialize_to_dict() called
2025-01-18 18:11:15,413 - DEBUG - Cache Entry: (0, 1737245470809313, 0)
2025-01-18 18:11:15,413 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245470809313, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:11:15,413 - DEBUG - sql=[SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...], sequence_id=[13], is_file_transfer=[False]
2025-01-18 18:11:15,414 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:11:15,414 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:11:15,414 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:11:15,414 - DEBUG - Request guid: 0db6ea07-417e-40af-9957-fbdf26bd6d73
2025-01-18 18:11:15,414 - DEBUG - socket timeout: 60
2025-01-18 18:11:15,546 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=fcc9431a-7679-4fd0-aded-7f7f3adb2a29&request_guid=0db6ea07-417e-40af-9957-fbdf26bd6d73 HTTP/1.1" 200 2116
2025-01-18 18:11:15,547 - DEBUG - SUCCESS
2025-01-18 18:11:15,547 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:11:15,547 - DEBUG - ret[code] = None, after post request
2025-01-18 18:11:15,547 - DEBUG - Query id: 01b9cdeb-0002-4c70-0007-08ea001f9dfa
2025-01-18 18:11:15,547 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245470944797, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:11:15,547 - DEBUG - Cache Entry: (0, 1737245470809313, 0)
2025-01-18 18:11:15,547 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245470944797, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:11:15,547 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:11:15,547 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:15,547 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:15,548 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:11:15,548 - DEBUG - Cache Entry: (0, 1737245470944797, 0)
2025-01-18 18:11:15,548 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:15,548 - DEBUG - sfqid: 01b9cdeb-0002-4c70-0007-08ea001f9dfa
2025-01-18 18:11:15,548 - DEBUG - query execution done
2025-01-18 18:11:15,548 - DEBUG - SUCCESS
2025-01-18 18:11:15,548 - DEBUG - PUT OR GET: False
2025-01-18 18:11:15,548 - DEBUG - Query result format: arrow
2025-01-18 18:11:15,548 - INFO - Number of results in first chunk: 1
2025-01-18 18:11:15,548 - DEBUG - Execute query [queryID: 01b9cdeb-0002-4c70-0007-08ea001f9dfa] 
        SELECT LOCATION, LATITUDE, LONGITUDE
        FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS 
        WHERE USER_ID = 'default_user'
        
2025-01-18 18:11:15,548 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:11:15,548 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:11:15,548 - DEBUG - Arrow chunk info: batchCount 1, columnCount 3, use_numpy: 0
2025-01-18 18:11:15,548 - DEBUG - Batches read: 0
2025-01-18 18:11:15,548 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:11:15,548 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:11:15,552 - DEBUG - executing SQL/command
2025-01-18 18:11:15,552 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:11:15,552 - DEBUG - sequence counter: 14
2025-01-18 18:11:15,552 - DEBUG - Request id: 4e9bda0d-9f95-41e6-90c7-dc439f9b1750
2025-01-18 18:11:15,552 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:11:15,552 - DEBUG - is_file_transfer: True
2025-01-18 18:11:15,553 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:15,553 - DEBUG - _cmd_query
2025-01-18 18:11:15,553 - DEBUG - serialize_to_dict() called
2025-01-18 18:11:15,553 - DEBUG - Cache Entry: (0, 1737245470944797, 0)
2025-01-18 18:11:15,553 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245470944797, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:11:15,553 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[14], is_file_transfer=[False]
2025-01-18 18:11:15,553 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:11:15,553 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:11:15,554 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:11:15,554 - DEBUG - Request guid: 5fb426fc-b60b-4528-b55e-fc003ba5597b
2025-01-18 18:11:15,554 - DEBUG - socket timeout: 60
2025-01-18 18:11:15,623 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=4e9bda0d-9f95-41e6-90c7-dc439f9b1750&request_guid=5fb426fc-b60b-4528-b55e-fc003ba5597b HTTP/1.1" 200 1504
2025-01-18 18:11:15,624 - DEBUG - SUCCESS
2025-01-18 18:11:15,624 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:11:15,624 - DEBUG - ret[code] = None, after post request
2025-01-18 18:11:15,624 - DEBUG - Query id: 01b9cdeb-0002-4c7a-0007-08ea001ff3be
2025-01-18 18:11:15,624 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245471021891, 'priority': 0, 'context': 'COrjJA=='}]}
2025-01-18 18:11:15,624 - DEBUG - Cache Entry: (0, 1737245470944797, 0)
2025-01-18 18:11:15,624 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245471021891, 'priority': 0, 'context': 'COrjJA=='}
2025-01-18 18:11:15,624 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:11:15,624 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:15,625 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:15,625 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:11:15,625 - DEBUG - Cache Entry: (0, 1737245471021891, 0)
2025-01-18 18:11:15,625 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:15,625 - DEBUG - sfqid: 01b9cdeb-0002-4c7a-0007-08ea001ff3be
2025-01-18 18:11:15,625 - DEBUG - query execution done
2025-01-18 18:11:15,625 - DEBUG - SUCCESS
2025-01-18 18:11:15,625 - DEBUG - PUT OR GET: False
2025-01-18 18:11:15,625 - DEBUG - Query result format: arrow
2025-01-18 18:11:15,625 - INFO - Number of results in first chunk: 0
2025-01-18 18:11:15,626 - DEBUG - executing SQL/command
2025-01-18 18:11:15,626 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:11:15,627 - DEBUG - sequence counter: 15
2025-01-18 18:11:15,627 - DEBUG - Request id: e57b3846-9405-4dc8-9735-fb648ff2f3cb
2025-01-18 18:11:15,627 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:11:15,627 - DEBUG - is_file_transfer: True
2025-01-18 18:11:15,627 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:15,627 - DEBUG - _cmd_query
2025-01-18 18:11:15,627 - DEBUG - serialize_to_dict() called
2025-01-18 18:11:15,627 - DEBUG - Cache Entry: (0, 1737245471021891, 0)
2025-01-18 18:11:15,627 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245471021891, 'priority': 0, 'context': {'base64Data': 'COrjJA=='}}]}
2025-01-18 18:11:15,627 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[15], is_file_transfer=[False]
2025-01-18 18:11:15,627 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:11:15,629 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:11:15,629 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:11:15,629 - DEBUG - Request guid: d5681648-494f-484a-a4b0-8b426547bab5
2025-01-18 18:11:15,629 - DEBUG - socket timeout: 60
2025-01-18 18:11:15,716 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=e57b3846-9405-4dc8-9735-fb648ff2f3cb&request_guid=d5681648-494f-484a-a4b0-8b426547bab5 HTTP/1.1" 200 1371
2025-01-18 18:11:15,717 - DEBUG - SUCCESS
2025-01-18 18:11:15,717 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:11:15,717 - DEBUG - ret[code] = None, after post request
2025-01-18 18:11:15,717 - DEBUG - Query id: 01b9cdeb-0002-4c79-0007-08ea00200026
2025-01-18 18:11:15,717 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245471119194, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:11:15,717 - DEBUG - Cache Entry: (0, 1737245471021891, 0)
2025-01-18 18:11:15,717 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245471119194, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:11:15,718 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:11:15,718 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:15,718 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:15,718 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:11:15,718 - DEBUG - Cache Entry: (0, 1737245471119194, 0)
2025-01-18 18:11:15,718 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:15,718 - DEBUG - sfqid: 01b9cdeb-0002-4c79-0007-08ea00200026
2025-01-18 18:11:15,718 - DEBUG - query execution done
2025-01-18 18:11:15,718 - DEBUG - SUCCESS
2025-01-18 18:11:15,718 - DEBUG - PUT OR GET: False
2025-01-18 18:11:15,718 - DEBUG - Query result format: arrow
2025-01-18 18:11:15,718 - INFO - Number of results in first chunk: 0
2025-01-18 18:11:15,720 - DEBUG - executing SQL/command
2025-01-18 18:11:15,720 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:11:15,720 - DEBUG - sequence counter: 16
2025-01-18 18:11:15,720 - DEBUG - Request id: 398933d2-b99e-4ac2-a6c7-7b59c0a78a97
2025-01-18 18:11:15,720 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:11:15,720 - DEBUG - is_file_transfer: True
2025-01-18 18:11:15,720 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:15,720 - DEBUG - _cmd_query
2025-01-18 18:11:15,721 - DEBUG - serialize_to_dict() called
2025-01-18 18:11:15,721 - DEBUG - Cache Entry: (0, 1737245471119194, 0)
2025-01-18 18:11:15,721 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245471119194, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:11:15,721 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[16], is_file_transfer=[False]
2025-01-18 18:11:15,722 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:11:15,723 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:11:15,723 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:11:15,723 - DEBUG - Request guid: 04fa4850-3d83-4c65-9b3b-9090b519801d
2025-01-18 18:11:15,723 - DEBUG - socket timeout: 60
2025-01-18 18:11:15,784 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=398933d2-b99e-4ac2-a6c7-7b59c0a78a97&request_guid=04fa4850-3d83-4c65-9b3b-9090b519801d HTTP/1.1" 200 1371
2025-01-18 18:11:15,785 - DEBUG - SUCCESS
2025-01-18 18:11:15,785 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:11:15,785 - DEBUG - ret[code] = None, after post request
2025-01-18 18:11:15,785 - DEBUG - Query id: 01b9cdeb-0002-4c79-0007-08ea0020002a
2025-01-18 18:11:15,785 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245471177871, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:11:15,786 - DEBUG - Cache Entry: (0, 1737245471119194, 0)
2025-01-18 18:11:15,786 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245471177871, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:11:15,786 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:11:15,786 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:15,786 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:15,786 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:11:15,786 - DEBUG - Cache Entry: (0, 1737245471177871, 0)
2025-01-18 18:11:15,786 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:15,786 - DEBUG - sfqid: 01b9cdeb-0002-4c79-0007-08ea0020002a
2025-01-18 18:11:15,786 - DEBUG - query execution done
2025-01-18 18:11:15,786 - DEBUG - SUCCESS
2025-01-18 18:11:15,787 - DEBUG - PUT OR GET: False
2025-01-18 18:11:15,787 - DEBUG - Query result format: arrow
2025-01-18 18:11:15,787 - INFO - Number of results in first chunk: 0
2025-01-18 18:11:15,788 - DEBUG - executing SQL/command
2025-01-18 18:11:15,788 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:11:15,788 - DEBUG - sequence counter: 17
2025-01-18 18:11:15,788 - DEBUG - Request id: 40400968-ea89-4cb9-8277-d9d4f8a8a4be
2025-01-18 18:11:15,788 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:11:15,788 - DEBUG - is_file_transfer: True
2025-01-18 18:11:15,788 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:15,788 - DEBUG - _cmd_query
2025-01-18 18:11:15,788 - DEBUG - serialize_to_dict() called
2025-01-18 18:11:15,788 - DEBUG - Cache Entry: (0, 1737245471177871, 0)
2025-01-18 18:11:15,788 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245471177871, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:11:15,788 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[17], is_file_transfer=[False]
2025-01-18 18:11:15,789 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:11:15,789 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:11:15,790 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:11:15,790 - DEBUG - Request guid: fc20e16b-ab22-4083-ab58-3b8e8295f071
2025-01-18 18:11:15,790 - DEBUG - socket timeout: 60
2025-01-18 18:11:15,880 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=40400968-ea89-4cb9-8277-d9d4f8a8a4be&request_guid=fc20e16b-ab22-4083-ab58-3b8e8295f071 HTTP/1.1" 200 2619
2025-01-18 18:11:15,881 - DEBUG - SUCCESS
2025-01-18 18:11:15,881 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:11:15,881 - DEBUG - ret[code] = None, after post request
2025-01-18 18:11:15,881 - DEBUG - Query id: 01b9cdeb-0002-4c77-0007-08ea001fdba2
2025-01-18 18:11:15,881 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245471269738, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:11:15,881 - DEBUG - Cache Entry: (0, 1737245471177871, 0)
2025-01-18 18:11:15,882 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245471269738, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:11:15,882 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:11:15,882 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:15,882 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:15,882 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:11:15,882 - DEBUG - Cache Entry: (0, 1737245471269738, 0)
2025-01-18 18:11:15,882 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:15,882 - DEBUG - sfqid: 01b9cdeb-0002-4c77-0007-08ea001fdba2
2025-01-18 18:11:15,882 - DEBUG - query execution done
2025-01-18 18:11:15,882 - DEBUG - SUCCESS
2025-01-18 18:11:15,882 - DEBUG - PUT OR GET: False
2025-01-18 18:11:15,882 - DEBUG - Query result format: arrow
2025-01-18 18:11:15,882 - INFO - Number of results in first chunk: 54
2025-01-18 18:11:15,882 - DEBUG - Execute query [queryID: 01b9cdeb-0002-4c77-0007-08ea001fdba2]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:11:15,882 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:11:15,882 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:11:15,882 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:11:15,882 - DEBUG - Batches read: 0
2025-01-18 18:11:15,882 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:11:15,882 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:11:19,936 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000218579EF100>
2025-01-18 18:11:19,937 - INFO - Querying the server for client info
2025-01-18 18:11:19,937 - DEBUG - cursor
2025-01-18 18:11:19,937 - DEBUG - executing SQL/command
2025-01-18 18:11:19,937 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:11:19,937 - DEBUG - sequence counter: 18
2025-01-18 18:11:19,937 - DEBUG - Request id: f6a40981-621b-41c2-ada6-5d606ba17151
2025-01-18 18:11:19,937 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:11:19,937 - DEBUG - is_file_transfer: True
2025-01-18 18:11:19,937 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:19,937 - DEBUG - _cmd_query
2025-01-18 18:11:19,937 - DEBUG - serialize_to_dict() called
2025-01-18 18:11:19,937 - DEBUG - Cache Entry: (0, 1737245471269738, 0)
2025-01-18 18:11:19,937 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245471269738, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:11:19,937 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[18], is_file_transfer=[False]
2025-01-18 18:11:19,939 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:11:19,939 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:11:19,939 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:11:19,939 - DEBUG - Request guid: 19a8d1d7-a75a-4eb0-a7fd-8f55d041515e
2025-01-18 18:11:19,939 - DEBUG - socket timeout: 60
2025-01-18 18:11:20,054 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=f6a40981-621b-41c2-ada6-5d606ba17151&request_guid=19a8d1d7-a75a-4eb0-a7fd-8f55d041515e HTTP/1.1" 200 2619
2025-01-18 18:11:20,055 - DEBUG - SUCCESS
2025-01-18 18:11:20,055 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:11:20,055 - DEBUG - ret[code] = None, after post request
2025-01-18 18:11:20,055 - DEBUG - Query id: 01b9cdeb-0002-4c71-0007-08ea001f8ef2
2025-01-18 18:11:20,055 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245475455922, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 18:11:20,055 - DEBUG - Cache Entry: (0, 1737245471269738, 0)
2025-01-18 18:11:20,055 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245475455922, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 18:11:20,055 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:11:20,055 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:20,055 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:20,055 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:11:20,055 - DEBUG - Cache Entry: (0, 1737245475455922, 0)
2025-01-18 18:11:20,055 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:20,055 - DEBUG - sfqid: 01b9cdeb-0002-4c71-0007-08ea001f8ef2
2025-01-18 18:11:20,055 - DEBUG - query execution done
2025-01-18 18:11:20,055 - DEBUG - SUCCESS
2025-01-18 18:11:20,055 - DEBUG - PUT OR GET: False
2025-01-18 18:11:20,055 - DEBUG - Query result format: arrow
2025-01-18 18:11:20,055 - INFO - Number of results in first chunk: 1
2025-01-18 18:11:20,055 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:11:20,056 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:11:20,056 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:11:20,056 - DEBUG - Batches read: 0
2025-01-18 18:11:20,056 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:11:20,056 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:11:20,056 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x000002185746E3B0>, telemetry enabled: True
2025-01-18 18:11:20,056 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:11:20,056 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:11:20,056 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:11:20,056 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:11:20,060 - DEBUG - cursor
2025-01-18 18:11:20,060 - DEBUG - executing SQL/command
2025-01-18 18:11:20,061 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:11:20,061 - DEBUG - sequence counter: 19
2025-01-18 18:11:20,061 - DEBUG - Request id: b229b19b-1303-42df-856f-e6099c2f62ec
2025-01-18 18:11:20,061 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:11:20,061 - DEBUG - is_file_transfer: True
2025-01-18 18:11:20,061 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:20,061 - DEBUG - _cmd_query
2025-01-18 18:11:20,061 - DEBUG - serialize_to_dict() called
2025-01-18 18:11:20,061 - DEBUG - Cache Entry: (0, 1737245475455922, 0)
2025-01-18 18:11:20,061 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245475455922, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 18:11:20,061 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[19], is_file_transfer=[False]
2025-01-18 18:11:20,062 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:11:20,062 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:11:20,062 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:11:20,062 - DEBUG - Request guid: 7f28acb7-5d53-4fd4-8bfc-bff5378d2b0e
2025-01-18 18:11:20,062 - DEBUG - socket timeout: 60
2025-01-18 18:11:20,139 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=b229b19b-1303-42df-856f-e6099c2f62ec&request_guid=7f28acb7-5d53-4fd4-8bfc-bff5378d2b0e HTTP/1.1" 200 1500
2025-01-18 18:11:20,139 - DEBUG - SUCCESS
2025-01-18 18:11:20,140 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:11:20,140 - DEBUG - ret[code] = None, after post request
2025-01-18 18:11:20,140 - DEBUG - Query id: 01b9cdeb-0002-4c72-0007-08ea001fadae
2025-01-18 18:11:20,140 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245475540245, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:11:20,140 - DEBUG - Cache Entry: (0, 1737245475455922, 0)
2025-01-18 18:11:20,140 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245475540245, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:11:20,140 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:11:20,140 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:20,141 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:20,141 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:11:20,141 - DEBUG - Cache Entry: (0, 1737245475540245, 0)
2025-01-18 18:11:20,141 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:20,141 - DEBUG - sfqid: 01b9cdeb-0002-4c72-0007-08ea001fadae
2025-01-18 18:11:20,141 - DEBUG - query execution done
2025-01-18 18:11:20,141 - DEBUG - SUCCESS
2025-01-18 18:11:20,141 - DEBUG - PUT OR GET: False
2025-01-18 18:11:20,141 - DEBUG - Query result format: arrow
2025-01-18 18:11:20,141 - INFO - Number of results in first chunk: 0
2025-01-18 18:11:20,142 - DEBUG - executing SQL/command
2025-01-18 18:11:20,142 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:11:20,142 - DEBUG - sequence counter: 20
2025-01-18 18:11:20,142 - DEBUG - Request id: e167114e-1c92-475e-879c-c83e5b56c2b8
2025-01-18 18:11:20,143 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:11:20,143 - DEBUG - is_file_transfer: True
2025-01-18 18:11:20,143 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:20,143 - DEBUG - _cmd_query
2025-01-18 18:11:20,143 - DEBUG - serialize_to_dict() called
2025-01-18 18:11:20,143 - DEBUG - Cache Entry: (0, 1737245475540245, 0)
2025-01-18 18:11:20,143 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245475540245, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:11:20,143 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[20], is_file_transfer=[False]
2025-01-18 18:11:20,143 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:11:20,144 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:11:20,144 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:11:20,144 - DEBUG - Request guid: 46c9b656-2b56-4ca5-b622-b53dfe92be17
2025-01-18 18:11:20,144 - DEBUG - socket timeout: 60
2025-01-18 18:11:20,205 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=e167114e-1c92-475e-879c-c83e5b56c2b8&request_guid=46c9b656-2b56-4ca5-b622-b53dfe92be17 HTTP/1.1" 200 1376
2025-01-18 18:11:20,205 - DEBUG - SUCCESS
2025-01-18 18:11:20,206 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:11:20,206 - DEBUG - ret[code] = None, after post request
2025-01-18 18:11:20,206 - DEBUG - Query id: 01b9cdeb-0002-4c72-0007-08ea001fadb2
2025-01-18 18:11:20,206 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245475607273, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:11:20,206 - DEBUG - Cache Entry: (0, 1737245475540245, 0)
2025-01-18 18:11:20,206 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245475607273, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:11:20,206 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:11:20,206 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:20,206 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:20,206 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:11:20,206 - DEBUG - Cache Entry: (0, 1737245475607273, 0)
2025-01-18 18:11:20,206 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:20,206 - DEBUG - sfqid: 01b9cdeb-0002-4c72-0007-08ea001fadb2
2025-01-18 18:11:20,206 - DEBUG - query execution done
2025-01-18 18:11:20,206 - DEBUG - SUCCESS
2025-01-18 18:11:20,206 - DEBUG - PUT OR GET: False
2025-01-18 18:11:20,206 - DEBUG - Query result format: arrow
2025-01-18 18:11:20,206 - INFO - Number of results in first chunk: 0
2025-01-18 18:11:20,207 - DEBUG - executing SQL/command
2025-01-18 18:11:20,207 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:11:20,207 - DEBUG - sequence counter: 21
2025-01-18 18:11:20,207 - DEBUG - Request id: d04b3cab-6580-480e-860f-dc025eff4e25
2025-01-18 18:11:20,208 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:11:20,208 - DEBUG - is_file_transfer: True
2025-01-18 18:11:20,208 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:20,208 - DEBUG - _cmd_query
2025-01-18 18:11:20,208 - DEBUG - serialize_to_dict() called
2025-01-18 18:11:20,208 - DEBUG - Cache Entry: (0, 1737245475607273, 0)
2025-01-18 18:11:20,208 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245475607273, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:11:20,208 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[21], is_file_transfer=[False]
2025-01-18 18:11:20,208 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:11:20,208 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:11:20,208 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:11:20,208 - DEBUG - Request guid: ae567045-a08a-4950-be1a-e17595074026
2025-01-18 18:11:20,208 - DEBUG - socket timeout: 60
2025-01-18 18:11:20,287 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=d04b3cab-6580-480e-860f-dc025eff4e25&request_guid=ae567045-a08a-4950-be1a-e17595074026 HTTP/1.1" 200 1375
2025-01-18 18:11:20,287 - DEBUG - SUCCESS
2025-01-18 18:11:20,287 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:11:20,287 - DEBUG - ret[code] = None, after post request
2025-01-18 18:11:20,287 - DEBUG - Query id: 01b9cdeb-0002-4c5d-0007-08ea001fcb4e
2025-01-18 18:11:20,287 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245475679629, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:11:20,287 - DEBUG - Cache Entry: (0, 1737245475607273, 0)
2025-01-18 18:11:20,287 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245475679629, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:11:20,289 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:11:20,289 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:20,289 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:20,289 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:11:20,289 - DEBUG - Cache Entry: (0, 1737245475679629, 0)
2025-01-18 18:11:20,289 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:20,289 - DEBUG - sfqid: 01b9cdeb-0002-4c5d-0007-08ea001fcb4e
2025-01-18 18:11:20,289 - DEBUG - query execution done
2025-01-18 18:11:20,289 - DEBUG - SUCCESS
2025-01-18 18:11:20,289 - DEBUG - PUT OR GET: False
2025-01-18 18:11:20,289 - DEBUG - Query result format: arrow
2025-01-18 18:11:20,289 - INFO - Number of results in first chunk: 0
2025-01-18 18:11:20,290 - DEBUG - executing SQL/command
2025-01-18 18:11:20,290 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:11:20,290 - DEBUG - sequence counter: 22
2025-01-18 18:11:20,290 - DEBUG - Request id: 36ddc96b-38cb-47b6-900d-fb5b95cd7e88
2025-01-18 18:11:20,290 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:11:20,290 - DEBUG - is_file_transfer: True
2025-01-18 18:11:20,290 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:20,290 - DEBUG - _cmd_query
2025-01-18 18:11:20,290 - DEBUG - serialize_to_dict() called
2025-01-18 18:11:20,290 - DEBUG - Cache Entry: (0, 1737245475679629, 0)
2025-01-18 18:11:20,290 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245475679629, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:11:20,290 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[22], is_file_transfer=[False]
2025-01-18 18:11:20,291 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:11:20,291 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:11:20,291 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:11:20,291 - DEBUG - Request guid: 60ccf14b-264f-48f6-a328-e99aacd59abd
2025-01-18 18:11:20,291 - DEBUG - socket timeout: 60
2025-01-18 18:11:20,383 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=36ddc96b-38cb-47b6-900d-fb5b95cd7e88&request_guid=60ccf14b-264f-48f6-a328-e99aacd59abd HTTP/1.1" 200 2619
2025-01-18 18:11:20,383 - DEBUG - SUCCESS
2025-01-18 18:11:20,383 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:11:20,384 - DEBUG - ret[code] = None, after post request
2025-01-18 18:11:20,384 - DEBUG - Query id: 01b9cdeb-0002-4c78-0007-08ea001f7f86
2025-01-18 18:11:20,384 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245475790873, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:11:20,384 - DEBUG - Cache Entry: (0, 1737245475679629, 0)
2025-01-18 18:11:20,384 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245475790873, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:11:20,384 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:11:20,384 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:20,384 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:11:20,384 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:11:20,384 - DEBUG - Cache Entry: (0, 1737245475790873, 0)
2025-01-18 18:11:20,384 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:20,384 - DEBUG - sfqid: 01b9cdeb-0002-4c78-0007-08ea001f7f86
2025-01-18 18:11:20,384 - DEBUG - query execution done
2025-01-18 18:11:20,384 - DEBUG - SUCCESS
2025-01-18 18:11:20,384 - DEBUG - PUT OR GET: False
2025-01-18 18:11:20,384 - DEBUG - Query result format: arrow
2025-01-18 18:11:20,384 - INFO - Number of results in first chunk: 54
2025-01-18 18:11:20,384 - DEBUG - Execute query [queryID: 01b9cdeb-0002-4c78-0007-08ea001f7f86]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:11:20,384 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:11:20,384 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:11:20,385 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:11:20,385 - DEBUG - Batches read: 0
2025-01-18 18:11:20,385 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:11:20,385 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:11:20,393 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:11:20,394 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:11:21,005 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:11:21,029 - DEBUG - calling method search on class CortexSearchServiceResource after submitting telemetry if enabled
2025-01-18 18:11:21,029 - INFO - performing a HTTP POST call to /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query
2025-01-18 18:11:21,030 - DEBUG - request has path params: {'database': 'DEV_SRC_INGEST', 'schema': 'EPA_PROCESSED', 'service_name': 'CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST'}, query_params: [], header params: {'Accept': 'application/json', 'Content-Type': 'application/json'} and body: QueryRequest(query='Tell me about roundup', columns=['chunk', 'relative_path', 'PRODUCTNAME', 'COMPANYNAME', 'CATEGORY_EPA_TYPE', 'SIGNAL_WORD'], filter=None, limit=10, experimental=None)
2025-01-18 18:11:21,030 - DEBUG - making an http POST call to 'https://gmcpdcz-mt01740.snowflakecomputing.com:443/api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query'
2025-01-18 18:11:21,031 - DEBUG - Resetting dropped connection: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:11:21,492 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query HTTP/1.1" 200 None
2025-01-18 18:11:21,492 - DEBUG - created a RESTResponse with status 200 and length of 18392
2025-01-18 18:11:21,492 - DEBUG - response body: b'{\n  "results" : [ {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\"\\n]",\n    "chunk" : "{\\"content\\":\\"\\\\n# FRQNT PANEL\\\\n\\\\n# Roundup* L&G READY-TO-USE by Moasanto Grass & Weed Killer\\\\n  \\\\n[graphics of weeds dying in 1-7 days]\\\\n* .READY.TO-USE, RBCUIRES NO\\\\n* : SYSTEMIC GRASS AND WEED KILLER FOR SPOT TREATMENT OF UNDESIRABLB VEGETATION\\\\n* . KILLS LARELID E WEEDS AND GRASSES, ROOTS AND ALL\\\\nGUARANTEEDT AESIN NTIH OREAETLACATEN  \\\\nS YTITACTKNGUAWANEEORXOAR KONEKRAE\\\\n* :_DOES NOT HAVE SOIL ACTIVTTY\\\\n+-SUTABLB-FOR- USE-AROUND-FLOWER-BEDS TREES,-SHRUTS FENCES-WALKS -AND-SPOT TRRATMEIT IN LAWNS\\\\nSHRURSAND ORWN RENOXATION (This Taun renovation*phrase no for 24 Oz container sixe.)\\\\n* : THIS 24 OZ BOTTLE CAN BE REFILLED WTIH ONE TABLET OF ROUNDUF QUIK STIK GRASS & WEED KILLER!. SEE STORAGE AND DISPOSAL SECTION FOR MORE INFORMATION. H\\\\nRd thai laST Wlor wg thT p?x3a? Ox ony msR4ng ioTT nmRRan (moved io back panel)NOTICEt- Dwyor-axoumo all soponaibility for mfoty and uce not in macrdan vith axeptablo-raturm at once unopanod (moved to back panel)Keep out ad reach ot chlldren. CAUTION!Soo haak penai for Preenutionary Statemanta and Direstions for Uce.  \\\\nBEST AYAILA&1.  \\\\nBEST AYAILA&1.BPA-Rrg Na S04 320 (moved to back panel)\\\\n## MONSAATO COMRANY\\\\nAGRICULTURAL PRODUCTS-&T LOUIS, MIS$OURI-63167 USA (moved to back panel)  \\\\nACTIVE INGREDIENT:\\\\n|in the form of is isopropylamine k|0.96%|\\\\n| :---: | :---: |\\\\n  \\\\n:*1 ...(delered isems below are moved to back panel)ny non porn(6)CTradamerk of Menseno Company  \\\\nNET 24 fi z (1pi 8m} (delcied)  \\\\n:MONSANTO COMPANY-1993  \\\\nA000.X 1 (print piae",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "SHACKLE HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/SHACKLE_HERBICIDE_524-330.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "this product in 5 to 20 gallons of spray solution per acre. Carefully select proper nozzle and spray pressure to avoid spraying a fine mist. For best results with ground application equipment, use flat spray nozzles. Check for even distribution of spray droplets.For aerial applications. All labeled treatments may be made by aerial equipment where appropriate, provided that the applicator complies with the precautions and restrictions specified on this product\'s labeling. in particular in the \\\\\\"Aerial Equipment\\\\\\" section. Apply this product in 3 to 15 gallons of water per acre. See the \\\\\\"APPLICATION EQUIPMENT AND TECHNIQUES\\\\\\" section of this label for procedures to avoid spray drift that may cause injury to any vegetation not intended for treatment. Use of appropriate buffer zones will help prevent injury to adjacent vegetation.For proper stewardship of aerial applications over the top of Roundup Ready crops, Monsanto recommends that growers and applicators read and follow all precautions and procedures contained in the use guide \\\\\\"A Guide to On-Target Aerial Application.\\\\\\" Copies of this publication are available by calling 1-800-ROUNDUP (1-800-768-6387).ATTENTION: AVOID DRIFT. EXTREME CARE MUST BE USED WHEN APPLYING THIS PRODUCT TO PREVENT INJURY TO DESIRABLE PLANTS AND CROPS WHICH DO NOT CONTAIN A GLYPHOSATE TOLERANT GENE.TANK MIXTURE: Tank mixtures with other herbicides, insecticides, fungicides, micronutrients or foliar fertilizers may result in reduced weed control or crop injury",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "weeds in a Roundup Ready crop by applying glyphosate to the weeds and to the Roundup Ready crop, are protected under several U.S. Patents, including 5,352,605 and 5,633,435. A license to use Roundup Ready seed must be obtained prior to use. Monsanto retains ownership of the gene and process technologies, and the Purchaser of the seed receives the right to use the licensed genes and technologies subject to the limited use license conditions. Seed containing a Roundup Ready trait cannot be used for research and demonstration, reverse engineering or in connection with herbicide registration. Progeny seed containing the Roundup Ready trait cannot be saved for replanting or transferred to others for replanting. Contact your Authorized Monsanto Retailer for information on obtaining a limited use iicense.Sprayer Preparation: It is important that sprayer and mixing equipment be clean and free of pesticide residue before making applications of this product. Follow the cleaning procedures specified on the label of the product(s) previously used. THOROUGHLY CLEAN THE SPRAY TANK AND ALL LINES AND FILTERS TO ELIMINATE POTENTIAL CONTAMINATION FROM OTHER HERBICIDES PRIOR TO MIXING AND APPLYING THIS PRODUCT.For ground broadcast applications. Apply this product in 5 to 20 gallons of spray solution per acre. Carefully select proper nozzle and spray pressure to avoid spraying a fine mist. For best results with ground application equipment, use flat spray nozzles. Check for even distribution of spray",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "chunk" : "\\\\nSincerely, Vuku KWztxd g James A. Tompkins Product Manager 25 Herbicide Branch Registration Division (7505P)\\\\n# MASTER LABEL FOR EPA REG. NO. 524-454\\\\n  \\\\n[Based on EPA approved Text Stamped Nov. 15, 2001] Registered Brand Names:\\\\n# ROUNDUP ORIGINAL II HERBICIDE ROUNDUP ORIGINAL RT HERBICIDE RASCAL PLUS HERBICIDE MON 8709 HERBICIDE HONCHO PLUS HERBICIDE\\\\n  \\\\nTable of Contents for Master Labei\\\\n||Main Label for Food Crop Uses|Page 2|\\\\n| :---: | :---: | :---: |\\\\n|II.|Main Label for Industrial, Turf, & Ornamental Uses|Page 70|\\\\n|III.|Supplementai Labeling|Page 100|\\\\n**See each label part for more detailed table of contents**Master Label 524-454Version: 3-Jun-2000  \\\\n3/119\\\\n# [INSERT BRAND NAME] Herbicide\\\\n  \\\\nComplete Directions for Use  \\\\nEPA Reg. No. 524-454AVOID CONTACT OF HERBICIDE WITH FOLIAGE, GREEN STEMS, EXPOSED NON-WOODY ROOTS OR FRUIT OF CROPS (EXCEPT AS SPECIFIED FOR INDIVIDUAL ROUNDUP READYD CROPS), DESIRABLE PLANTS AND TREES, BECAUSE SEVERE INJURY OR DESTRUCTION MAY RESULT.Herbicide for Roundup Ready\\\\\\" Crops.Selective broad-spectrum weed control in Roundup Ready crops. Non-selective, broad-spectrum weed control for many agricultural systems and farmsteads.A member of the Roundup Family of Agricultural Herbicides by MonsantoThe President\'s Green Chemistry Award was presented in 1996 to Monsanto for its innovative \\\\\\"zero-waste\\\\\\" process in the manufacture of Roundup Herbicide.Not all products recommended on this label are registered for use in California. Check the",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "[INSERT BRAND NAME] will control labeled annual grasses and broadleaf weeds in Roundup Ready Flex cotton. To maximize yield potential, spray cotton early to elininate competing weeds. Many perennial weeds will be controlled or suppressed with one or more applications of this product. In general, an initial application of 1 quart per acre on 1 to 3 inch tall annual grass and broadleaf weeds is recommended. This product may be applied by ground application equipment at rates up to 2 quarts per acre per application postemergence to Roundup Ready Flex cotton. In addition tobroadcast applications, post-directed equipment may be used to achieve weed coverage.NOTE: For specific rates of application and instructions, refer to the \\\\\\"ANNUAL\\\\\\" and \\\\\\"PERENNIAL WEEDS RATE TABLES\\\\\\" in the labei book}et for [INSERT BRAND NAME].PRECAUTIONS, RESTRICTIONS: The maximum rate for any single in-crop application of this product is 2 quarts per acre made using ground application equipment. In-crop application rates above 1 quart per acre made alone, or with the addition of other crop chemical products containing surfactant, may cause a crop response, including leaf speckling or leaf necrosis. Do not exceed a maximum rate of 3 pints per acre of this product when making applications by air. Between layby and 60 percent open bolls, the maximum combined total rate of this product that may be applied is 2 quarts per acre. The maximum combined total of all applications made from crop emergence to 60 percent open",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "Ready Canola (Winter Varieties)|\\\\n|12.4|Roundup Ready Corn 2|\\\\n|12.5|Roundup Ready Gene Cotton|\\\\n|12.6|Roundup Ready Flex Cotton|\\\\n|12.7|Roundup Ready Gene Soybeans|\\\\n|12.8|Roundup Ready Gene Sugar Beets|\\\\n  \\\\n13 13.0 NON-CROP USES AROUND THE FARMSTEAD\\\\n|13.1|General Weed Control and Trim-And-Edge|\\\\n| :---: | :---: |\\\\n|13.2|Greenhouse/Shade house|\\\\n|13.3|Chemical Mowing|\\\\n|13.4|Cut Stumps|\\\\n|13.5|Habitat Management|\\\\n  \\\\n14 14.0 ANNUAL WEEDS RATE SECTION\\\\n|14.1|Annual Weeds -- Tank Mixtures with 2,4-D, Dicamba, or Tordon 22K|\\\\n| :---: | :---: |\\\\n|14.2|Annual Weeds - Hand-Held or Backpack Equipment|\\\\n|14.3|Annual Weeds - Tank Mixtures with Atrazine for Fallow and Reduced Tillage Systems|\\\\n\\\\n* 15 15.0 PERENNIAL WEEDS RATE SECTION\\\\n* 16 16.0 WOODY BRUSH AND TREES RATE SECTION\\\\n* 17 17.0 LIMIT OF WARRANTY AND LIABILITY\\\\n  \\\\n1.0 INGREDIENTS  \\\\nACTIVE INGREDIENT:\\\\n|*Glyphosate, N-(phosphonomethyl)glycine, in the form of its isopropylamine salt .|41.0%|\\\\n| :---: | :---: |\\\\n|OTHER INGREDIENTS:....|59.0%|\\\\n||100.0%|\\\\n*Contains 480 grams per liter or 4 pounds per U.S. gallon of the active ingredient glyphosate, in the form of its isopropylamine salt. Equivalent to 356 grams per liter or 3 pounds per U.S. gallon of the acid, glyphosate.license granted under any non-U.S. patent(s).\\\\n## 2.0 IMPORTANT PHONE NUMBERS\\\\nVersion: 3-Jun-2006Master Label 524-454\\\\n* I. MAIN LABEL FOR FOOD CROP USES\\\\n1. FOR PRODUCT INFORMATION OR ASSISTANCE IN USING THIS PRODUCT, CALL TOLL-FREE,\\\\n1-800-332-3111\\\\n2. IN CASE OF",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "Monsanto suppiemental labeling for this product include all applications of this product that can be made onto the specified Roundup Ready crops during the complete cropping season. DO NOT combine these treatment instructions with those for crops in the \\\\\\"ANNUAL AND PERENNIAL CROPS (ALPHABETICAL)\\\\\\" section of this label that do not contain a glyphosate tolerant gene, unless otherwise directed in this product\'s labeling.MONSANTO COMPANY RECOMMENDS USE OF THIS PRODUCT FOR POSTEMERGENCE (IN- CROP) APPLICATION ONLY ON CROPS DESIGNATED AS CONTAINING A GLYPHOSATE TOLERANT GENE. Applying this product to crops that are not designated as Roundup Ready will result in severe crop injury and yield loss. Avoid contact with foliage, green stems, or fruit of crops, or any desirable plants that do not contain a glyphosate tolerant gene, since severe plant injury or destruction will result. The Roundup Ready designation indicates that the crop contains a patented gene that provides tolerance to this product. Information on Roundup Ready crops may be obtained from your seed supplier or Monsanto representative. Roundup Ready crops must be purchased from an authorized licensed seed supplier.NOTE: Roundup Ready seed, and the method of selectively controlling weeds in a Roundup Ready crop by applying glyphosate to the weeds and to the Roundup Ready crop, are protected under several U.S. Patents, including 5,352,605 and 5,633,435. A license to use Roundup Ready seed must be obtained prior to use. Monsanto",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "General Information\\\\nAVOID CONTACT OF HERBICIDE WITH FOLIAGE, GREEN STEMS, EXPOSED NON-WOODY ROOTS OR FRUIT OF CROPS (EXCEPT AS SPECIFIED FOR INDIVIDUAL ROUNDUP READY CROPS), DESIRABLE PLANTS AND TREES, BECAUSE SEVERE INJURY OR DESTRUCTION MAY RESULT.See \\\\\\"GENERAL INFORMATION\\\\\\" and \\\\\\"MIXING\\\\\\" sections of the label booklet for [INSERT BRAND NAME] for essential product performance information.The Roundup Ready designation indicates that the alfalfa contains a patented gene that provides tolerance to this product. Information on Roundup Ready alfalfa varieties may be obtained from your seed supplier or Monsanto representative. Roundup Ready crop varieties must be purchased from an\'authorized licensed seed supplier.See the \\\\\\"ROUNDUP READY CROPS\\\\\\" section of the [INSERT BRAND NAME] label booklet for general precautionary instructions for use in Roundup Ready crops. Do NOT combine the instructions in this supplemental label with other recommendations listed in the \\\\\\"PASTURE GRASSES, FORAGE LEGUMES, AND RANGELANDS\\\\\\" section of the [INSERT BRAND NAME] label booklet intended for alfalfa varieties that do not contain a glyphosate tolerance gene.\\\\n## DIRECTIONS FOR USE\\\\nThis product will control many troublesome emerged weeds with over-the-top apptications in Roundup Ready alfalfa grown for seed. Over-the-top applications may be made from emergence through the late vegetative stage, and spot treatments may be made from early bud stage through seed harvest.For ground applications with broadcast",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "quarts per acre|\\\\n|Maximum preharvest application rate|1 quart per acre|\\\\nGENERAL PRECAUTIONS/RESTRICTIONS: See the \\\\\\"ROUNDUP READY CROPS\\\\\\" section of this label for general precautionary instructions for use in Roundup Ready crops. See the \\\\\\"GENERAL INFORMATION\\\\\\" section of this label for more information on \\\\\\"Annual Maximum Application Rates.\\\\\\" Refer to individual tank mixture product label for restrictions and precautions, use according to the most restrictive precautionary statements for each product in the tank mixture.\\\\n## Preplant, At-Planting, Preemergence\\\\nUSE INSTRUCTIONS: This product may be applied before, during or after planting.TANK MIXTURES: This product may be tank-mixed with 2,4-D, Banvel or Clarity and applied prior to planting only This product may be tank-mixed with the following products and applied prior to crop emergence. Ensure that the specific product being used in the tank mixture is registered for application prior to emergence of soybeans. Read and follow label directions of all products in the tank mixture.[Insert active ingredient(s) or brand name of product(s) containing the following active ingredients that, at the time of printing, are registered for use preplant, at-planting and/or preemergence to soybeans: alachlor, atrazine, carfentrazone-ethyl, chlorimuron ethyl, clethodim, clomazone, cloransulam-methyl, dimethenamid, dimethenamid-p, fenoxyprop, fluazifop-p-butyl, flufenacet, flumetsulam, flumiclorac pentyl ester, flumioxazin, fomesafen, imazaquin,",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "chunk" : "SEQUENTIAL APPLICATION OF THIS PRODUCT WILL BE REQUIRED TO CONTROL NEW FLUSHES OF WEEDS IN THE ROUNDUP READY SOYBEAN CROP. To control giant ragweed, it is recommended that 1 quart per acre of this product be applied when the weed is 8 to 12 inches tall to increase control and possibly avoid the need for a sequential application.Version: 3-Jun-2006Master Label 524-454\\\\n## 1. MAIN LABEL FOR FOOD CROP USES\\\\nTANK MIXTURES: This product may be tank-mixed with the following products and applied postemergence (in-crop) over the top of Roundup Ready soybeans. Ensure that the specific product being used in the tank mixture is registered for application postemergence (in-crop) to soybeans. Read and follow label directions of all products in the tank mixture.[Insert active ingredient(s) or brand name of product(s) containing the following active ingredients that, at the time of printing, are registered for use postemergence (in-crop) to soybeans: acifluorfen, bentazonchlorimuron ethyl, clethodim, imazethapyr, cloransulam-methyl, fenoxyprop, fluazifop-p- butyl, flumiclorac pentyl ester, fomesafen, imazamox, imazethapyr, lactofen, pendimethalin, quizalofop P-ethyl. sethoxydem, thifensulfuron-methyl.Arrow, Assure II, Basagran, Classic, Cobra, Extreme, FirstRate, Flexstar, Fusilade DX, Fusion, Harmony GT XP, Poast, Poast Plus, Pursuit, Pursuit Plus, Raptor, Reflex, Select, Select MAX, Synchrony STS, Targa, Ultra Blazer.]PRECAUTIONS, RESTRICTIONS: The combined total application from crop emergence",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  } ],\n  "request_id" : "2faa7138-35e4-41a4-8fa8-84e179b9962d"\n}'
2025-01-18 18:11:21,497 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:11:21,498 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:11:22,003 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:11:36,858 - DEBUG - executing SQL/command
2025-01-18 18:11:36,858 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_src_ingest.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACK...]
2025-01-18 18:11:36,858 - DEBUG - sequence counter: 23
2025-01-18 18:11:36,858 - DEBUG - Request id: a4c7789a-9c3b-40fe-a948-29d4f009e0c6
2025-01-18 18:11:36,858 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_src_ingest.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACK...]
2025-01-18 18:11:36,858 - DEBUG - is_file_transfer: True
2025-01-18 18:11:36,858 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:36,858 - DEBUG - _cmd_query
2025-01-18 18:11:36,858 - DEBUG - serialize_to_dict() called
2025-01-18 18:11:36,858 - DEBUG - Cache Entry: (0, 1737245475790873, 0)
2025-01-18 18:11:36,858 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245475790873, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:11:36,858 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_src_ingest.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACK...], sequence_id=[23], is_file_transfer=[False]
2025-01-18 18:11:36,859 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:11:36,859 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:11:36,859 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:11:36,859 - DEBUG - Request guid: 35424843-fc45-4027-9f69-9d946bcfd224
2025-01-18 18:11:36,859 - DEBUG - socket timeout: 60
2025-01-18 18:11:36,990 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=a4c7789a-9c3b-40fe-a948-29d4f009e0c6&request_guid=35424843-fc45-4027-9f69-9d946bcfd224 HTTP/1.1" 200 474
2025-01-18 18:11:36,991 - DEBUG - SUCCESS
2025-01-18 18:11:36,991 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:11:36,991 - DEBUG - ret[code] = 391707, after post request
2025-01-18 18:11:36,991 - DEBUG - Query id: 01b9cdeb-0002-4c76-0007-08ea001fbc3e
2025-01-18 18:11:36,991 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:11:36,991 - DEBUG - sfqid: 01b9cdeb-0002-4c76-0007-08ea001fbc3e
2025-01-18 18:11:36,991 - DEBUG - query execution done
2025-01-18 18:11:36,991 - DEBUG - {'data': {'internalError': False, 'unredactedFromSecureObject': False, 'errorCode': '391707', 'age': 0, 'sqlState': '42000', 'queryId': '01b9cdeb-0002-4c76-0007-08ea001fbc3e', 'line': -1, 'pos': -1, 'type': 'COMPILATION'}, 'code': '391707', 'message': "SQL compilation error: Stage '@DEV_src_ingest.EPA_RAW.PDF_STORE' provided to the function 'DIRECTORY' does not exist or is not authorized.", 'success': False, 'headers': None}
2025-01-18 18:19:34,023 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000218579EF100>
2025-01-18 18:19:34,024 - INFO - Querying the server for client info
2025-01-18 18:19:34,024 - DEBUG - cursor
2025-01-18 18:19:34,024 - DEBUG - executing SQL/command
2025-01-18 18:19:34,024 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:19:34,025 - DEBUG - sequence counter: 24
2025-01-18 18:19:34,025 - DEBUG - Request id: 014f048d-52a6-4f18-9d50-7a544fe1dc9c
2025-01-18 18:19:34,025 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:19:34,025 - DEBUG - is_file_transfer: True
2025-01-18 18:19:34,026 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:34,026 - DEBUG - _cmd_query
2025-01-18 18:19:34,026 - DEBUG - serialize_to_dict() called
2025-01-18 18:19:34,026 - DEBUG - Cache Entry: (0, 1737245475790873, 0)
2025-01-18 18:19:34,027 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245475790873, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:19:34,027 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[24], is_file_transfer=[False]
2025-01-18 18:19:34,028 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:19:34,029 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:19:34,029 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:19:34,029 - DEBUG - Request guid: b52f1a21-8e51-4c3a-9261-59ad24c8abfa
2025-01-18 18:19:34,029 - DEBUG - socket timeout: 60
2025-01-18 18:19:34,032 - DEBUG - Resetting dropped connection: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:19:34,549 - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None
2025-01-18 18:19:34,549 - DEBUG - ocsp_response_cache_uri: file://C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 18:19:34,549 - DEBUG - OCSP_VALIDATION_CACHE size: 310
2025-01-18 18:19:34,549 - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 18:19:34,549 - DEBUG - OCSP dynamic cache server RETRY URL: None
2025-01-18 18:19:34,549 - DEBUG - validating certificate: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:19:34,549 - DEBUG - # of certificates: 4
2025-01-18 18:19:34,550 - DEBUG - subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:19:34,550 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:19:34,551 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:19:34,551 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:19:34,553 - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:19:34,554 - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])
2025-01-18 18:19:34,555 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:19:34,555 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:19:34,557 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:19:34,557 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:19:34,558 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 18:19:34,559 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:19:34,560 - DEBUG - ok
2025-01-18 18:19:34,726 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=014f048d-52a6-4f18-9d50-7a544fe1dc9c&request_guid=b52f1a21-8e51-4c3a-9261-59ad24c8abfa HTTP/1.1" 200 2619
2025-01-18 18:19:34,726 - DEBUG - SUCCESS
2025-01-18 18:19:34,726 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:19:34,726 - DEBUG - ret[code] = None, after post request
2025-01-18 18:19:34,726 - DEBUG - Query id: 01b9cdf3-0002-4c72-0007-08ea001fae02
2025-01-18 18:19:34,726 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245970117565, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:19:34,726 - DEBUG - Cache Entry: (0, 1737245475790873, 0)
2025-01-18 18:19:34,726 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245970117565, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:19:34,726 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:19:34,726 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:34,726 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:34,726 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:19:34,726 - DEBUG - Cache Entry: (0, 1737245970117565, 0)
2025-01-18 18:19:34,726 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:34,726 - DEBUG - sfqid: 01b9cdf3-0002-4c72-0007-08ea001fae02
2025-01-18 18:19:34,726 - DEBUG - query execution done
2025-01-18 18:19:34,727 - DEBUG - SUCCESS
2025-01-18 18:19:34,727 - DEBUG - PUT OR GET: False
2025-01-18 18:19:34,727 - DEBUG - Query result format: arrow
2025-01-18 18:19:34,727 - INFO - Number of results in first chunk: 1
2025-01-18 18:19:34,727 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:19:34,727 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:19:34,727 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:19:34,727 - DEBUG - Batches read: 0
2025-01-18 18:19:34,727 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:19:34,727 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:19:34,727 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x000002185746E3B0>, telemetry enabled: True
2025-01-18 18:19:34,727 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:19:34,727 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:19:34,728 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:19:34,728 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:19:34,730 - DEBUG - cursor
2025-01-18 18:19:34,731 - DEBUG - executing SQL/command
2025-01-18 18:19:34,731 - DEBUG - query: [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:19:34,731 - DEBUG - sequence counter: 25
2025-01-18 18:19:34,731 - DEBUG - Request id: 11b43cd3-1676-4b8a-88e3-2d7efec92925
2025-01-18 18:19:34,731 - DEBUG - running query [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:19:34,731 - DEBUG - is_file_transfer: True
2025-01-18 18:19:34,731 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:34,731 - DEBUG - _cmd_query
2025-01-18 18:19:34,731 - DEBUG - serialize_to_dict() called
2025-01-18 18:19:34,731 - DEBUG - Cache Entry: (0, 1737245970117565, 0)
2025-01-18 18:19:34,731 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245970117565, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:19:34,731 - DEBUG - sql=[SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...], sequence_id=[25], is_file_transfer=[False]
2025-01-18 18:19:34,732 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:19:34,732 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:19:34,732 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:19:34,732 - DEBUG - Request guid: 53b1bc67-a6a6-4ab8-9709-8ba56200ee75
2025-01-18 18:19:34,732 - DEBUG - socket timeout: 60
2025-01-18 18:19:34,892 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=11b43cd3-1676-4b8a-88e3-2d7efec92925&request_guid=53b1bc67-a6a6-4ab8-9709-8ba56200ee75 HTTP/1.1" 200 None
2025-01-18 18:19:34,893 - DEBUG - SUCCESS
2025-01-18 18:19:34,893 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:19:34,893 - DEBUG - ret[code] = None, after post request
2025-01-18 18:19:34,893 - DEBUG - Query id: 01b9cdf3-0002-4c78-0007-08ea00201022
2025-01-18 18:19:34,893 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245970292274, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:19:34,893 - DEBUG - Cache Entry: (0, 1737245970117565, 0)
2025-01-18 18:19:34,893 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245970292274, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:19:34,893 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:19:34,893 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:34,893 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:34,893 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:19:34,893 - DEBUG - Cache Entry: (0, 1737245970292274, 0)
2025-01-18 18:19:34,893 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:34,893 - DEBUG - sfqid: 01b9cdf3-0002-4c78-0007-08ea00201022
2025-01-18 18:19:34,894 - DEBUG - query execution done
2025-01-18 18:19:34,894 - DEBUG - SUCCESS
2025-01-18 18:19:34,894 - DEBUG - PUT OR GET: False
2025-01-18 18:19:34,894 - DEBUG - Query result format: arrow
2025-01-18 18:19:34,894 - INFO - Number of results in first chunk: 1
2025-01-18 18:19:34,894 - DEBUG - Execute query [queryID: 01b9cdf3-0002-4c78-0007-08ea00201022] 
        SELECT LOCATION, LATITUDE, LONGITUDE
        FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS 
        WHERE USER_ID = 'default_user'
        
2025-01-18 18:19:34,894 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:19:34,894 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:19:34,894 - DEBUG - Arrow chunk info: batchCount 1, columnCount 3, use_numpy: 0
2025-01-18 18:19:34,894 - DEBUG - Batches read: 0
2025-01-18 18:19:34,894 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:19:34,894 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:19:34,897 - DEBUG - executing SQL/command
2025-01-18 18:19:34,897 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:19:34,897 - DEBUG - sequence counter: 26
2025-01-18 18:19:34,897 - DEBUG - Request id: ab7c87ce-1f98-47a0-904b-316b9c6c16be
2025-01-18 18:19:34,897 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:19:34,897 - DEBUG - is_file_transfer: True
2025-01-18 18:19:34,897 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:34,898 - DEBUG - _cmd_query
2025-01-18 18:19:34,898 - DEBUG - serialize_to_dict() called
2025-01-18 18:19:34,898 - DEBUG - Cache Entry: (0, 1737245970292274, 0)
2025-01-18 18:19:34,898 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245970292274, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:19:34,898 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[26], is_file_transfer=[False]
2025-01-18 18:19:34,898 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:19:34,899 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:19:34,899 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:19:34,899 - DEBUG - Request guid: 6e4f7fa8-00a4-4a70-9bc2-8b2c0a610ebf
2025-01-18 18:19:34,899 - DEBUG - socket timeout: 60
2025-01-18 18:19:34,979 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=ab7c87ce-1f98-47a0-904b-316b9c6c16be&request_guid=6e4f7fa8-00a4-4a70-9bc2-8b2c0a610ebf HTTP/1.1" 200 1501
2025-01-18 18:19:34,980 - DEBUG - SUCCESS
2025-01-18 18:19:34,980 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:19:34,980 - DEBUG - ret[code] = None, after post request
2025-01-18 18:19:34,980 - DEBUG - Query id: 01b9cdf3-0002-4c76-0007-08ea001fbca6
2025-01-18 18:19:34,980 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245970370361, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:19:34,980 - DEBUG - Cache Entry: (0, 1737245970292274, 0)
2025-01-18 18:19:34,980 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245970370361, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:19:34,981 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:19:34,981 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:34,981 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:34,981 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:19:34,981 - DEBUG - Cache Entry: (0, 1737245970370361, 0)
2025-01-18 18:19:34,981 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:34,981 - DEBUG - sfqid: 01b9cdf3-0002-4c76-0007-08ea001fbca6
2025-01-18 18:19:34,981 - DEBUG - query execution done
2025-01-18 18:19:34,981 - DEBUG - SUCCESS
2025-01-18 18:19:34,981 - DEBUG - PUT OR GET: False
2025-01-18 18:19:34,981 - DEBUG - Query result format: arrow
2025-01-18 18:19:34,981 - INFO - Number of results in first chunk: 0
2025-01-18 18:19:34,983 - DEBUG - executing SQL/command
2025-01-18 18:19:34,983 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:19:34,983 - DEBUG - sequence counter: 27
2025-01-18 18:19:34,983 - DEBUG - Request id: 5e126c43-5f6a-4853-a47d-74b5411756c8
2025-01-18 18:19:34,983 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:19:34,984 - DEBUG - is_file_transfer: True
2025-01-18 18:19:34,984 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:34,984 - DEBUG - _cmd_query
2025-01-18 18:19:34,984 - DEBUG - serialize_to_dict() called
2025-01-18 18:19:34,984 - DEBUG - Cache Entry: (0, 1737245970370361, 0)
2025-01-18 18:19:34,984 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245970370361, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:19:34,984 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[27], is_file_transfer=[False]
2025-01-18 18:19:34,984 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:19:34,986 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:19:34,986 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:19:34,986 - DEBUG - Request guid: cbb89851-6f35-4aef-833e-2dcaaa4d07ba
2025-01-18 18:19:34,986 - DEBUG - socket timeout: 60
2025-01-18 18:19:35,054 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=5e126c43-5f6a-4853-a47d-74b5411756c8&request_guid=cbb89851-6f35-4aef-833e-2dcaaa4d07ba HTTP/1.1" 200 1371
2025-01-18 18:19:35,055 - DEBUG - SUCCESS
2025-01-18 18:19:35,055 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:19:35,055 - DEBUG - ret[code] = None, after post request
2025-01-18 18:19:35,055 - DEBUG - Query id: 01b9cdf3-0002-4c79-0007-08ea0020009e
2025-01-18 18:19:35,055 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245970434000, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:19:35,055 - DEBUG - Cache Entry: (0, 1737245970370361, 0)
2025-01-18 18:19:35,055 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245970434000, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:19:35,055 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:19:35,055 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:35,055 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:35,055 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:19:35,055 - DEBUG - Cache Entry: (0, 1737245970434000, 0)
2025-01-18 18:19:35,056 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:35,056 - DEBUG - sfqid: 01b9cdf3-0002-4c79-0007-08ea0020009e
2025-01-18 18:19:35,056 - DEBUG - query execution done
2025-01-18 18:19:35,056 - DEBUG - SUCCESS
2025-01-18 18:19:35,056 - DEBUG - PUT OR GET: False
2025-01-18 18:19:35,056 - DEBUG - Query result format: arrow
2025-01-18 18:19:35,056 - INFO - Number of results in first chunk: 0
2025-01-18 18:19:35,056 - DEBUG - executing SQL/command
2025-01-18 18:19:35,056 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:19:35,056 - DEBUG - sequence counter: 28
2025-01-18 18:19:35,056 - DEBUG - Request id: 47ccc38a-fbc4-4f36-b28d-4407774f0d75
2025-01-18 18:19:35,056 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:19:35,056 - DEBUG - is_file_transfer: True
2025-01-18 18:19:35,057 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:35,057 - DEBUG - _cmd_query
2025-01-18 18:19:35,057 - DEBUG - serialize_to_dict() called
2025-01-18 18:19:35,057 - DEBUG - Cache Entry: (0, 1737245970434000, 0)
2025-01-18 18:19:35,057 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245970434000, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:19:35,057 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[28], is_file_transfer=[False]
2025-01-18 18:19:35,058 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:19:35,058 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:19:35,058 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:19:35,058 - DEBUG - Request guid: 7a8ab28a-1cb2-4a25-82ec-eba88887f0c8
2025-01-18 18:19:35,058 - DEBUG - socket timeout: 60
2025-01-18 18:19:35,114 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=47ccc38a-fbc4-4f36-b28d-4407774f0d75&request_guid=7a8ab28a-1cb2-4a25-82ec-eba88887f0c8 HTTP/1.1" 200 1375
2025-01-18 18:19:35,116 - DEBUG - SUCCESS
2025-01-18 18:19:35,116 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:19:35,116 - DEBUG - ret[code] = None, after post request
2025-01-18 18:19:35,116 - DEBUG - Query id: 01b9cdf3-0002-4c76-0007-08ea001fbcaa
2025-01-18 18:19:35,116 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245970518587, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:19:35,116 - DEBUG - Cache Entry: (0, 1737245970434000, 0)
2025-01-18 18:19:35,116 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245970518587, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:19:35,116 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:19:35,116 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:35,116 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:35,116 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:19:35,116 - DEBUG - Cache Entry: (0, 1737245970518587, 0)
2025-01-18 18:19:35,116 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:35,117 - DEBUG - sfqid: 01b9cdf3-0002-4c76-0007-08ea001fbcaa
2025-01-18 18:19:35,117 - DEBUG - query execution done
2025-01-18 18:19:35,117 - DEBUG - SUCCESS
2025-01-18 18:19:35,117 - DEBUG - PUT OR GET: False
2025-01-18 18:19:35,117 - DEBUG - Query result format: arrow
2025-01-18 18:19:35,117 - INFO - Number of results in first chunk: 0
2025-01-18 18:19:35,117 - DEBUG - executing SQL/command
2025-01-18 18:19:35,118 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:19:35,118 - DEBUG - sequence counter: 29
2025-01-18 18:19:35,118 - DEBUG - Request id: 07ce2096-fa9a-42fa-9b77-c66ac8f18ff2
2025-01-18 18:19:35,118 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:19:35,118 - DEBUG - is_file_transfer: True
2025-01-18 18:19:35,118 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:35,118 - DEBUG - _cmd_query
2025-01-18 18:19:35,118 - DEBUG - serialize_to_dict() called
2025-01-18 18:19:35,118 - DEBUG - Cache Entry: (0, 1737245970518587, 0)
2025-01-18 18:19:35,118 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245970518587, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:19:35,118 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[29], is_file_transfer=[False]
2025-01-18 18:19:35,119 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:19:35,119 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:19:35,119 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:19:35,119 - DEBUG - Request guid: 649026bb-f5b2-4fcd-b866-2c62ba5e7416
2025-01-18 18:19:35,119 - DEBUG - socket timeout: 60
2025-01-18 18:19:35,228 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=07ce2096-fa9a-42fa-9b77-c66ac8f18ff2&request_guid=649026bb-f5b2-4fcd-b866-2c62ba5e7416 HTTP/1.1" 200 2619
2025-01-18 18:19:35,228 - DEBUG - SUCCESS
2025-01-18 18:19:35,228 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:19:35,228 - DEBUG - ret[code] = None, after post request
2025-01-18 18:19:35,228 - DEBUG - Query id: 01b9cdf3-0002-4c72-0007-08ea001fae06
2025-01-18 18:19:35,228 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245970629672, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:19:35,228 - DEBUG - Cache Entry: (0, 1737245970518587, 0)
2025-01-18 18:19:35,228 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245970629672, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:19:35,228 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:19:35,228 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:35,229 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:35,229 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:19:35,229 - DEBUG - Cache Entry: (0, 1737245970629672, 0)
2025-01-18 18:19:35,229 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:35,229 - DEBUG - sfqid: 01b9cdf3-0002-4c72-0007-08ea001fae06
2025-01-18 18:19:35,229 - DEBUG - query execution done
2025-01-18 18:19:35,229 - DEBUG - SUCCESS
2025-01-18 18:19:35,229 - DEBUG - PUT OR GET: False
2025-01-18 18:19:35,229 - DEBUG - Query result format: arrow
2025-01-18 18:19:35,229 - INFO - Number of results in first chunk: 54
2025-01-18 18:19:35,229 - DEBUG - Execute query [queryID: 01b9cdf3-0002-4c72-0007-08ea001fae06]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:19:35,229 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:19:35,229 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:19:35,229 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:19:35,229 - DEBUG - Batches read: 0
2025-01-18 18:19:35,229 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:19:35,229 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:19:49,670 - DEBUG - reading configuration file from C:\Users\ajjay\AppData\Local\snowflake\config.toml
2025-01-18 18:19:49,673 - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.10.11, Platform: Windows-10-10.0.22635-SP0
2025-01-18 18:19:49,674 - DEBUG - connect
2025-01-18 18:19:49,674 - DEBUG - __config
2025-01-18 18:19:49,674 - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:19:49,674 - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:19:49,674 - DEBUG - use_numpy: False
2025-01-18 18:19:49,674 - DEBUG - initialized
2025-01-18 18:19:49,674 - DEBUG - REST API object was created: gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:19:49,760 - DEBUG - Public key fingerprint is SHA256:MMhnSja/3AZz/s91ePEYdo5p27RfYwIdt7+BsyWAYGg=
2025-01-18 18:19:49,762 - DEBUG - authenticate
2025-01-18 18:19:49,763 - DEBUG - account=gmcpdcz-mt01740, user=preciousjunk, database=DEV_SRC_INGEST, schema=EPA_PROCESSED, warehouse=app_wh, role=app_role, request_id=515d31e7-da61-4a88-9cc7-5dabc56a9c13
2025-01-18 18:19:49,763 - DEBUG - body['data']: {'CLIENT_APP_ID': 'PythonConnector', 'CLIENT_APP_VERSION': '3.12.4', 'SVN_REVISION': None, 'ACCOUNT_NAME': 'gmcpdcz-mt01740', 'LOGIN_NAME': 'preciousjunk', 'CLIENT_ENVIRONMENT': {'APPLICATION': 'streamlit', 'OS': 'Windows', 'OS_VERSION': 'Windows-10-10.0.22635-SP0', 'PYTHON_VERSION': '3.10.11', 'PYTHON_RUNTIME': 'CPython', 'PYTHON_COMPILER': 'MSC v.1929 64 bit (AMD64)', 'OCSP_MODE': 'FAIL_OPEN', 'TRACING': 10, 'LOGIN_TIMEOUT': None, 'NETWORK_TIMEOUT': None, 'SOCKET_TIMEOUT': None}, 'AUTHENTICATOR': 'SNOWFLAKE_JWT', 'TOKEN': '******', 'SESSION_PARAMETERS': {'CLIENT_PREFETCH_THREADS': 4}}
2025-01-18 18:19:49,763 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 18:19:49,763 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 18:19:49,764 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:19:49,764 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:19:49,764 - DEBUG - Request guid: c29ca215-02b4-49ce-a800-9648f724d836
2025-01-18 18:19:49,764 - DEBUG - socket timeout: 10
2025-01-18 18:19:49,768 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:19:50,240 - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None
2025-01-18 18:19:50,240 - DEBUG - ocsp_response_cache_uri: file://C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 18:19:50,241 - DEBUG - OCSP_VALIDATION_CACHE size: 310
2025-01-18 18:19:50,241 - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 18:19:50,241 - DEBUG - OCSP dynamic cache server RETRY URL: None
2025-01-18 18:19:50,241 - DEBUG - validating certificate: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:19:50,241 - DEBUG - # of certificates: 4
2025-01-18 18:19:50,242 - DEBUG - subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:19:50,242 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:19:50,243 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:19:50,243 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:19:50,244 - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:19:50,246 - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])
2025-01-18 18:19:50,247 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:19:50,247 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:19:50,249 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:19:50,249 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:19:50,251 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 18:19:50,251 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:19:50,253 - DEBUG - ok
2025-01-18 18:19:50,374 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /session/v1/login-request?request_id=515d31e7-da61-4a88-9cc7-5dabc56a9c13&databaseName=DEV_SRC_INGEST&schemaName=EPA_PROCESSED&warehouse=app_wh&roleName=app_role&request_guid=c29ca215-02b4-49ce-a800-9648f724d836 HTTP/1.1" 200 1783
2025-01-18 18:19:50,374 - DEBUG - SUCCESS
2025-01-18 18:19:50,374 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:19:50,374 - DEBUG - ret[code] = None, after post request
2025-01-18 18:19:50,374 - DEBUG - completed authentication
2025-01-18 18:19:50,374 - DEBUG - token = ******
2025-01-18 18:19:50,374 - DEBUG - master_token = ******
2025-01-18 18:19:50,374 - DEBUG - id_token = NULL
2025-01-18 18:19:50,374 - DEBUG - mfa_token = NULL
2025-01-18 18:19:50,377 - DEBUG - cursor
2025-01-18 18:19:50,378 - INFO - Snowpark Session information: 
"version" : 1.26.0,
"python.version" : 3.10.11,
"python.connector.version" : 3.12.4,
"python.connector.session.id" : 1980125954400798,
"os.name" : Windows

2025-01-18 18:19:50,378 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x0000021857D531C0>
2025-01-18 18:19:50,379 - INFO - Querying the server for client info
2025-01-18 18:19:50,379 - DEBUG - cursor
2025-01-18 18:19:50,379 - DEBUG - executing SQL/command
2025-01-18 18:19:50,379 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:19:50,379 - DEBUG - sequence counter: 1
2025-01-18 18:19:50,379 - DEBUG - Request id: 68f25b6e-40bd-4605-9d8a-d87abbe9c614
2025-01-18 18:19:50,379 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:19:50,379 - DEBUG - is_file_transfer: True
2025-01-18 18:19:50,379 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:50,379 - DEBUG - _cmd_query
2025-01-18 18:19:50,380 - DEBUG - serialize_to_dict() called
2025-01-18 18:19:50,380 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[1], is_file_transfer=[False]
2025-01-18 18:19:50,381 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:19:50,381 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:19:50,381 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:19:50,381 - DEBUG - Request guid: 48529c3d-2c8d-4f80-8092-16a0e5c414f4
2025-01-18 18:19:50,381 - DEBUG - socket timeout: 60
2025-01-18 18:19:50,488 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=68f25b6e-40bd-4605-9d8a-d87abbe9c614&request_guid=48529c3d-2c8d-4f80-8092-16a0e5c414f4 HTTP/1.1" 200 2618
2025-01-18 18:19:50,488 - DEBUG - SUCCESS
2025-01-18 18:19:50,488 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:19:50,488 - DEBUG - ret[code] = None, after post request
2025-01-18 18:19:50,488 - DEBUG - Query id: 01b9cdf3-0002-4c5d-0007-08ea001fcbda
2025-01-18 18:19:50,488 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245985890850, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:19:50,488 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245985890850, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:19:50,488 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:19:50,488 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:50,488 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:50,488 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:19:50,488 - DEBUG - Cache Entry: (0, 1737245985890850, 0)
2025-01-18 18:19:50,489 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:50,489 - DEBUG - sfqid: 01b9cdf3-0002-4c5d-0007-08ea001fcbda
2025-01-18 18:19:50,489 - DEBUG - query execution done
2025-01-18 18:19:50,489 - DEBUG - SUCCESS
2025-01-18 18:19:50,489 - DEBUG - PUT OR GET: False
2025-01-18 18:19:50,489 - DEBUG - Query result format: arrow
2025-01-18 18:19:50,489 - INFO - Number of results in first chunk: 1
2025-01-18 18:19:50,489 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:19:50,489 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:19:50,489 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:19:50,489 - DEBUG - Batches read: 0
2025-01-18 18:19:50,489 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:19:50,489 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:19:50,489 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000218315307F0>, telemetry enabled: True
2025-01-18 18:19:50,490 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:19:50,490 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:19:50,490 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:19:50,490 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:19:50,491 - DEBUG - executing SQL/command
2025-01-18 18:19:50,491 - DEBUG - query: [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:19:50,491 - DEBUG - sequence counter: 2
2025-01-18 18:19:50,491 - DEBUG - Request id: 2b9f6800-7d32-4907-b8ea-fb43ec069c8c
2025-01-18 18:19:50,491 - DEBUG - running query [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:19:50,491 - DEBUG - is_file_transfer: True
2025-01-18 18:19:50,491 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:50,491 - DEBUG - _cmd_query
2025-01-18 18:19:50,491 - DEBUG - serialize_to_dict() called
2025-01-18 18:19:50,491 - DEBUG - Cache Entry: (0, 1737245985890850, 0)
2025-01-18 18:19:50,491 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245985890850, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:19:50,491 - DEBUG - sql=[SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...], sequence_id=[2], is_file_transfer=[False]
2025-01-18 18:19:50,493 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:19:50,493 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:19:50,493 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:19:50,493 - DEBUG - Request guid: 51be04ea-ca5f-49bb-99bd-20cde610523e
2025-01-18 18:19:50,493 - DEBUG - socket timeout: 60
2025-01-18 18:19:50,637 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=2b9f6800-7d32-4907-b8ea-fb43ec069c8c&request_guid=51be04ea-ca5f-49bb-99bd-20cde610523e HTTP/1.1" 200 2117
2025-01-18 18:19:50,638 - DEBUG - SUCCESS
2025-01-18 18:19:50,638 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:19:50,638 - DEBUG - ret[code] = None, after post request
2025-01-18 18:19:50,638 - DEBUG - Query id: 01b9cdf3-0002-4c5d-0007-08ea001fcbde
2025-01-18 18:19:50,638 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245986004981, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:19:50,638 - DEBUG - Cache Entry: (0, 1737245985890850, 0)
2025-01-18 18:19:50,638 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245986004981, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:19:50,639 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:19:50,639 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:50,639 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:50,639 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:19:50,639 - DEBUG - Cache Entry: (0, 1737245986004981, 0)
2025-01-18 18:19:50,639 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:50,639 - DEBUG - sfqid: 01b9cdf3-0002-4c5d-0007-08ea001fcbde
2025-01-18 18:19:50,639 - DEBUG - query execution done
2025-01-18 18:19:50,639 - DEBUG - SUCCESS
2025-01-18 18:19:50,639 - DEBUG - PUT OR GET: False
2025-01-18 18:19:50,639 - DEBUG - Query result format: arrow
2025-01-18 18:19:50,639 - INFO - Number of results in first chunk: 1
2025-01-18 18:19:50,639 - DEBUG - Execute query [queryID: 01b9cdf3-0002-4c5d-0007-08ea001fcbde] 
        SELECT LOCATION, LATITUDE, LONGITUDE
        FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS 
        WHERE USER_ID = 'default_user'
        
2025-01-18 18:19:50,639 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:19:50,639 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:19:50,639 - DEBUG - Arrow chunk info: batchCount 1, columnCount 3, use_numpy: 0
2025-01-18 18:19:50,639 - DEBUG - Batches read: 0
2025-01-18 18:19:50,639 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:19:50,640 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:19:50,643 - DEBUG - executing SQL/command
2025-01-18 18:19:50,644 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:19:50,644 - DEBUG - sequence counter: 3
2025-01-18 18:19:50,644 - DEBUG - Request id: 8f8c054f-d8e7-4b6e-a18b-ff8864b3e1a5
2025-01-18 18:19:50,644 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:19:50,644 - DEBUG - is_file_transfer: True
2025-01-18 18:19:50,644 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:50,644 - DEBUG - _cmd_query
2025-01-18 18:19:50,644 - DEBUG - serialize_to_dict() called
2025-01-18 18:19:50,644 - DEBUG - Cache Entry: (0, 1737245986004981, 0)
2025-01-18 18:19:50,644 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245986004981, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:19:50,644 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[3], is_file_transfer=[False]
2025-01-18 18:19:50,646 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:19:50,646 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:19:50,646 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:19:50,646 - DEBUG - Request guid: 53852eb4-51e1-4ff6-a6c8-f466722a4e1b
2025-01-18 18:19:50,646 - DEBUG - socket timeout: 60
2025-01-18 18:19:50,731 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=8f8c054f-d8e7-4b6e-a18b-ff8864b3e1a5&request_guid=53852eb4-51e1-4ff6-a6c8-f466722a4e1b HTTP/1.1" 200 1502
2025-01-18 18:19:50,731 - DEBUG - SUCCESS
2025-01-18 18:19:50,731 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:19:50,731 - DEBUG - ret[code] = None, after post request
2025-01-18 18:19:50,731 - DEBUG - Query id: 01b9cdf3-0002-4c77-0007-08ea001fdc1e
2025-01-18 18:19:50,731 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245986128531, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:19:50,731 - DEBUG - Cache Entry: (0, 1737245986004981, 0)
2025-01-18 18:19:50,732 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245986128531, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:19:50,732 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:19:50,732 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:50,732 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:50,732 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:19:50,732 - DEBUG - Cache Entry: (0, 1737245986128531, 0)
2025-01-18 18:19:50,732 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:50,732 - DEBUG - sfqid: 01b9cdf3-0002-4c77-0007-08ea001fdc1e
2025-01-18 18:19:50,732 - DEBUG - query execution done
2025-01-18 18:19:50,732 - DEBUG - SUCCESS
2025-01-18 18:19:50,732 - DEBUG - PUT OR GET: False
2025-01-18 18:19:50,733 - DEBUG - Query result format: arrow
2025-01-18 18:19:50,733 - INFO - Number of results in first chunk: 0
2025-01-18 18:19:50,734 - DEBUG - executing SQL/command
2025-01-18 18:19:50,734 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:19:50,734 - DEBUG - sequence counter: 4
2025-01-18 18:19:50,734 - DEBUG - Request id: ace66966-101a-4251-bc22-f52c2c22bd14
2025-01-18 18:19:50,734 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:19:50,734 - DEBUG - is_file_transfer: True
2025-01-18 18:19:50,734 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:50,734 - DEBUG - _cmd_query
2025-01-18 18:19:50,734 - DEBUG - serialize_to_dict() called
2025-01-18 18:19:50,734 - DEBUG - Cache Entry: (0, 1737245986128531, 0)
2025-01-18 18:19:50,734 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245986128531, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:19:50,734 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[4], is_file_transfer=[False]
2025-01-18 18:19:50,735 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:19:50,735 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:19:50,735 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:19:50,735 - DEBUG - Request guid: ee36d495-76bb-43ce-9165-3405c58cc71d
2025-01-18 18:19:50,735 - DEBUG - socket timeout: 60
2025-01-18 18:19:50,811 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=ace66966-101a-4251-bc22-f52c2c22bd14&request_guid=ee36d495-76bb-43ce-9165-3405c58cc71d HTTP/1.1" 200 1374
2025-01-18 18:19:50,812 - DEBUG - SUCCESS
2025-01-18 18:19:50,812 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:19:50,812 - DEBUG - ret[code] = None, after post request
2025-01-18 18:19:50,812 - DEBUG - Query id: 01b9cdf3-0002-4d87-0007-08ea001fe502
2025-01-18 18:19:50,812 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245986214916, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:19:50,812 - DEBUG - Cache Entry: (0, 1737245986128531, 0)
2025-01-18 18:19:50,812 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245986214916, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:19:50,812 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:19:50,812 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:50,813 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:50,813 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:19:50,813 - DEBUG - Cache Entry: (0, 1737245986214916, 0)
2025-01-18 18:19:50,813 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:50,813 - DEBUG - sfqid: 01b9cdf3-0002-4d87-0007-08ea001fe502
2025-01-18 18:19:50,813 - DEBUG - query execution done
2025-01-18 18:19:50,813 - DEBUG - SUCCESS
2025-01-18 18:19:50,813 - DEBUG - PUT OR GET: False
2025-01-18 18:19:50,813 - DEBUG - Query result format: arrow
2025-01-18 18:19:50,813 - INFO - Number of results in first chunk: 0
2025-01-18 18:19:50,814 - DEBUG - executing SQL/command
2025-01-18 18:19:50,814 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:19:50,814 - DEBUG - sequence counter: 5
2025-01-18 18:19:50,814 - DEBUG - Request id: dad48dcb-7cd4-4500-9025-72a52f6137ec
2025-01-18 18:19:50,814 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:19:50,814 - DEBUG - is_file_transfer: True
2025-01-18 18:19:50,814 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:50,814 - DEBUG - _cmd_query
2025-01-18 18:19:50,814 - DEBUG - serialize_to_dict() called
2025-01-18 18:19:50,814 - DEBUG - Cache Entry: (0, 1737245986214916, 0)
2025-01-18 18:19:50,814 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245986214916, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:19:50,814 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[5], is_file_transfer=[False]
2025-01-18 18:19:50,815 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:19:50,815 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:19:50,815 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:19:50,815 - DEBUG - Request guid: ddfc3019-cfab-42e5-a181-977d3c6cf1fe
2025-01-18 18:19:50,815 - DEBUG - socket timeout: 60
2025-01-18 18:19:50,899 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=dad48dcb-7cd4-4500-9025-72a52f6137ec&request_guid=ddfc3019-cfab-42e5-a181-977d3c6cf1fe HTTP/1.1" 200 1373
2025-01-18 18:19:50,899 - DEBUG - SUCCESS
2025-01-18 18:19:50,899 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:19:50,899 - DEBUG - ret[code] = None, after post request
2025-01-18 18:19:50,899 - DEBUG - Query id: 01b9cdf3-0002-4c78-0007-08ea00201026
2025-01-18 18:19:50,900 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245986302671, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:19:50,900 - DEBUG - Cache Entry: (0, 1737245986214916, 0)
2025-01-18 18:19:50,900 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245986302671, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:19:50,900 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:19:50,900 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:50,900 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:50,900 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:19:50,900 - DEBUG - Cache Entry: (0, 1737245986302671, 0)
2025-01-18 18:19:50,900 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:50,900 - DEBUG - sfqid: 01b9cdf3-0002-4c78-0007-08ea00201026
2025-01-18 18:19:50,900 - DEBUG - query execution done
2025-01-18 18:19:50,900 - DEBUG - SUCCESS
2025-01-18 18:19:50,900 - DEBUG - PUT OR GET: False
2025-01-18 18:19:50,900 - DEBUG - Query result format: arrow
2025-01-18 18:19:50,900 - INFO - Number of results in first chunk: 0
2025-01-18 18:19:50,901 - DEBUG - executing SQL/command
2025-01-18 18:19:50,901 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:19:50,901 - DEBUG - sequence counter: 6
2025-01-18 18:19:50,901 - DEBUG - Request id: 53e89220-9624-49f9-a8ba-ef378623fcdf
2025-01-18 18:19:50,901 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:19:50,901 - DEBUG - is_file_transfer: True
2025-01-18 18:19:50,902 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:50,902 - DEBUG - _cmd_query
2025-01-18 18:19:50,902 - DEBUG - serialize_to_dict() called
2025-01-18 18:19:50,902 - DEBUG - Cache Entry: (0, 1737245986302671, 0)
2025-01-18 18:19:50,902 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245986302671, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:19:50,902 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[6], is_file_transfer=[False]
2025-01-18 18:19:50,902 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:19:50,902 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:19:50,903 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:19:50,903 - DEBUG - Request guid: 595c3430-b782-41ec-a59e-1b921c54dbcf
2025-01-18 18:19:50,903 - DEBUG - socket timeout: 60
2025-01-18 18:19:51,056 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=53e89220-9624-49f9-a8ba-ef378623fcdf&request_guid=595c3430-b782-41ec-a59e-1b921c54dbcf HTTP/1.1" 200 2616
2025-01-18 18:19:51,056 - DEBUG - SUCCESS
2025-01-18 18:19:51,057 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:19:51,057 - DEBUG - ret[code] = None, after post request
2025-01-18 18:19:51,057 - DEBUG - Query id: 01b9cdf3-0002-4c77-0007-08ea001fdc22
2025-01-18 18:19:51,057 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245986432245, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:19:51,057 - DEBUG - Cache Entry: (0, 1737245986302671, 0)
2025-01-18 18:19:51,057 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245986432245, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:19:51,057 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:19:51,057 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:51,057 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:51,057 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:19:51,057 - DEBUG - Cache Entry: (0, 1737245986432245, 0)
2025-01-18 18:19:51,057 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:51,057 - DEBUG - sfqid: 01b9cdf3-0002-4c77-0007-08ea001fdc22
2025-01-18 18:19:51,057 - DEBUG - query execution done
2025-01-18 18:19:51,057 - DEBUG - SUCCESS
2025-01-18 18:19:51,057 - DEBUG - PUT OR GET: False
2025-01-18 18:19:51,057 - DEBUG - Query result format: arrow
2025-01-18 18:19:51,057 - INFO - Number of results in first chunk: 54
2025-01-18 18:19:51,057 - DEBUG - Execute query [queryID: 01b9cdf3-0002-4c77-0007-08ea001fdc22]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:19:51,057 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:19:51,057 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:19:51,057 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:19:51,058 - DEBUG - Batches read: 0
2025-01-18 18:19:51,058 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:19:51,058 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:19:59,596 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x0000021857D531C0>
2025-01-18 18:19:59,597 - INFO - Querying the server for client info
2025-01-18 18:19:59,597 - DEBUG - cursor
2025-01-18 18:19:59,597 - DEBUG - executing SQL/command
2025-01-18 18:19:59,597 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:19:59,597 - DEBUG - sequence counter: 7
2025-01-18 18:19:59,597 - DEBUG - Request id: 51922015-2ae9-46ee-9eb9-946f016c2322
2025-01-18 18:19:59,597 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:19:59,597 - DEBUG - is_file_transfer: True
2025-01-18 18:19:59,597 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:59,597 - DEBUG - _cmd_query
2025-01-18 18:19:59,597 - DEBUG - serialize_to_dict() called
2025-01-18 18:19:59,597 - DEBUG - Cache Entry: (0, 1737245986432245, 0)
2025-01-18 18:19:59,597 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245986432245, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:19:59,597 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[7], is_file_transfer=[False]
2025-01-18 18:19:59,598 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:19:59,599 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:19:59,599 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:19:59,599 - DEBUG - Request guid: b8d9145e-3225-4d25-984d-1a9b5f6d4a2a
2025-01-18 18:19:59,599 - DEBUG - socket timeout: 60
2025-01-18 18:19:59,730 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=51922015-2ae9-46ee-9eb9-946f016c2322&request_guid=b8d9145e-3225-4d25-984d-1a9b5f6d4a2a HTTP/1.1" 200 2617
2025-01-18 18:19:59,731 - DEBUG - SUCCESS
2025-01-18 18:19:59,731 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:19:59,731 - DEBUG - ret[code] = None, after post request
2025-01-18 18:19:59,731 - DEBUG - Query id: 01b9cdf3-0002-4c78-0007-08ea0020102a
2025-01-18 18:19:59,731 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245995111062, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:19:59,731 - DEBUG - Cache Entry: (0, 1737245986432245, 0)
2025-01-18 18:19:59,731 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245995111062, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:19:59,731 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:19:59,731 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:59,731 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:59,731 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:19:59,732 - DEBUG - Cache Entry: (0, 1737245995111062, 0)
2025-01-18 18:19:59,732 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:59,732 - DEBUG - sfqid: 01b9cdf3-0002-4c78-0007-08ea0020102a
2025-01-18 18:19:59,732 - DEBUG - query execution done
2025-01-18 18:19:59,732 - DEBUG - SUCCESS
2025-01-18 18:19:59,732 - DEBUG - PUT OR GET: False
2025-01-18 18:19:59,732 - DEBUG - Query result format: arrow
2025-01-18 18:19:59,732 - INFO - Number of results in first chunk: 1
2025-01-18 18:19:59,732 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:19:59,732 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:19:59,732 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:19:59,732 - DEBUG - Batches read: 0
2025-01-18 18:19:59,732 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:19:59,732 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:19:59,732 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000218315307F0>, telemetry enabled: True
2025-01-18 18:19:59,733 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:19:59,733 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:19:59,733 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:19:59,733 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:19:59,736 - DEBUG - cursor
2025-01-18 18:19:59,736 - DEBUG - executing SQL/command
2025-01-18 18:19:59,736 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:19:59,736 - DEBUG - sequence counter: 8
2025-01-18 18:19:59,736 - DEBUG - Request id: 5f4ac6c8-6ffd-4304-b775-978d5ef3ea07
2025-01-18 18:19:59,736 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:19:59,737 - DEBUG - is_file_transfer: True
2025-01-18 18:19:59,737 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:59,737 - DEBUG - _cmd_query
2025-01-18 18:19:59,737 - DEBUG - serialize_to_dict() called
2025-01-18 18:19:59,737 - DEBUG - Cache Entry: (0, 1737245995111062, 0)
2025-01-18 18:19:59,737 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245995111062, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:19:59,737 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[8], is_file_transfer=[False]
2025-01-18 18:19:59,737 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:19:59,738 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:19:59,738 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:19:59,738 - DEBUG - Request guid: ee4639f5-6479-470d-8e00-b84e25042fe5
2025-01-18 18:19:59,738 - DEBUG - socket timeout: 60
2025-01-18 18:19:59,794 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=5f4ac6c8-6ffd-4304-b775-978d5ef3ea07&request_guid=ee4639f5-6479-470d-8e00-b84e25042fe5 HTTP/1.1" 200 1507
2025-01-18 18:19:59,795 - DEBUG - SUCCESS
2025-01-18 18:19:59,795 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:19:59,795 - DEBUG - ret[code] = None, after post request
2025-01-18 18:19:59,795 - DEBUG - Query id: 01b9cdf3-0002-4c5d-0007-08ea001fcbe2
2025-01-18 18:19:59,795 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245995197033, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:19:59,795 - DEBUG - Cache Entry: (0, 1737245995111062, 0)
2025-01-18 18:19:59,795 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245995197033, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:19:59,795 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:19:59,795 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:59,795 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:59,795 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:19:59,795 - DEBUG - Cache Entry: (0, 1737245995197033, 0)
2025-01-18 18:19:59,795 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:59,795 - DEBUG - sfqid: 01b9cdf3-0002-4c5d-0007-08ea001fcbe2
2025-01-18 18:19:59,795 - DEBUG - query execution done
2025-01-18 18:19:59,795 - DEBUG - SUCCESS
2025-01-18 18:19:59,796 - DEBUG - PUT OR GET: False
2025-01-18 18:19:59,796 - DEBUG - Query result format: arrow
2025-01-18 18:19:59,796 - INFO - Number of results in first chunk: 0
2025-01-18 18:19:59,797 - DEBUG - executing SQL/command
2025-01-18 18:19:59,797 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:19:59,797 - DEBUG - sequence counter: 9
2025-01-18 18:19:59,797 - DEBUG - Request id: 30c27c35-a1b9-4c2d-b2e4-11abf847ccd3
2025-01-18 18:19:59,797 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:19:59,798 - DEBUG - is_file_transfer: True
2025-01-18 18:19:59,798 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:59,798 - DEBUG - _cmd_query
2025-01-18 18:19:59,798 - DEBUG - serialize_to_dict() called
2025-01-18 18:19:59,798 - DEBUG - Cache Entry: (0, 1737245995197033, 0)
2025-01-18 18:19:59,798 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245995197033, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:19:59,798 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[9], is_file_transfer=[False]
2025-01-18 18:19:59,798 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:19:59,799 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:19:59,799 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:19:59,799 - DEBUG - Request guid: d83d133e-29be-4612-86eb-a0c48cd0502b
2025-01-18 18:19:59,799 - DEBUG - socket timeout: 60
2025-01-18 18:19:59,871 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=30c27c35-a1b9-4c2d-b2e4-11abf847ccd3&request_guid=d83d133e-29be-4612-86eb-a0c48cd0502b HTTP/1.1" 200 1375
2025-01-18 18:19:59,872 - DEBUG - SUCCESS
2025-01-18 18:19:59,872 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:19:59,872 - DEBUG - ret[code] = None, after post request
2025-01-18 18:19:59,872 - DEBUG - Query id: 01b9cdf3-0002-4c79-0007-08ea002000a2
2025-01-18 18:19:59,873 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245995272397, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:19:59,873 - DEBUG - Cache Entry: (0, 1737245995197033, 0)
2025-01-18 18:19:59,873 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245995272397, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:19:59,873 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:19:59,873 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:59,873 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:59,873 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:19:59,873 - DEBUG - Cache Entry: (0, 1737245995272397, 0)
2025-01-18 18:19:59,873 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:59,873 - DEBUG - sfqid: 01b9cdf3-0002-4c79-0007-08ea002000a2
2025-01-18 18:19:59,873 - DEBUG - query execution done
2025-01-18 18:19:59,873 - DEBUG - SUCCESS
2025-01-18 18:19:59,873 - DEBUG - PUT OR GET: False
2025-01-18 18:19:59,873 - DEBUG - Query result format: arrow
2025-01-18 18:19:59,873 - INFO - Number of results in first chunk: 0
2025-01-18 18:19:59,874 - DEBUG - executing SQL/command
2025-01-18 18:19:59,874 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:19:59,874 - DEBUG - sequence counter: 10
2025-01-18 18:19:59,874 - DEBUG - Request id: a42b459a-ea90-477d-a817-e66890a70752
2025-01-18 18:19:59,874 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:19:59,874 - DEBUG - is_file_transfer: True
2025-01-18 18:19:59,874 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:59,874 - DEBUG - _cmd_query
2025-01-18 18:19:59,874 - DEBUG - serialize_to_dict() called
2025-01-18 18:19:59,875 - DEBUG - Cache Entry: (0, 1737245995272397, 0)
2025-01-18 18:19:59,875 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245995272397, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:19:59,875 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[10], is_file_transfer=[False]
2025-01-18 18:19:59,875 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:19:59,875 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:19:59,875 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:19:59,875 - DEBUG - Request guid: 6d457da0-f6c8-4fd1-808a-de2bdcf9adad
2025-01-18 18:19:59,875 - DEBUG - socket timeout: 60
2025-01-18 18:19:59,948 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=a42b459a-ea90-477d-a817-e66890a70752&request_guid=6d457da0-f6c8-4fd1-808a-de2bdcf9adad HTTP/1.1" 200 1375
2025-01-18 18:19:59,950 - DEBUG - SUCCESS
2025-01-18 18:19:59,950 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:19:59,950 - DEBUG - ret[code] = None, after post request
2025-01-18 18:19:59,950 - DEBUG - Query id: 01b9cdf3-0002-4c76-0007-08ea001fbcae
2025-01-18 18:19:59,951 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245995350519, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:19:59,951 - DEBUG - Cache Entry: (0, 1737245995272397, 0)
2025-01-18 18:19:59,951 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245995350519, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:19:59,951 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:19:59,951 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:59,951 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:19:59,951 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:19:59,951 - DEBUG - Cache Entry: (0, 1737245995350519, 0)
2025-01-18 18:19:59,951 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:59,951 - DEBUG - sfqid: 01b9cdf3-0002-4c76-0007-08ea001fbcae
2025-01-18 18:19:59,951 - DEBUG - query execution done
2025-01-18 18:19:59,951 - DEBUG - SUCCESS
2025-01-18 18:19:59,951 - DEBUG - PUT OR GET: False
2025-01-18 18:19:59,951 - DEBUG - Query result format: arrow
2025-01-18 18:19:59,951 - INFO - Number of results in first chunk: 0
2025-01-18 18:19:59,952 - DEBUG - executing SQL/command
2025-01-18 18:19:59,952 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:19:59,952 - DEBUG - sequence counter: 11
2025-01-18 18:19:59,952 - DEBUG - Request id: 32870503-54f8-4d45-95fd-cc60cb210e7b
2025-01-18 18:19:59,952 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:19:59,952 - DEBUG - is_file_transfer: True
2025-01-18 18:19:59,952 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:19:59,952 - DEBUG - _cmd_query
2025-01-18 18:19:59,952 - DEBUG - serialize_to_dict() called
2025-01-18 18:19:59,952 - DEBUG - Cache Entry: (0, 1737245995350519, 0)
2025-01-18 18:19:59,952 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245995350519, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:19:59,952 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[11], is_file_transfer=[False]
2025-01-18 18:19:59,953 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:19:59,953 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:19:59,953 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:19:59,953 - DEBUG - Request guid: 63a863fc-7789-43ba-a39d-5873e53ab238
2025-01-18 18:19:59,953 - DEBUG - socket timeout: 60
2025-01-18 18:20:00,032 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=32870503-54f8-4d45-95fd-cc60cb210e7b&request_guid=63a863fc-7789-43ba-a39d-5873e53ab238 HTTP/1.1" 200 2618
2025-01-18 18:20:00,032 - DEBUG - SUCCESS
2025-01-18 18:20:00,032 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:20:00,033 - DEBUG - ret[code] = None, after post request
2025-01-18 18:20:00,033 - DEBUG - Query id: 01b9cdf3-0002-4d87-0007-08ea001fe506
2025-01-18 18:20:00,033 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737245995434127, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:20:00,033 - DEBUG - Cache Entry: (0, 1737245995350519, 0)
2025-01-18 18:20:00,033 - DEBUG - deserialize {'id': 0, 'timestamp': 1737245995434127, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:20:00,033 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:20:00,033 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:00,033 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:00,033 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:20:00,033 - DEBUG - Cache Entry: (0, 1737245995434127, 0)
2025-01-18 18:20:00,033 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:00,033 - DEBUG - sfqid: 01b9cdf3-0002-4d87-0007-08ea001fe506
2025-01-18 18:20:00,033 - DEBUG - query execution done
2025-01-18 18:20:00,033 - DEBUG - SUCCESS
2025-01-18 18:20:00,033 - DEBUG - PUT OR GET: False
2025-01-18 18:20:00,033 - DEBUG - Query result format: arrow
2025-01-18 18:20:00,033 - INFO - Number of results in first chunk: 54
2025-01-18 18:20:00,033 - DEBUG - Execute query [queryID: 01b9cdf3-0002-4d87-0007-08ea001fe506]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:20:00,033 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:20:00,033 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:20:00,033 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:20:00,033 - DEBUG - Batches read: 0
2025-01-18 18:20:00,034 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:20:00,034 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:20:00,047 - DEBUG - Sending 1 logs to telemetry. Data is {'logs': [{'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_imported_packages', 'value': "{'signal', 'cython_runtime', 'pywin32_system32', 'pydantic', 'multiprocessing', 'requests', 'cloudpickle', 'six', 'cryptography', 'genericpath', 'keyword', 'logging', 'idna', 'copy', 'nt', 'ssl', 'pkg_resources', 'traceback', 'decimal', 'secrets', 'sortedcontainers', 'tornado', 'sre_compile', 'codecs', 'git', 'types', 'win32com', 'locale', 'uuid', 'platformdirs', 'watchdog', 'contextlib', 'os', 'pydantic_core', 'timeit', 'ipaddress', 'copyreg', 'cachetools', 'click', 'random', 'math', 'colorsys', 'jwt', 'mimetypes', 'ctypes', 'pprint', 'array', 'difflib', 'zoneinfo', 'queue', 'errno', 'quopri', 'winreg', 'threading', 'io', 'http', 'socket', 'html', 'shlex', 'packaging', 'pyarrow', 'argparse', 'webbrowser', 'token', 'calendar', 'jiter', 'enum', 'reprlib', 'anyio', 'snowflake', 'abc', 'getpass', 'weakref', 'streamlit', 'base64', 'dis', 'dataclasses', 'pickle', 'datetime', 'tzlocal', 'asn1crypto', 'typing', 'hmac', 'subprocess', 'runpy', 'selectors', 'concurrent', 'distro', 'pythoncom', 'win32api', 'importlib', 'select', 'sre_parse', 'ntpath', 'struct', 'unittest', 'numpy', 'tokenize', 'sniffio', 'posixpath', 'colorama', 'httpx', 'getopt', 'public', 'sre_constants', 'email', 'nturl2path', 'time', 'encodings', 'pywin32_bootstrap', 'tempfile', 'filelock', 'zlib', 'urllib', 'textwrap', 'functools', 'zipfile', 'pywintypes', 'stringprep', 'openai', 'zipimport', 'uu', 'numbers', 'yaml', 'pkgutil', 'itertools', 'rich', 'certifi', 'asyncio', 'csv', 'linecache', 'string', 'dateutil', 'blinker', 'pathlib', 'builtins', 'charset_normalizer', 'google', 'gettext', 'pandas', 'plistlib', 'opcode', 'warnings', 'typing_extensions', 'urllib3', 'gc', 'platform', 'binascii', 'lzma', 'smmap', 'collections', 'site', 'tomlkit', 'operator', 'marshal', 'unicodedata', 'statistics', 'stat', 'cmath', 'toml', 'sys', 'pygments', 'glob', 'gzip', 'mmap', 'contextvars', 'atexit', 'bisect', 'sysconfig', 'xml', 're', 'attr', 'heapq', 'json', 'shutil', 'PIL', 'configparser', 'annotated_types', 'gitdb', 'msvcrt', 'bz2', 'pytz', 'pyexpat', 'tarfile', 'absl', 'pydoc', 'plotly', 'ast', 'fractions', 'hashlib', 'fnmatch', 'OpenSSL', 'inspect'}"}, 'timestamp': '1737245024331'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_session_created', 'data': {'start_time': 1737245024331, 'created_by_snowpark': 0}}, 'timestamp': '1737245024331'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386450, 'thread_ident': 21568}}, 'timestamp': '1737245024331'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cde3-0002-4c7a-0007-08ea001ff2d2', 'value': 4588}, 'timestamp': '1737245024453'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cde3-0002-4c71-0007-08ea001f8e5a', 'value': 4587}, 'timestamp': '1737245024594'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cde3-0002-4c71-0007-08ea001f8e5a', 'value': 1}, 'timestamp': '1737245024595'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '858b14b9-803c-443c-aeca-4867a34bde84', 'query_plan_complexity': {'column': 1}, 'thread_ident': 21568}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cde3-0002-4c71-0007-08ea001f8e5a']}}, 'timestamp': '1737245024595'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cde3-0002-4c79-0007-08ea001f6f5a', 'value': 4587}, 'timestamp': '1737245024676'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386450, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.0763401985168457, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737245024676'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cde3-0002-4c79-0007-08ea001f6f5e', 'value': 4586}, 'timestamp': '1737245024731'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386450, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.05440497398376465, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737245024731'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cde3-0002-4c5d-0007-08ea001fcab2', 'value': 4586}, 'timestamp': '1737245024808'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386450, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.07661199569702148, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737245024809'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cde3-0002-4d87-0007-08ea001fe3b6', 'value': 4590}, 'timestamp': '1737245024968'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cde3-0002-4d87-0007-08ea001fe3b6', 'value': 1}, 'timestamp': '1737245024969'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '73f583e0-80f2-4546-8049-2d6d1a24bc1c', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 21568}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cde3-0002-4d87-0007-08ea001fe3b6']}}, 'timestamp': '1737245024969'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cde3-0002-4c72-0007-08ea001facd2', 'value': 4586}, 'timestamp': '1737245030749'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386450, 'thread_ident': 22944}}, 'timestamp': '1737245030754'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cde3-0002-4c78-0007-08ea001f7eea', 'value': 4587}, 'timestamp': '1737245030822'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386450, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.06831717491149902, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737245030822'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cde3-0002-4c77-0007-08ea001fdaf6', 'value': 4589}, 'timestamp': '1737245030893'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386450, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.06998157501220703, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737245030893'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cde3-0002-4c76-0007-08ea001fbb7e', 'value': 4587}, 'timestamp': '1737245030968'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386450, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.0736687183380127, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737245030968'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cde3-0002-4c5d-0007-08ea001fcab6', 'value': 4588}, 'timestamp': '1737245031064'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cde3-0002-4c5d-0007-08ea001fcab6', 'value': 0}, 'timestamp': '1737245031064'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'ebc4295b-06e7-417b-bb06-c22e5c28ba71', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 22944}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cde3-0002-4c5d-0007-08ea001fcab6']}}, 'timestamp': '1737245031065'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737245031716'}, {'message': {'source': 'snowflake.core', 'version': '1.0.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'python_api', 'data': {'class_name': 'CortexSearchServiceResource', 'func_name': 'search'}}, 'timestamp': '1737245031720'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdeb-0002-4c70-0007-08ea001f9df6', 'value': 4588}, 'timestamp': '1737245475409'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386450, 'thread_ident': 28820}}, 'timestamp': '1737245475412'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdeb-0002-4c70-0007-08ea001f9dfa', 'value': 4590}, 'timestamp': '1737245475548'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdeb-0002-4c70-0007-08ea001f9dfa', 'value': 0}, 'timestamp': '1737245475548'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '0651eba8-5ba0-492a-a7ee-c29ddca546a0', 'query_plan_complexity': {'column': 1}, 'thread_ident': 28820}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdeb-0002-4c70-0007-08ea001f9dfa']}}, 'timestamp': '1737245475549'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdeb-0002-4c7a-0007-08ea001ff3be', 'value': 4593}, 'timestamp': '1737245475625'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386450, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.07381916046142578, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737245475625'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdeb-0002-4c79-0007-08ea00200026', 'value': 4590}, 'timestamp': '1737245475718'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386450, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.09144735336303711, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737245475719'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdeb-0002-4c79-0007-08ea0020002a', 'value': 4592}, 'timestamp': '1737245475786'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386450, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.06744933128356934, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737245475787'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdeb-0002-4c77-0007-08ea001fdba2', 'value': 4590}, 'timestamp': '1737245475882'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdeb-0002-4c77-0007-08ea001fdba2', 'value': 0}, 'timestamp': '1737245475882'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'dc5dd2b0-503c-4cd5-9d2c-a964da8a9b2f', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 28820}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdeb-0002-4c77-0007-08ea001fdba2']}}, 'timestamp': '1737245475883'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdeb-0002-4c71-0007-08ea001f8ef2', 'value': 4588}, 'timestamp': '1737245480055'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386450, 'thread_ident': 26648}}, 'timestamp': '1737245480060'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdeb-0002-4c72-0007-08ea001fadae', 'value': 4590}, 'timestamp': '1737245480141'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386450, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.08074712753295898, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737245480141'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdeb-0002-4c72-0007-08ea001fadb2', 'value': 4588}, 'timestamp': '1737245480206'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386450, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.06354784965515137, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737245480206'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdeb-0002-4c5d-0007-08ea001fcb4e', 'value': 4589}, 'timestamp': '1737245480289'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386450, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.08234214782714844, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737245480289'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdeb-0002-4c78-0007-08ea001f7f86', 'value': 4587}, 'timestamp': '1737245480384'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdeb-0002-4c78-0007-08ea001f7f86', 'value': 1}, 'timestamp': '1737245480385'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '3df20a00-3b1d-48a4-acd7-6f2c0dcffdbc', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 26648}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdeb-0002-4c78-0007-08ea001f7f86']}}, 'timestamp': '1737245480385'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737245481028'}, {'message': {'source': 'snowflake.core', 'version': '1.0.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'python_api', 'data': {'class_name': 'CortexSearchServiceResource', 'func_name': 'search'}}, 'timestamp': '1737245481029'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737245496856'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'Stacktrace': (False, '', None), 'query_id': '01b9cdeb-0002-4c76-0007-08ea001fbc3e', 'sql_state': '42000', 'reason': '391707 (42000)', 'ErrorNumber': '391707', 'type': 'client_sql_exception', 'exception': 'ProgrammingError'}, 'timestamp': '1737245496991'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf3-0002-4c72-0007-08ea001fae02', 'value': 4598}, 'timestamp': '1737245974726'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386450, 'thread_ident': 15252}}, 'timestamp': '1737245974731'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf3-0002-4c78-0007-08ea00201022', 'value': 4594}, 'timestamp': '1737245974894'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdf3-0002-4c78-0007-08ea00201022', 'value': 0}, 'timestamp': '1737245974894'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '7a5ba525-fd87-4eba-b3ef-0e2af651f10b', 'query_plan_complexity': {'column': 1}, 'thread_ident': 15252}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdf3-0002-4c78-0007-08ea00201022']}}, 'timestamp': '1737245974894'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf3-0002-4c76-0007-08ea001fbca6', 'value': 4594}, 'timestamp': '1737245974981'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386450, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.08492875099182129, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737245974982'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf3-0002-4c79-0007-08ea0020009e', 'value': 4591}, 'timestamp': '1737245975056'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386450, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.07257342338562012, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737245975056'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf3-0002-4c76-0007-08ea001fbcaa', 'value': 4589}, 'timestamp': '1737245975117'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386450, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.060404300689697266, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737245975117'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf3-0002-4c72-0007-08ea001fae06', 'value': 4590}, 'timestamp': '1737245975229'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdf3-0002-4c72-0007-08ea001fae06', 'value': 0}, 'timestamp': '1737245975229'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'fa6f98be-d0ac-4950-b816-768f4dace5d7', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 15252}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdf3-0002-4c72-0007-08ea001fae06']}}, 'timestamp': '1737245975230'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}, 'error_info': 'SnowflakeMLException(\'SnowparkSessionException("(1300) (1409): More than one active session is detected. When you call function \\\'udf\\\' or use decorator \\\'@udf\\\', you must specify the \\\'session\\\' parameter if you created multiple sessions.Alternatively, you can use \\\'session.udf.register\\\' to register UDFs", None)\')', 'error_code': '1300'}, 'timestamp': '1737246000039'}]}.
2025-01-18 18:20:00,050 - DEBUG - Opentelemtry otel injection failed
snowflake.snowpark.exceptions.SnowparkSessionException: (1409): More than one active session is detected. When you call function 'udf' or use decorator '@udf', you must specify the 'session' parameter if you created multiple sessions.Alternatively, you can use 'session.udf.register' to register UDFs

During handling of the above exception, another exception occurred:

ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:20:00,051 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:20:00,051 - DEBUG - remaining request timeout: 5000 ms, retry cnt: 1
2025-01-18 18:20:00,051 - DEBUG - Request guid: e04793be-e41b-4a2b-bc4f-ea0203afce5d
2025-01-18 18:20:00,051 - DEBUG - socket timeout: 60
2025-01-18 18:20:00,106 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /telemetry/send?request_guid=e04793be-e41b-4a2b-bc4f-ea0203afce5d HTTP/1.1" 200 86
2025-01-18 18:20:00,106 - DEBUG - SUCCESS
2025-01-18 18:20:00,106 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:20:00,106 - DEBUG - ret[code] = None, after post request
2025-01-18 18:20:00,106 - DEBUG - Successfully uploading metrics to telemetry.
2025-01-18 18:20:12,671 - INFO - Closing session: 1980125954400798
2025-01-18 18:20:12,671 - INFO - Canceling all running queries
2025-01-18 18:20:12,672 - DEBUG - cursor
2025-01-18 18:20:12,672 - DEBUG - executing SQL/command
2025-01-18 18:20:12,672 - DEBUG - query: [select system$cancel_all_queries(1980125954400798)]
2025-01-18 18:20:12,672 - DEBUG - sequence counter: 12
2025-01-18 18:20:12,672 - DEBUG - Request id: 65238046-d49e-47ec-a033-493fddca8674
2025-01-18 18:20:12,672 - DEBUG - running query [select system$cancel_all_queries(1980125954400798)]
2025-01-18 18:20:12,672 - DEBUG - is_file_transfer: True
2025-01-18 18:20:12,672 - DEBUG - _cmd_query
2025-01-18 18:20:12,672 - DEBUG - serialize_to_dict() called
2025-01-18 18:20:12,672 - DEBUG - Cache Entry: (0, 1737245995434127, 0)
2025-01-18 18:20:12,672 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245995434127, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:20:12,672 - DEBUG - sql=[select system$cancel_all_queries(1980125954400798)], sequence_id=[12], is_file_transfer=[False]
2025-01-18 18:20:12,673 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:20:12,673 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:20:12,673 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:20:12,673 - DEBUG - Request guid: f97c79f7-58bf-4953-b25f-dcac959e908c
2025-01-18 18:20:12,673 - DEBUG - socket timeout: 60
2025-01-18 18:20:12,779 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=65238046-d49e-47ec-a033-493fddca8674&request_guid=f97c79f7-58bf-4953-b25f-dcac959e908c HTTP/1.1" 200 1761
2025-01-18 18:20:12,780 - DEBUG - SUCCESS
2025-01-18 18:20:12,780 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:20:12,780 - DEBUG - ret[code] = None, after post request
2025-01-18 18:20:12,780 - DEBUG - Query id: 01b9cdf4-0002-4c76-0007-08ea001fbcb2
2025-01-18 18:20:12,780 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246008181539, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:20:12,780 - DEBUG - Cache Entry: (0, 1737245995434127, 0)
2025-01-18 18:20:12,781 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246008181539, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:20:12,781 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:20:12,781 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:12,781 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:12,781 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:20:12,781 - DEBUG - Cache Entry: (0, 1737246008181539, 0)
2025-01-18 18:20:12,781 - DEBUG - sfqid: 01b9cdf4-0002-4c76-0007-08ea001fbcb2
2025-01-18 18:20:12,781 - DEBUG - query execution done
2025-01-18 18:20:12,781 - DEBUG - SUCCESS
2025-01-18 18:20:12,781 - DEBUG - PUT OR GET: False
2025-01-18 18:20:12,781 - DEBUG - Query result format: arrow
2025-01-18 18:20:12,781 - INFO - Number of results in first chunk: 1
2025-01-18 18:20:12,781 - DEBUG - Execute query [queryID: 01b9cdf4-0002-4c76-0007-08ea001fbcb2] select system$cancel_all_queries(1980125954400798)
2025-01-18 18:20:12,781 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:20:12,781 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:20:12,782 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:20:12,782 - DEBUG - Batches read: 0
2025-01-18 18:20:12,782 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:20:12,782 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:20:12,782 - INFO - closed
2025-01-18 18:20:12,782 - DEBUG - Closing telemetry client.
2025-01-18 18:20:12,784 - DEBUG - Sending 1 logs to telemetry. Data is {'logs': [{'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_imported_packages', 'value': "{'signal', 'cython_runtime', 'pywin32_system32', 'pydantic', 'multiprocessing', 'requests', 'cloudpickle', 'six', 'cryptography', 'genericpath', 'keyword', 'logging', 'idna', 'copy', 'nt', 'ssl', 'pkg_resources', 'traceback', 'decimal', 'secrets', 'sortedcontainers', 'tornado', 'sre_compile', 'codecs', 'git', 'types', 'win32com', 'locale', 'uuid', 'platformdirs', 'watchdog', 'contextlib', 'os', 'pydantic_core', 'timeit', 'ipaddress', 'copyreg', 'cachetools', 'click', 'random', 'math', 'colorsys', 'jwt', 'mimetypes', 'ctypes', 'pprint', 'array', 'difflib', 'zoneinfo', 'queue', 'errno', 'quopri', 'winreg', 'threading', 'io', 'http', 'socket', 'html', 'shlex', 'packaging', 'pyarrow', 'argparse', 'webbrowser', 'token', 'calendar', 'jiter', 'enum', 'reprlib', 'anyio', 'snowflake', 'abc', 'getpass', 'weakref', 'streamlit', 'base64', 'dis', 'dataclasses', 'pickle', 'datetime', 'tzlocal', 'asn1crypto', 'typing', 'hmac', 'subprocess', 'runpy', 'selectors', 'concurrent', 'distro', 'pythoncom', 'win32api', 'netrc', 'importlib', 'select', 'sre_parse', 'ntpath', 'struct', 'unittest', 'numpy', 'tokenize', 'sniffio', 'posixpath', 'colorama', 'httpx', 'getopt', 'public', 'sre_constants', 'email', 'nturl2path', 'time', 'encodings', 'pywin32_bootstrap', 'tempfile', 'filelock', 'zlib', 'urllib', 'textwrap', 'functools', 'zipfile', 'pywintypes', 'stringprep', 'openai', 'zipimport', 'uu', 'numbers', 'yaml', 'pkgutil', 'itertools', 'rich', 'certifi', 'asyncio', 'csv', 'linecache', 'string', 'dateutil', 'blinker', 'pathlib', 'builtins', 'charset_normalizer', 'google', 'gettext', 'pandas', 'plistlib', 'opcode', 'warnings', 'typing_extensions', 'urllib3', 'gc', 'platform', 'binascii', 'lzma', 'smmap', 'collections', 'site', 'tomlkit', 'operator', 'marshal', 'unicodedata', 'statistics', 'stat', 'cmath', 'toml', 'sys', 'pygments', 'glob', 'gzip', 'mmap', 'contextvars', 'atexit', 'bisect', 'sysconfig', 'xml', 're', 'attr', 'heapq', 'json', 'shutil', 'PIL', 'configparser', 'annotated_types', 'gitdb', 'msvcrt', 'bz2', 'pytz', 'pyexpat', 'tarfile', 'absl', 'pydoc', 'plotly', 'ast', 'fractions', 'hashlib', 'fnmatch', 'OpenSSL', 'inspect'}"}, 'timestamp': '1737245990377'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_session_created', 'data': {'start_time': 1737245990377, 'created_by_snowpark': 0}}, 'timestamp': '1737245990377'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954400798, 'thread_ident': 18816}}, 'timestamp': '1737245990378'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf3-0002-4c5d-0007-08ea001fcbda', 'value': 4589}, 'timestamp': '1737245990489'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf3-0002-4c5d-0007-08ea001fcbde', 'value': 4598}, 'timestamp': '1737245990639'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdf3-0002-4c5d-0007-08ea001fcbde', 'value': 1}, 'timestamp': '1737245990640'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'ba8a997d-9784-4fbe-bfff-faf45ee6e441', 'query_plan_complexity': {'column': 1}, 'thread_ident': 18816}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdf3-0002-4c5d-0007-08ea001fcbde']}}, 'timestamp': '1737245990640'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf3-0002-4c77-0007-08ea001fdc1e', 'value': 4591}, 'timestamp': '1737245990732'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954400798, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.08951187133789062, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737245990733'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf3-0002-4d87-0007-08ea001fe502', 'value': 4590}, 'timestamp': '1737245990813'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954400798, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.07905364036560059, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737245990813'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf3-0002-4c78-0007-08ea00201026', 'value': 4588}, 'timestamp': '1737245990900'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954400798, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.08736801147460938, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737245990901'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf3-0002-4c77-0007-08ea001fdc22', 'value': 4587}, 'timestamp': '1737245991057'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdf3-0002-4c77-0007-08ea001fdc22', 'value': 1}, 'timestamp': '1737245991058'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '67173e17-782f-4cc8-8552-dbfd8babe72c', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 18816}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdf3-0002-4c77-0007-08ea001fdc22']}}, 'timestamp': '1737245991058'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf3-0002-4c78-0007-08ea0020102a', 'value': 4589}, 'timestamp': '1737245999732'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954400798, 'thread_ident': 4016}}, 'timestamp': '1737245999736'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf3-0002-4c5d-0007-08ea001fcbe2', 'value': 4588}, 'timestamp': '1737245999795'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954400798, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.060227394104003906, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737245999796'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf3-0002-4c79-0007-08ea002000a2', 'value': 4590}, 'timestamp': '1737245999873'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954400798, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.0773763656616211, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737245999874'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf3-0002-4c76-0007-08ea001fbcae', 'value': 4590}, 'timestamp': '1737245999951'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954400798, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.0765540599822998, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737245999951'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf3-0002-4d87-0007-08ea001fe506', 'value': 4589}, 'timestamp': '1737246000033'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdf3-0002-4d87-0007-08ea001fe506', 'value': 1}, 'timestamp': '1737246000034'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'e00b3d66-46dd-4f73-84cb-b9dc9555a680', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 4016}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdf3-0002-4d87-0007-08ea001fe506']}}, 'timestamp': '1737246000034'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954400798, 'thread_ident': 31560}}, 'timestamp': '1737246012672'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf4-0002-4c76-0007-08ea001fbcb2', 'value': 4590}, 'timestamp': '1737246012781'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdf4-0002-4c76-0007-08ea001fbcb2', 'value': 1}, 'timestamp': '1737246012782'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_temp_table_cleanup', 'data': {'session_id': 1980125954400798, 'temp_table_cleaner_enabled': False, 'num_temp_tables_cleaned': 0, 'num_temp_tables_created': 0}}, 'timestamp': '1737246012782'}]}.
2025-01-18 18:20:12,785 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:20:12,786 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:20:12,786 - DEBUG - remaining request timeout: 5000 ms, retry cnt: 1
2025-01-18 18:20:12,786 - DEBUG - Request guid: 71f4a063-5795-4c9c-864f-7541228d34fe
2025-01-18 18:20:12,786 - DEBUG - socket timeout: 60
2025-01-18 18:20:12,788 - DEBUG - Hit retryable client error. Retrying... Ignore the following error stack: Event loop is closed
RuntimeError: Event loop is closed
2025-01-18 18:20:12,788 - DEBUG - retrying: errorclass=<class 'RuntimeError'>, error=Event loop is closed, counter=1, sleeping=1(s)
2025-01-18 18:20:12,955 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:20:12,956 - DEBUG - Failed to upload metrics to telemetry.
RuntimeError: Event loop is closed

During handling of the above exception, another exception occurred:

snowflake.connector.network.RetryRequest: Event loop is closed

During handling of the above exception, another exception occurred:

RuntimeError: Event loop is closed
2025-01-18 18:20:12,956 - INFO - No async queries seem to be running, deleting session
2025-01-18 18:20:12,956 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:20:12,956 - DEBUG - remaining request timeout: 5000 ms, retry cnt: 1
2025-01-18 18:20:12,956 - DEBUG - Request guid: c6d7efc1-df7a-4af2-980b-a9c7ddb9b32f
2025-01-18 18:20:12,956 - DEBUG - socket timeout: 60
2025-01-18 18:20:13,024 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /session?delete=true&request_guid=c6d7efc1-df7a-4af2-980b-a9c7ddb9b32f HTTP/1.1" 200 76
2025-01-18 18:20:13,026 - DEBUG - SUCCESS
2025-01-18 18:20:13,026 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:20:13,026 - DEBUG - ret[code] = None, after post request
2025-01-18 18:20:13,026 - DEBUG - clear_cache() called
2025-01-18 18:20:13,027 - DEBUG - Session is closed
2025-01-18 18:20:13,027 - INFO - Closed session: 1980125954400798
2025-01-18 18:20:13,027 - INFO - Closing session: 1980125954386450
2025-01-18 18:20:13,027 - INFO - Canceling all running queries
2025-01-18 18:20:13,027 - DEBUG - cursor
2025-01-18 18:20:13,027 - DEBUG - executing SQL/command
2025-01-18 18:20:13,027 - DEBUG - query: [select system$cancel_all_queries(1980125954386450)]
2025-01-18 18:20:13,027 - DEBUG - sequence counter: 30
2025-01-18 18:20:13,027 - DEBUG - Request id: d003fda4-60e6-4460-8e44-9f1e151a5182
2025-01-18 18:20:13,027 - DEBUG - running query [select system$cancel_all_queries(1980125954386450)]
2025-01-18 18:20:13,027 - DEBUG - is_file_transfer: True
2025-01-18 18:20:13,027 - DEBUG - _cmd_query
2025-01-18 18:20:13,027 - DEBUG - serialize_to_dict() called
2025-01-18 18:20:13,027 - DEBUG - Cache Entry: (0, 1737245970629672, 0)
2025-01-18 18:20:13,027 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737245970629672, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:20:13,027 - DEBUG - sql=[select system$cancel_all_queries(1980125954386450)], sequence_id=[30], is_file_transfer=[False]
2025-01-18 18:20:13,028 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:20:13,028 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:20:13,028 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:20:13,028 - DEBUG - Request guid: 35aa1285-8cbb-4e0a-b8fb-9afcdbb790d2
2025-01-18 18:20:13,028 - DEBUG - socket timeout: 60
2025-01-18 18:20:13,119 - DEBUG - canceled. select system$cancel_all_queries(1980125954386450), request_id: d003fda4-60e6-4460-8e44-9f1e151a5182
2025-01-18 18:20:13,120 - DEBUG - _cancel_query sql=[select system$cancel_all_queries(1980125954386450)], request_id=[d003fda4-60e6-4460-8e44-9f1e151a5182]
2025-01-18 18:20:13,121 - DEBUG - Opentelemtry otel injection failed
TypeError: HTTPConnection.getresponse() got an unexpected keyword argument 'buffering'

During handling of the above exception, another exception occurred:

OpenSSL.SSL.WantReadError

During handling of the above exception, another exception occurred:

ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:20:13,121 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 18:20:13,121 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 18:20:13,121 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 2/2 active sessions
2025-01-18 18:20:13,121 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:20:13,121 - DEBUG - Request guid: 849fc3df-630f-432c-9a04-adb28db56978
2025-01-18 18:20:13,121 - DEBUG - socket timeout: 60
2025-01-18 18:20:13,122 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:20:13,420 - INFO - Force exit
2025-01-18 18:20:13,421 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:20:13,421 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:20:13,421 - INFO - closed
2025-01-18 18:20:13,421 - DEBUG - Closing telemetry client.
2025-01-18 18:20:13,421 - DEBUG - Sending 1 logs to telemetry. Data is {'logs': [{'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386450, 'thread_ident': 31560}}, 'timestamp': '1737246013027'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_temp_table_cleanup', 'data': {'session_id': 1980125954386450, 'temp_table_cleaner_enabled': False, 'num_temp_tables_cleaned': 0, 'num_temp_tables_created': 0}}, 'timestamp': '1737246013421'}]}.
2025-01-18 18:20:13,422 - DEBUG - Opentelemtry otel injection failed
SystemExit: 1

During handling of the above exception, another exception occurred:

ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:20:13,422 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:20:13,422 - DEBUG - remaining request timeout: 5000 ms, retry cnt: 1
2025-01-18 18:20:13,422 - DEBUG - Request guid: a4f726d8-e118-43aa-90b8-07bdd5e90cd0
2025-01-18 18:20:13,422 - DEBUG - socket timeout: 60
2025-01-18 18:20:13,423 - DEBUG - Starting new HTTPS connection (2): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:20:13,483 - DEBUG - Hit retryable client error. Retrying... Ignore the following error stack: Event loop is closed
SystemExit: 1

During handling of the above exception, another exception occurred:

RuntimeError: Event loop is closed
2025-01-18 18:20:13,483 - DEBUG - retrying: errorclass=<class 'RuntimeError'>, error=Event loop is closed, counter=1, sleeping=1(s)
2025-01-18 18:20:13,637 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:20:13,637 - DEBUG - Failed to upload metrics to telemetry.
SystemExit: 1

During handling of the above exception, another exception occurred:

RuntimeError: Event loop is closed

During handling of the above exception, another exception occurred:

snowflake.connector.network.RetryRequest: Event loop is closed

During handling of the above exception, another exception occurred:

RuntimeError: Event loop is closed
2025-01-18 18:20:13,637 - INFO - No async queries seem to be running, deleting session
2025-01-18 18:20:13,637 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:20:13,637 - DEBUG - remaining request timeout: 5000 ms, retry cnt: 1
2025-01-18 18:20:13,637 - DEBUG - Request guid: 706ec424-9213-44b8-a5d7-de96daf2ed9f
2025-01-18 18:20:13,637 - DEBUG - socket timeout: 60
2025-01-18 18:20:13,640 - DEBUG - Starting new HTTPS connection (3): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:20:13,943 - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None
2025-01-18 18:20:13,943 - DEBUG - ocsp_response_cache_uri: file://C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 18:20:13,943 - DEBUG - OCSP_VALIDATION_CACHE size: 310
2025-01-18 18:20:13,943 - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 18:20:13,943 - DEBUG - OCSP dynamic cache server RETRY URL: None
2025-01-18 18:20:13,943 - DEBUG - validating certificate: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:20:13,943 - DEBUG - # of certificates: 4
2025-01-18 18:20:13,944 - DEBUG - subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:20:13,944 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:20:13,944 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:20:13,945 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:20:13,946 - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:20:13,947 - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])
2025-01-18 18:20:13,948 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:20:13,948 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:20:13,949 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:20:13,950 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:20:13,951 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 18:20:13,951 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:20:13,953 - DEBUG - ok
2025-01-18 18:20:14,014 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /session?delete=true&request_guid=706ec424-9213-44b8-a5d7-de96daf2ed9f HTTP/1.1" 200 76
2025-01-18 18:20:14,014 - DEBUG - SUCCESS
2025-01-18 18:20:14,014 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:20:14,014 - DEBUG - ret[code] = None, after post request
2025-01-18 18:20:14,014 - DEBUG - clear_cache() called
2025-01-18 18:20:14,014 - DEBUG - Session is closed
2025-01-18 18:20:14,014 - INFO - Closed session: 1980125954386450
2025-01-18 18:20:28,742 - DEBUG - reading configuration file from C:\Users\ajjay\AppData\Local\snowflake\config.toml
2025-01-18 18:20:28,743 - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.10.11, Platform: Windows-10-10.0.22635-SP0
2025-01-18 18:20:28,743 - DEBUG - connect
2025-01-18 18:20:28,744 - DEBUG - __config
2025-01-18 18:20:28,744 - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:20:28,744 - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:20:28,744 - DEBUG - use_numpy: False
2025-01-18 18:20:28,744 - DEBUG - initialized
2025-01-18 18:20:28,744 - DEBUG - REST API object was created: gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:20:28,813 - DEBUG - Public key fingerprint is SHA256:MMhnSja/3AZz/s91ePEYdo5p27RfYwIdt7+BsyWAYGg=
2025-01-18 18:20:28,814 - DEBUG - authenticate
2025-01-18 18:20:28,814 - DEBUG - account=gmcpdcz-mt01740, user=preciousjunk, database=DEV_SRC_INGEST, schema=EPA_PROCESSED, warehouse=app_wh, role=app_role, request_id=2b007bfc-802a-4fc0-9f40-5109cf661ce0
2025-01-18 18:20:28,814 - DEBUG - body['data']: {'CLIENT_APP_ID': 'PythonConnector', 'CLIENT_APP_VERSION': '3.12.4', 'SVN_REVISION': None, 'ACCOUNT_NAME': 'gmcpdcz-mt01740', 'LOGIN_NAME': 'preciousjunk', 'CLIENT_ENVIRONMENT': {'APPLICATION': 'streamlit', 'OS': 'Windows', 'OS_VERSION': 'Windows-10-10.0.22635-SP0', 'PYTHON_VERSION': '3.10.11', 'PYTHON_RUNTIME': 'CPython', 'PYTHON_COMPILER': 'MSC v.1929 64 bit (AMD64)', 'OCSP_MODE': 'FAIL_OPEN', 'TRACING': 10, 'LOGIN_TIMEOUT': None, 'NETWORK_TIMEOUT': None, 'SOCKET_TIMEOUT': None}, 'AUTHENTICATOR': 'SNOWFLAKE_JWT', 'TOKEN': '******', 'SESSION_PARAMETERS': {'CLIENT_PREFETCH_THREADS': 4}}
2025-01-18 18:20:28,815 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 18:20:28,815 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 18:20:28,815 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:20:28,815 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:20:28,816 - DEBUG - Request guid: 79bf721d-bb63-4287-9b06-8a48d1f309fb
2025-01-18 18:20:28,816 - DEBUG - socket timeout: 10
2025-01-18 18:20:28,817 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:20:29,288 - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None
2025-01-18 18:20:29,317 - DEBUG - cache directory: C:\Users\ajjay\AppData\Local\Snowflake\Caches
2025-01-18 18:20:29,318 - DEBUG - ocsp_response_cache_uri: file://C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 18:20:29,318 - DEBUG - OCSP_VALIDATION_CACHE size: 310
2025-01-18 18:20:29,319 - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 18:20:29,319 - DEBUG - OCSP dynamic cache server RETRY URL: None
2025-01-18 18:20:29,319 - DEBUG - validating certificate: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:20:29,319 - DEBUG - # of certificates: 4
2025-01-18 18:20:29,319 - DEBUG - subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:20:29,320 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:20:29,320 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:20:29,321 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:20:29,322 - DEBUG - reading certificate bundle: D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\certifi\cacert.pem
2025-01-18 18:20:29,334 - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:20:29,336 - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])
2025-01-18 18:20:29,336 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:20:29,337 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:20:29,338 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:20:29,339 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:20:29,340 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 18:20:29,340 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:20:29,342 - DEBUG - ok
2025-01-18 18:20:29,510 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /session/v1/login-request?request_id=2b007bfc-802a-4fc0-9f40-5109cf661ce0&databaseName=DEV_SRC_INGEST&schemaName=EPA_PROCESSED&warehouse=app_wh&roleName=app_role&request_guid=79bf721d-bb63-4287-9b06-8a48d1f309fb HTTP/1.1" 200 1782
2025-01-18 18:20:29,510 - DEBUG - SUCCESS
2025-01-18 18:20:29,511 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:20:29,511 - DEBUG - ret[code] = None, after post request
2025-01-18 18:20:29,511 - DEBUG - completed authentication
2025-01-18 18:20:29,511 - DEBUG - token = ******
2025-01-18 18:20:29,511 - DEBUG - master_token = ******
2025-01-18 18:20:29,511 - DEBUG - id_token = NULL
2025-01-18 18:20:29,511 - DEBUG - mfa_token = NULL
2025-01-18 18:20:29,513 - DEBUG - cursor
2025-01-18 18:20:29,514 - INFO - Snowpark Session information: 
"version" : 1.26.0,
"python.version" : 3.10.11,
"python.connector.version" : 3.12.4,
"python.connector.session.id" : 1980125954375350,
"os.name" : Windows

2025-01-18 18:20:29,514 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x000001EF81837D90>
2025-01-18 18:20:29,516 - DEBUG - created a new SFPoolManager
2025-01-18 18:20:29,516 - INFO - Querying the server for client info
2025-01-18 18:20:29,516 - DEBUG - cursor
2025-01-18 18:20:29,516 - DEBUG - executing SQL/command
2025-01-18 18:20:29,516 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:20:29,516 - DEBUG - sequence counter: 1
2025-01-18 18:20:29,516 - DEBUG - Request id: f7d45587-df27-41a9-9ddc-059826cbfb46
2025-01-18 18:20:29,516 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:20:29,516 - DEBUG - is_file_transfer: True
2025-01-18 18:20:29,516 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:29,516 - DEBUG - _cmd_query
2025-01-18 18:20:29,517 - DEBUG - serialize_to_dict() called
2025-01-18 18:20:29,517 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[1], is_file_transfer=[False]
2025-01-18 18:20:29,518 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:20:29,519 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:20:29,519 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:20:29,519 - DEBUG - Request guid: 2620cb64-115f-4d8c-ae6c-9b2518c04381
2025-01-18 18:20:29,519 - DEBUG - socket timeout: 60
2025-01-18 18:20:29,617 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=f7d45587-df27-41a9-9ddc-059826cbfb46&request_guid=2620cb64-115f-4d8c-ae6c-9b2518c04381 HTTP/1.1" 200 2618
2025-01-18 18:20:29,618 - DEBUG - SUCCESS
2025-01-18 18:20:29,618 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:20:29,618 - DEBUG - ret[code] = None, after post request
2025-01-18 18:20:29,618 - DEBUG - Query id: 01b9cdf4-0002-4c76-0007-08ea001fbcba
2025-01-18 18:20:29,618 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246025016262, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:20:29,618 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246025016262, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:20:29,618 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:20:29,618 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:29,618 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:29,618 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:20:29,618 - DEBUG - Cache Entry: (0, 1737246025016262, 0)
2025-01-18 18:20:29,618 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:29,618 - DEBUG - sfqid: 01b9cdf4-0002-4c76-0007-08ea001fbcba
2025-01-18 18:20:29,618 - DEBUG - query execution done
2025-01-18 18:20:29,618 - DEBUG - SUCCESS
2025-01-18 18:20:29,618 - DEBUG - PUT OR GET: False
2025-01-18 18:20:29,618 - DEBUG - Query result format: arrow
2025-01-18 18:20:29,619 - INFO - Number of results in first chunk: 1
2025-01-18 18:20:29,619 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:20:29,619 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:20:29,619 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:20:29,619 - DEBUG - Batches read: 0
2025-01-18 18:20:29,619 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:20:29,619 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:20:29,620 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x000001EF812BB550>, telemetry enabled: True
2025-01-18 18:20:29,620 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:20:29,620 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:20:29,620 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:20:29,620 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:20:29,632 - DEBUG - executing SQL/command
2025-01-18 18:20:29,632 - DEBUG - query: [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:20:29,632 - DEBUG - sequence counter: 2
2025-01-18 18:20:29,632 - DEBUG - Request id: 6e5d091d-e9d7-454f-be45-ea2646443110
2025-01-18 18:20:29,632 - DEBUG - running query [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:20:29,632 - DEBUG - is_file_transfer: True
2025-01-18 18:20:29,632 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:29,632 - DEBUG - _cmd_query
2025-01-18 18:20:29,632 - DEBUG - serialize_to_dict() called
2025-01-18 18:20:29,633 - DEBUG - Cache Entry: (0, 1737246025016262, 0)
2025-01-18 18:20:29,633 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246025016262, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:20:29,633 - DEBUG - sql=[SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...], sequence_id=[2], is_file_transfer=[False]
2025-01-18 18:20:29,633 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:20:29,633 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:20:29,634 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:20:29,634 - DEBUG - Request guid: e58cf03c-802c-4db0-8cb3-b6ca1caf03b4
2025-01-18 18:20:29,634 - DEBUG - socket timeout: 60
2025-01-18 18:20:29,743 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=6e5d091d-e9d7-454f-be45-ea2646443110&request_guid=e58cf03c-802c-4db0-8cb3-b6ca1caf03b4 HTTP/1.1" 200 2108
2025-01-18 18:20:29,743 - DEBUG - SUCCESS
2025-01-18 18:20:29,743 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:20:29,744 - DEBUG - ret[code] = None, after post request
2025-01-18 18:20:29,744 - DEBUG - Query id: 01b9cdf4-0002-4d87-0007-08ea001fe512
2025-01-18 18:20:29,744 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246025150020, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:20:29,744 - DEBUG - Cache Entry: (0, 1737246025016262, 0)
2025-01-18 18:20:29,744 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246025150020, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:20:29,744 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:20:29,744 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:29,744 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:29,744 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:20:29,744 - DEBUG - Cache Entry: (0, 1737246025150020, 0)
2025-01-18 18:20:29,744 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:29,744 - DEBUG - sfqid: 01b9cdf4-0002-4d87-0007-08ea001fe512
2025-01-18 18:20:29,744 - DEBUG - query execution done
2025-01-18 18:20:29,744 - DEBUG - SUCCESS
2025-01-18 18:20:29,744 - DEBUG - PUT OR GET: False
2025-01-18 18:20:29,744 - DEBUG - Query result format: arrow
2025-01-18 18:20:29,744 - INFO - Number of results in first chunk: 1
2025-01-18 18:20:29,744 - DEBUG - Execute query [queryID: 01b9cdf4-0002-4d87-0007-08ea001fe512] 
        SELECT LOCATION, LATITUDE, LONGITUDE
        FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS 
        WHERE USER_ID = 'default_user'
        
2025-01-18 18:20:29,744 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:20:29,744 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:20:29,745 - DEBUG - Arrow chunk info: batchCount 1, columnCount 3, use_numpy: 0
2025-01-18 18:20:29,745 - DEBUG - Batches read: 0
2025-01-18 18:20:29,745 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:20:29,745 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:20:29,755 - DEBUG - executing SQL/command
2025-01-18 18:20:29,755 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:20:29,755 - DEBUG - sequence counter: 3
2025-01-18 18:20:29,755 - DEBUG - Request id: 280d0080-4379-4337-9137-ab62d090fb43
2025-01-18 18:20:29,755 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:20:29,755 - DEBUG - is_file_transfer: True
2025-01-18 18:20:29,755 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:29,755 - DEBUG - _cmd_query
2025-01-18 18:20:29,755 - DEBUG - serialize_to_dict() called
2025-01-18 18:20:29,755 - DEBUG - Cache Entry: (0, 1737246025150020, 0)
2025-01-18 18:20:29,755 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246025150020, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:20:29,756 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[3], is_file_transfer=[False]
2025-01-18 18:20:29,756 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:20:29,756 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:20:29,756 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:20:29,756 - DEBUG - Request guid: 923ab322-2e87-4106-bf4c-834410c7fe44
2025-01-18 18:20:29,756 - DEBUG - socket timeout: 60
2025-01-18 18:20:29,822 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=280d0080-4379-4337-9137-ab62d090fb43&request_guid=923ab322-2e87-4106-bf4c-834410c7fe44 HTTP/1.1" 200 1501
2025-01-18 18:20:29,823 - DEBUG - SUCCESS
2025-01-18 18:20:29,823 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:20:29,823 - DEBUG - ret[code] = None, after post request
2025-01-18 18:20:29,823 - DEBUG - Query id: 01b9cdf4-0002-4c7a-0007-08ea001ff502
2025-01-18 18:20:29,823 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246025212240, 'priority': 0, 'context': 'COrjJA=='}]}
2025-01-18 18:20:29,823 - DEBUG - Cache Entry: (0, 1737246025150020, 0)
2025-01-18 18:20:29,823 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246025212240, 'priority': 0, 'context': 'COrjJA=='}
2025-01-18 18:20:29,824 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:20:29,824 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:29,824 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:29,824 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:20:29,824 - DEBUG - Cache Entry: (0, 1737246025212240, 0)
2025-01-18 18:20:29,824 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:29,824 - DEBUG - sfqid: 01b9cdf4-0002-4c7a-0007-08ea001ff502
2025-01-18 18:20:29,824 - DEBUG - query execution done
2025-01-18 18:20:29,824 - DEBUG - SUCCESS
2025-01-18 18:20:29,824 - DEBUG - PUT OR GET: False
2025-01-18 18:20:29,824 - DEBUG - Query result format: arrow
2025-01-18 18:20:29,824 - INFO - Number of results in first chunk: 0
2025-01-18 18:20:29,827 - DEBUG - executing SQL/command
2025-01-18 18:20:29,827 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:20:29,827 - DEBUG - sequence counter: 4
2025-01-18 18:20:29,827 - DEBUG - Request id: e9610d1d-3b32-4ba3-88aa-0ac379c9f46f
2025-01-18 18:20:29,827 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:20:29,827 - DEBUG - is_file_transfer: True
2025-01-18 18:20:29,827 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:29,827 - DEBUG - _cmd_query
2025-01-18 18:20:29,827 - DEBUG - serialize_to_dict() called
2025-01-18 18:20:29,827 - DEBUG - Cache Entry: (0, 1737246025212240, 0)
2025-01-18 18:20:29,827 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246025212240, 'priority': 0, 'context': {'base64Data': 'COrjJA=='}}]}
2025-01-18 18:20:29,827 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[4], is_file_transfer=[False]
2025-01-18 18:20:29,828 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:20:29,828 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:20:29,828 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:20:29,828 - DEBUG - Request guid: d8371ce8-0c62-471d-90ae-72c17b00e466
2025-01-18 18:20:29,828 - DEBUG - socket timeout: 60
2025-01-18 18:20:29,908 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=e9610d1d-3b32-4ba3-88aa-0ac379c9f46f&request_guid=d8371ce8-0c62-471d-90ae-72c17b00e466 HTTP/1.1" 200 1375
2025-01-18 18:20:29,910 - DEBUG - SUCCESS
2025-01-18 18:20:29,910 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:20:29,910 - DEBUG - ret[code] = None, after post request
2025-01-18 18:20:29,910 - DEBUG - Query id: 01b9cdf4-0002-4c72-0007-08ea001fae12
2025-01-18 18:20:29,910 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246025303489, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:20:29,910 - DEBUG - Cache Entry: (0, 1737246025212240, 0)
2025-01-18 18:20:29,910 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246025303489, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:20:29,910 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:20:29,910 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:29,910 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:29,911 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:20:29,911 - DEBUG - Cache Entry: (0, 1737246025303489, 0)
2025-01-18 18:20:29,911 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:29,911 - DEBUG - sfqid: 01b9cdf4-0002-4c72-0007-08ea001fae12
2025-01-18 18:20:29,911 - DEBUG - query execution done
2025-01-18 18:20:29,911 - DEBUG - SUCCESS
2025-01-18 18:20:29,911 - DEBUG - PUT OR GET: False
2025-01-18 18:20:29,911 - DEBUG - Query result format: arrow
2025-01-18 18:20:29,911 - INFO - Number of results in first chunk: 0
2025-01-18 18:20:29,912 - DEBUG - executing SQL/command
2025-01-18 18:20:29,912 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:20:29,912 - DEBUG - sequence counter: 5
2025-01-18 18:20:29,912 - DEBUG - Request id: 6078f5fa-37ae-4644-819f-0bf8f820be89
2025-01-18 18:20:29,912 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:20:29,912 - DEBUG - is_file_transfer: True
2025-01-18 18:20:29,912 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:29,912 - DEBUG - _cmd_query
2025-01-18 18:20:29,912 - DEBUG - serialize_to_dict() called
2025-01-18 18:20:29,912 - DEBUG - Cache Entry: (0, 1737246025303489, 0)
2025-01-18 18:20:29,912 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246025303489, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:20:29,912 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[5], is_file_transfer=[False]
2025-01-18 18:20:29,913 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:20:29,913 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:20:29,913 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:20:29,913 - DEBUG - Request guid: 2aae05a9-4846-46f4-adac-98da9b11161f
2025-01-18 18:20:29,913 - DEBUG - socket timeout: 60
2025-01-18 18:20:29,987 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=6078f5fa-37ae-4644-819f-0bf8f820be89&request_guid=2aae05a9-4846-46f4-adac-98da9b11161f HTTP/1.1" 200 1375
2025-01-18 18:20:29,987 - DEBUG - SUCCESS
2025-01-18 18:20:29,987 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:20:29,987 - DEBUG - ret[code] = None, after post request
2025-01-18 18:20:29,987 - DEBUG - Query id: 01b9cdf4-0002-4c71-0007-08ea001f8f9e
2025-01-18 18:20:29,987 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246025379253, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 18:20:29,987 - DEBUG - Cache Entry: (0, 1737246025303489, 0)
2025-01-18 18:20:29,987 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246025379253, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 18:20:29,987 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:20:29,988 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:29,988 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:29,988 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:20:29,988 - DEBUG - Cache Entry: (0, 1737246025379253, 0)
2025-01-18 18:20:29,988 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:29,988 - DEBUG - sfqid: 01b9cdf4-0002-4c71-0007-08ea001f8f9e
2025-01-18 18:20:29,988 - DEBUG - query execution done
2025-01-18 18:20:29,988 - DEBUG - SUCCESS
2025-01-18 18:20:29,988 - DEBUG - PUT OR GET: False
2025-01-18 18:20:29,988 - DEBUG - Query result format: arrow
2025-01-18 18:20:29,988 - INFO - Number of results in first chunk: 0
2025-01-18 18:20:29,989 - DEBUG - executing SQL/command
2025-01-18 18:20:29,989 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:20:29,989 - DEBUG - sequence counter: 6
2025-01-18 18:20:29,989 - DEBUG - Request id: 73a0c09f-f167-49fe-859a-e1c140507107
2025-01-18 18:20:29,989 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:20:29,989 - DEBUG - is_file_transfer: True
2025-01-18 18:20:29,989 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:29,989 - DEBUG - _cmd_query
2025-01-18 18:20:29,989 - DEBUG - serialize_to_dict() called
2025-01-18 18:20:29,989 - DEBUG - Cache Entry: (0, 1737246025379253, 0)
2025-01-18 18:20:29,989 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246025379253, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 18:20:29,989 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[6], is_file_transfer=[False]
2025-01-18 18:20:29,990 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:20:29,990 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:20:29,990 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:20:29,990 - DEBUG - Request guid: 697c9839-d6b6-4b22-9b14-5c500cee9a82
2025-01-18 18:20:29,990 - DEBUG - socket timeout: 60
2025-01-18 18:20:30,081 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=73a0c09f-f167-49fe-859a-e1c140507107&request_guid=697c9839-d6b6-4b22-9b14-5c500cee9a82 HTTP/1.1" 200 2619
2025-01-18 18:20:30,082 - DEBUG - SUCCESS
2025-01-18 18:20:30,082 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:20:30,082 - DEBUG - ret[code] = None, after post request
2025-01-18 18:20:30,082 - DEBUG - Query id: 01b9cdf4-0002-4c77-0007-08ea001fdc2e
2025-01-18 18:20:30,082 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246025480629, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:20:30,082 - DEBUG - Cache Entry: (0, 1737246025379253, 0)
2025-01-18 18:20:30,083 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246025480629, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:20:30,083 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:20:30,083 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:30,083 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:30,083 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:20:30,083 - DEBUG - Cache Entry: (0, 1737246025480629, 0)
2025-01-18 18:20:30,083 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:30,083 - DEBUG - sfqid: 01b9cdf4-0002-4c77-0007-08ea001fdc2e
2025-01-18 18:20:30,083 - DEBUG - query execution done
2025-01-18 18:20:30,083 - DEBUG - SUCCESS
2025-01-18 18:20:30,083 - DEBUG - PUT OR GET: False
2025-01-18 18:20:30,083 - DEBUG - Query result format: arrow
2025-01-18 18:20:30,083 - INFO - Number of results in first chunk: 54
2025-01-18 18:20:30,083 - DEBUG - Execute query [queryID: 01b9cdf4-0002-4c77-0007-08ea001fdc2e]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:20:30,083 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:20:30,083 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:20:30,083 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:20:30,083 - DEBUG - Batches read: 0
2025-01-18 18:20:30,083 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:20:30,083 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:20:35,326 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x000001EF81837D90>
2025-01-18 18:20:35,326 - INFO - Querying the server for client info
2025-01-18 18:20:35,327 - DEBUG - cursor
2025-01-18 18:20:35,327 - DEBUG - executing SQL/command
2025-01-18 18:20:35,327 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:20:35,328 - DEBUG - sequence counter: 7
2025-01-18 18:20:35,328 - DEBUG - Request id: eef644d8-9fd8-4ce1-97be-00498273a6f9
2025-01-18 18:20:35,328 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:20:35,328 - DEBUG - is_file_transfer: True
2025-01-18 18:20:35,328 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:35,328 - DEBUG - _cmd_query
2025-01-18 18:20:35,328 - DEBUG - serialize_to_dict() called
2025-01-18 18:20:35,328 - DEBUG - Cache Entry: (0, 1737246025480629, 0)
2025-01-18 18:20:35,328 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246025480629, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:20:35,328 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[7], is_file_transfer=[False]
2025-01-18 18:20:35,329 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:20:35,330 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:20:35,330 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:20:35,330 - DEBUG - Request guid: 0017af82-1b6f-4fe7-8854-1bfa24f0f125
2025-01-18 18:20:35,330 - DEBUG - socket timeout: 60
2025-01-18 18:20:35,444 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=eef644d8-9fd8-4ce1-97be-00498273a6f9&request_guid=0017af82-1b6f-4fe7-8854-1bfa24f0f125 HTTP/1.1" 200 2618
2025-01-18 18:20:35,445 - DEBUG - SUCCESS
2025-01-18 18:20:35,445 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:20:35,445 - DEBUG - ret[code] = None, after post request
2025-01-18 18:20:35,445 - DEBUG - Query id: 01b9cdf4-0002-4c77-0007-08ea001fdc32
2025-01-18 18:20:35,445 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246030821327, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:20:35,445 - DEBUG - Cache Entry: (0, 1737246025480629, 0)
2025-01-18 18:20:35,445 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246030821327, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:20:35,445 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:20:35,446 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:35,446 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:35,446 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:20:35,446 - DEBUG - Cache Entry: (0, 1737246030821327, 0)
2025-01-18 18:20:35,446 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:35,446 - DEBUG - sfqid: 01b9cdf4-0002-4c77-0007-08ea001fdc32
2025-01-18 18:20:35,446 - DEBUG - query execution done
2025-01-18 18:20:35,446 - DEBUG - SUCCESS
2025-01-18 18:20:35,446 - DEBUG - PUT OR GET: False
2025-01-18 18:20:35,446 - DEBUG - Query result format: arrow
2025-01-18 18:20:35,446 - INFO - Number of results in first chunk: 1
2025-01-18 18:20:35,446 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:20:35,446 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:20:35,446 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:20:35,446 - DEBUG - Batches read: 0
2025-01-18 18:20:35,446 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:20:35,446 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:20:35,446 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x000001EF812BB550>, telemetry enabled: True
2025-01-18 18:20:35,446 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:20:35,446 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:20:35,446 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:20:35,446 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:20:35,450 - DEBUG - cursor
2025-01-18 18:20:35,450 - DEBUG - executing SQL/command
2025-01-18 18:20:35,450 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:20:35,450 - DEBUG - sequence counter: 8
2025-01-18 18:20:35,450 - DEBUG - Request id: dd5da02a-1806-4459-9a85-8e103674d35d
2025-01-18 18:20:35,451 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:20:35,451 - DEBUG - is_file_transfer: True
2025-01-18 18:20:35,451 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:35,451 - DEBUG - _cmd_query
2025-01-18 18:20:35,451 - DEBUG - serialize_to_dict() called
2025-01-18 18:20:35,451 - DEBUG - Cache Entry: (0, 1737246030821327, 0)
2025-01-18 18:20:35,451 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246030821327, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:20:35,451 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[8], is_file_transfer=[False]
2025-01-18 18:20:35,451 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:20:35,452 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:20:35,452 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:20:35,452 - DEBUG - Request guid: e25ec833-ebc6-4a34-a0cb-ab202d9290e4
2025-01-18 18:20:35,452 - DEBUG - socket timeout: 60
2025-01-18 18:20:35,524 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=dd5da02a-1806-4459-9a85-8e103674d35d&request_guid=e25ec833-ebc6-4a34-a0cb-ab202d9290e4 HTTP/1.1" 200 1503
2025-01-18 18:20:35,524 - DEBUG - SUCCESS
2025-01-18 18:20:35,525 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:20:35,525 - DEBUG - ret[code] = None, after post request
2025-01-18 18:20:35,525 - DEBUG - Query id: 01b9cdf4-0002-4c5d-0007-08ea001fcc16
2025-01-18 18:20:35,525 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246030921251, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:20:35,525 - DEBUG - Cache Entry: (0, 1737246030821327, 0)
2025-01-18 18:20:35,525 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246030921251, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:20:35,525 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:20:35,525 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:35,525 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:35,525 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:20:35,525 - DEBUG - Cache Entry: (0, 1737246030921251, 0)
2025-01-18 18:20:35,525 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:35,525 - DEBUG - sfqid: 01b9cdf4-0002-4c5d-0007-08ea001fcc16
2025-01-18 18:20:35,525 - DEBUG - query execution done
2025-01-18 18:20:35,525 - DEBUG - SUCCESS
2025-01-18 18:20:35,525 - DEBUG - PUT OR GET: False
2025-01-18 18:20:35,525 - DEBUG - Query result format: arrow
2025-01-18 18:20:35,525 - INFO - Number of results in first chunk: 0
2025-01-18 18:20:35,526 - DEBUG - executing SQL/command
2025-01-18 18:20:35,526 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:20:35,526 - DEBUG - sequence counter: 9
2025-01-18 18:20:35,527 - DEBUG - Request id: 84c65e59-7a57-4462-824b-cd3db7509fce
2025-01-18 18:20:35,527 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:20:35,527 - DEBUG - is_file_transfer: True
2025-01-18 18:20:35,527 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:35,527 - DEBUG - _cmd_query
2025-01-18 18:20:35,527 - DEBUG - serialize_to_dict() called
2025-01-18 18:20:35,527 - DEBUG - Cache Entry: (0, 1737246030921251, 0)
2025-01-18 18:20:35,527 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246030921251, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:20:35,527 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[9], is_file_transfer=[False]
2025-01-18 18:20:35,528 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:20:35,528 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:20:35,528 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:20:35,528 - DEBUG - Request guid: bf1fb169-4ee3-4cb3-9d3b-db6be3c7fca6
2025-01-18 18:20:35,528 - DEBUG - socket timeout: 60
2025-01-18 18:20:35,597 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=84c65e59-7a57-4462-824b-cd3db7509fce&request_guid=bf1fb169-4ee3-4cb3-9d3b-db6be3c7fca6 HTTP/1.1" 200 1375
2025-01-18 18:20:35,598 - DEBUG - SUCCESS
2025-01-18 18:20:35,598 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:20:35,598 - DEBUG - ret[code] = None, after post request
2025-01-18 18:20:35,598 - DEBUG - Query id: 01b9cdf4-0002-4c78-0007-08ea0020102e
2025-01-18 18:20:35,598 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246030991683, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:20:35,598 - DEBUG - Cache Entry: (0, 1737246030921251, 0)
2025-01-18 18:20:35,598 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246030991683, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:20:35,598 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:20:35,598 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:35,598 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:35,598 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:20:35,598 - DEBUG - Cache Entry: (0, 1737246030991683, 0)
2025-01-18 18:20:35,598 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:35,599 - DEBUG - sfqid: 01b9cdf4-0002-4c78-0007-08ea0020102e
2025-01-18 18:20:35,599 - DEBUG - query execution done
2025-01-18 18:20:35,599 - DEBUG - SUCCESS
2025-01-18 18:20:35,599 - DEBUG - PUT OR GET: False
2025-01-18 18:20:35,599 - DEBUG - Query result format: arrow
2025-01-18 18:20:35,599 - INFO - Number of results in first chunk: 0
2025-01-18 18:20:35,601 - DEBUG - executing SQL/command
2025-01-18 18:20:35,601 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:20:35,601 - DEBUG - sequence counter: 10
2025-01-18 18:20:35,601 - DEBUG - Request id: fd4d1f32-5319-4831-96a9-377ad42d17dd
2025-01-18 18:20:35,601 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:20:35,601 - DEBUG - is_file_transfer: True
2025-01-18 18:20:35,601 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:35,601 - DEBUG - _cmd_query
2025-01-18 18:20:35,601 - DEBUG - serialize_to_dict() called
2025-01-18 18:20:35,601 - DEBUG - Cache Entry: (0, 1737246030991683, 0)
2025-01-18 18:20:35,601 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246030991683, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:20:35,601 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[10], is_file_transfer=[False]
2025-01-18 18:20:35,602 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:20:35,602 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:20:35,602 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:20:35,602 - DEBUG - Request guid: 3554e270-20c9-4c61-b361-b77b006a718f
2025-01-18 18:20:35,602 - DEBUG - socket timeout: 60
2025-01-18 18:20:35,691 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=fd4d1f32-5319-4831-96a9-377ad42d17dd&request_guid=3554e270-20c9-4c61-b361-b77b006a718f HTTP/1.1" 200 1376
2025-01-18 18:20:35,691 - DEBUG - SUCCESS
2025-01-18 18:20:35,691 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:20:35,691 - DEBUG - ret[code] = None, after post request
2025-01-18 18:20:35,691 - DEBUG - Query id: 01b9cdf4-0002-4c70-0007-08ea001f9e6e
2025-01-18 18:20:35,692 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246031090038, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:20:35,692 - DEBUG - Cache Entry: (0, 1737246030991683, 0)
2025-01-18 18:20:35,692 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246031090038, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:20:35,692 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:20:35,692 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:35,692 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:35,692 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:20:35,692 - DEBUG - Cache Entry: (0, 1737246031090038, 0)
2025-01-18 18:20:35,692 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:35,692 - DEBUG - sfqid: 01b9cdf4-0002-4c70-0007-08ea001f9e6e
2025-01-18 18:20:35,692 - DEBUG - query execution done
2025-01-18 18:20:35,692 - DEBUG - SUCCESS
2025-01-18 18:20:35,692 - DEBUG - PUT OR GET: False
2025-01-18 18:20:35,692 - DEBUG - Query result format: arrow
2025-01-18 18:20:35,692 - INFO - Number of results in first chunk: 0
2025-01-18 18:20:35,693 - DEBUG - executing SQL/command
2025-01-18 18:20:35,693 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:20:35,693 - DEBUG - sequence counter: 11
2025-01-18 18:20:35,693 - DEBUG - Request id: b0fda997-d773-43bd-9293-805b1ce5c9d6
2025-01-18 18:20:35,693 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:20:35,693 - DEBUG - is_file_transfer: True
2025-01-18 18:20:35,693 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:35,693 - DEBUG - _cmd_query
2025-01-18 18:20:35,693 - DEBUG - serialize_to_dict() called
2025-01-18 18:20:35,693 - DEBUG - Cache Entry: (0, 1737246031090038, 0)
2025-01-18 18:20:35,693 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246031090038, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:20:35,693 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[11], is_file_transfer=[False]
2025-01-18 18:20:35,694 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:20:35,695 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:20:35,695 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:20:35,695 - DEBUG - Request guid: 0db1ea3a-f849-4563-be12-b0710535a259
2025-01-18 18:20:35,695 - DEBUG - socket timeout: 60
2025-01-18 18:20:35,780 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=b0fda997-d773-43bd-9293-805b1ce5c9d6&request_guid=0db1ea3a-f849-4563-be12-b0710535a259 HTTP/1.1" 200 2617
2025-01-18 18:20:35,780 - DEBUG - SUCCESS
2025-01-18 18:20:35,780 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:20:35,780 - DEBUG - ret[code] = None, after post request
2025-01-18 18:20:35,780 - DEBUG - Query id: 01b9cdf4-0002-4d87-0007-08ea001fe516
2025-01-18 18:20:35,780 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246031172012, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:20:35,780 - DEBUG - Cache Entry: (0, 1737246031090038, 0)
2025-01-18 18:20:35,781 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246031172012, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:20:35,781 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:20:35,781 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:35,781 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:20:35,781 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:20:35,781 - DEBUG - Cache Entry: (0, 1737246031172012, 0)
2025-01-18 18:20:35,781 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:35,781 - DEBUG - sfqid: 01b9cdf4-0002-4d87-0007-08ea001fe516
2025-01-18 18:20:35,781 - DEBUG - query execution done
2025-01-18 18:20:35,781 - DEBUG - SUCCESS
2025-01-18 18:20:35,781 - DEBUG - PUT OR GET: False
2025-01-18 18:20:35,781 - DEBUG - Query result format: arrow
2025-01-18 18:20:35,781 - INFO - Number of results in first chunk: 54
2025-01-18 18:20:35,781 - DEBUG - Execute query [queryID: 01b9cdf4-0002-4d87-0007-08ea001fe516]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:20:35,781 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:20:35,781 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:20:35,781 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:20:35,781 - DEBUG - Batches read: 0
2025-01-18 18:20:35,781 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:20:35,781 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:20:35,787 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:20:35,791 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:20:36,287 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:20:36,308 - DEBUG - calling method search on class CortexSearchServiceResource after submitting telemetry if enabled
2025-01-18 18:20:36,308 - INFO - performing a HTTP POST call to /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query
2025-01-18 18:20:36,308 - DEBUG - request has path params: {'database': 'DEV_SRC_INGEST', 'schema': 'EPA_PROCESSED', 'service_name': 'CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST'}, query_params: [], header params: {'Accept': 'application/json', 'Content-Type': 'application/json'} and body: QueryRequest(query='Tell me about oundup', columns=['chunk', 'relative_path', 'PRODUCTNAME', 'COMPANYNAME', 'CATEGORY_EPA_TYPE', 'SIGNAL_WORD'], filter=None, limit=10, experimental=None)
2025-01-18 18:20:36,310 - DEBUG - making an http POST call to 'https://gmcpdcz-mt01740.snowflakecomputing.com:443/api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query'
2025-01-18 18:20:36,312 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:20:36,804 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query HTTP/1.1" 200 None
2025-01-18 18:20:36,804 - DEBUG - created a RESTResponse with status 200 and length of 17145
2025-01-18 18:20:36,805 - DEBUG - response body: b'{\n  "results" : [ {\n    "SIGNAL_WORD" : "Danger",\n    "chunk" : "a usted en detaile. (If you do not understand this label, find someone to explain it to you in detail.you do not understand this label, find someone to explain it to you in detail.\\\\n|If in eyes|Hold eye open and rinse slowly and gently with water for 15 - 20 minutes. - Remove contact ienses, if present, after the first 5 minutes, then continue rinsing eye. - Call a poison control center or doctor for treatnent advice.|\\\\n| :---: | :---: |\\\\n|If on skin or ciothing|Take off contaminated clothing. - Rinse skin immediately with plenty of water for 15 -- 20 minutes. Call a poison controt center or doctor for treatment advice.|\\\\n|If inhaled|Move person to fresh air. If person is not breathing, call 911 or an ambulance, then give artificial respiration, preferably mouth-to-mouth if possible. e Call poison control center or doctor for treatment advice.|\\\\n|If swallowed|Call poison control center or doctor immediately for treatment advice. Have person sip a glass of water if able to swallow. Do not induce vomiting unless told to do so by the poison control center. Do not give anything by mouth to an unconscious person.|\\\\n|Have the product treatment._ You may NOTE TO PHYSICIAN|container or iabel with you when calling a poison control center or dactor, or going for also contact 1-800-222-1222 for emergency medical treatment information. - Probable mucosal damage may contraindicate the use of gastric lavage.|\\\\nSee (back) (side) (inside) panel for first aid, additional precautionary statements and",\n    "COMPANYNAME" : "BIOSAFE SYSTEMS, LLC",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"SANITIZER\\",\\n  \\"FUNGICIDE\\",\\n  \\"BACTERIOCIDE\\",\\n  \\"ALGAECIDE\\"\\n]",\n    "PRODUCTNAME" : "GREENCLEAN 6% LIQUID",\n    "relative_path" : "EPA_LABEL_PDF/GREENCLEAN_6%_LIQUID_70299-16.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "acceptable, return the product unopened at once.\\\\n|J. FOR APPLICATIONS TO ROUNDUP|READY FLEX COTTON IN THE STATE OF|\\\\n| :---: | :---: |\\\\n\\\\n## DIRECTIONS FOR USE\\\\n\\\\n## GENERAL INFORMATION\\\\nThe use of the over-the-top applications described in this label on other than Roundup Ready Flex cotton will cause crop injury and reduced yields. Drift of this product from applications made to Roundup Ready Flex cotton onto adjacent fields of post 4-leaf (node) Roundup Ready cotton may cause extensive injury including boll loss, delayed maturity and/or yield loss.NOTE: The instructions provided in this supplemental label are specific to, and should only be used with varieties designated as Roundup Ready Flex cotton. DO NOT combine the instructions in this supplemental label with those in the \\\\\\"Roundup Ready Cotton\\\\\\" or \\\\\\"Roundup Ready Flex Cotton\\\\\\" sections found in the label booklet for {INSERT BRAND NAME}, or with any other Roundup Ready cotton or Roundup Ready Flex cotton instructions on labeling for this or other glyphosate-containing product. See \\\\\\"Maximum Use Rate\\\\\\" in the \\\\\\"GENERAL INFORMATION\\\\\\" section of the label booklet for [INSERT BRAND NAME] for additional information.ROUNDUP READY FLEX COTTON VARIETIES MUST BE PURCHASED FROM AN AUTHORIZED LICENSED SEED SUPPLIER. THE DESIGNATION, \\\\\\"ROUNDUP READY\\\\\\" INDICATES THE COTTON VARIETY CONTAINS A PATENTED PROPRIETARY TRAIT.  \\\\nTYPES OF APPLICATIONS: Preplant, At-Planting, Preemergence, Postemergence (In-crop), Preharvest\\\\n|Combined total per year",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "of this product if more than a combined total of 64 fluid ounces of this product has been previously applied in over-the-top or drop nozzle applications. Allow a minimum of 7 days between a preharvest application and harvest or feeding of corn stover or grain.\\\\n## Postharvest\\\\nUSE INSTRUCTIONS: This product may be appied for weed control after corn harvest. Higher rates may be required for control of large weeds that were growing in the crop at the time of harvest. Tank mixtures with 2,4-D or dicamba may be used.PRECAUTIONS,RESTRICTIONS: Allow a minimum of 7 days between treatment and harvest or feeding of treated vegetation.\\\\n## 12.5 Roundup Ready Cotton\\\\nTYPES OF APPLICATIONS: Preplant, Preemergence, At-Planting, Postemergence (In-crop), Selective Equipment (In-Crop), Preharvest.\\\\n|Combined total per year for all applications|8 quarts per acre|\\\\n| :---: | :---: |\\\\n|Preplant, At-Planting, Preemergence applications|5 quarts per acre|\\\\n|Total in-crop applications from ground cracking to layby|4 quarts per acre|\\\\n|Maximum preharvest application rate|2 quarts per acre|\\\\n|Combined total in-crop application from emergence through harvest|6 quarts per acre|\\\\nGENERAL PRECAUTIONS,RESTRICTIONS: See the \\\\\\"ROUNDUP READY CROPS\\\\\\" section of this label for general precautionary instructions for use of this product in Roundup Ready crops. See the \\\\\\"GENERAL INFORMATION\\\\\\" section of this label for more information on \\\\\\"Annual Maximum Application Rates.\\\\\\" ALLOW A MINIMUM OF 7 DAYS BETWEEN APPLICATION AND",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "okra), Melons (all), Momordica spp (includes balsam apple, balsam pear, bittermelon, Chinese cucumber), Muskmelon (includes cantaloupe, casaba, crenshaw melon, golden pershaw melon, honeydew melon, honey ball melon, mango melon, Persian melon, pineapple melon, Santa Claus melon, snake melon), Pumpkin, Summer squash (includes crookneck squash, scallop squash, straightneck squash, vegetable marrow. zucchini), Winter squash (includes butternut squash, calabaza, hubbard squash, acorn squash, spaghetti squash), Watermelon.PRECAUTIONS, RESTRICTIONS: For Cantaloupe, Casaba melon, Crenshaw melon, Cucumber, Gherkin, Gourds, Honeydew melon, Honey ball melon, Mango melon, Melons (ali), Muskmelon, Persian melon, Pumpkin, Squash (summer, winter), and Watermelon, allow at least 3 days between application and planting.9.10.4 Leafy VegetablesMaster Label 524-454Version: 3-Jun-2006\\\\n## 1. MAIN LABEL FOR FOOD CROP USES\\\\nLABELED CROPS: Amaranth (Chinese spinach), Arugula (roquette), Beet greens, Cardoon, Celery, Chinese celery, Celtuce, Chaya, Chervil, Edible-leaved chrysanthemum, Garland chrysanthemum, Corn salad, Cress (garden and upland), Dandelion, Dock (sorrel), Dokudami, Endive (escarole), Florence fennel, Gow kee, Lettuce (head and leaf), Orach, Parsley, Purslane (garden and winter), Radicchio (red chicory), Rhubarb, Spinach, New Zealand spinach, Vine spinach, Swiss chard, Watercress (upland), Water spinach.PRECAUTIONS, RESTRICTIONS: For Watercress, avoid applications within 3 days prior to seeding",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "To avoid delays in greenup and minimize injury, add no more than 1 ounce of Oust or Oust XP per acre on Bermudagrass and no more than 0.5 ounce of Oust or Oust XP per acre on bahiagrass and avoid treatments when these grasses are in a semi-dormant condition.\\\\n## Actively Growing Bermudagrass\\\\nThis product may be used to control or partially control many annual and perennial weeds for effective release of actively growing Bermudagrass. Apply 1 to 3 pints of this product in 10 to 40 gallons of water per acre. Use the lower rate when treating annual weeds below 6 inches in height (or runner length). Use the higher rate as weeds increase in size or as they approach flower or seedhead formation. These rates will also provide partial control of the following perennial species:\\\\n|Bahiagrass|Johnsongrass|\\\\n| :---: | :---: |\\\\n|Bluestem, silver|Trumpetcreeper|\\\\n|Fescue, tall|Vaseygrass|\\\\nTANK MIXTURES: This product may be tank-mixed with Outrider for control or partial control of Johnsongrass and other weeds listed in the Outrider label. Use 9 to 32 fluid ounces of this product with 0.75 to 1.3 ounces of Outrider per acre. se the higher rates of both products for control of perennial weeds or annual weeds greater than 6 inches in height.Master Label 524-454Version: 3-Jun-2006\\\\n## II. MAIN LABEL FOR INDUSTRIAL, TURF, AND ORNAMENTAL USES\\\\nThis product may be tank-mixed with Oust or Oust XP. If tank-mixed, use no more than 1 to 2 pints of this product with 1 to 2 ounces of Oust or Oust XP per acre.",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"INSECTICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "p\xc3\xb3plations of small iewy. hatched larvae..cApply\'on a 3 to 7-day Schedule to suppress light.to n\xc3\xb6drate populations of srnall, newly-hatched larv\xc3\xa1e. Bast results:can be expected using Integrated Pest Managernent/ Scouting. Program\xc5\xa1 in early seas\xc3\xb6n cotton \xc3\xa1nd.continuing thr\xc3\xb6gh\xc3\xb6ut the season..\\\\n9. Continu\xc3\xa9 to op\xc3\xa9rate tha systern until the Jackpot WP solution has cleared the last.sprinkler head.\\\\n  \\\\nSotid Set, Hand Move, and Moving Wheel trrigation Equipment.dtmproved controi c\xc3\xa1n be achieved by tank-miing dackpof Wp with.other EPA-registered insecticid\xc3\xa9s. When using a tank- mix. use tower Jackpof WP.rates (0.25-0.75 lb./A). Treat.when. egs and/ or newly h\xc3\xa1tch\xc3\xa9d larvae ar\xc3\xa9 found. T\xc3\xa1maintain .control, repeat applications.target\xc3\xa9d again\xc5\xa1t:egas and small larvae, a\xc5\xa1 nec\xc3\xa9ssary.\\\\n1.Determine the acreage c\xc3\xb3ver\xc3\xa9d by the sprinklers.\\\\n* 2:Fit the injection slution tank with wat\xc3\xa9r aridadj\xc3\xbast flow rate.to use the contents over a 20:to 80-minut\xc3\xa9 interval.\\\\n3. Determine tha amaunt of Jackpat WP tequired to treat.the area:cav\xc3\xa9red by the ifrigatior \xc5\xa1ystem.\\\\n4. Add the required amount of Jackpot.WP into:the same quantity of water used to calibrate the injection period. (See Mixing Instructions secti\xc3\xb3n of this label.)\\\\n\\\\n|Crop.|Pests|Lbs..Jackpot WP P\xc3\xa9r Acrea|\\\\n| :---: | :---: | :---: |\\\\n|Terrestriat Ornarnentals and [ Flowers|Loopers:. Budwarns, Diamondback Moth, I Armywarrris.|0.5\'to 2:0|\\\\n|:Stone Fruit: : Peaches, Nectarines, Plums. Prun\xc3\xa9s, Cherries|Twig Borer; Mavel Orangew\xc3\xb6r|1.010 2.0|\\\\n|Tree Nuts:e",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "AGREE 50 WP ",\n    "relative_path" : "EPA_LABEL_PDF/AGREE_50_WP__70051-99.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"INSECTICIDE\\",\\n  \\"MITICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "Turnip)|Tomatoes|||Orangedog||\\\\n|||||||\\\\n|Horseradish Kale|Turnips Watercress||Small Fruit|Acherma sphinx moth|0.5 - 2.0 pounds|\\\\n|Kohlrabi|||and Berries:|Arrnyworms||\\\\n|Rate/Acre:. 0.5 - 2.0|pounds||Blackberries Blueberries|Btueberry leafroller Fruittree leafroller||\\\\n||||Cranberries|Grape berry moth||\\\\n||||. Currants.|Gypsy moth||\\\\n||1I.HERBS & SPICES||Raspberries|Loopers||\\\\n|Crop such as:||Insect Pest|Strawberries|Oblique banded leafroller||\\\\n|||||Tobacca budworm||\\\\n|Basil||Armyworms|Grapes|Grape berry moth|0.5 - 2.0 paunds|\\\\n|Chives Cilantro. Dill Oregano Peppermint Thyme||Dianondback moth European corn corer Green claverworm Imported cabbageworm Loopers.. Saltmarsh caterpillar||Cherry fruitworm Grape leaffoider Grapeleaf skeletonizer Green fruitworm Omnivorous leafroller||\\\\n|||||||\\\\n|||||||\\\\n|||||\xc3\xb6range tortrix||\\\\n|Rate/Acre: 0.5. 2.0|pounds|||Saitmarsh caterpillar||\\\\n|||||||\\\\n|||||||\\\\n||||Tropical and Other Fruit:|Amorbia Loopers.|0.5 - 2.0 pounds|\\\\n||1II. PASTURE & HAY|CROPS||||\\\\n|||||||\\\\n||||Avocados|range tortrix||\\\\n|Crop such as:||Insect Pest||mnivorous leafroller||\\\\n|Alfalta (hay & seed Pasture (grasses &||Alalfa caterpillar Armyworms*||Ornnivorous looper Spanworm||\\\\n|Silage||European skipper Loopers*|Bananas|Banana skipper|0.5 - 2.0|\\\\n||||Kiwi|Ornnivoraus leafroiler|0.5 - 2.0|\\\\n|Rate/Acre: 0.5 - 2.0|pounds|Webworm||||\\\\n|*Product should be applied persists, make a|when early instar larvae second application 7-1 days|first appear. If infestation. later. Cormbination of",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "CONDOR WP ",\n    "relative_path" : "EPA_LABEL_PDF/CONDOR_WP__70051-80.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "",\n    "chunk" : "pitted|Sowthistle, annual|\\\\n|Arrowhead, California|Gromwell, field|Mullein, turkey|Spurge, prostrate|\\\\n|Buckwheat, wild|Groundcherry, cutleaf|Mustard, wild|S tarthistle, yellow|\\\\n|Buffalobur|G roundsel, common|Nettle|Sunflower, common|\\\\n|Burclover, California|Henbit|Nightshade, black|Sunflower, prairie|\\\\n|Carpetweed|J imsonweed|Nightshade, eastern black|S unflower, volunteer|\\\\n|Chickweed, common|Knotweed|Nightshade, hairy|S winecress|\\\\n|Chinese thornapple|Kochia|P ennycress|Thistle, Russian|\\\\n|Cockebur, common|Lambsquarters, common1|P igweed, redroot|Turnip, wild|\\\\n|Copperleaf, Virginia|Lettuce, miner\'s|P ineapple weed|Velvetleaf1|\\\\n|Cudweed|Lettuce, prickly|P uncturevine|Vervain|\\\\n|Cutleaf eveningprimrose|London rocket|Purslane, common|Vetch|\\\\n|Dodder|Mallow, common|Radish, wild|Virginia copperleaf|\\\\n|E clipta|Malva (little mallow)|Ragweed, common|Willowherb, panicle|\\\\n|F iddleneck|Marestail|Ragweed, giant||\\\\n|Filaree|Mayweed|Redmaids||\\\\n|Filaree, redstem|Morningglory, entireleaf|Shepherdspurse||\\\\nFor optimal control, make applications between dawn and 2 hours before sunset.]\\\\n|Barnyardgrass|Crabgrass, smooth|J unglerice|Shattercane|\\\\n| :---: | :---: | :---: | :---: |\\\\n|Bluegrass, annual|Cupgrass, woolly|Oat, wild|S prangletop|\\\\n|Brome, ripgut|Foxtail, giant|P anicum, fall|Stinkgrass|\\\\n|Bromegrass, downy|Foxtail, green|P anicum, Texas|Wheat, volunteer|\\\\n|Canarygrass|Foxtail, yellow|Rush, toads|Windgrass|\\\\n|Chess, soft|Goosegrass|Rygrass, annual|Witchgrass|\\\\n|Crabgrass, large|J",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "GFA 280 HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/GFA_280_HERBICIDE_264-1224.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "place when young trees are under stress fron drought, flood water, insects or disease.Read and observe the cautionary statements and all other information appearing on the labels of all herbicides used.Oust is a trademark of E.1. duPont de Nemours and Company.Master Label 524-454Version: 3-Jun-2006\\",\\"metadata\\":{\\"pageCount\\":119}}",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\"\\n]",\n    "chunk" : "{\\"content\\":\\"\\\\n# FRQNT PANEL\\\\n\\\\n# Roundup* L&G READY-TO-USE by Moasanto Grass & Weed Killer\\\\n  \\\\n[graphics of weeds dying in 1-7 days]\\\\n* .READY.TO-USE, RBCUIRES NO\\\\n* : SYSTEMIC GRASS AND WEED KILLER FOR SPOT TREATMENT OF UNDESIRABLB VEGETATION\\\\n* . KILLS LARELID E WEEDS AND GRASSES, ROOTS AND ALL\\\\nGUARANTEEDT AESIN NTIH OREAETLACATEN  \\\\nS YTITACTKNGUAWANEEORXOAR KONEKRAE\\\\n* :_DOES NOT HAVE SOIL ACTIVTTY\\\\n+-SUTABLB-FOR- USE-AROUND-FLOWER-BEDS TREES,-SHRUTS FENCES-WALKS -AND-SPOT TRRATMEIT IN LAWNS\\\\nSHRURSAND ORWN RENOXATION (This Taun renovation*phrase no for 24 Oz container sixe.)\\\\n* : THIS 24 OZ BOTTLE CAN BE REFILLED WTIH ONE TABLET OF ROUNDUF QUIK STIK GRASS & WEED KILLER!. SEE STORAGE AND DISPOSAL SECTION FOR MORE INFORMATION. H\\\\nRd thai laST Wlor wg thT p?x3a? Ox ony msR4ng ioTT nmRRan (moved io back panel)NOTICEt- Dwyor-axoumo all soponaibility for mfoty and uce not in macrdan vith axeptablo-raturm at once unopanod (moved to back panel)Keep out ad reach ot chlldren. CAUTION!Soo haak penai for Preenutionary Statemanta and Direstions for Uce.  \\\\nBEST AYAILA&1.  \\\\nBEST AYAILA&1.BPA-Rrg Na S04 320 (moved to back panel)\\\\n## MONSAATO COMRANY\\\\nAGRICULTURAL PRODUCTS-&T LOUIS, MIS$OURI-63167 USA (moved to back panel)  \\\\nACTIVE INGREDIENT:\\\\n|in the form of is isopropylamine k|0.96%|\\\\n| :---: | :---: |\\\\n  \\\\n:*1 ...(delered isems below are moved to back panel)ny non porn(6)CTradamerk of Menseno Company  \\\\nNET 24 fi z (1pi 8m} (delcied)  \\\\n:MONSANTO COMPANY-1993  \\\\nA000.X 1 (print piae",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "SHACKLE HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/SHACKLE_HERBICIDE_524-330.pdf"\n  } ],\n  "request_id" : "eef3dc79-f998-4967-ae59-a7a40759c337"\n}'
2025-01-18 18:20:36,807 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:20:36,808 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:20:37,418 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:20:48,019 - DEBUG - executing SQL/command
2025-01-18 18:20:48,020 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_src_ingest.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/GREEN...]
2025-01-18 18:20:48,020 - DEBUG - sequence counter: 12
2025-01-18 18:20:48,020 - DEBUG - Request id: 7f536e63-2a5c-4c93-9f09-bdc9b2c80dd6
2025-01-18 18:20:48,020 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_src_ingest.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/GREEN...]
2025-01-18 18:20:48,020 - DEBUG - is_file_transfer: True
2025-01-18 18:20:48,020 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:48,020 - DEBUG - _cmd_query
2025-01-18 18:20:48,020 - DEBUG - serialize_to_dict() called
2025-01-18 18:20:48,020 - DEBUG - Cache Entry: (0, 1737246031172012, 0)
2025-01-18 18:20:48,020 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246031172012, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:20:48,020 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_src_ingest.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/GREEN...], sequence_id=[12], is_file_transfer=[False]
2025-01-18 18:20:48,021 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:20:48,021 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:20:48,022 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:20:48,022 - DEBUG - Request guid: 6f2f223c-2c2a-4393-9474-f776acccd445
2025-01-18 18:20:48,022 - DEBUG - socket timeout: 60
2025-01-18 18:20:48,100 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=7f536e63-2a5c-4c93-9f09-bdc9b2c80dd6&request_guid=6f2f223c-2c2a-4393-9474-f776acccd445 HTTP/1.1" 200 474
2025-01-18 18:20:48,101 - DEBUG - SUCCESS
2025-01-18 18:20:48,101 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:20:48,101 - DEBUG - ret[code] = 391707, after post request
2025-01-18 18:20:48,101 - DEBUG - Query id: 01b9cdf4-0002-4d87-0007-08ea001fe51a
2025-01-18 18:20:48,101 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:20:48,101 - DEBUG - sfqid: 01b9cdf4-0002-4d87-0007-08ea001fe51a
2025-01-18 18:20:48,101 - DEBUG - query execution done
2025-01-18 18:20:48,101 - DEBUG - {'data': {'internalError': False, 'unredactedFromSecureObject': False, 'errorCode': '391707', 'age': 0, 'sqlState': '42000', 'queryId': '01b9cdf4-0002-4d87-0007-08ea001fe51a', 'line': -1, 'pos': -1, 'type': 'COMPILATION'}, 'code': '391707', 'message': "SQL compilation error: Stage '@DEV_src_ingest.EPA_RAW.PDF_STORE' provided to the function 'DIRECTORY' does not exist or is not authorized.", 'success': False, 'headers': None}
2025-01-18 18:21:43,266 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x000001EF81837D90>
2025-01-18 18:21:43,266 - INFO - Querying the server for client info
2025-01-18 18:21:43,267 - DEBUG - cursor
2025-01-18 18:21:43,267 - DEBUG - executing SQL/command
2025-01-18 18:21:43,267 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:21:43,267 - DEBUG - sequence counter: 13
2025-01-18 18:21:43,267 - DEBUG - Request id: 03511329-30bc-4099-b175-c170d892a7ba
2025-01-18 18:21:43,267 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:21:43,267 - DEBUG - is_file_transfer: True
2025-01-18 18:21:43,267 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:43,268 - DEBUG - _cmd_query
2025-01-18 18:21:43,268 - DEBUG - serialize_to_dict() called
2025-01-18 18:21:43,268 - DEBUG - Cache Entry: (0, 1737246031172012, 0)
2025-01-18 18:21:43,268 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246031172012, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:21:43,268 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[13], is_file_transfer=[False]
2025-01-18 18:21:43,271 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:21:43,272 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:21:43,272 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:21:43,272 - DEBUG - Request guid: 6de6bd59-70f5-4de6-bd5b-86533475698f
2025-01-18 18:21:43,272 - DEBUG - socket timeout: 60
2025-01-18 18:21:43,399 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=03511329-30bc-4099-b175-c170d892a7ba&request_guid=6de6bd59-70f5-4de6-bd5b-86533475698f HTTP/1.1" 200 2621
2025-01-18 18:21:43,399 - DEBUG - SUCCESS
2025-01-18 18:21:43,400 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:21:43,400 - DEBUG - ret[code] = None, after post request
2025-01-18 18:21:43,400 - DEBUG - Query id: 01b9cdf5-0002-4c5d-0007-08ea001fcc2e
2025-01-18 18:21:43,400 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246098784644, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:21:43,400 - DEBUG - Cache Entry: (0, 1737246031172012, 0)
2025-01-18 18:21:43,400 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246098784644, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:21:43,400 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:21:43,400 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:43,400 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:43,400 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:21:43,400 - DEBUG - Cache Entry: (0, 1737246098784644, 0)
2025-01-18 18:21:43,400 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:43,400 - DEBUG - sfqid: 01b9cdf5-0002-4c5d-0007-08ea001fcc2e
2025-01-18 18:21:43,401 - DEBUG - query execution done
2025-01-18 18:21:43,401 - DEBUG - SUCCESS
2025-01-18 18:21:43,401 - DEBUG - PUT OR GET: False
2025-01-18 18:21:43,401 - DEBUG - Query result format: arrow
2025-01-18 18:21:43,401 - INFO - Number of results in first chunk: 1
2025-01-18 18:21:43,401 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:21:43,401 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:21:43,401 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:21:43,401 - DEBUG - Batches read: 0
2025-01-18 18:21:43,401 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:21:43,401 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:21:43,402 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x000001EF812BB550>, telemetry enabled: True
2025-01-18 18:21:43,402 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:21:43,402 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:21:43,402 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:21:43,402 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:21:43,404 - DEBUG - cursor
2025-01-18 18:21:43,405 - DEBUG - executing SQL/command
2025-01-18 18:21:43,405 - DEBUG - query: [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:21:43,405 - DEBUG - sequence counter: 14
2025-01-18 18:21:43,406 - DEBUG - Request id: ba87d1a4-cbf2-4c42-8042-2478d70647a1
2025-01-18 18:21:43,406 - DEBUG - running query [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:21:43,406 - DEBUG - is_file_transfer: True
2025-01-18 18:21:43,406 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:43,407 - DEBUG - _cmd_query
2025-01-18 18:21:43,407 - DEBUG - serialize_to_dict() called
2025-01-18 18:21:43,407 - DEBUG - Cache Entry: (0, 1737246098784644, 0)
2025-01-18 18:21:43,407 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246098784644, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:21:43,407 - DEBUG - sql=[SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS WH...], sequence_id=[14], is_file_transfer=[False]
2025-01-18 18:21:43,408 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:21:43,408 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:21:43,408 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:21:43,408 - DEBUG - Request guid: bc4a1d4b-b0a6-4e75-b71e-6fcce4701959
2025-01-18 18:21:43,408 - DEBUG - socket timeout: 60
2025-01-18 18:21:43,508 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=ba87d1a4-cbf2-4c42-8042-2478d70647a1&request_guid=bc4a1d4b-b0a6-4e75-b71e-6fcce4701959 HTTP/1.1" 200 2117
2025-01-18 18:21:43,509 - DEBUG - SUCCESS
2025-01-18 18:21:43,509 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:21:43,509 - DEBUG - ret[code] = None, after post request
2025-01-18 18:21:43,509 - DEBUG - Query id: 01b9cdf5-0002-4d87-0007-08ea001fe526
2025-01-18 18:21:43,509 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246098902403, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:21:43,509 - DEBUG - Cache Entry: (0, 1737246098784644, 0)
2025-01-18 18:21:43,509 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246098902403, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:21:43,509 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:21:43,509 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:43,509 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:43,509 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:21:43,509 - DEBUG - Cache Entry: (0, 1737246098902403, 0)
2025-01-18 18:21:43,509 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:43,510 - DEBUG - sfqid: 01b9cdf5-0002-4d87-0007-08ea001fe526
2025-01-18 18:21:43,510 - DEBUG - query execution done
2025-01-18 18:21:43,510 - DEBUG - SUCCESS
2025-01-18 18:21:43,510 - DEBUG - PUT OR GET: False
2025-01-18 18:21:43,510 - DEBUG - Query result format: arrow
2025-01-18 18:21:43,510 - INFO - Number of results in first chunk: 1
2025-01-18 18:21:43,510 - DEBUG - Execute query [queryID: 01b9cdf5-0002-4d87-0007-08ea001fe526] 
        SELECT LOCATION, LATITUDE, LONGITUDE
        FROM DEV_dp_app.APP_ASSETS.USER_SETTINGS 
        WHERE USER_ID = 'default_user'
        
2025-01-18 18:21:43,510 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:21:43,510 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:21:43,510 - DEBUG - Arrow chunk info: batchCount 1, columnCount 3, use_numpy: 0
2025-01-18 18:21:43,510 - DEBUG - Batches read: 0
2025-01-18 18:21:43,510 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:21:43,510 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:21:43,516 - DEBUG - executing SQL/command
2025-01-18 18:21:43,516 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:21:43,517 - DEBUG - sequence counter: 15
2025-01-18 18:21:43,517 - DEBUG - Request id: f2a5bf06-a855-497d-9298-b7044f8fe8cc
2025-01-18 18:21:43,517 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:21:43,517 - DEBUG - is_file_transfer: True
2025-01-18 18:21:43,517 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:43,517 - DEBUG - _cmd_query
2025-01-18 18:21:43,517 - DEBUG - serialize_to_dict() called
2025-01-18 18:21:43,517 - DEBUG - Cache Entry: (0, 1737246098902403, 0)
2025-01-18 18:21:43,517 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246098902403, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:21:43,517 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[15], is_file_transfer=[False]
2025-01-18 18:21:43,519 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:21:43,519 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:21:43,519 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:21:43,519 - DEBUG - Request guid: bd8a9288-c1af-4397-b0b5-4e812b27c97c
2025-01-18 18:21:43,519 - DEBUG - socket timeout: 60
2025-01-18 18:21:43,584 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=f2a5bf06-a855-497d-9298-b7044f8fe8cc&request_guid=bd8a9288-c1af-4397-b0b5-4e812b27c97c HTTP/1.1" 200 1503
2025-01-18 18:21:43,584 - DEBUG - SUCCESS
2025-01-18 18:21:43,584 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:21:43,584 - DEBUG - ret[code] = None, after post request
2025-01-18 18:21:43,584 - DEBUG - Query id: 01b9cdf5-0002-4c76-0007-08ea001fbd02
2025-01-18 18:21:43,584 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246098987885, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:21:43,584 - DEBUG - Cache Entry: (0, 1737246098902403, 0)
2025-01-18 18:21:43,584 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246098987885, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:21:43,585 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:21:43,585 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:43,585 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:43,585 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:21:43,585 - DEBUG - Cache Entry: (0, 1737246098987885, 0)
2025-01-18 18:21:43,585 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:43,585 - DEBUG - sfqid: 01b9cdf5-0002-4c76-0007-08ea001fbd02
2025-01-18 18:21:43,585 - DEBUG - query execution done
2025-01-18 18:21:43,585 - DEBUG - SUCCESS
2025-01-18 18:21:43,585 - DEBUG - PUT OR GET: False
2025-01-18 18:21:43,585 - DEBUG - Query result format: arrow
2025-01-18 18:21:43,585 - INFO - Number of results in first chunk: 0
2025-01-18 18:21:43,586 - DEBUG - executing SQL/command
2025-01-18 18:21:43,586 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:21:43,586 - DEBUG - sequence counter: 16
2025-01-18 18:21:43,586 - DEBUG - Request id: 6f65d3b8-1ffb-452f-a9ad-5f7cb390c99d
2025-01-18 18:21:43,586 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:21:43,586 - DEBUG - is_file_transfer: True
2025-01-18 18:21:43,587 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:43,587 - DEBUG - _cmd_query
2025-01-18 18:21:43,587 - DEBUG - serialize_to_dict() called
2025-01-18 18:21:43,587 - DEBUG - Cache Entry: (0, 1737246098987885, 0)
2025-01-18 18:21:43,587 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246098987885, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:21:43,587 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[16], is_file_transfer=[False]
2025-01-18 18:21:43,587 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:21:43,588 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:21:43,588 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:21:43,588 - DEBUG - Request guid: c668959b-c401-4bb2-8429-11e72cf53f06
2025-01-18 18:21:43,588 - DEBUG - socket timeout: 60
2025-01-18 18:21:43,657 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=6f65d3b8-1ffb-452f-a9ad-5f7cb390c99d&request_guid=c668959b-c401-4bb2-8429-11e72cf53f06 HTTP/1.1" 200 1376
2025-01-18 18:21:43,658 - DEBUG - SUCCESS
2025-01-18 18:21:43,658 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:21:43,658 - DEBUG - ret[code] = None, after post request
2025-01-18 18:21:43,658 - DEBUG - Query id: 01b9cdf5-0002-4c76-0007-08ea001fbd06
2025-01-18 18:21:43,658 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246099053735, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:21:43,658 - DEBUG - Cache Entry: (0, 1737246098987885, 0)
2025-01-18 18:21:43,658 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246099053735, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:21:43,658 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:21:43,658 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:43,658 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:43,658 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:21:43,658 - DEBUG - Cache Entry: (0, 1737246099053735, 0)
2025-01-18 18:21:43,658 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:43,658 - DEBUG - sfqid: 01b9cdf5-0002-4c76-0007-08ea001fbd06
2025-01-18 18:21:43,658 - DEBUG - query execution done
2025-01-18 18:21:43,658 - DEBUG - SUCCESS
2025-01-18 18:21:43,659 - DEBUG - PUT OR GET: False
2025-01-18 18:21:43,659 - DEBUG - Query result format: arrow
2025-01-18 18:21:43,659 - INFO - Number of results in first chunk: 0
2025-01-18 18:21:43,659 - DEBUG - executing SQL/command
2025-01-18 18:21:43,659 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:21:43,659 - DEBUG - sequence counter: 17
2025-01-18 18:21:43,660 - DEBUG - Request id: 7e917da1-3b55-498a-b897-9cbb4112bda5
2025-01-18 18:21:43,660 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:21:43,660 - DEBUG - is_file_transfer: True
2025-01-18 18:21:43,660 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:43,660 - DEBUG - _cmd_query
2025-01-18 18:21:43,660 - DEBUG - serialize_to_dict() called
2025-01-18 18:21:43,660 - DEBUG - Cache Entry: (0, 1737246099053735, 0)
2025-01-18 18:21:43,660 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246099053735, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:21:43,660 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[17], is_file_transfer=[False]
2025-01-18 18:21:43,661 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:21:43,661 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:21:43,661 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:21:43,661 - DEBUG - Request guid: a261322e-accd-4934-a283-3ba9a0098abd
2025-01-18 18:21:43,661 - DEBUG - socket timeout: 60
2025-01-18 18:21:43,729 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=7e917da1-3b55-498a-b897-9cbb4112bda5&request_guid=a261322e-accd-4934-a283-3ba9a0098abd HTTP/1.1" 200 1375
2025-01-18 18:21:43,729 - DEBUG - SUCCESS
2025-01-18 18:21:43,730 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:21:43,730 - DEBUG - ret[code] = None, after post request
2025-01-18 18:21:43,730 - DEBUG - Query id: 01b9cdf5-0002-4c5d-0007-08ea001fcc32
2025-01-18 18:21:43,730 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246099118436, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:21:43,730 - DEBUG - Cache Entry: (0, 1737246099053735, 0)
2025-01-18 18:21:43,730 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246099118436, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:21:43,730 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:21:43,730 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:43,730 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:43,730 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:21:43,730 - DEBUG - Cache Entry: (0, 1737246099118436, 0)
2025-01-18 18:21:43,730 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:43,730 - DEBUG - sfqid: 01b9cdf5-0002-4c5d-0007-08ea001fcc32
2025-01-18 18:21:43,731 - DEBUG - query execution done
2025-01-18 18:21:43,731 - DEBUG - SUCCESS
2025-01-18 18:21:43,731 - DEBUG - PUT OR GET: False
2025-01-18 18:21:43,731 - DEBUG - Query result format: arrow
2025-01-18 18:21:43,731 - INFO - Number of results in first chunk: 0
2025-01-18 18:21:43,732 - DEBUG - executing SQL/command
2025-01-18 18:21:43,732 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:21:43,732 - DEBUG - sequence counter: 18
2025-01-18 18:21:43,732 - DEBUG - Request id: beadefee-9ca4-4438-984f-7ed4f5834edd
2025-01-18 18:21:43,732 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:21:43,732 - DEBUG - is_file_transfer: True
2025-01-18 18:21:43,732 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:43,732 - DEBUG - _cmd_query
2025-01-18 18:21:43,732 - DEBUG - serialize_to_dict() called
2025-01-18 18:21:43,733 - DEBUG - Cache Entry: (0, 1737246099118436, 0)
2025-01-18 18:21:43,733 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246099118436, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:21:43,733 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[18], is_file_transfer=[False]
2025-01-18 18:21:43,734 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:21:43,734 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:21:43,734 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:21:43,734 - DEBUG - Request guid: 3cabf959-984c-4521-afae-e3ade55fcedb
2025-01-18 18:21:43,734 - DEBUG - socket timeout: 60
2025-01-18 18:21:43,983 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=beadefee-9ca4-4438-984f-7ed4f5834edd&request_guid=3cabf959-984c-4521-afae-e3ade55fcedb HTTP/1.1" 200 2618
2025-01-18 18:21:43,984 - DEBUG - SUCCESS
2025-01-18 18:21:43,984 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:21:43,984 - DEBUG - ret[code] = None, after post request
2025-01-18 18:21:43,984 - DEBUG - Query id: 01b9cdf5-0002-4c70-0007-08ea001f9e7e
2025-01-18 18:21:43,984 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246099300042, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:21:43,984 - DEBUG - Cache Entry: (0, 1737246099118436, 0)
2025-01-18 18:21:43,984 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246099300042, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:21:43,984 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:21:43,984 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:43,984 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:43,984 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:21:43,985 - DEBUG - Cache Entry: (0, 1737246099300042, 0)
2025-01-18 18:21:43,985 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:43,985 - DEBUG - sfqid: 01b9cdf5-0002-4c70-0007-08ea001f9e7e
2025-01-18 18:21:43,986 - DEBUG - query execution done
2025-01-18 18:21:43,986 - DEBUG - SUCCESS
2025-01-18 18:21:43,986 - DEBUG - PUT OR GET: False
2025-01-18 18:21:43,986 - DEBUG - Query result format: arrow
2025-01-18 18:21:43,986 - INFO - Number of results in first chunk: 54
2025-01-18 18:21:43,986 - DEBUG - Execute query [queryID: 01b9cdf5-0002-4c70-0007-08ea001f9e7e]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:21:43,986 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:21:43,986 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:21:43,986 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:21:43,986 - DEBUG - Batches read: 0
2025-01-18 18:21:43,986 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:21:43,986 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:21:50,385 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x000001EF81837D90>
2025-01-18 18:21:50,386 - INFO - Querying the server for client info
2025-01-18 18:21:50,386 - DEBUG - cursor
2025-01-18 18:21:50,386 - DEBUG - executing SQL/command
2025-01-18 18:21:50,386 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:21:50,386 - DEBUG - sequence counter: 19
2025-01-18 18:21:50,386 - DEBUG - Request id: 71c0b077-d0fa-4232-982e-128fd42d86c2
2025-01-18 18:21:50,386 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:21:50,386 - DEBUG - is_file_transfer: True
2025-01-18 18:21:50,386 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:50,386 - DEBUG - _cmd_query
2025-01-18 18:21:50,386 - DEBUG - serialize_to_dict() called
2025-01-18 18:21:50,386 - DEBUG - Cache Entry: (0, 1737246099300042, 0)
2025-01-18 18:21:50,386 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246099300042, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:21:50,386 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[19], is_file_transfer=[False]
2025-01-18 18:21:50,387 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:21:50,387 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:21:50,387 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:21:50,387 - DEBUG - Request guid: f0826d6d-f00d-4de9-ac0f-3135a565f726
2025-01-18 18:21:50,388 - DEBUG - socket timeout: 60
2025-01-18 18:21:50,519 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=71c0b077-d0fa-4232-982e-128fd42d86c2&request_guid=f0826d6d-f00d-4de9-ac0f-3135a565f726 HTTP/1.1" 200 2620
2025-01-18 18:21:50,519 - DEBUG - SUCCESS
2025-01-18 18:21:50,519 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:21:50,519 - DEBUG - ret[code] = None, after post request
2025-01-18 18:21:50,520 - DEBUG - Query id: 01b9cdf5-0002-4c7a-0007-08ea001ff516
2025-01-18 18:21:50,520 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246105898386, 'priority': 0, 'context': 'COrjJA=='}]}
2025-01-18 18:21:50,520 - DEBUG - Cache Entry: (0, 1737246099300042, 0)
2025-01-18 18:21:50,520 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246105898386, 'priority': 0, 'context': 'COrjJA=='}
2025-01-18 18:21:50,520 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:21:50,520 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:50,520 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:50,520 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:21:50,520 - DEBUG - Cache Entry: (0, 1737246105898386, 0)
2025-01-18 18:21:50,520 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:50,520 - DEBUG - sfqid: 01b9cdf5-0002-4c7a-0007-08ea001ff516
2025-01-18 18:21:50,520 - DEBUG - query execution done
2025-01-18 18:21:50,520 - DEBUG - SUCCESS
2025-01-18 18:21:50,520 - DEBUG - PUT OR GET: False
2025-01-18 18:21:50,520 - DEBUG - Query result format: arrow
2025-01-18 18:21:50,520 - INFO - Number of results in first chunk: 1
2025-01-18 18:21:50,520 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:21:50,520 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:21:50,520 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:21:50,520 - DEBUG - Batches read: 0
2025-01-18 18:21:50,520 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:21:50,521 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:21:50,521 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x000001EF812BB550>, telemetry enabled: True
2025-01-18 18:21:50,521 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:21:50,521 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:21:50,521 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:21:50,521 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:21:50,525 - DEBUG - cursor
2025-01-18 18:21:50,525 - DEBUG - executing SQL/command
2025-01-18 18:21:50,525 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:21:50,525 - DEBUG - sequence counter: 20
2025-01-18 18:21:50,525 - DEBUG - Request id: aa938f1a-23fc-4159-9806-933790c3229e
2025-01-18 18:21:50,525 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:21:50,525 - DEBUG - is_file_transfer: True
2025-01-18 18:21:50,525 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:50,525 - DEBUG - _cmd_query
2025-01-18 18:21:50,525 - DEBUG - serialize_to_dict() called
2025-01-18 18:21:50,525 - DEBUG - Cache Entry: (0, 1737246105898386, 0)
2025-01-18 18:21:50,525 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246105898386, 'priority': 0, 'context': {'base64Data': 'COrjJA=='}}]}
2025-01-18 18:21:50,525 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[20], is_file_transfer=[False]
2025-01-18 18:21:50,526 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:21:50,526 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:21:50,526 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:21:50,526 - DEBUG - Request guid: b11a823c-ea23-4f02-bc3e-6c3c17c8c21e
2025-01-18 18:21:50,526 - DEBUG - socket timeout: 60
2025-01-18 18:21:50,597 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=aa938f1a-23fc-4159-9806-933790c3229e&request_guid=b11a823c-ea23-4f02-bc3e-6c3c17c8c21e HTTP/1.1" 200 1500
2025-01-18 18:21:50,599 - DEBUG - SUCCESS
2025-01-18 18:21:50,599 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:21:50,599 - DEBUG - ret[code] = None, after post request
2025-01-18 18:21:50,599 - DEBUG - Query id: 01b9cdf5-0002-4c77-0007-08ea001fdc4a
2025-01-18 18:21:50,599 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246106001384, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:21:50,599 - DEBUG - Cache Entry: (0, 1737246105898386, 0)
2025-01-18 18:21:50,599 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246106001384, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:21:50,599 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:21:50,599 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:50,599 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:50,599 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:21:50,599 - DEBUG - Cache Entry: (0, 1737246106001384, 0)
2025-01-18 18:21:50,599 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:50,600 - DEBUG - sfqid: 01b9cdf5-0002-4c77-0007-08ea001fdc4a
2025-01-18 18:21:50,600 - DEBUG - query execution done
2025-01-18 18:21:50,600 - DEBUG - SUCCESS
2025-01-18 18:21:50,600 - DEBUG - PUT OR GET: False
2025-01-18 18:21:50,600 - DEBUG - Query result format: arrow
2025-01-18 18:21:50,600 - INFO - Number of results in first chunk: 0
2025-01-18 18:21:50,601 - DEBUG - executing SQL/command
2025-01-18 18:21:50,601 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:21:50,601 - DEBUG - sequence counter: 21
2025-01-18 18:21:50,601 - DEBUG - Request id: 8fdb8cf8-3c45-4e65-8dea-7a81d3498dec
2025-01-18 18:21:50,601 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:21:50,601 - DEBUG - is_file_transfer: True
2025-01-18 18:21:50,601 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:50,601 - DEBUG - _cmd_query
2025-01-18 18:21:50,601 - DEBUG - serialize_to_dict() called
2025-01-18 18:21:50,601 - DEBUG - Cache Entry: (0, 1737246106001384, 0)
2025-01-18 18:21:50,601 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246106001384, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:21:50,601 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[21], is_file_transfer=[False]
2025-01-18 18:21:50,602 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:21:50,602 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:21:50,602 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:21:50,602 - DEBUG - Request guid: d5fa0c1f-9781-4d52-ae4e-87d81d318d16
2025-01-18 18:21:50,602 - DEBUG - socket timeout: 60
2025-01-18 18:21:50,696 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=8fdb8cf8-3c45-4e65-8dea-7a81d3498dec&request_guid=d5fa0c1f-9781-4d52-ae4e-87d81d318d16 HTTP/1.1" 200 1375
2025-01-18 18:21:50,696 - DEBUG - SUCCESS
2025-01-18 18:21:50,696 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:21:50,696 - DEBUG - ret[code] = None, after post request
2025-01-18 18:21:50,696 - DEBUG - Query id: 01b9cdf5-0002-4c78-0007-08ea00201046
2025-01-18 18:21:50,696 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246106098018, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:21:50,696 - DEBUG - Cache Entry: (0, 1737246106001384, 0)
2025-01-18 18:21:50,696 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246106098018, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:21:50,697 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:21:50,697 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:50,697 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:50,697 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:21:50,697 - DEBUG - Cache Entry: (0, 1737246106098018, 0)
2025-01-18 18:21:50,697 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:50,697 - DEBUG - sfqid: 01b9cdf5-0002-4c78-0007-08ea00201046
2025-01-18 18:21:50,697 - DEBUG - query execution done
2025-01-18 18:21:50,697 - DEBUG - SUCCESS
2025-01-18 18:21:50,697 - DEBUG - PUT OR GET: False
2025-01-18 18:21:50,697 - DEBUG - Query result format: arrow
2025-01-18 18:21:50,697 - INFO - Number of results in first chunk: 0
2025-01-18 18:21:50,698 - DEBUG - executing SQL/command
2025-01-18 18:21:50,698 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:21:50,698 - DEBUG - sequence counter: 22
2025-01-18 18:21:50,698 - DEBUG - Request id: 3871ee11-860d-4949-86d8-1215273b5719
2025-01-18 18:21:50,698 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:21:50,698 - DEBUG - is_file_transfer: True
2025-01-18 18:21:50,698 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:50,698 - DEBUG - _cmd_query
2025-01-18 18:21:50,698 - DEBUG - serialize_to_dict() called
2025-01-18 18:21:50,698 - DEBUG - Cache Entry: (0, 1737246106098018, 0)
2025-01-18 18:21:50,698 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246106098018, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:21:50,698 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[22], is_file_transfer=[False]
2025-01-18 18:21:50,699 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:21:50,699 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:21:50,699 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:21:50,699 - DEBUG - Request guid: 046d087e-df76-42fc-a303-259c3b606050
2025-01-18 18:21:50,699 - DEBUG - socket timeout: 60
2025-01-18 18:21:50,763 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=3871ee11-860d-4949-86d8-1215273b5719&request_guid=046d087e-df76-42fc-a303-259c3b606050 HTTP/1.1" 200 1374
2025-01-18 18:21:50,763 - DEBUG - SUCCESS
2025-01-18 18:21:50,763 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:21:50,763 - DEBUG - ret[code] = None, after post request
2025-01-18 18:21:50,763 - DEBUG - Query id: 01b9cdf5-0002-4c78-0007-08ea0020104a
2025-01-18 18:21:50,763 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246106161824, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:21:50,763 - DEBUG - Cache Entry: (0, 1737246106098018, 0)
2025-01-18 18:21:50,763 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246106161824, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:21:50,764 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:21:50,764 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:50,764 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:50,764 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:21:50,764 - DEBUG - Cache Entry: (0, 1737246106161824, 0)
2025-01-18 18:21:50,764 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:50,764 - DEBUG - sfqid: 01b9cdf5-0002-4c78-0007-08ea0020104a
2025-01-18 18:21:50,764 - DEBUG - query execution done
2025-01-18 18:21:50,764 - DEBUG - SUCCESS
2025-01-18 18:21:50,764 - DEBUG - PUT OR GET: False
2025-01-18 18:21:50,764 - DEBUG - Query result format: arrow
2025-01-18 18:21:50,764 - INFO - Number of results in first chunk: 0
2025-01-18 18:21:50,765 - DEBUG - executing SQL/command
2025-01-18 18:21:50,765 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:21:50,765 - DEBUG - sequence counter: 23
2025-01-18 18:21:50,765 - DEBUG - Request id: 1c101672-8d9d-4b0c-82a5-4f382effc9d2
2025-01-18 18:21:50,765 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:21:50,765 - DEBUG - is_file_transfer: True
2025-01-18 18:21:50,766 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:50,766 - DEBUG - _cmd_query
2025-01-18 18:21:50,766 - DEBUG - serialize_to_dict() called
2025-01-18 18:21:50,766 - DEBUG - Cache Entry: (0, 1737246106161824, 0)
2025-01-18 18:21:50,766 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246106161824, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:21:50,766 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[23], is_file_transfer=[False]
2025-01-18 18:21:50,766 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:21:50,767 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:21:50,767 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:21:50,767 - DEBUG - Request guid: 83480c92-db93-4c3d-a213-7d8b33ee9146
2025-01-18 18:21:50,767 - DEBUG - socket timeout: 60
2025-01-18 18:21:50,851 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=1c101672-8d9d-4b0c-82a5-4f382effc9d2&request_guid=83480c92-db93-4c3d-a213-7d8b33ee9146 HTTP/1.1" 200 2618
2025-01-18 18:21:50,852 - DEBUG - SUCCESS
2025-01-18 18:21:50,852 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:21:50,852 - DEBUG - ret[code] = None, after post request
2025-01-18 18:21:50,852 - DEBUG - Query id: 01b9cdf5-0002-4c79-0007-08ea002000ca
2025-01-18 18:21:50,852 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246106253309, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:21:50,852 - DEBUG - Cache Entry: (0, 1737246106161824, 0)
2025-01-18 18:21:50,853 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246106253309, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:21:50,853 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:21:50,853 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:50,853 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:21:50,853 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:21:50,853 - DEBUG - Cache Entry: (0, 1737246106253309, 0)
2025-01-18 18:21:50,853 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:21:50,853 - DEBUG - sfqid: 01b9cdf5-0002-4c79-0007-08ea002000ca
2025-01-18 18:21:50,853 - DEBUG - query execution done
2025-01-18 18:21:50,853 - DEBUG - SUCCESS
2025-01-18 18:21:50,853 - DEBUG - PUT OR GET: False
2025-01-18 18:21:50,853 - DEBUG - Query result format: arrow
2025-01-18 18:21:50,853 - INFO - Number of results in first chunk: 54
2025-01-18 18:21:50,853 - DEBUG - Execute query [queryID: 01b9cdf5-0002-4c79-0007-08ea002000ca]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:21:50,853 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:21:50,853 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:21:50,853 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:21:50,853 - DEBUG - Batches read: 0
2025-01-18 18:21:50,853 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:21:50,854 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:21:50,860 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:21:50,862 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:21:51,338 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:21:51,361 - DEBUG - calling method search on class CortexSearchServiceResource after submitting telemetry if enabled
2025-01-18 18:21:51,362 - INFO - performing a HTTP POST call to /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query
2025-01-18 18:21:51,362 - DEBUG - request has path params: {'database': 'DEV_SRC_INGEST', 'schema': 'EPA_PROCESSED', 'service_name': 'CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST'}, query_params: [], header params: {'Accept': 'application/json', 'Content-Type': 'application/json'} and body: QueryRequest(query='tell me about roundup', columns=['chunk', 'relative_path', 'PRODUCTNAME', 'COMPANYNAME', 'CATEGORY_EPA_TYPE', 'SIGNAL_WORD'], filter=None, limit=10, experimental=None)
2025-01-18 18:21:51,362 - DEBUG - making an http POST call to 'https://gmcpdcz-mt01740.snowflakecomputing.com:443/api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query'
2025-01-18 18:21:51,655 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query HTTP/1.1" 200 None
2025-01-18 18:21:51,656 - DEBUG - created a RESTResponse with status 200 and length of 18392
2025-01-18 18:21:51,656 - DEBUG - response body: b'{\n  "results" : [ {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\"\\n]",\n    "chunk" : "{\\"content\\":\\"\\\\n# FRQNT PANEL\\\\n\\\\n# Roundup* L&G READY-TO-USE by Moasanto Grass & Weed Killer\\\\n  \\\\n[graphics of weeds dying in 1-7 days]\\\\n* .READY.TO-USE, RBCUIRES NO\\\\n* : SYSTEMIC GRASS AND WEED KILLER FOR SPOT TREATMENT OF UNDESIRABLB VEGETATION\\\\n* . KILLS LARELID E WEEDS AND GRASSES, ROOTS AND ALL\\\\nGUARANTEEDT AESIN NTIH OREAETLACATEN  \\\\nS YTITACTKNGUAWANEEORXOAR KONEKRAE\\\\n* :_DOES NOT HAVE SOIL ACTIVTTY\\\\n+-SUTABLB-FOR- USE-AROUND-FLOWER-BEDS TREES,-SHRUTS FENCES-WALKS -AND-SPOT TRRATMEIT IN LAWNS\\\\nSHRURSAND ORWN RENOXATION (This Taun renovation*phrase no for 24 Oz container sixe.)\\\\n* : THIS 24 OZ BOTTLE CAN BE REFILLED WTIH ONE TABLET OF ROUNDUF QUIK STIK GRASS & WEED KILLER!. SEE STORAGE AND DISPOSAL SECTION FOR MORE INFORMATION. H\\\\nRd thai laST Wlor wg thT p?x3a? Ox ony msR4ng ioTT nmRRan (moved io back panel)NOTICEt- Dwyor-axoumo all soponaibility for mfoty and uce not in macrdan vith axeptablo-raturm at once unopanod (moved to back panel)Keep out ad reach ot chlldren. CAUTION!Soo haak penai for Preenutionary Statemanta and Direstions for Uce.  \\\\nBEST AYAILA&1.  \\\\nBEST AYAILA&1.BPA-Rrg Na S04 320 (moved to back panel)\\\\n## MONSAATO COMRANY\\\\nAGRICULTURAL PRODUCTS-&T LOUIS, MIS$OURI-63167 USA (moved to back panel)  \\\\nACTIVE INGREDIENT:\\\\n|in the form of is isopropylamine k|0.96%|\\\\n| :---: | :---: |\\\\n  \\\\n:*1 ...(delered isems below are moved to back panel)ny non porn(6)CTradamerk of Menseno Company  \\\\nNET 24 fi z (1pi 8m} (delcied)  \\\\n:MONSANTO COMPANY-1993  \\\\nA000.X 1 (print piae",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "SHACKLE HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/SHACKLE_HERBICIDE_524-330.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "\\\\nSincerely, Vuku KWztxd g James A. Tompkins Product Manager 25 Herbicide Branch Registration Division (7505P)\\\\n# MASTER LABEL FOR EPA REG. NO. 524-454\\\\n  \\\\n[Based on EPA approved Text Stamped Nov. 15, 2001] Registered Brand Names:\\\\n# ROUNDUP ORIGINAL II HERBICIDE ROUNDUP ORIGINAL RT HERBICIDE RASCAL PLUS HERBICIDE MON 8709 HERBICIDE HONCHO PLUS HERBICIDE\\\\n  \\\\nTable of Contents for Master Labei\\\\n||Main Label for Food Crop Uses|Page 2|\\\\n| :---: | :---: | :---: |\\\\n|II.|Main Label for Industrial, Turf, & Ornamental Uses|Page 70|\\\\n|III.|Supplementai Labeling|Page 100|\\\\n**See each label part for more detailed table of contents**Master Label 524-454Version: 3-Jun-2000  \\\\n3/119\\\\n# [INSERT BRAND NAME] Herbicide\\\\n  \\\\nComplete Directions for Use  \\\\nEPA Reg. No. 524-454AVOID CONTACT OF HERBICIDE WITH FOLIAGE, GREEN STEMS, EXPOSED NON-WOODY ROOTS OR FRUIT OF CROPS (EXCEPT AS SPECIFIED FOR INDIVIDUAL ROUNDUP READYD CROPS), DESIRABLE PLANTS AND TREES, BECAUSE SEVERE INJURY OR DESTRUCTION MAY RESULT.Herbicide for Roundup Ready\\\\\\" Crops.Selective broad-spectrum weed control in Roundup Ready crops. Non-selective, broad-spectrum weed control for many agricultural systems and farmsteads.A member of the Roundup Family of Agricultural Herbicides by MonsantoThe President\'s Green Chemistry Award was presented in 1996 to Monsanto for its innovative \\\\\\"zero-waste\\\\\\" process in the manufacture of Roundup Herbicide.Not all products recommended on this label are registered for use in California. Check the",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "chunk" : "this product in 5 to 20 gallons of spray solution per acre. Carefully select proper nozzle and spray pressure to avoid spraying a fine mist. For best results with ground application equipment, use flat spray nozzles. Check for even distribution of spray droplets.For aerial applications. All labeled treatments may be made by aerial equipment where appropriate, provided that the applicator complies with the precautions and restrictions specified on this product\'s labeling. in particular in the \\\\\\"Aerial Equipment\\\\\\" section. Apply this product in 3 to 15 gallons of water per acre. See the \\\\\\"APPLICATION EQUIPMENT AND TECHNIQUES\\\\\\" section of this label for procedures to avoid spray drift that may cause injury to any vegetation not intended for treatment. Use of appropriate buffer zones will help prevent injury to adjacent vegetation.For proper stewardship of aerial applications over the top of Roundup Ready crops, Monsanto recommends that growers and applicators read and follow all precautions and procedures contained in the use guide \\\\\\"A Guide to On-Target Aerial Application.\\\\\\" Copies of this publication are available by calling 1-800-ROUNDUP (1-800-768-6387).ATTENTION: AVOID DRIFT. EXTREME CARE MUST BE USED WHEN APPLYING THIS PRODUCT TO PREVENT INJURY TO DESIRABLE PLANTS AND CROPS WHICH DO NOT CONTAIN A GLYPHOSATE TOLERANT GENE.TANK MIXTURE: Tank mixtures with other herbicides, insecticides, fungicides, micronutrients or foliar fertilizers may result in reduced weed control or crop injury",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "weeds in a Roundup Ready crop by applying glyphosate to the weeds and to the Roundup Ready crop, are protected under several U.S. Patents, including 5,352,605 and 5,633,435. A license to use Roundup Ready seed must be obtained prior to use. Monsanto retains ownership of the gene and process technologies, and the Purchaser of the seed receives the right to use the licensed genes and technologies subject to the limited use license conditions. Seed containing a Roundup Ready trait cannot be used for research and demonstration, reverse engineering or in connection with herbicide registration. Progeny seed containing the Roundup Ready trait cannot be saved for replanting or transferred to others for replanting. Contact your Authorized Monsanto Retailer for information on obtaining a limited use iicense.Sprayer Preparation: It is important that sprayer and mixing equipment be clean and free of pesticide residue before making applications of this product. Follow the cleaning procedures specified on the label of the product(s) previously used. THOROUGHLY CLEAN THE SPRAY TANK AND ALL LINES AND FILTERS TO ELIMINATE POTENTIAL CONTAMINATION FROM OTHER HERBICIDES PRIOR TO MIXING AND APPLYING THIS PRODUCT.For ground broadcast applications. Apply this product in 5 to 20 gallons of spray solution per acre. Carefully select proper nozzle and spray pressure to avoid spraying a fine mist. For best results with ground application equipment, use flat spray nozzles. Check for even distribution of spray",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "Ready Canola (Winter Varieties)|\\\\n|12.4|Roundup Ready Corn 2|\\\\n|12.5|Roundup Ready Gene Cotton|\\\\n|12.6|Roundup Ready Flex Cotton|\\\\n|12.7|Roundup Ready Gene Soybeans|\\\\n|12.8|Roundup Ready Gene Sugar Beets|\\\\n  \\\\n13 13.0 NON-CROP USES AROUND THE FARMSTEAD\\\\n|13.1|General Weed Control and Trim-And-Edge|\\\\n| :---: | :---: |\\\\n|13.2|Greenhouse/Shade house|\\\\n|13.3|Chemical Mowing|\\\\n|13.4|Cut Stumps|\\\\n|13.5|Habitat Management|\\\\n  \\\\n14 14.0 ANNUAL WEEDS RATE SECTION\\\\n|14.1|Annual Weeds -- Tank Mixtures with 2,4-D, Dicamba, or Tordon 22K|\\\\n| :---: | :---: |\\\\n|14.2|Annual Weeds - Hand-Held or Backpack Equipment|\\\\n|14.3|Annual Weeds - Tank Mixtures with Atrazine for Fallow and Reduced Tillage Systems|\\\\n\\\\n* 15 15.0 PERENNIAL WEEDS RATE SECTION\\\\n* 16 16.0 WOODY BRUSH AND TREES RATE SECTION\\\\n* 17 17.0 LIMIT OF WARRANTY AND LIABILITY\\\\n  \\\\n1.0 INGREDIENTS  \\\\nACTIVE INGREDIENT:\\\\n|*Glyphosate, N-(phosphonomethyl)glycine, in the form of its isopropylamine salt .|41.0%|\\\\n| :---: | :---: |\\\\n|OTHER INGREDIENTS:....|59.0%|\\\\n||100.0%|\\\\n*Contains 480 grams per liter or 4 pounds per U.S. gallon of the active ingredient glyphosate, in the form of its isopropylamine salt. Equivalent to 356 grams per liter or 3 pounds per U.S. gallon of the acid, glyphosate.license granted under any non-U.S. patent(s).\\\\n## 2.0 IMPORTANT PHONE NUMBERS\\\\nVersion: 3-Jun-2006Master Label 524-454\\\\n* I. MAIN LABEL FOR FOOD CROP USES\\\\n1. FOR PRODUCT INFORMATION OR ASSISTANCE IN USING THIS PRODUCT, CALL TOLL-FREE,\\\\n1-800-332-3111\\\\n2. IN CASE OF",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "[INSERT BRAND NAME] will control labeled annual grasses and broadleaf weeds in Roundup Ready Flex cotton. To maximize yield potential, spray cotton early to elininate competing weeds. Many perennial weeds will be controlled or suppressed with one or more applications of this product. In general, an initial application of 1 quart per acre on 1 to 3 inch tall annual grass and broadleaf weeds is recommended. This product may be applied by ground application equipment at rates up to 2 quarts per acre per application postemergence to Roundup Ready Flex cotton. In addition tobroadcast applications, post-directed equipment may be used to achieve weed coverage.NOTE: For specific rates of application and instructions, refer to the \\\\\\"ANNUAL\\\\\\" and \\\\\\"PERENNIAL WEEDS RATE TABLES\\\\\\" in the labei book}et for [INSERT BRAND NAME].PRECAUTIONS, RESTRICTIONS: The maximum rate for any single in-crop application of this product is 2 quarts per acre made using ground application equipment. In-crop application rates above 1 quart per acre made alone, or with the addition of other crop chemical products containing surfactant, may cause a crop response, including leaf speckling or leaf necrosis. Do not exceed a maximum rate of 3 pints per acre of this product when making applications by air. Between layby and 60 percent open bolls, the maximum combined total rate of this product that may be applied is 2 quarts per acre. The maximum combined total of all applications made from crop emergence to 60 percent open",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "Monsanto suppiemental labeling for this product include all applications of this product that can be made onto the specified Roundup Ready crops during the complete cropping season. DO NOT combine these treatment instructions with those for crops in the \\\\\\"ANNUAL AND PERENNIAL CROPS (ALPHABETICAL)\\\\\\" section of this label that do not contain a glyphosate tolerant gene, unless otherwise directed in this product\'s labeling.MONSANTO COMPANY RECOMMENDS USE OF THIS PRODUCT FOR POSTEMERGENCE (IN- CROP) APPLICATION ONLY ON CROPS DESIGNATED AS CONTAINING A GLYPHOSATE TOLERANT GENE. Applying this product to crops that are not designated as Roundup Ready will result in severe crop injury and yield loss. Avoid contact with foliage, green stems, or fruit of crops, or any desirable plants that do not contain a glyphosate tolerant gene, since severe plant injury or destruction will result. The Roundup Ready designation indicates that the crop contains a patented gene that provides tolerance to this product. Information on Roundup Ready crops may be obtained from your seed supplier or Monsanto representative. Roundup Ready crops must be purchased from an authorized licensed seed supplier.NOTE: Roundup Ready seed, and the method of selectively controlling weeds in a Roundup Ready crop by applying glyphosate to the weeds and to the Roundup Ready crop, are protected under several U.S. Patents, including 5,352,605 and 5,633,435. A license to use Roundup Ready seed must be obtained prior to use. Monsanto",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "chunk" : "General Information\\\\nAVOID CONTACT OF HERBICIDE WITH FOLIAGE, GREEN STEMS, EXPOSED NON-WOODY ROOTS OR FRUIT OF CROPS (EXCEPT AS SPECIFIED FOR INDIVIDUAL ROUNDUP READY CROPS), DESIRABLE PLANTS AND TREES, BECAUSE SEVERE INJURY OR DESTRUCTION MAY RESULT.See \\\\\\"GENERAL INFORMATION\\\\\\" and \\\\\\"MIXING\\\\\\" sections of the label booklet for [INSERT BRAND NAME] for essential product performance information.The Roundup Ready designation indicates that the alfalfa contains a patented gene that provides tolerance to this product. Information on Roundup Ready alfalfa varieties may be obtained from your seed supplier or Monsanto representative. Roundup Ready crop varieties must be purchased from an\'authorized licensed seed supplier.See the \\\\\\"ROUNDUP READY CROPS\\\\\\" section of the [INSERT BRAND NAME] label booklet for general precautionary instructions for use in Roundup Ready crops. Do NOT combine the instructions in this supplemental label with other recommendations listed in the \\\\\\"PASTURE GRASSES, FORAGE LEGUMES, AND RANGELANDS\\\\\\" section of the [INSERT BRAND NAME] label booklet intended for alfalfa varieties that do not contain a glyphosate tolerance gene.\\\\n## DIRECTIONS FOR USE\\\\nThis product will control many troublesome emerged weeds with over-the-top apptications in Roundup Ready alfalfa grown for seed. Over-the-top applications may be made from emergence through the late vegetative stage, and spot treatments may be made from early bud stage through seed harvest.For ground applications with broadcast",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "SEQUENTIAL APPLICATION OF THIS PRODUCT WILL BE REQUIRED TO CONTROL NEW FLUSHES OF WEEDS IN THE ROUNDUP READY SOYBEAN CROP. To control giant ragweed, it is recommended that 1 quart per acre of this product be applied when the weed is 8 to 12 inches tall to increase control and possibly avoid the need for a sequential application.Version: 3-Jun-2006Master Label 524-454\\\\n## 1. MAIN LABEL FOR FOOD CROP USES\\\\nTANK MIXTURES: This product may be tank-mixed with the following products and applied postemergence (in-crop) over the top of Roundup Ready soybeans. Ensure that the specific product being used in the tank mixture is registered for application postemergence (in-crop) to soybeans. Read and follow label directions of all products in the tank mixture.[Insert active ingredient(s) or brand name of product(s) containing the following active ingredients that, at the time of printing, are registered for use postemergence (in-crop) to soybeans: acifluorfen, bentazonchlorimuron ethyl, clethodim, imazethapyr, cloransulam-methyl, fenoxyprop, fluazifop-p- butyl, flumiclorac pentyl ester, fomesafen, imazamox, imazethapyr, lactofen, pendimethalin, quizalofop P-ethyl. sethoxydem, thifensulfuron-methyl.Arrow, Assure II, Basagran, Classic, Cobra, Extreme, FirstRate, Flexstar, Fusilade DX, Fusion, Harmony GT XP, Poast, Poast Plus, Pursuit, Pursuit Plus, Raptor, Reflex, Select, Select MAX, Synchrony STS, Targa, Ultra Blazer.]PRECAUTIONS, RESTRICTIONS: The combined total application from crop emergence",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "quarts per acre|\\\\n|Maximum preharvest application rate|1 quart per acre|\\\\nGENERAL PRECAUTIONS/RESTRICTIONS: See the \\\\\\"ROUNDUP READY CROPS\\\\\\" section of this label for general precautionary instructions for use in Roundup Ready crops. See the \\\\\\"GENERAL INFORMATION\\\\\\" section of this label for more information on \\\\\\"Annual Maximum Application Rates.\\\\\\" Refer to individual tank mixture product label for restrictions and precautions, use according to the most restrictive precautionary statements for each product in the tank mixture.\\\\n## Preplant, At-Planting, Preemergence\\\\nUSE INSTRUCTIONS: This product may be applied before, during or after planting.TANK MIXTURES: This product may be tank-mixed with 2,4-D, Banvel or Clarity and applied prior to planting only This product may be tank-mixed with the following products and applied prior to crop emergence. Ensure that the specific product being used in the tank mixture is registered for application prior to emergence of soybeans. Read and follow label directions of all products in the tank mixture.[Insert active ingredient(s) or brand name of product(s) containing the following active ingredients that, at the time of printing, are registered for use preplant, at-planting and/or preemergence to soybeans: alachlor, atrazine, carfentrazone-ethyl, chlorimuron ethyl, clethodim, clomazone, cloransulam-methyl, dimethenamid, dimethenamid-p, fenoxyprop, fluazifop-p-butyl, flufenacet, flumetsulam, flumiclorac pentyl ester, flumioxazin, fomesafen, imazaquin,",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  } ],\n  "request_id" : "fbdbf289-872b-4ffc-a04e-20180dec7c7f"\n}'
2025-01-18 18:21:51,658 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:21:51,659 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:21:52,103 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:22:06,589 - DEBUG - executing SQL/command
2025-01-18 18:22:06,589 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_src_ingest.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...]
2025-01-18 18:22:06,589 - DEBUG - sequence counter: 24
2025-01-18 18:22:06,589 - DEBUG - Request id: 63327b2a-5d89-4b7c-9460-517665b247a5
2025-01-18 18:22:06,589 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_src_ingest.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...]
2025-01-18 18:22:06,589 - DEBUG - is_file_transfer: True
2025-01-18 18:22:06,589 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:22:06,589 - DEBUG - _cmd_query
2025-01-18 18:22:06,589 - DEBUG - serialize_to_dict() called
2025-01-18 18:22:06,589 - DEBUG - Cache Entry: (0, 1737246106253309, 0)
2025-01-18 18:22:06,589 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246106253309, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:22:06,589 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_src_ingest.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...], sequence_id=[24], is_file_transfer=[False]
2025-01-18 18:22:06,590 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:22:06,590 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:22:06,590 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:22:06,590 - DEBUG - Request guid: 2a1dc3b2-889b-4b72-bb79-3e45044308eb
2025-01-18 18:22:06,590 - DEBUG - socket timeout: 60
2025-01-18 18:22:06,691 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=63327b2a-5d89-4b7c-9460-517665b247a5&request_guid=2a1dc3b2-889b-4b72-bb79-3e45044308eb HTTP/1.1" 200 474
2025-01-18 18:22:06,692 - DEBUG - SUCCESS
2025-01-18 18:22:06,692 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:22:06,692 - DEBUG - ret[code] = 391707, after post request
2025-01-18 18:22:06,692 - DEBUG - Query id: 01b9cdf6-0002-4c5d-0007-08ea001fcc36
2025-01-18 18:22:06,692 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:22:06,692 - DEBUG - sfqid: 01b9cdf6-0002-4c5d-0007-08ea001fcc36
2025-01-18 18:22:06,692 - DEBUG - query execution done
2025-01-18 18:22:06,692 - DEBUG - {'data': {'internalError': False, 'unredactedFromSecureObject': False, 'errorCode': '391707', 'age': 0, 'sqlState': '42000', 'queryId': '01b9cdf6-0002-4c5d-0007-08ea001fcc36', 'line': -1, 'pos': -1, 'type': 'COMPILATION'}, 'code': '391707', 'message': "SQL compilation error: Stage '@DEV_src_ingest.EPA_RAW.PDF_STORE' provided to the function 'DIRECTORY' does not exist or is not authorized.", 'success': False, 'headers': None}
2025-01-18 18:23:29,545 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x000001EF81837D90>
2025-01-18 18:23:29,545 - INFO - Querying the server for client info
2025-01-18 18:23:29,545 - DEBUG - cursor
2025-01-18 18:23:29,545 - DEBUG - executing SQL/command
2025-01-18 18:23:29,545 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:23:29,546 - DEBUG - sequence counter: 25
2025-01-18 18:23:29,546 - DEBUG - Request id: dc46f2e3-f801-408b-a849-77be154c051a
2025-01-18 18:23:29,546 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:23:29,546 - DEBUG - is_file_transfer: True
2025-01-18 18:23:29,546 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:29,546 - DEBUG - _cmd_query
2025-01-18 18:23:29,546 - DEBUG - serialize_to_dict() called
2025-01-18 18:23:29,546 - DEBUG - Cache Entry: (0, 1737246106253309, 0)
2025-01-18 18:23:29,546 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246106253309, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:23:29,546 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[25], is_file_transfer=[False]
2025-01-18 18:23:29,548 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:23:29,549 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:23:29,549 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:23:29,549 - DEBUG - Request guid: 66e18f6b-fe87-4f6b-8bc2-fcfe00762a8a
2025-01-18 18:23:29,549 - DEBUG - socket timeout: 60
2025-01-18 18:23:29,662 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=dc46f2e3-f801-408b-a849-77be154c051a&request_guid=66e18f6b-fe87-4f6b-8bc2-fcfe00762a8a HTTP/1.1" 200 2618
2025-01-18 18:23:29,663 - DEBUG - SUCCESS
2025-01-18 18:23:29,663 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:23:29,663 - DEBUG - ret[code] = None, after post request
2025-01-18 18:23:29,663 - DEBUG - Query id: 01b9cdf7-0002-4c77-0007-08ea001fdc7e
2025-01-18 18:23:29,663 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246205056619, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:23:29,663 - DEBUG - Cache Entry: (0, 1737246106253309, 0)
2025-01-18 18:23:29,663 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246205056619, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:23:29,663 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:23:29,663 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:29,663 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:29,664 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:23:29,664 - DEBUG - Cache Entry: (0, 1737246205056619, 0)
2025-01-18 18:23:29,664 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:29,664 - DEBUG - sfqid: 01b9cdf7-0002-4c77-0007-08ea001fdc7e
2025-01-18 18:23:29,664 - DEBUG - query execution done
2025-01-18 18:23:29,664 - DEBUG - SUCCESS
2025-01-18 18:23:29,664 - DEBUG - PUT OR GET: False
2025-01-18 18:23:29,664 - DEBUG - Query result format: arrow
2025-01-18 18:23:29,664 - INFO - Number of results in first chunk: 1
2025-01-18 18:23:29,664 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:23:29,664 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:23:29,664 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:23:29,665 - DEBUG - Batches read: 0
2025-01-18 18:23:29,665 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:23:29,665 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:23:29,665 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x000001EF812BB550>, telemetry enabled: True
2025-01-18 18:23:29,665 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:23:29,665 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:23:29,665 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:23:29,665 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:23:29,668 - DEBUG - cursor
2025-01-18 18:23:29,669 - DEBUG - executing SQL/command
2025-01-18 18:23:29,669 - DEBUG - query: [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:23:29,669 - DEBUG - sequence counter: 26
2025-01-18 18:23:29,669 - DEBUG - Request id: 21e4e983-5b42-4238-af9d-e77eb48959e5
2025-01-18 18:23:29,669 - DEBUG - running query [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:23:29,669 - DEBUG - is_file_transfer: True
2025-01-18 18:23:29,669 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:29,669 - DEBUG - _cmd_query
2025-01-18 18:23:29,669 - DEBUG - serialize_to_dict() called
2025-01-18 18:23:29,669 - DEBUG - Cache Entry: (0, 1737246205056619, 0)
2025-01-18 18:23:29,669 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246205056619, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:23:29,669 - DEBUG - sql=[SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...], sequence_id=[26], is_file_transfer=[False]
2025-01-18 18:23:29,670 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:23:29,670 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:23:29,670 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:23:29,671 - DEBUG - Request guid: 1a41a807-d38c-42fe-be21-aa5d3876af82
2025-01-18 18:23:29,671 - DEBUG - socket timeout: 60
2025-01-18 18:23:30,158 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=21e4e983-5b42-4238-af9d-e77eb48959e5&request_guid=1a41a807-d38c-42fe-be21-aa5d3876af82 HTTP/1.1" 200 2115
2025-01-18 18:23:30,159 - DEBUG - SUCCESS
2025-01-18 18:23:30,159 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:23:30,159 - DEBUG - ret[code] = None, after post request
2025-01-18 18:23:30,159 - DEBUG - Query id: 01b9cdf7-0002-4d87-0007-08ea001fe536
2025-01-18 18:23:30,159 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246205559195, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:23:30,159 - DEBUG - Cache Entry: (0, 1737246205056619, 0)
2025-01-18 18:23:30,159 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246205559195, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:23:30,159 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:23:30,159 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:30,159 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:30,159 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:23:30,159 - DEBUG - Cache Entry: (0, 1737246205559195, 0)
2025-01-18 18:23:30,159 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:30,160 - DEBUG - sfqid: 01b9cdf7-0002-4d87-0007-08ea001fe536
2025-01-18 18:23:30,160 - DEBUG - query execution done
2025-01-18 18:23:30,160 - DEBUG - SUCCESS
2025-01-18 18:23:30,160 - DEBUG - PUT OR GET: False
2025-01-18 18:23:30,160 - DEBUG - Query result format: arrow
2025-01-18 18:23:30,160 - INFO - Number of results in first chunk: 1
2025-01-18 18:23:30,160 - DEBUG - Execute query [queryID: 01b9cdf7-0002-4d87-0007-08ea001fe536] 
        SELECT LOCATION, LATITUDE, LONGITUDE
        FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS 
        WHERE USER_ID = 'default_user'
        
2025-01-18 18:23:30,160 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:23:30,160 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:23:30,160 - DEBUG - Arrow chunk info: batchCount 1, columnCount 3, use_numpy: 0
2025-01-18 18:23:30,160 - DEBUG - Batches read: 0
2025-01-18 18:23:30,160 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:23:30,160 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:23:30,163 - DEBUG - executing SQL/command
2025-01-18 18:23:30,163 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:23:30,163 - DEBUG - sequence counter: 27
2025-01-18 18:23:30,165 - DEBUG - Request id: 54db1939-b11e-46d5-8d48-beb0102b6870
2025-01-18 18:23:30,165 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:23:30,165 - DEBUG - is_file_transfer: True
2025-01-18 18:23:30,165 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:30,165 - DEBUG - _cmd_query
2025-01-18 18:23:30,165 - DEBUG - serialize_to_dict() called
2025-01-18 18:23:30,165 - DEBUG - Cache Entry: (0, 1737246205559195, 0)
2025-01-18 18:23:30,165 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246205559195, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:23:30,165 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[27], is_file_transfer=[False]
2025-01-18 18:23:30,166 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:23:30,166 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:23:30,166 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:23:30,166 - DEBUG - Request guid: 0009d0d0-0cd7-4e9d-b74c-66a4ef6964e6
2025-01-18 18:23:30,167 - DEBUG - socket timeout: 60
2025-01-18 18:23:30,231 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=54db1939-b11e-46d5-8d48-beb0102b6870&request_guid=0009d0d0-0cd7-4e9d-b74c-66a4ef6964e6 HTTP/1.1" 200 1501
2025-01-18 18:23:30,231 - DEBUG - SUCCESS
2025-01-18 18:23:30,231 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:23:30,231 - DEBUG - ret[code] = None, after post request
2025-01-18 18:23:30,231 - DEBUG - Query id: 01b9cdf7-0002-4c7a-0007-08ea001ff556
2025-01-18 18:23:30,231 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246205623834, 'priority': 0, 'context': 'COrjJA=='}]}
2025-01-18 18:23:30,231 - DEBUG - Cache Entry: (0, 1737246205559195, 0)
2025-01-18 18:23:30,231 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246205623834, 'priority': 0, 'context': 'COrjJA=='}
2025-01-18 18:23:30,232 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:23:30,232 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:30,232 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:30,232 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:23:30,232 - DEBUG - Cache Entry: (0, 1737246205623834, 0)
2025-01-18 18:23:30,232 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:30,232 - DEBUG - sfqid: 01b9cdf7-0002-4c7a-0007-08ea001ff556
2025-01-18 18:23:30,232 - DEBUG - query execution done
2025-01-18 18:23:30,232 - DEBUG - SUCCESS
2025-01-18 18:23:30,232 - DEBUG - PUT OR GET: False
2025-01-18 18:23:30,232 - DEBUG - Query result format: arrow
2025-01-18 18:23:30,232 - INFO - Number of results in first chunk: 0
2025-01-18 18:23:30,233 - DEBUG - executing SQL/command
2025-01-18 18:23:30,233 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:23:30,234 - DEBUG - sequence counter: 28
2025-01-18 18:23:30,234 - DEBUG - Request id: 285f2c8e-eab4-4f83-8fab-ececfbb54cd7
2025-01-18 18:23:30,234 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:23:30,234 - DEBUG - is_file_transfer: True
2025-01-18 18:23:30,234 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:30,234 - DEBUG - _cmd_query
2025-01-18 18:23:30,234 - DEBUG - serialize_to_dict() called
2025-01-18 18:23:30,234 - DEBUG - Cache Entry: (0, 1737246205623834, 0)
2025-01-18 18:23:30,234 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246205623834, 'priority': 0, 'context': {'base64Data': 'COrjJA=='}}]}
2025-01-18 18:23:30,234 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[28], is_file_transfer=[False]
2025-01-18 18:23:30,234 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:23:30,234 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:23:30,234 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:23:30,235 - DEBUG - Request guid: 668c10a1-2503-4e9a-a32d-fe5469bd8ed2
2025-01-18 18:23:30,235 - DEBUG - socket timeout: 60
2025-01-18 18:23:30,292 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=285f2c8e-eab4-4f83-8fab-ececfbb54cd7&request_guid=668c10a1-2503-4e9a-a32d-fe5469bd8ed2 HTTP/1.1" 200 1374
2025-01-18 18:23:30,292 - DEBUG - SUCCESS
2025-01-18 18:23:30,293 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:23:30,293 - DEBUG - ret[code] = None, after post request
2025-01-18 18:23:30,293 - DEBUG - Query id: 01b9cdf7-0002-4d87-0007-08ea001fe53a
2025-01-18 18:23:30,293 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246205689519, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:23:30,293 - DEBUG - Cache Entry: (0, 1737246205623834, 0)
2025-01-18 18:23:30,293 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246205689519, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:23:30,293 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:23:30,293 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:30,293 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:30,293 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:23:30,293 - DEBUG - Cache Entry: (0, 1737246205689519, 0)
2025-01-18 18:23:30,293 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:30,293 - DEBUG - sfqid: 01b9cdf7-0002-4d87-0007-08ea001fe53a
2025-01-18 18:23:30,294 - DEBUG - query execution done
2025-01-18 18:23:30,294 - DEBUG - SUCCESS
2025-01-18 18:23:30,294 - DEBUG - PUT OR GET: False
2025-01-18 18:23:30,294 - DEBUG - Query result format: arrow
2025-01-18 18:23:30,294 - INFO - Number of results in first chunk: 0
2025-01-18 18:23:30,295 - DEBUG - executing SQL/command
2025-01-18 18:23:30,295 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:23:30,295 - DEBUG - sequence counter: 29
2025-01-18 18:23:30,296 - DEBUG - Request id: 16699fb0-9562-41c6-8d03-41b5cb152a1f
2025-01-18 18:23:30,296 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:23:30,296 - DEBUG - is_file_transfer: True
2025-01-18 18:23:30,296 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:30,296 - DEBUG - _cmd_query
2025-01-18 18:23:30,296 - DEBUG - serialize_to_dict() called
2025-01-18 18:23:30,296 - DEBUG - Cache Entry: (0, 1737246205689519, 0)
2025-01-18 18:23:30,296 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246205689519, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:23:30,296 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[29], is_file_transfer=[False]
2025-01-18 18:23:30,297 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:23:30,298 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:23:30,298 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:23:30,298 - DEBUG - Request guid: e13f4236-afc6-4d39-9fc8-842774396a1a
2025-01-18 18:23:30,298 - DEBUG - socket timeout: 60
2025-01-18 18:23:30,375 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=16699fb0-9562-41c6-8d03-41b5cb152a1f&request_guid=e13f4236-afc6-4d39-9fc8-842774396a1a HTTP/1.1" 200 1374
2025-01-18 18:23:30,375 - DEBUG - SUCCESS
2025-01-18 18:23:30,375 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:23:30,375 - DEBUG - ret[code] = None, after post request
2025-01-18 18:23:30,375 - DEBUG - Query id: 01b9cdf7-0002-4c5d-0007-08ea001fcc3e
2025-01-18 18:23:30,375 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246205766262, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:23:30,375 - DEBUG - Cache Entry: (0, 1737246205689519, 0)
2025-01-18 18:23:30,375 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246205766262, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:23:30,375 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:23:30,375 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:30,375 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:30,375 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:23:30,375 - DEBUG - Cache Entry: (0, 1737246205766262, 0)
2025-01-18 18:23:30,375 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:30,377 - DEBUG - sfqid: 01b9cdf7-0002-4c5d-0007-08ea001fcc3e
2025-01-18 18:23:30,377 - DEBUG - query execution done
2025-01-18 18:23:30,377 - DEBUG - SUCCESS
2025-01-18 18:23:30,377 - DEBUG - PUT OR GET: False
2025-01-18 18:23:30,377 - DEBUG - Query result format: arrow
2025-01-18 18:23:30,377 - INFO - Number of results in first chunk: 0
2025-01-18 18:23:30,378 - DEBUG - executing SQL/command
2025-01-18 18:23:30,378 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:23:30,378 - DEBUG - sequence counter: 30
2025-01-18 18:23:30,378 - DEBUG - Request id: d4f002da-59df-47de-bcc6-3690efd6bf1f
2025-01-18 18:23:30,378 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:23:30,378 - DEBUG - is_file_transfer: True
2025-01-18 18:23:30,378 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:30,378 - DEBUG - _cmd_query
2025-01-18 18:23:30,378 - DEBUG - serialize_to_dict() called
2025-01-18 18:23:30,378 - DEBUG - Cache Entry: (0, 1737246205766262, 0)
2025-01-18 18:23:30,378 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246205766262, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:23:30,378 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[30], is_file_transfer=[False]
2025-01-18 18:23:30,379 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:23:30,379 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:23:30,379 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:23:30,379 - DEBUG - Request guid: 2782a6a8-ec8d-4016-ba28-03a70c6d6487
2025-01-18 18:23:30,379 - DEBUG - socket timeout: 60
2025-01-18 18:23:30,574 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=d4f002da-59df-47de-bcc6-3690efd6bf1f&request_guid=2782a6a8-ec8d-4016-ba28-03a70c6d6487 HTTP/1.1" 200 2617
2025-01-18 18:23:30,575 - DEBUG - SUCCESS
2025-01-18 18:23:30,576 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:23:30,576 - DEBUG - ret[code] = None, after post request
2025-01-18 18:23:30,576 - DEBUG - Query id: 01b9cdf7-0002-4c71-0007-08ea001f8fc6
2025-01-18 18:23:30,576 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246205958493, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 18:23:30,576 - DEBUG - Cache Entry: (0, 1737246205766262, 0)
2025-01-18 18:23:30,576 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246205958493, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 18:23:30,576 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:23:30,576 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:30,576 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:30,576 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:23:30,576 - DEBUG - Cache Entry: (0, 1737246205958493, 0)
2025-01-18 18:23:30,576 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:30,576 - DEBUG - sfqid: 01b9cdf7-0002-4c71-0007-08ea001f8fc6
2025-01-18 18:23:30,576 - DEBUG - query execution done
2025-01-18 18:23:30,576 - DEBUG - SUCCESS
2025-01-18 18:23:30,576 - DEBUG - PUT OR GET: False
2025-01-18 18:23:30,576 - DEBUG - Query result format: arrow
2025-01-18 18:23:30,576 - INFO - Number of results in first chunk: 54
2025-01-18 18:23:30,577 - DEBUG - Execute query [queryID: 01b9cdf7-0002-4c71-0007-08ea001f8fc6]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:23:30,577 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:23:30,577 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:23:30,577 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:23:30,577 - DEBUG - Batches read: 0
2025-01-18 18:23:30,577 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:23:30,577 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:23:36,031 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x000001EF81837D90>
2025-01-18 18:23:36,031 - INFO - Querying the server for client info
2025-01-18 18:23:36,032 - DEBUG - cursor
2025-01-18 18:23:36,032 - DEBUG - executing SQL/command
2025-01-18 18:23:36,032 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:23:36,032 - DEBUG - sequence counter: 31
2025-01-18 18:23:36,032 - DEBUG - Request id: 0449be10-8dc0-411e-8465-fcf4bb84c0db
2025-01-18 18:23:36,032 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:23:36,032 - DEBUG - is_file_transfer: True
2025-01-18 18:23:36,032 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:36,032 - DEBUG - _cmd_query
2025-01-18 18:23:36,032 - DEBUG - serialize_to_dict() called
2025-01-18 18:23:36,032 - DEBUG - Cache Entry: (0, 1737246205958493, 0)
2025-01-18 18:23:36,032 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246205958493, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 18:23:36,032 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[31], is_file_transfer=[False]
2025-01-18 18:23:36,033 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:23:36,033 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:23:36,034 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:23:36,034 - DEBUG - Request guid: 5ef71692-0fc6-4661-bb69-ca6595727748
2025-01-18 18:23:36,034 - DEBUG - socket timeout: 60
2025-01-18 18:23:36,150 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=0449be10-8dc0-411e-8465-fcf4bb84c0db&request_guid=5ef71692-0fc6-4661-bb69-ca6595727748 HTTP/1.1" 200 2618
2025-01-18 18:23:36,150 - DEBUG - SUCCESS
2025-01-18 18:23:36,150 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:23:36,150 - DEBUG - ret[code] = None, after post request
2025-01-18 18:23:36,150 - DEBUG - Query id: 01b9cdf7-0002-4c77-0007-08ea001fdcb2
2025-01-18 18:23:36,150 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246211549698, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:23:36,150 - DEBUG - Cache Entry: (0, 1737246205958493, 0)
2025-01-18 18:23:36,150 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246211549698, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:23:36,150 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:23:36,150 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:36,150 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:36,150 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:23:36,151 - DEBUG - Cache Entry: (0, 1737246211549698, 0)
2025-01-18 18:23:36,151 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:36,151 - DEBUG - sfqid: 01b9cdf7-0002-4c77-0007-08ea001fdcb2
2025-01-18 18:23:36,151 - DEBUG - query execution done
2025-01-18 18:23:36,151 - DEBUG - SUCCESS
2025-01-18 18:23:36,151 - DEBUG - PUT OR GET: False
2025-01-18 18:23:36,151 - DEBUG - Query result format: arrow
2025-01-18 18:23:36,151 - INFO - Number of results in first chunk: 1
2025-01-18 18:23:36,151 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:23:36,151 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:23:36,151 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:23:36,151 - DEBUG - Batches read: 0
2025-01-18 18:23:36,151 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:23:36,151 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:23:36,151 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x000001EF812BB550>, telemetry enabled: True
2025-01-18 18:23:36,152 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:23:36,152 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:23:36,152 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:23:36,152 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:23:36,155 - DEBUG - cursor
2025-01-18 18:23:36,155 - DEBUG - executing SQL/command
2025-01-18 18:23:36,155 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:23:36,155 - DEBUG - sequence counter: 32
2025-01-18 18:23:36,155 - DEBUG - Request id: d2d18535-07a8-4d43-8854-df555170c42b
2025-01-18 18:23:36,155 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:23:36,155 - DEBUG - is_file_transfer: True
2025-01-18 18:23:36,155 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:36,155 - DEBUG - _cmd_query
2025-01-18 18:23:36,155 - DEBUG - serialize_to_dict() called
2025-01-18 18:23:36,155 - DEBUG - Cache Entry: (0, 1737246211549698, 0)
2025-01-18 18:23:36,155 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246211549698, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:23:36,155 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[32], is_file_transfer=[False]
2025-01-18 18:23:36,156 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:23:36,156 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:23:36,156 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:23:36,156 - DEBUG - Request guid: 15e5e3f2-2def-4334-b564-6d630303e357
2025-01-18 18:23:36,156 - DEBUG - socket timeout: 60
2025-01-18 18:23:36,237 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=d2d18535-07a8-4d43-8854-df555170c42b&request_guid=15e5e3f2-2def-4334-b564-6d630303e357 HTTP/1.1" 200 1498
2025-01-18 18:23:36,238 - DEBUG - SUCCESS
2025-01-18 18:23:36,238 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:23:36,238 - DEBUG - ret[code] = None, after post request
2025-01-18 18:23:36,238 - DEBUG - Query id: 01b9cdf7-0002-4c78-0007-08ea00201062
2025-01-18 18:23:36,238 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246211640306, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:23:36,238 - DEBUG - Cache Entry: (0, 1737246211549698, 0)
2025-01-18 18:23:36,238 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246211640306, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:23:36,238 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:23:36,238 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:36,238 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:36,238 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:23:36,238 - DEBUG - Cache Entry: (0, 1737246211640306, 0)
2025-01-18 18:23:36,238 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:36,239 - DEBUG - sfqid: 01b9cdf7-0002-4c78-0007-08ea00201062
2025-01-18 18:23:36,239 - DEBUG - query execution done
2025-01-18 18:23:36,239 - DEBUG - SUCCESS
2025-01-18 18:23:36,239 - DEBUG - PUT OR GET: False
2025-01-18 18:23:36,239 - DEBUG - Query result format: arrow
2025-01-18 18:23:36,239 - INFO - Number of results in first chunk: 0
2025-01-18 18:23:36,240 - DEBUG - executing SQL/command
2025-01-18 18:23:36,240 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:23:36,240 - DEBUG - sequence counter: 33
2025-01-18 18:23:36,240 - DEBUG - Request id: b8f8df1e-0670-4058-8fb4-763f5bd8f814
2025-01-18 18:23:36,240 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:23:36,240 - DEBUG - is_file_transfer: True
2025-01-18 18:23:36,240 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:36,240 - DEBUG - _cmd_query
2025-01-18 18:23:36,240 - DEBUG - serialize_to_dict() called
2025-01-18 18:23:36,240 - DEBUG - Cache Entry: (0, 1737246211640306, 0)
2025-01-18 18:23:36,240 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246211640306, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:23:36,240 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[33], is_file_transfer=[False]
2025-01-18 18:23:36,241 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:23:36,241 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:23:36,241 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:23:36,241 - DEBUG - Request guid: 6b267dfb-1451-4319-bb8b-b84b77829a45
2025-01-18 18:23:36,241 - DEBUG - socket timeout: 60
2025-01-18 18:23:36,304 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=b8f8df1e-0670-4058-8fb4-763f5bd8f814&request_guid=6b267dfb-1451-4319-bb8b-b84b77829a45 HTTP/1.1" 200 1371
2025-01-18 18:23:36,305 - DEBUG - SUCCESS
2025-01-18 18:23:36,305 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:23:36,305 - DEBUG - ret[code] = None, after post request
2025-01-18 18:23:36,305 - DEBUG - Query id: 01b9cdf7-0002-4c79-0007-08ea002000da
2025-01-18 18:23:36,305 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246211707277, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:23:36,305 - DEBUG - Cache Entry: (0, 1737246211640306, 0)
2025-01-18 18:23:36,305 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246211707277, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:23:36,305 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:23:36,305 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:36,305 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:36,305 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:23:36,305 - DEBUG - Cache Entry: (0, 1737246211707277, 0)
2025-01-18 18:23:36,305 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:36,305 - DEBUG - sfqid: 01b9cdf7-0002-4c79-0007-08ea002000da
2025-01-18 18:23:36,305 - DEBUG - query execution done
2025-01-18 18:23:36,305 - DEBUG - SUCCESS
2025-01-18 18:23:36,306 - DEBUG - PUT OR GET: False
2025-01-18 18:23:36,306 - DEBUG - Query result format: arrow
2025-01-18 18:23:36,306 - INFO - Number of results in first chunk: 0
2025-01-18 18:23:36,306 - DEBUG - executing SQL/command
2025-01-18 18:23:36,307 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:23:36,307 - DEBUG - sequence counter: 34
2025-01-18 18:23:36,307 - DEBUG - Request id: 3821ae11-b4a9-4bf5-917d-dcbb63e7ab51
2025-01-18 18:23:36,307 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:23:36,307 - DEBUG - is_file_transfer: True
2025-01-18 18:23:36,307 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:36,307 - DEBUG - _cmd_query
2025-01-18 18:23:36,307 - DEBUG - serialize_to_dict() called
2025-01-18 18:23:36,307 - DEBUG - Cache Entry: (0, 1737246211707277, 0)
2025-01-18 18:23:36,307 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246211707277, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:23:36,307 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[34], is_file_transfer=[False]
2025-01-18 18:23:36,308 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:23:36,308 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:23:36,308 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:23:36,308 - DEBUG - Request guid: b711efc9-0e0d-49b8-b657-88754320ac7b
2025-01-18 18:23:36,308 - DEBUG - socket timeout: 60
2025-01-18 18:23:36,385 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=3821ae11-b4a9-4bf5-917d-dcbb63e7ab51&request_guid=b711efc9-0e0d-49b8-b657-88754320ac7b HTTP/1.1" 200 1373
2025-01-18 18:23:36,386 - DEBUG - SUCCESS
2025-01-18 18:23:36,387 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:23:36,387 - DEBUG - ret[code] = None, after post request
2025-01-18 18:23:36,387 - DEBUG - Query id: 01b9cdf7-0002-4c70-0007-08ea001f9e9a
2025-01-18 18:23:36,387 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246211780316, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:23:36,387 - DEBUG - Cache Entry: (0, 1737246211707277, 0)
2025-01-18 18:23:36,387 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246211780316, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:23:36,387 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:23:36,387 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:36,387 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:36,387 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:23:36,387 - DEBUG - Cache Entry: (0, 1737246211780316, 0)
2025-01-18 18:23:36,387 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:36,387 - DEBUG - sfqid: 01b9cdf7-0002-4c70-0007-08ea001f9e9a
2025-01-18 18:23:36,387 - DEBUG - query execution done
2025-01-18 18:23:36,387 - DEBUG - SUCCESS
2025-01-18 18:23:36,387 - DEBUG - PUT OR GET: False
2025-01-18 18:23:36,387 - DEBUG - Query result format: arrow
2025-01-18 18:23:36,387 - INFO - Number of results in first chunk: 0
2025-01-18 18:23:36,388 - DEBUG - executing SQL/command
2025-01-18 18:23:36,388 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:23:36,388 - DEBUG - sequence counter: 35
2025-01-18 18:23:36,388 - DEBUG - Request id: 3be80747-5d36-459c-ac2e-508fd907ba74
2025-01-18 18:23:36,388 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:23:36,388 - DEBUG - is_file_transfer: True
2025-01-18 18:23:36,388 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:36,388 - DEBUG - _cmd_query
2025-01-18 18:23:36,388 - DEBUG - serialize_to_dict() called
2025-01-18 18:23:36,388 - DEBUG - Cache Entry: (0, 1737246211780316, 0)
2025-01-18 18:23:36,388 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246211780316, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:23:36,388 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[35], is_file_transfer=[False]
2025-01-18 18:23:36,389 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:23:36,389 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:23:36,389 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:23:36,389 - DEBUG - Request guid: 5fe44d7f-1b10-41d9-be92-26eb42f09bc6
2025-01-18 18:23:36,389 - DEBUG - socket timeout: 60
2025-01-18 18:23:36,500 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=3be80747-5d36-459c-ac2e-508fd907ba74&request_guid=5fe44d7f-1b10-41d9-be92-26eb42f09bc6 HTTP/1.1" 200 2617
2025-01-18 18:23:36,500 - DEBUG - SUCCESS
2025-01-18 18:23:36,500 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:23:36,501 - DEBUG - ret[code] = None, after post request
2025-01-18 18:23:36,501 - DEBUG - Query id: 01b9cdf7-0002-4c70-0007-08ea001f9e9e
2025-01-18 18:23:36,501 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246211862035, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:23:36,501 - DEBUG - Cache Entry: (0, 1737246211780316, 0)
2025-01-18 18:23:36,501 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246211862035, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:23:36,501 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:23:36,501 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:36,501 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:23:36,501 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:23:36,501 - DEBUG - Cache Entry: (0, 1737246211862035, 0)
2025-01-18 18:23:36,501 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:36,501 - DEBUG - sfqid: 01b9cdf7-0002-4c70-0007-08ea001f9e9e
2025-01-18 18:23:36,501 - DEBUG - query execution done
2025-01-18 18:23:36,501 - DEBUG - SUCCESS
2025-01-18 18:23:36,501 - DEBUG - PUT OR GET: False
2025-01-18 18:23:36,501 - DEBUG - Query result format: arrow
2025-01-18 18:23:36,501 - INFO - Number of results in first chunk: 54
2025-01-18 18:23:36,501 - DEBUG - Execute query [queryID: 01b9cdf7-0002-4c70-0007-08ea001f9e9e]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:23:36,502 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:23:36,502 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:23:36,502 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:23:36,502 - DEBUG - Batches read: 0
2025-01-18 18:23:36,502 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:23:36,502 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:23:36,510 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:23:36,511 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:23:36,999 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:23:37,025 - DEBUG - calling method search on class CortexSearchServiceResource after submitting telemetry if enabled
2025-01-18 18:23:37,025 - INFO - performing a HTTP POST call to /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query
2025-01-18 18:23:37,025 - DEBUG - request has path params: {'database': 'DEV_SRC_INGEST', 'schema': 'EPA_PROCESSED', 'service_name': 'CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST'}, query_params: [], header params: {'Accept': 'application/json', 'Content-Type': 'application/json'} and body: QueryRequest(query='TELLL ME ABOUT ROUNDUP', columns=['chunk', 'relative_path', 'PRODUCTNAME', 'COMPANYNAME', 'CATEGORY_EPA_TYPE', 'SIGNAL_WORD'], filter=None, limit=10, experimental=None)
2025-01-18 18:23:37,025 - DEBUG - making an http POST call to 'https://gmcpdcz-mt01740.snowflakecomputing.com:443/api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query'
2025-01-18 18:23:37,297 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query HTTP/1.1" 200 None
2025-01-18 18:23:37,297 - DEBUG - created a RESTResponse with status 200 and length of 18429
2025-01-18 18:23:37,297 - DEBUG - response body: b'{\n  "results" : [ {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\"\\n]",\n    "chunk" : "{\\"content\\":\\"\\\\n# FRQNT PANEL\\\\n\\\\n# Roundup* L&G READY-TO-USE by Moasanto Grass & Weed Killer\\\\n  \\\\n[graphics of weeds dying in 1-7 days]\\\\n* .READY.TO-USE, RBCUIRES NO\\\\n* : SYSTEMIC GRASS AND WEED KILLER FOR SPOT TREATMENT OF UNDESIRABLB VEGETATION\\\\n* . KILLS LARELID E WEEDS AND GRASSES, ROOTS AND ALL\\\\nGUARANTEEDT AESIN NTIH OREAETLACATEN  \\\\nS YTITACTKNGUAWANEEORXOAR KONEKRAE\\\\n* :_DOES NOT HAVE SOIL ACTIVTTY\\\\n+-SUTABLB-FOR- USE-AROUND-FLOWER-BEDS TREES,-SHRUTS FENCES-WALKS -AND-SPOT TRRATMEIT IN LAWNS\\\\nSHRURSAND ORWN RENOXATION (This Taun renovation*phrase no for 24 Oz container sixe.)\\\\n* : THIS 24 OZ BOTTLE CAN BE REFILLED WTIH ONE TABLET OF ROUNDUF QUIK STIK GRASS & WEED KILLER!. SEE STORAGE AND DISPOSAL SECTION FOR MORE INFORMATION. H\\\\nRd thai laST Wlor wg thT p?x3a? Ox ony msR4ng ioTT nmRRan (moved io back panel)NOTICEt- Dwyor-axoumo all soponaibility for mfoty and uce not in macrdan vith axeptablo-raturm at once unopanod (moved to back panel)Keep out ad reach ot chlldren. CAUTION!Soo haak penai for Preenutionary Statemanta and Direstions for Uce.  \\\\nBEST AYAILA&1.  \\\\nBEST AYAILA&1.BPA-Rrg Na S04 320 (moved to back panel)\\\\n## MONSAATO COMRANY\\\\nAGRICULTURAL PRODUCTS-&T LOUIS, MIS$OURI-63167 USA (moved to back panel)  \\\\nACTIVE INGREDIENT:\\\\n|in the form of is isopropylamine k|0.96%|\\\\n| :---: | :---: |\\\\n  \\\\n:*1 ...(delered isems below are moved to back panel)ny non porn(6)CTradamerk of Menseno Company  \\\\nNET 24 fi z (1pi 8m} (delcied)  \\\\n:MONSANTO COMPANY-1993  \\\\nA000.X 1 (print piae",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "SHACKLE HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/SHACKLE_HERBICIDE_524-330.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "chunk" : "Ready Canola (Winter Varieties)|\\\\n|12.4|Roundup Ready Corn 2|\\\\n|12.5|Roundup Ready Gene Cotton|\\\\n|12.6|Roundup Ready Flex Cotton|\\\\n|12.7|Roundup Ready Gene Soybeans|\\\\n|12.8|Roundup Ready Gene Sugar Beets|\\\\n  \\\\n13 13.0 NON-CROP USES AROUND THE FARMSTEAD\\\\n|13.1|General Weed Control and Trim-And-Edge|\\\\n| :---: | :---: |\\\\n|13.2|Greenhouse/Shade house|\\\\n|13.3|Chemical Mowing|\\\\n|13.4|Cut Stumps|\\\\n|13.5|Habitat Management|\\\\n  \\\\n14 14.0 ANNUAL WEEDS RATE SECTION\\\\n|14.1|Annual Weeds -- Tank Mixtures with 2,4-D, Dicamba, or Tordon 22K|\\\\n| :---: | :---: |\\\\n|14.2|Annual Weeds - Hand-Held or Backpack Equipment|\\\\n|14.3|Annual Weeds - Tank Mixtures with Atrazine for Fallow and Reduced Tillage Systems|\\\\n\\\\n* 15 15.0 PERENNIAL WEEDS RATE SECTION\\\\n* 16 16.0 WOODY BRUSH AND TREES RATE SECTION\\\\n* 17 17.0 LIMIT OF WARRANTY AND LIABILITY\\\\n  \\\\n1.0 INGREDIENTS  \\\\nACTIVE INGREDIENT:\\\\n|*Glyphosate, N-(phosphonomethyl)glycine, in the form of its isopropylamine salt .|41.0%|\\\\n| :---: | :---: |\\\\n|OTHER INGREDIENTS:....|59.0%|\\\\n||100.0%|\\\\n*Contains 480 grams per liter or 4 pounds per U.S. gallon of the active ingredient glyphosate, in the form of its isopropylamine salt. Equivalent to 356 grams per liter or 3 pounds per U.S. gallon of the acid, glyphosate.license granted under any non-U.S. patent(s).\\\\n## 2.0 IMPORTANT PHONE NUMBERS\\\\nVersion: 3-Jun-2006Master Label 524-454\\\\n* I. MAIN LABEL FOR FOOD CROP USES\\\\n1. FOR PRODUCT INFORMATION OR ASSISTANCE IN USING THIS PRODUCT, CALL TOLL-FREE,\\\\n1-800-332-3111\\\\n2. IN CASE OF",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "\\\\nSincerely, Vuku KWztxd g James A. Tompkins Product Manager 25 Herbicide Branch Registration Division (7505P)\\\\n# MASTER LABEL FOR EPA REG. NO. 524-454\\\\n  \\\\n[Based on EPA approved Text Stamped Nov. 15, 2001] Registered Brand Names:\\\\n# ROUNDUP ORIGINAL II HERBICIDE ROUNDUP ORIGINAL RT HERBICIDE RASCAL PLUS HERBICIDE MON 8709 HERBICIDE HONCHO PLUS HERBICIDE\\\\n  \\\\nTable of Contents for Master Labei\\\\n||Main Label for Food Crop Uses|Page 2|\\\\n| :---: | :---: | :---: |\\\\n|II.|Main Label for Industrial, Turf, & Ornamental Uses|Page 70|\\\\n|III.|Supplementai Labeling|Page 100|\\\\n**See each label part for more detailed table of contents**Master Label 524-454Version: 3-Jun-2000  \\\\n3/119\\\\n# [INSERT BRAND NAME] Herbicide\\\\n  \\\\nComplete Directions for Use  \\\\nEPA Reg. No. 524-454AVOID CONTACT OF HERBICIDE WITH FOLIAGE, GREEN STEMS, EXPOSED NON-WOODY ROOTS OR FRUIT OF CROPS (EXCEPT AS SPECIFIED FOR INDIVIDUAL ROUNDUP READYD CROPS), DESIRABLE PLANTS AND TREES, BECAUSE SEVERE INJURY OR DESTRUCTION MAY RESULT.Herbicide for Roundup Ready\\\\\\" Crops.Selective broad-spectrum weed control in Roundup Ready crops. Non-selective, broad-spectrum weed control for many agricultural systems and farmsteads.A member of the Roundup Family of Agricultural Herbicides by MonsantoThe President\'s Green Chemistry Award was presented in 1996 to Monsanto for its innovative \\\\\\"zero-waste\\\\\\" process in the manufacture of Roundup Herbicide.Not all products recommended on this label are registered for use in California. Check the",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "SEQUENTIAL APPLICATION OF THIS PRODUCT WILL BE REQUIRED TO CONTROL NEW FLUSHES OF WEEDS IN THE ROUNDUP READY SOYBEAN CROP. To control giant ragweed, it is recommended that 1 quart per acre of this product be applied when the weed is 8 to 12 inches tall to increase control and possibly avoid the need for a sequential application.Version: 3-Jun-2006Master Label 524-454\\\\n## 1. MAIN LABEL FOR FOOD CROP USES\\\\nTANK MIXTURES: This product may be tank-mixed with the following products and applied postemergence (in-crop) over the top of Roundup Ready soybeans. Ensure that the specific product being used in the tank mixture is registered for application postemergence (in-crop) to soybeans. Read and follow label directions of all products in the tank mixture.[Insert active ingredient(s) or brand name of product(s) containing the following active ingredients that, at the time of printing, are registered for use postemergence (in-crop) to soybeans: acifluorfen, bentazonchlorimuron ethyl, clethodim, imazethapyr, cloransulam-methyl, fenoxyprop, fluazifop-p- butyl, flumiclorac pentyl ester, fomesafen, imazamox, imazethapyr, lactofen, pendimethalin, quizalofop P-ethyl. sethoxydem, thifensulfuron-methyl.Arrow, Assure II, Basagran, Classic, Cobra, Extreme, FirstRate, Flexstar, Fusilade DX, Fusion, Harmony GT XP, Poast, Poast Plus, Pursuit, Pursuit Plus, Raptor, Reflex, Select, Select MAX, Synchrony STS, Targa, Ultra Blazer.]PRECAUTIONS, RESTRICTIONS: The combined total application from crop emergence",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "Monsanto suppiemental labeling for this product include all applications of this product that can be made onto the specified Roundup Ready crops during the complete cropping season. DO NOT combine these treatment instructions with those for crops in the \\\\\\"ANNUAL AND PERENNIAL CROPS (ALPHABETICAL)\\\\\\" section of this label that do not contain a glyphosate tolerant gene, unless otherwise directed in this product\'s labeling.MONSANTO COMPANY RECOMMENDS USE OF THIS PRODUCT FOR POSTEMERGENCE (IN- CROP) APPLICATION ONLY ON CROPS DESIGNATED AS CONTAINING A GLYPHOSATE TOLERANT GENE. Applying this product to crops that are not designated as Roundup Ready will result in severe crop injury and yield loss. Avoid contact with foliage, green stems, or fruit of crops, or any desirable plants that do not contain a glyphosate tolerant gene, since severe plant injury or destruction will result. The Roundup Ready designation indicates that the crop contains a patented gene that provides tolerance to this product. Information on Roundup Ready crops may be obtained from your seed supplier or Monsanto representative. Roundup Ready crops must be purchased from an authorized licensed seed supplier.NOTE: Roundup Ready seed, and the method of selectively controlling weeds in a Roundup Ready crop by applying glyphosate to the weeds and to the Roundup Ready crop, are protected under several U.S. Patents, including 5,352,605 and 5,633,435. A license to use Roundup Ready seed must be obtained prior to use. Monsanto",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "quarts per acre|\\\\n|Maximum preharvest application rate|1 quart per acre|\\\\nGENERAL PRECAUTIONS/RESTRICTIONS: See the \\\\\\"ROUNDUP READY CROPS\\\\\\" section of this label for general precautionary instructions for use in Roundup Ready crops. See the \\\\\\"GENERAL INFORMATION\\\\\\" section of this label for more information on \\\\\\"Annual Maximum Application Rates.\\\\\\" Refer to individual tank mixture product label for restrictions and precautions, use according to the most restrictive precautionary statements for each product in the tank mixture.\\\\n## Preplant, At-Planting, Preemergence\\\\nUSE INSTRUCTIONS: This product may be applied before, during or after planting.TANK MIXTURES: This product may be tank-mixed with 2,4-D, Banvel or Clarity and applied prior to planting only This product may be tank-mixed with the following products and applied prior to crop emergence. Ensure that the specific product being used in the tank mixture is registered for application prior to emergence of soybeans. Read and follow label directions of all products in the tank mixture.[Insert active ingredient(s) or brand name of product(s) containing the following active ingredients that, at the time of printing, are registered for use preplant, at-planting and/or preemergence to soybeans: alachlor, atrazine, carfentrazone-ethyl, chlorimuron ethyl, clethodim, clomazone, cloransulam-methyl, dimethenamid, dimethenamid-p, fenoxyprop, fluazifop-p-butyl, flufenacet, flumetsulam, flumiclorac pentyl ester, flumioxazin, fomesafen, imazaquin,",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "[INSERT BRAND NAME] will control labeled annual grasses and broadleaf weeds in Roundup Ready Flex cotton. To maximize yield potential, spray cotton early to elininate competing weeds. Many perennial weeds will be controlled or suppressed with one or more applications of this product. In general, an initial application of 1 quart per acre on 1 to 3 inch tall annual grass and broadleaf weeds is recommended. This product may be applied by ground application equipment at rates up to 2 quarts per acre per application postemergence to Roundup Ready Flex cotton. In addition tobroadcast applications, post-directed equipment may be used to achieve weed coverage.NOTE: For specific rates of application and instructions, refer to the \\\\\\"ANNUAL\\\\\\" and \\\\\\"PERENNIAL WEEDS RATE TABLES\\\\\\" in the labei book}et for [INSERT BRAND NAME].PRECAUTIONS, RESTRICTIONS: The maximum rate for any single in-crop application of this product is 2 quarts per acre made using ground application equipment. In-crop application rates above 1 quart per acre made alone, or with the addition of other crop chemical products containing surfactant, may cause a crop response, including leaf speckling or leaf necrosis. Do not exceed a maximum rate of 3 pints per acre of this product when making applications by air. Between layby and 60 percent open bolls, the maximum combined total rate of this product that may be applied is 2 quarts per acre. The maximum combined total of all applications made from crop emergence to 60 percent open",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "General Information\\\\nAVOID CONTACT OF HERBICIDE WITH FOLIAGE, GREEN STEMS, EXPOSED NON-WOODY ROOTS OR FRUIT OF CROPS (EXCEPT AS SPECIFIED FOR INDIVIDUAL ROUNDUP READY CROPS), DESIRABLE PLANTS AND TREES, BECAUSE SEVERE INJURY OR DESTRUCTION MAY RESULT.See \\\\\\"GENERAL INFORMATION\\\\\\" and \\\\\\"MIXING\\\\\\" sections of the label booklet for [INSERT BRAND NAME] for essential product performance information.The Roundup Ready designation indicates that the alfalfa contains a patented gene that provides tolerance to this product. Information on Roundup Ready alfalfa varieties may be obtained from your seed supplier or Monsanto representative. Roundup Ready crop varieties must be purchased from an\'authorized licensed seed supplier.See the \\\\\\"ROUNDUP READY CROPS\\\\\\" section of the [INSERT BRAND NAME] label booklet for general precautionary instructions for use in Roundup Ready crops. Do NOT combine the instructions in this supplemental label with other recommendations listed in the \\\\\\"PASTURE GRASSES, FORAGE LEGUMES, AND RANGELANDS\\\\\\" section of the [INSERT BRAND NAME] label booklet intended for alfalfa varieties that do not contain a glyphosate tolerance gene.\\\\n## DIRECTIONS FOR USE\\\\nThis product will control many troublesome emerged weeds with over-the-top apptications in Roundup Ready alfalfa grown for seed. Over-the-top applications may be made from emergence through the late vegetative stage, and spot treatments may be made from early bud stage through seed harvest.For ground applications with broadcast",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "weeds in a Roundup Ready crop by applying glyphosate to the weeds and to the Roundup Ready crop, are protected under several U.S. Patents, including 5,352,605 and 5,633,435. A license to use Roundup Ready seed must be obtained prior to use. Monsanto retains ownership of the gene and process technologies, and the Purchaser of the seed receives the right to use the licensed genes and technologies subject to the limited use license conditions. Seed containing a Roundup Ready trait cannot be used for research and demonstration, reverse engineering or in connection with herbicide registration. Progeny seed containing the Roundup Ready trait cannot be saved for replanting or transferred to others for replanting. Contact your Authorized Monsanto Retailer for information on obtaining a limited use iicense.Sprayer Preparation: It is important that sprayer and mixing equipment be clean and free of pesticide residue before making applications of this product. Follow the cleaning procedures specified on the label of the product(s) previously used. THOROUGHLY CLEAN THE SPRAY TANK AND ALL LINES AND FILTERS TO ELIMINATE POTENTIAL CONTAMINATION FROM OTHER HERBICIDES PRIOR TO MIXING AND APPLYING THIS PRODUCT.For ground broadcast applications. Apply this product in 5 to 20 gallons of spray solution per acre. Carefully select proper nozzle and spray pressure to avoid spraying a fine mist. For best results with ground application equipment, use flat spray nozzles. Check for even distribution of spray",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "Ready Gene Soybeans|\\\\n||12.8||\\\\n|||Roundup Ready Gene Sugar Beets|\\\\n||||\\\\n||13.0|NON-CROP USES AROUND THE FARMSTEAD|\\\\n||13.1|General Weed Control and Trim-And-Edge|\\\\n||13.2|Greenhouse/Shade house|\\\\n||||\\\\n||13.3|Chemical Mowing|\\\\n||13.4|Cut Stumps|\\\\n||13.5|Habitat Management|\\\\n|14|14.0|ANNUAL WEEDS RATE SECTION|\\\\n||14.1|Annual Weeds -- Tank Mixtures with 2,4-D, Dicamba, or Tordon 22K|\\\\n||14.2|Annual Weeds - Hand-Held or Backpack Equipment|\\\\n||14.3|Annual Weeds - Tank Mixtures with Atrazine for Fallow and Reduced Tillage Systems|\\\\n|15|15.0|PERENNIAL WEEDS RATE SECTION|\\\\n|16|16.0|WOODY BRUSH AND TREES RATE SECTION|\\\\n|17|17.0|LIMIT OF WARRANTY AND LIABILITY|\\\\n\\\\n||Stone Fruit|\\\\n| :---: | :---: |\\\\n|10.7|Tree Nuts|\\\\n|10.8|Tropical and Subtropical Trees and Fruits|\\\\n|10.9|Vine Crops|\\\\n  \\\\n11 11.0 PASTURE GRASSES, FORAGE LEGUMES, AND RANGELANDS\\\\n|11.1|Alfalfa, Clover, and Other Forage Legumes|\\\\n| :---: | :---: |\\\\n|11.2|Conservation Reserve program (CRP)|\\\\n|11.3|Grass Seed or Sod Production|\\\\n|11.4|Pastures|\\\\n|11.5|Rangelands|\\\\n\\\\n* 11.1 Alfalfa, Clover, and Other Forage Legumes\\\\n* 11.2 Conservation Reserve program (CRP)\\\\n  \\\\n12 12.0 ROUNDUP READY CROPS\\\\n|12.1|Roundup Ready Alfalfa|\\\\n| :---: | :---: |\\\\n|12.2|Roundup Ready Canola (Spring Varieties)|\\\\n|12.3|Roundup Ready Canola (Winter Varieties)|\\\\n|12.4|Roundup Ready Corn 2|\\\\n|12.5|Roundup Ready Gene Cotton|\\\\n|12.6|Roundup Ready Flex Cotton|\\\\n|12.7|Roundup Ready Gene Soybeans|\\\\n|12.8|Roundup Ready Gene Sugar Beets|\\\\n  \\\\n13 13.0 NON-CROP USES AROUND",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  } ],\n  "request_id" : "16b91db6-4146-4e1b-aa62-9e25a9145317"\n}'
2025-01-18 18:23:37,300 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:23:37,302 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:23:37,761 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:23:53,893 - DEBUG - executing SQL/command
2025-01-18 18:23:53,893 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...]
2025-01-18 18:23:53,893 - DEBUG - sequence counter: 36
2025-01-18 18:23:53,893 - DEBUG - Request id: 76ac8b6d-9580-47bc-9b8d-373cfd52551b
2025-01-18 18:23:53,895 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...]
2025-01-18 18:23:53,895 - DEBUG - is_file_transfer: True
2025-01-18 18:23:53,895 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:53,895 - DEBUG - _cmd_query
2025-01-18 18:23:53,895 - DEBUG - serialize_to_dict() called
2025-01-18 18:23:53,895 - DEBUG - Cache Entry: (0, 1737246211862035, 0)
2025-01-18 18:23:53,895 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246211862035, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:23:53,895 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...], sequence_id=[36], is_file_transfer=[False]
2025-01-18 18:23:53,896 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:23:53,896 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:23:53,896 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:23:53,896 - DEBUG - Request guid: 29340f59-1272-43d8-a58d-026ca1453c26
2025-01-18 18:23:53,896 - DEBUG - socket timeout: 60
2025-01-18 18:23:54,001 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=76ac8b6d-9580-47bc-9b8d-373cfd52551b&request_guid=29340f59-1272-43d8-a58d-026ca1453c26 HTTP/1.1" 200 474
2025-01-18 18:23:54,001 - DEBUG - SUCCESS
2025-01-18 18:23:54,001 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:23:54,001 - DEBUG - ret[code] = 391707, after post request
2025-01-18 18:23:54,002 - DEBUG - Query id: 01b9cdf7-0002-4c70-0007-08ea001f9ea2
2025-01-18 18:23:54,002 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:23:54,002 - DEBUG - sfqid: 01b9cdf7-0002-4c70-0007-08ea001f9ea2
2025-01-18 18:23:54,002 - DEBUG - query execution done
2025-01-18 18:23:54,002 - DEBUG - {'data': {'internalError': False, 'unredactedFromSecureObject': False, 'errorCode': '391707', 'age': 0, 'sqlState': '42000', 'queryId': '01b9cdf7-0002-4c70-0007-08ea001f9ea2', 'line': -1, 'pos': -1, 'type': 'COMPILATION'}, 'code': '391707', 'message': "SQL compilation error: Stage '@DEV_SRC_INGEST.EPA_RAW.PDF_STORE' provided to the function 'DIRECTORY' does not exist or is not authorized.", 'success': False, 'headers': None}
2025-01-18 18:26:04,188 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x000001EF81837D90>
2025-01-18 18:26:04,189 - INFO - Querying the server for client info
2025-01-18 18:26:04,189 - DEBUG - cursor
2025-01-18 18:26:04,189 - DEBUG - executing SQL/command
2025-01-18 18:26:04,189 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:26:04,189 - DEBUG - sequence counter: 37
2025-01-18 18:26:04,189 - DEBUG - Request id: 15f9c580-48e9-42ec-832f-1e23c1c8f4d9
2025-01-18 18:26:04,189 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:26:04,189 - DEBUG - is_file_transfer: True
2025-01-18 18:26:04,189 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:04,189 - DEBUG - _cmd_query
2025-01-18 18:26:04,189 - DEBUG - serialize_to_dict() called
2025-01-18 18:26:04,189 - DEBUG - Cache Entry: (0, 1737246211862035, 0)
2025-01-18 18:26:04,189 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246211862035, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:26:04,189 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[37], is_file_transfer=[False]
2025-01-18 18:26:04,191 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:26:04,191 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:26:04,192 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:26:04,192 - DEBUG - Request guid: a9da6e67-8578-47c1-8b12-a01bfd3b9f39
2025-01-18 18:26:04,192 - DEBUG - socket timeout: 60
2025-01-18 18:26:04,303 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=15f9c580-48e9-42ec-832f-1e23c1c8f4d9&request_guid=a9da6e67-8578-47c1-8b12-a01bfd3b9f39 HTTP/1.1" 200 2619
2025-01-18 18:26:04,303 - DEBUG - SUCCESS
2025-01-18 18:26:04,304 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:26:04,304 - DEBUG - ret[code] = None, after post request
2025-01-18 18:26:04,304 - DEBUG - Query id: 01b9cdf9-0002-4c76-0007-08ea001fbd52
2025-01-18 18:26:04,304 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246359703062, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:26:04,304 - DEBUG - Cache Entry: (0, 1737246211862035, 0)
2025-01-18 18:26:04,304 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246359703062, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:26:04,304 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:26:04,304 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:04,304 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:04,304 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:26:04,304 - DEBUG - Cache Entry: (0, 1737246359703062, 0)
2025-01-18 18:26:04,304 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:04,304 - DEBUG - sfqid: 01b9cdf9-0002-4c76-0007-08ea001fbd52
2025-01-18 18:26:04,304 - DEBUG - query execution done
2025-01-18 18:26:04,304 - DEBUG - SUCCESS
2025-01-18 18:26:04,304 - DEBUG - PUT OR GET: False
2025-01-18 18:26:04,304 - DEBUG - Query result format: arrow
2025-01-18 18:26:04,304 - INFO - Number of results in first chunk: 1
2025-01-18 18:26:04,305 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:26:04,305 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:26:04,305 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:26:04,305 - DEBUG - Batches read: 0
2025-01-18 18:26:04,305 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:26:04,305 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:26:04,305 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x000001EF812BB550>, telemetry enabled: True
2025-01-18 18:26:04,306 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:26:04,306 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:26:04,306 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:26:04,306 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:26:04,307 - DEBUG - cursor
2025-01-18 18:26:04,308 - DEBUG - executing SQL/command
2025-01-18 18:26:04,308 - DEBUG - query: [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:26:04,308 - DEBUG - sequence counter: 38
2025-01-18 18:26:04,308 - DEBUG - Request id: 11717fb4-fe3f-41f6-9713-c0495c16a3f8
2025-01-18 18:26:04,308 - DEBUG - running query [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:26:04,308 - DEBUG - is_file_transfer: True
2025-01-18 18:26:04,308 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:04,308 - DEBUG - _cmd_query
2025-01-18 18:26:04,308 - DEBUG - serialize_to_dict() called
2025-01-18 18:26:04,308 - DEBUG - Cache Entry: (0, 1737246359703062, 0)
2025-01-18 18:26:04,308 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246359703062, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:26:04,308 - DEBUG - sql=[SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...], sequence_id=[38], is_file_transfer=[False]
2025-01-18 18:26:04,309 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:26:04,309 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:26:04,309 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:26:04,309 - DEBUG - Request guid: 639c393a-124e-4bce-9c5a-f4c41dfc8f9b
2025-01-18 18:26:04,309 - DEBUG - socket timeout: 60
2025-01-18 18:26:04,403 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=11717fb4-fe3f-41f6-9713-c0495c16a3f8&request_guid=639c393a-124e-4bce-9c5a-f4c41dfc8f9b HTTP/1.1" 200 2113
2025-01-18 18:26:04,403 - DEBUG - SUCCESS
2025-01-18 18:26:04,403 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:26:04,403 - DEBUG - ret[code] = None, after post request
2025-01-18 18:26:04,403 - DEBUG - Query id: 01b9cdf9-0002-4c79-0007-08ea0020010e
2025-01-18 18:26:04,403 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246359804845, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:26:04,403 - DEBUG - Cache Entry: (0, 1737246359703062, 0)
2025-01-18 18:26:04,403 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246359804845, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:26:04,403 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:26:04,403 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:04,405 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:04,405 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:26:04,405 - DEBUG - Cache Entry: (0, 1737246359804845, 0)
2025-01-18 18:26:04,405 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:04,405 - DEBUG - sfqid: 01b9cdf9-0002-4c79-0007-08ea0020010e
2025-01-18 18:26:04,405 - DEBUG - query execution done
2025-01-18 18:26:04,405 - DEBUG - SUCCESS
2025-01-18 18:26:04,405 - DEBUG - PUT OR GET: False
2025-01-18 18:26:04,405 - DEBUG - Query result format: arrow
2025-01-18 18:26:04,405 - INFO - Number of results in first chunk: 1
2025-01-18 18:26:04,405 - DEBUG - Execute query [queryID: 01b9cdf9-0002-4c79-0007-08ea0020010e] 
        SELECT LOCATION, LATITUDE, LONGITUDE
        FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS 
        WHERE USER_ID = 'default_user'
        
2025-01-18 18:26:04,405 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:26:04,405 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:26:04,405 - DEBUG - Arrow chunk info: batchCount 1, columnCount 3, use_numpy: 0
2025-01-18 18:26:04,406 - DEBUG - Batches read: 0
2025-01-18 18:26:04,406 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:26:04,406 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:26:04,409 - DEBUG - executing SQL/command
2025-01-18 18:26:04,410 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:26:04,410 - DEBUG - sequence counter: 39
2025-01-18 18:26:04,410 - DEBUG - Request id: 7131cd64-4d31-4283-85cf-1752fdda3867
2025-01-18 18:26:04,410 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:26:04,410 - DEBUG - is_file_transfer: True
2025-01-18 18:26:04,410 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:04,410 - DEBUG - _cmd_query
2025-01-18 18:26:04,410 - DEBUG - serialize_to_dict() called
2025-01-18 18:26:04,410 - DEBUG - Cache Entry: (0, 1737246359804845, 0)
2025-01-18 18:26:04,410 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246359804845, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:26:04,410 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[39], is_file_transfer=[False]
2025-01-18 18:26:04,411 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:26:04,411 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:26:04,411 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:26:04,411 - DEBUG - Request guid: 82f71646-4c3b-486c-a9ef-e74d984b43a3
2025-01-18 18:26:04,411 - DEBUG - socket timeout: 60
2025-01-18 18:26:04,476 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=7131cd64-4d31-4283-85cf-1752fdda3867&request_guid=82f71646-4c3b-486c-a9ef-e74d984b43a3 HTTP/1.1" 200 1500
2025-01-18 18:26:04,476 - DEBUG - SUCCESS
2025-01-18 18:26:04,476 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:26:04,476 - DEBUG - ret[code] = None, after post request
2025-01-18 18:26:04,476 - DEBUG - Query id: 01b9cdf9-0002-4d87-0007-08ea001fe596
2025-01-18 18:26:04,477 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246359868050, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:26:04,477 - DEBUG - Cache Entry: (0, 1737246359804845, 0)
2025-01-18 18:26:04,477 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246359868050, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:26:04,477 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:26:04,477 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:04,477 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:04,477 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:26:04,477 - DEBUG - Cache Entry: (0, 1737246359868050, 0)
2025-01-18 18:26:04,477 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:04,477 - DEBUG - sfqid: 01b9cdf9-0002-4d87-0007-08ea001fe596
2025-01-18 18:26:04,477 - DEBUG - query execution done
2025-01-18 18:26:04,477 - DEBUG - SUCCESS
2025-01-18 18:26:04,477 - DEBUG - PUT OR GET: False
2025-01-18 18:26:04,477 - DEBUG - Query result format: arrow
2025-01-18 18:26:04,477 - INFO - Number of results in first chunk: 0
2025-01-18 18:26:04,479 - DEBUG - executing SQL/command
2025-01-18 18:26:04,479 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:26:04,479 - DEBUG - sequence counter: 40
2025-01-18 18:26:04,479 - DEBUG - Request id: bc7526c4-897e-498d-8152-9a4fba4b2f9b
2025-01-18 18:26:04,479 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:26:04,479 - DEBUG - is_file_transfer: True
2025-01-18 18:26:04,479 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:04,479 - DEBUG - _cmd_query
2025-01-18 18:26:04,479 - DEBUG - serialize_to_dict() called
2025-01-18 18:26:04,479 - DEBUG - Cache Entry: (0, 1737246359868050, 0)
2025-01-18 18:26:04,479 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246359868050, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:26:04,479 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[40], is_file_transfer=[False]
2025-01-18 18:26:04,479 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:26:04,480 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:26:04,480 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:26:04,480 - DEBUG - Request guid: c559664d-c65a-4ece-8ca0-c27fb87ba214
2025-01-18 18:26:04,480 - DEBUG - socket timeout: 60
2025-01-18 18:26:04,544 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=bc7526c4-897e-498d-8152-9a4fba4b2f9b&request_guid=c559664d-c65a-4ece-8ca0-c27fb87ba214 HTTP/1.1" 200 1374
2025-01-18 18:26:04,545 - DEBUG - SUCCESS
2025-01-18 18:26:04,545 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:26:04,545 - DEBUG - ret[code] = None, after post request
2025-01-18 18:26:04,545 - DEBUG - Query id: 01b9cdf9-0002-4c78-0007-08ea0020108e
2025-01-18 18:26:04,545 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246359949617, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:26:04,545 - DEBUG - Cache Entry: (0, 1737246359868050, 0)
2025-01-18 18:26:04,545 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246359949617, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:26:04,546 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:26:04,546 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:04,546 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:04,546 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:26:04,546 - DEBUG - Cache Entry: (0, 1737246359949617, 0)
2025-01-18 18:26:04,546 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:04,546 - DEBUG - sfqid: 01b9cdf9-0002-4c78-0007-08ea0020108e
2025-01-18 18:26:04,546 - DEBUG - query execution done
2025-01-18 18:26:04,546 - DEBUG - SUCCESS
2025-01-18 18:26:04,546 - DEBUG - PUT OR GET: False
2025-01-18 18:26:04,546 - DEBUG - Query result format: arrow
2025-01-18 18:26:04,546 - INFO - Number of results in first chunk: 0
2025-01-18 18:26:04,547 - DEBUG - executing SQL/command
2025-01-18 18:26:04,547 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:26:04,547 - DEBUG - sequence counter: 41
2025-01-18 18:26:04,548 - DEBUG - Request id: ea419057-ab53-4fe5-b4c0-5d8eb5e3b245
2025-01-18 18:26:04,548 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:26:04,548 - DEBUG - is_file_transfer: True
2025-01-18 18:26:04,548 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:04,548 - DEBUG - _cmd_query
2025-01-18 18:26:04,548 - DEBUG - serialize_to_dict() called
2025-01-18 18:26:04,548 - DEBUG - Cache Entry: (0, 1737246359949617, 0)
2025-01-18 18:26:04,548 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246359949617, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:26:04,548 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[41], is_file_transfer=[False]
2025-01-18 18:26:04,549 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:26:04,549 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:26:04,549 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:26:04,549 - DEBUG - Request guid: 293b9aca-1b74-41dc-ab0c-d2e26b45990a
2025-01-18 18:26:04,549 - DEBUG - socket timeout: 60
2025-01-18 18:26:04,630 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=ea419057-ab53-4fe5-b4c0-5d8eb5e3b245&request_guid=293b9aca-1b74-41dc-ab0c-d2e26b45990a HTTP/1.1" 200 1374
2025-01-18 18:26:04,630 - DEBUG - SUCCESS
2025-01-18 18:26:04,631 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:26:04,631 - DEBUG - ret[code] = None, after post request
2025-01-18 18:26:04,631 - DEBUG - Query id: 01b9cdfa-0002-4c70-0007-08ea001f9ec6
2025-01-18 18:26:04,631 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246360033718, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:26:04,631 - DEBUG - Cache Entry: (0, 1737246359949617, 0)
2025-01-18 18:26:04,631 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246360033718, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:26:04,631 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:26:04,632 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:04,632 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:04,632 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:26:04,632 - DEBUG - Cache Entry: (0, 1737246360033718, 0)
2025-01-18 18:26:04,632 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:04,632 - DEBUG - sfqid: 01b9cdfa-0002-4c70-0007-08ea001f9ec6
2025-01-18 18:26:04,632 - DEBUG - query execution done
2025-01-18 18:26:04,632 - DEBUG - SUCCESS
2025-01-18 18:26:04,632 - DEBUG - PUT OR GET: False
2025-01-18 18:26:04,632 - DEBUG - Query result format: arrow
2025-01-18 18:26:04,632 - INFO - Number of results in first chunk: 0
2025-01-18 18:26:04,642 - DEBUG - Sending 1 logs to telemetry. Data is {'logs': [{'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_imported_packages', 'value': "{'anyio', 'win32com', 'cloudpickle', 'hashlib', 'tzlocal', 'contextvars', 'pyexpat', 'pygments', 'atexit', 'weakref', 'ctypes', 'sre_constants', 'site', 'unicodedata', 'gc', 'winreg', 'streamlit', 'requests', 'pyarrow', 'fractions', 'cmath', 'shutil', 'pywintypes', 'builtins', 'pywin32_bootstrap', 'glob', 'sre_parse', 'toml', 'getpass', 'dataclasses', 'warnings', 'sys', 'codecs', 'ipaddress', 'charset_normalizer', 'asn1crypto', 'collections', 'marshal', 'enum', 'heapq', 'cachetools', 'plotly', 'pkg_resources', 'tokenize', 'threading', 'mimetypes', 'numpy', 'socket', 'math', 'smmap', 'distro', 'mmap', 'platform', 'lzma', 'secrets', 'pkgutil', 'calendar', 'sortedcontainers', 'signal', 'abc', 'PIL', 'cryptography', 'click', 'sniffio', 'statistics', 'csv', 'pydoc', 'multiprocessing', 'runpy', 'zipimport', 'decimal', 'fnmatch', 'io', 'ssl', 'locale', 'uuid', 'token', 'base64', 'pywin32_system32', 'getopt', 'gettext', 'nt', 'inspect', 'jwt', 'httpx', 'urllib3', 'colorsys', 'functools', 'sre_compile', 'copy', 'operator', 'stringprep', 'tomlkit', 'google', 'queue', 'array', 'tarfile', 'dis', 'xml', 'urllib', 'filelock', 'ntpath', 'http', 'genericpath', 'random', 'concurrent', 'pickle', 'itertools', 'gzip', 'openai', 'sysconfig', 'keyword', 'reprlib', 'textwrap', 'zlib', 'hmac', 'msvcrt', 'numbers', 'cython_runtime', 'attr', 'asyncio', 'bz2', 'linecache', 'typing_extensions', 'pytz', 'pprint', 'json', 'pandas', 'os', 'struct', 'subprocess', 'zipfile', 'annotated_types', 'stat', 'colorama', 'bisect', 'nturl2path', 'webbrowser', 'copyreg', 'argparse', 'importlib', 'typing', 'certifi', 'tempfile', 'yaml', 're', 'win32api', 'public', 'absl', 'traceback', 'posixpath', 'platformdirs', 'snowflake', 'pydantic', 'git', 'binascii', 'types', 'encodings', 'contextlib', 'gitdb', 'rich', 'timeit', 'plistlib', 'blinker', 'dateutil', 'ast', 'jiter', 'email', 'logging', 'packaging', 'string', 'idna', 'watchdog', 'datetime', 'select', 'pydantic_core', 'time', 'opcode', 'shlex', 'tornado', 'unittest', 'uu', 'html', 'difflib', 'configparser', 'selectors', 'zoneinfo', 'errno', 'OpenSSL', 'pathlib', 'pythoncom', 'quopri', 'six'}"}, 'timestamp': '1737246029513'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_session_created', 'data': {'start_time': 1737246029513, 'created_by_snowpark': 0}}, 'timestamp': '1737246029513'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954375350, 'thread_ident': 31720}}, 'timestamp': '1737246029514'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf4-0002-4c76-0007-08ea001fbcba', 'value': 4590}, 'timestamp': '1737246029618'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf4-0002-4d87-0007-08ea001fe512', 'value': 4589}, 'timestamp': '1737246029744'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdf4-0002-4d87-0007-08ea001fe512', 'value': 1}, 'timestamp': '1737246029745'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'd2ef96aa-69b2-484d-b802-4c28eff93517', 'query_plan_complexity': {'column': 1}, 'thread_ident': 31720}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdf4-0002-4d87-0007-08ea001fe512']}}, 'timestamp': '1737246029745'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf4-0002-4c7a-0007-08ea001ff502', 'value': 4591}, 'timestamp': '1737246029824'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954375350, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.06959033012390137, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246029824'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf4-0002-4c72-0007-08ea001fae12', 'value': 4590}, 'timestamp': '1737246029911'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954375350, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.0836794376373291, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246029911'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf4-0002-4c71-0007-08ea001f8f9e', 'value': 4590}, 'timestamp': '1737246029988'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954375350, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.07628130912780762, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246029988'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf4-0002-4c77-0007-08ea001fdc2e', 'value': 4590}, 'timestamp': '1737246030083'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdf4-0002-4c77-0007-08ea001fdc2e', 'value': 0}, 'timestamp': '1737246030083'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '1e8b8111-3927-46b1-ba44-f73464602c11', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 31720}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdf4-0002-4c77-0007-08ea001fdc2e']}}, 'timestamp': '1737246030083'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf4-0002-4c77-0007-08ea001fdc32', 'value': 4596}, 'timestamp': '1737246035446'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954375350, 'thread_ident': 27544}}, 'timestamp': '1737246035450'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf4-0002-4c5d-0007-08ea001fcc16', 'value': 4599}, 'timestamp': '1737246035525'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954375350, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.07531929016113281, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246035526'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf4-0002-4c78-0007-08ea0020102e', 'value': 4594}, 'timestamp': '1737246035599'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954375350, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.07319092750549316, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246035599'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf4-0002-4c70-0007-08ea001f9e6e', 'value': 4589}, 'timestamp': '1737246035692'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954375350, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.09095048904418945, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246035692'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf4-0002-4d87-0007-08ea001fe516', 'value': 4589}, 'timestamp': '1737246035781'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdf4-0002-4d87-0007-08ea001fe516', 'value': 0}, 'timestamp': '1737246035781'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '3a672262-ec2e-47da-804c-72720766aaac', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 27544}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdf4-0002-4d87-0007-08ea001fe516']}}, 'timestamp': '1737246035782'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737246036304'}, {'message': {'source': 'snowflake.core', 'version': '1.0.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'python_api', 'data': {'class_name': 'CortexSearchServiceResource', 'func_name': 'search'}}, 'timestamp': '1737246036308'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737246048017'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'Stacktrace': (False, '', None), 'query_id': '01b9cdf4-0002-4d87-0007-08ea001fe51a', 'sql_state': '42000', 'reason': '391707 (42000)', 'ErrorNumber': '391707', 'type': 'client_sql_exception', 'exception': 'ProgrammingError'}, 'timestamp': '1737246048101'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf5-0002-4c5d-0007-08ea001fcc2e', 'value': 4591}, 'timestamp': '1737246103401'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954375350, 'thread_ident': 15832}}, 'timestamp': '1737246103405'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf5-0002-4d87-0007-08ea001fe526', 'value': 4591}, 'timestamp': '1737246103510'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdf5-0002-4d87-0007-08ea001fe526', 'value': 0}, 'timestamp': '1737246103510'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '994b6589-9380-4fa1-ad52-03a700e44a80', 'query_plan_complexity': {'column': 1}, 'thread_ident': 15832}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdf5-0002-4d87-0007-08ea001fe526']}}, 'timestamp': '1737246103511'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf5-0002-4c76-0007-08ea001fbd02', 'value': 4588}, 'timestamp': '1737246103585'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954375350, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.06900334358215332, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246103585'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf5-0002-4c76-0007-08ea001fbd06', 'value': 4591}, 'timestamp': '1737246103658'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954375350, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.07248663902282715, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246103659'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf5-0002-4c5d-0007-08ea001fcc32', 'value': 4593}, 'timestamp': '1737246103731'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954375350, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.07267045974731445, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246103731'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf5-0002-4c70-0007-08ea001f9e7e', 'value': 4591}, 'timestamp': '1737246103986'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdf5-0002-4c70-0007-08ea001f9e7e', 'value': 0}, 'timestamp': '1737246103986'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'b4ba205f-c268-45fc-8e9b-f93544349de8', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 15832}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdf5-0002-4c70-0007-08ea001f9e7e']}}, 'timestamp': '1737246103987'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf5-0002-4c7a-0007-08ea001ff516', 'value': 4589}, 'timestamp': '1737246110520'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954375350, 'thread_ident': 19780}}, 'timestamp': '1737246110525'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf5-0002-4c77-0007-08ea001fdc4a', 'value': 4590}, 'timestamp': '1737246110600'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954375350, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.07502889633178711, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246110600'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf5-0002-4c78-0007-08ea00201046', 'value': 4590}, 'timestamp': '1737246110697'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954375350, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.0962073802947998, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246110697'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf5-0002-4c78-0007-08ea0020104a', 'value': 4589}, 'timestamp': '1737246110764'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954375350, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.06656575202941895, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246110764'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf5-0002-4c79-0007-08ea002000ca', 'value': 4590}, 'timestamp': '1737246110853'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdf5-0002-4c79-0007-08ea002000ca', 'value': 1}, 'timestamp': '1737246110854'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '19260498-2888-42e5-9b25-edc1612da533', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 19780}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdf5-0002-4c79-0007-08ea002000ca']}}, 'timestamp': '1737246110854'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737246111360'}, {'message': {'source': 'snowflake.core', 'version': '1.0.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'python_api', 'data': {'class_name': 'CortexSearchServiceResource', 'func_name': 'search'}}, 'timestamp': '1737246111362'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737246126587'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'Stacktrace': (False, '', None), 'query_id': '01b9cdf6-0002-4c5d-0007-08ea001fcc36', 'sql_state': '42000', 'reason': '391707 (42000)', 'ErrorNumber': '391707', 'type': 'client_sql_exception', 'exception': 'ProgrammingError'}, 'timestamp': '1737246126692'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf7-0002-4c77-0007-08ea001fdc7e', 'value': 4593}, 'timestamp': '1737246209664'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954375350, 'thread_ident': 5744}}, 'timestamp': '1737246209669'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf7-0002-4d87-0007-08ea001fe536', 'value': 4590}, 'timestamp': '1737246210160'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdf7-0002-4d87-0007-08ea001fe536', 'value': 0}, 'timestamp': '1737246210160'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '8277a223-1ff8-4561-a97c-0e4481d92331', 'query_plan_complexity': {'column': 1}, 'thread_ident': 5744}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdf7-0002-4d87-0007-08ea001fe536']}}, 'timestamp': '1737246210160'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf7-0002-4c7a-0007-08ea001ff556', 'value': 4592}, 'timestamp': '1737246210232'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954375350, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.06812858581542969, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246210232'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf7-0002-4d87-0007-08ea001fe53a', 'value': 4590}, 'timestamp': '1737246210294'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954375350, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.06149029731750488, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246210294'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf7-0002-4c5d-0007-08ea001fcc3e', 'value': 4594}, 'timestamp': '1737246210377'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954375350, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.08145952224731445, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246210377'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf7-0002-4c71-0007-08ea001f8fc6', 'value': 4589}, 'timestamp': '1737246210576'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdf7-0002-4c71-0007-08ea001f8fc6', 'value': 1}, 'timestamp': '1737246210577'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '51e44de4-f703-4e3d-9e71-936e58862a1d', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 5744}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdf7-0002-4c71-0007-08ea001f8fc6']}}, 'timestamp': '1737246210577'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf7-0002-4c77-0007-08ea001fdcb2', 'value': 4590}, 'timestamp': '1737246216151'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954375350, 'thread_ident': 26068}}, 'timestamp': '1737246216155'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf7-0002-4c78-0007-08ea00201062', 'value': 4590}, 'timestamp': '1737246216239'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954375350, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.08368682861328125, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246216239'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf7-0002-4c79-0007-08ea002000da', 'value': 4587}, 'timestamp': '1737246216305'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954375350, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.06617999076843262, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246216306'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf7-0002-4c70-0007-08ea001f9e9a', 'value': 4590}, 'timestamp': '1737246216387'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954375350, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.08122467994689941, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246216387'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf7-0002-4c70-0007-08ea001f9e9e', 'value': 4591}, 'timestamp': '1737246216501'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdf7-0002-4c70-0007-08ea001f9e9e', 'value': 1}, 'timestamp': '1737246216502'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '891447f2-11fe-40e7-9319-0575b4e243db', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 26068}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdf7-0002-4c70-0007-08ea001f9e9e']}}, 'timestamp': '1737246216503'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737246217024'}, {'message': {'source': 'snowflake.core', 'version': '1.0.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'python_api', 'data': {'class_name': 'CortexSearchServiceResource', 'func_name': 'search'}}, 'timestamp': '1737246217025'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737246233891'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'Stacktrace': (False, '', None), 'query_id': '01b9cdf7-0002-4c70-0007-08ea001f9ea2', 'sql_state': '42000', 'reason': '391707 (42000)', 'ErrorNumber': '391707', 'type': 'client_sql_exception', 'exception': 'ProgrammingError'}, 'timestamp': '1737246234002'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf9-0002-4c76-0007-08ea001fbd52', 'value': 4590}, 'timestamp': '1737246364304'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954375350, 'thread_ident': 17532}}, 'timestamp': '1737246364308'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf9-0002-4c79-0007-08ea0020010e', 'value': 4594}, 'timestamp': '1737246364405'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdf9-0002-4c79-0007-08ea0020010e', 'value': 1}, 'timestamp': '1737246364406'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '889e8490-26cd-4648-9e0f-8fabab7d6bf6', 'query_plan_complexity': {'column': 1}, 'thread_ident': 17532}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdf9-0002-4c79-0007-08ea0020010e']}}, 'timestamp': '1737246364406'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf9-0002-4d87-0007-08ea001fe596', 'value': 4591}, 'timestamp': '1737246364477'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954375350, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.06907773017883301, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246364478'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdf9-0002-4c78-0007-08ea0020108e', 'value': 4591}, 'timestamp': '1737246364546'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954375350, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.06805157661437988, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246364546'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdfa-0002-4c70-0007-08ea001f9ec6', 'value': 4590}, 'timestamp': '1737246364632'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954375350, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.08471322059631348, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246364632'}]}.
2025-01-18 18:26:04,643 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:26:04,643 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:26:04,643 - DEBUG - remaining request timeout: 5000 ms, retry cnt: 1
2025-01-18 18:26:04,643 - DEBUG - Request guid: 8d9d5eb3-da5e-4bfa-8684-416efa7ce501
2025-01-18 18:26:04,643 - DEBUG - socket timeout: 60
2025-01-18 18:26:04,707 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /telemetry/send?request_guid=8d9d5eb3-da5e-4bfa-8684-416efa7ce501 HTTP/1.1" 200 86
2025-01-18 18:26:04,708 - DEBUG - SUCCESS
2025-01-18 18:26:04,708 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:26:04,708 - DEBUG - ret[code] = None, after post request
2025-01-18 18:26:04,708 - DEBUG - Successfully uploading metrics to telemetry.
2025-01-18 18:26:04,709 - DEBUG - executing SQL/command
2025-01-18 18:26:04,709 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:26:04,709 - DEBUG - sequence counter: 42
2025-01-18 18:26:04,709 - DEBUG - Request id: 6de316e5-f65a-4a4f-867f-886d581aa639
2025-01-18 18:26:04,709 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:26:04,709 - DEBUG - is_file_transfer: True
2025-01-18 18:26:04,709 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:04,709 - DEBUG - _cmd_query
2025-01-18 18:26:04,709 - DEBUG - serialize_to_dict() called
2025-01-18 18:26:04,709 - DEBUG - Cache Entry: (0, 1737246360033718, 0)
2025-01-18 18:26:04,709 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246360033718, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:26:04,709 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[42], is_file_transfer=[False]
2025-01-18 18:26:04,710 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:26:04,710 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:26:04,710 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:26:04,711 - DEBUG - Request guid: bd7838f1-42d6-4b03-875b-9537cb481b10
2025-01-18 18:26:04,711 - DEBUG - socket timeout: 60
2025-01-18 18:26:04,852 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=6de316e5-f65a-4a4f-867f-886d581aa639&request_guid=bd7838f1-42d6-4b03-875b-9537cb481b10 HTTP/1.1" 200 2620
2025-01-18 18:26:04,853 - DEBUG - SUCCESS
2025-01-18 18:26:04,853 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:26:04,853 - DEBUG - ret[code] = None, after post request
2025-01-18 18:26:04,853 - DEBUG - Query id: 01b9cdfa-0002-4c7a-0007-08ea001ff58e
2025-01-18 18:26:04,853 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246360249052, 'priority': 0, 'context': 'COrjJA=='}]}
2025-01-18 18:26:04,853 - DEBUG - Cache Entry: (0, 1737246360033718, 0)
2025-01-18 18:26:04,853 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246360249052, 'priority': 0, 'context': 'COrjJA=='}
2025-01-18 18:26:04,853 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:26:04,853 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:04,853 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:04,853 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:26:04,853 - DEBUG - Cache Entry: (0, 1737246360249052, 0)
2025-01-18 18:26:04,853 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:04,853 - DEBUG - sfqid: 01b9cdfa-0002-4c7a-0007-08ea001ff58e
2025-01-18 18:26:04,853 - DEBUG - query execution done
2025-01-18 18:26:04,853 - DEBUG - SUCCESS
2025-01-18 18:26:04,853 - DEBUG - PUT OR GET: False
2025-01-18 18:26:04,853 - DEBUG - Query result format: arrow
2025-01-18 18:26:04,853 - INFO - Number of results in first chunk: 54
2025-01-18 18:26:04,853 - DEBUG - Execute query [queryID: 01b9cdfa-0002-4c7a-0007-08ea001ff58e]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:26:04,853 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:26:04,853 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:26:04,853 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:26:04,854 - DEBUG - Batches read: 0
2025-01-18 18:26:04,854 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:26:04,854 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:26:14,220 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x000001EF81837D90>
2025-01-18 18:26:14,220 - INFO - Querying the server for client info
2025-01-18 18:26:14,220 - DEBUG - cursor
2025-01-18 18:26:14,220 - DEBUG - executing SQL/command
2025-01-18 18:26:14,220 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:26:14,220 - DEBUG - sequence counter: 43
2025-01-18 18:26:14,220 - DEBUG - Request id: 29aff153-fd71-4164-9869-2f2a020ba065
2025-01-18 18:26:14,220 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:26:14,220 - DEBUG - is_file_transfer: True
2025-01-18 18:26:14,220 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:14,220 - DEBUG - _cmd_query
2025-01-18 18:26:14,220 - DEBUG - serialize_to_dict() called
2025-01-18 18:26:14,220 - DEBUG - Cache Entry: (0, 1737246360249052, 0)
2025-01-18 18:26:14,220 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246360249052, 'priority': 0, 'context': {'base64Data': 'COrjJA=='}}]}
2025-01-18 18:26:14,221 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[43], is_file_transfer=[False]
2025-01-18 18:26:14,221 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:26:14,221 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:26:14,222 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:26:14,222 - DEBUG - Request guid: 2c418fee-1c4a-4f0c-bc1e-fe88c4cecfb7
2025-01-18 18:26:14,222 - DEBUG - socket timeout: 60
2025-01-18 18:26:14,310 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=29aff153-fd71-4164-9869-2f2a020ba065&request_guid=2c418fee-1c4a-4f0c-bc1e-fe88c4cecfb7 HTTP/1.1" 200 2619
2025-01-18 18:26:14,310 - DEBUG - SUCCESS
2025-01-18 18:26:14,311 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:26:14,311 - DEBUG - ret[code] = None, after post request
2025-01-18 18:26:14,311 - DEBUG - Query id: 01b9cdfa-0002-4c7a-0007-08ea001ff592
2025-01-18 18:26:14,311 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246369712345, 'priority': 0, 'context': 'COrjJA=='}]}
2025-01-18 18:26:14,311 - DEBUG - Cache Entry: (0, 1737246360249052, 0)
2025-01-18 18:26:14,311 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246369712345, 'priority': 0, 'context': 'COrjJA=='}
2025-01-18 18:26:14,311 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:26:14,311 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:14,311 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:14,311 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:26:14,311 - DEBUG - Cache Entry: (0, 1737246369712345, 0)
2025-01-18 18:26:14,311 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:14,311 - DEBUG - sfqid: 01b9cdfa-0002-4c7a-0007-08ea001ff592
2025-01-18 18:26:14,312 - DEBUG - query execution done
2025-01-18 18:26:14,312 - DEBUG - SUCCESS
2025-01-18 18:26:14,312 - DEBUG - PUT OR GET: False
2025-01-18 18:26:14,312 - DEBUG - Query result format: arrow
2025-01-18 18:26:14,312 - INFO - Number of results in first chunk: 1
2025-01-18 18:26:14,313 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:26:14,313 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:26:14,313 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:26:14,313 - DEBUG - Batches read: 0
2025-01-18 18:26:14,313 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:26:14,313 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:26:14,314 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x000001EF812BB550>, telemetry enabled: True
2025-01-18 18:26:14,315 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:26:14,315 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:26:14,315 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:26:14,315 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:26:14,319 - DEBUG - cursor
2025-01-18 18:26:14,319 - DEBUG - executing SQL/command
2025-01-18 18:26:14,319 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:26:14,320 - DEBUG - sequence counter: 44
2025-01-18 18:26:14,320 - DEBUG - Request id: 2f8247a8-499a-40f0-85a5-036d2d11adfd
2025-01-18 18:26:14,320 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:26:14,320 - DEBUG - is_file_transfer: True
2025-01-18 18:26:14,320 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:14,320 - DEBUG - _cmd_query
2025-01-18 18:26:14,320 - DEBUG - serialize_to_dict() called
2025-01-18 18:26:14,320 - DEBUG - Cache Entry: (0, 1737246369712345, 0)
2025-01-18 18:26:14,320 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246369712345, 'priority': 0, 'context': {'base64Data': 'COrjJA=='}}]}
2025-01-18 18:26:14,320 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[44], is_file_transfer=[False]
2025-01-18 18:26:14,321 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:26:14,321 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:26:14,321 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:26:14,321 - DEBUG - Request guid: b57fab03-783b-4590-9a0d-7795f2af6e90
2025-01-18 18:26:14,321 - DEBUG - socket timeout: 60
2025-01-18 18:26:14,384 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=2f8247a8-499a-40f0-85a5-036d2d11adfd&request_guid=b57fab03-783b-4590-9a0d-7795f2af6e90 HTTP/1.1" 200 1503
2025-01-18 18:26:14,384 - DEBUG - SUCCESS
2025-01-18 18:26:14,384 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:26:14,384 - DEBUG - ret[code] = None, after post request
2025-01-18 18:26:14,384 - DEBUG - Query id: 01b9cdfa-0002-4c77-0007-08ea001fdcd2
2025-01-18 18:26:14,384 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246369785819, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:26:14,384 - DEBUG - Cache Entry: (0, 1737246369712345, 0)
2025-01-18 18:26:14,384 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246369785819, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:26:14,384 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:26:14,385 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:14,385 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:14,385 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:26:14,385 - DEBUG - Cache Entry: (0, 1737246369785819, 0)
2025-01-18 18:26:14,385 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:14,385 - DEBUG - sfqid: 01b9cdfa-0002-4c77-0007-08ea001fdcd2
2025-01-18 18:26:14,385 - DEBUG - query execution done
2025-01-18 18:26:14,385 - DEBUG - SUCCESS
2025-01-18 18:26:14,385 - DEBUG - PUT OR GET: False
2025-01-18 18:26:14,385 - DEBUG - Query result format: arrow
2025-01-18 18:26:14,385 - INFO - Number of results in first chunk: 0
2025-01-18 18:26:14,387 - DEBUG - executing SQL/command
2025-01-18 18:26:14,387 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:26:14,387 - DEBUG - sequence counter: 45
2025-01-18 18:26:14,387 - DEBUG - Request id: 70d018c4-9bd1-4388-8c23-2bb24bd088ab
2025-01-18 18:26:14,387 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:26:14,387 - DEBUG - is_file_transfer: True
2025-01-18 18:26:14,387 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:14,387 - DEBUG - _cmd_query
2025-01-18 18:26:14,387 - DEBUG - serialize_to_dict() called
2025-01-18 18:26:14,387 - DEBUG - Cache Entry: (0, 1737246369785819, 0)
2025-01-18 18:26:14,387 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246369785819, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:26:14,387 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[45], is_file_transfer=[False]
2025-01-18 18:26:14,388 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:26:14,388 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:26:14,388 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:26:14,388 - DEBUG - Request guid: 6acb1186-9951-4b8a-bf5a-b98b4bcd0edc
2025-01-18 18:26:14,388 - DEBUG - socket timeout: 60
2025-01-18 18:26:14,454 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=70d018c4-9bd1-4388-8c23-2bb24bd088ab&request_guid=6acb1186-9951-4b8a-bf5a-b98b4bcd0edc HTTP/1.1" 200 1374
2025-01-18 18:26:14,454 - DEBUG - SUCCESS
2025-01-18 18:26:14,454 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:26:14,454 - DEBUG - ret[code] = None, after post request
2025-01-18 18:26:14,454 - DEBUG - Query id: 01b9cdfa-0002-4d87-0007-08ea001fe59a
2025-01-18 18:26:14,454 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246369852109, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:26:14,454 - DEBUG - Cache Entry: (0, 1737246369785819, 0)
2025-01-18 18:26:14,454 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246369852109, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:26:14,454 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:26:14,454 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:14,454 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:14,455 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:26:14,455 - DEBUG - Cache Entry: (0, 1737246369852109, 0)
2025-01-18 18:26:14,455 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:14,455 - DEBUG - sfqid: 01b9cdfa-0002-4d87-0007-08ea001fe59a
2025-01-18 18:26:14,455 - DEBUG - query execution done
2025-01-18 18:26:14,455 - DEBUG - SUCCESS
2025-01-18 18:26:14,455 - DEBUG - PUT OR GET: False
2025-01-18 18:26:14,455 - DEBUG - Query result format: arrow
2025-01-18 18:26:14,455 - INFO - Number of results in first chunk: 0
2025-01-18 18:26:14,455 - DEBUG - executing SQL/command
2025-01-18 18:26:14,455 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:26:14,455 - DEBUG - sequence counter: 46
2025-01-18 18:26:14,455 - DEBUG - Request id: 98526351-c8a7-4cef-8624-7e099a9d958b
2025-01-18 18:26:14,455 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:26:14,455 - DEBUG - is_file_transfer: True
2025-01-18 18:26:14,455 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:14,455 - DEBUG - _cmd_query
2025-01-18 18:26:14,455 - DEBUG - serialize_to_dict() called
2025-01-18 18:26:14,455 - DEBUG - Cache Entry: (0, 1737246369852109, 0)
2025-01-18 18:26:14,455 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246369852109, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:26:14,455 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[46], is_file_transfer=[False]
2025-01-18 18:26:14,456 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:26:14,456 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:26:14,456 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:26:14,456 - DEBUG - Request guid: 606e150e-9041-4f3c-94a6-7b13725fc3c8
2025-01-18 18:26:14,456 - DEBUG - socket timeout: 60
2025-01-18 18:26:14,533 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=98526351-c8a7-4cef-8624-7e099a9d958b&request_guid=606e150e-9041-4f3c-94a6-7b13725fc3c8 HTTP/1.1" 200 1375
2025-01-18 18:26:14,533 - DEBUG - SUCCESS
2025-01-18 18:26:14,533 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:26:14,533 - DEBUG - ret[code] = None, after post request
2025-01-18 18:26:14,533 - DEBUG - Query id: 01b9cdfa-0002-4c5d-0007-08ea001fcc76
2025-01-18 18:26:14,533 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246369936262, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:26:14,533 - DEBUG - Cache Entry: (0, 1737246369852109, 0)
2025-01-18 18:26:14,533 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246369936262, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:26:14,533 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:26:14,534 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:14,534 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:14,534 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:26:14,534 - DEBUG - Cache Entry: (0, 1737246369936262, 0)
2025-01-18 18:26:14,534 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:14,535 - DEBUG - sfqid: 01b9cdfa-0002-4c5d-0007-08ea001fcc76
2025-01-18 18:26:14,535 - DEBUG - query execution done
2025-01-18 18:26:14,535 - DEBUG - SUCCESS
2025-01-18 18:26:14,535 - DEBUG - PUT OR GET: False
2025-01-18 18:26:14,535 - DEBUG - Query result format: arrow
2025-01-18 18:26:14,535 - INFO - Number of results in first chunk: 0
2025-01-18 18:26:14,536 - DEBUG - executing SQL/command
2025-01-18 18:26:14,536 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:26:14,536 - DEBUG - sequence counter: 47
2025-01-18 18:26:14,536 - DEBUG - Request id: b5f3373c-1d80-4ced-bc30-3ba4cf873651
2025-01-18 18:26:14,536 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:26:14,536 - DEBUG - is_file_transfer: True
2025-01-18 18:26:14,536 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:14,536 - DEBUG - _cmd_query
2025-01-18 18:26:14,536 - DEBUG - serialize_to_dict() called
2025-01-18 18:26:14,536 - DEBUG - Cache Entry: (0, 1737246369936262, 0)
2025-01-18 18:26:14,536 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246369936262, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:26:14,536 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[47], is_file_transfer=[False]
2025-01-18 18:26:14,537 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:26:14,537 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:26:14,537 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:26:14,537 - DEBUG - Request guid: aaa6aab6-0210-46ee-b85c-75e83e44c81b
2025-01-18 18:26:14,537 - DEBUG - socket timeout: 60
2025-01-18 18:26:14,616 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=b5f3373c-1d80-4ced-bc30-3ba4cf873651&request_guid=aaa6aab6-0210-46ee-b85c-75e83e44c81b HTTP/1.1" 200 2618
2025-01-18 18:26:14,617 - DEBUG - SUCCESS
2025-01-18 18:26:14,617 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:26:14,617 - DEBUG - ret[code] = None, after post request
2025-01-18 18:26:14,617 - DEBUG - Query id: 01b9cdfa-0002-4c79-0007-08ea00200112
2025-01-18 18:26:14,617 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246370018202, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:26:14,617 - DEBUG - Cache Entry: (0, 1737246369936262, 0)
2025-01-18 18:26:14,617 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246370018202, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:26:14,618 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:26:14,618 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:14,618 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:14,618 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:26:14,618 - DEBUG - Cache Entry: (0, 1737246370018202, 0)
2025-01-18 18:26:14,618 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:14,618 - DEBUG - sfqid: 01b9cdfa-0002-4c79-0007-08ea00200112
2025-01-18 18:26:14,618 - DEBUG - query execution done
2025-01-18 18:26:14,618 - DEBUG - SUCCESS
2025-01-18 18:26:14,618 - DEBUG - PUT OR GET: False
2025-01-18 18:26:14,618 - DEBUG - Query result format: arrow
2025-01-18 18:26:14,618 - INFO - Number of results in first chunk: 54
2025-01-18 18:26:14,618 - DEBUG - Execute query [queryID: 01b9cdfa-0002-4c79-0007-08ea00200112]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:26:14,618 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:26:14,618 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:26:14,618 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:26:14,618 - DEBUG - Batches read: 0
2025-01-18 18:26:14,618 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:26:14,618 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:26:14,623 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:26:14,624 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:26:15,246 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:26:15,270 - DEBUG - calling method search on class CortexSearchServiceResource after submitting telemetry if enabled
2025-01-18 18:26:15,271 - INFO - performing a HTTP POST call to /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query
2025-01-18 18:26:15,271 - DEBUG - request has path params: {'database': 'DEV_SRC_INGEST', 'schema': 'EPA_PROCESSED', 'service_name': 'CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST'}, query_params: [], header params: {'Accept': 'application/json', 'Content-Type': 'application/json'} and body: QueryRequest(query='tELL ME ABOUT ROUNDUP', columns=['chunk', 'relative_path', 'PRODUCTNAME', 'COMPANYNAME', 'CATEGORY_EPA_TYPE', 'SIGNAL_WORD'], filter=None, limit=10, experimental=None)
2025-01-18 18:26:15,271 - DEBUG - making an http POST call to 'https://gmcpdcz-mt01740.snowflakecomputing.com:443/api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query'
2025-01-18 18:26:15,271 - DEBUG - Resetting dropped connection: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:26:15,727 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query HTTP/1.1" 200 None
2025-01-18 18:26:15,727 - DEBUG - created a RESTResponse with status 200 and length of 18392
2025-01-18 18:26:15,728 - DEBUG - response body: b'{\n  "results" : [ {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\"\\n]",\n    "chunk" : "{\\"content\\":\\"\\\\n# FRQNT PANEL\\\\n\\\\n# Roundup* L&G READY-TO-USE by Moasanto Grass & Weed Killer\\\\n  \\\\n[graphics of weeds dying in 1-7 days]\\\\n* .READY.TO-USE, RBCUIRES NO\\\\n* : SYSTEMIC GRASS AND WEED KILLER FOR SPOT TREATMENT OF UNDESIRABLB VEGETATION\\\\n* . KILLS LARELID E WEEDS AND GRASSES, ROOTS AND ALL\\\\nGUARANTEEDT AESIN NTIH OREAETLACATEN  \\\\nS YTITACTKNGUAWANEEORXOAR KONEKRAE\\\\n* :_DOES NOT HAVE SOIL ACTIVTTY\\\\n+-SUTABLB-FOR- USE-AROUND-FLOWER-BEDS TREES,-SHRUTS FENCES-WALKS -AND-SPOT TRRATMEIT IN LAWNS\\\\nSHRURSAND ORWN RENOXATION (This Taun renovation*phrase no for 24 Oz container sixe.)\\\\n* : THIS 24 OZ BOTTLE CAN BE REFILLED WTIH ONE TABLET OF ROUNDUF QUIK STIK GRASS & WEED KILLER!. SEE STORAGE AND DISPOSAL SECTION FOR MORE INFORMATION. H\\\\nRd thai laST Wlor wg thT p?x3a? Ox ony msR4ng ioTT nmRRan (moved io back panel)NOTICEt- Dwyor-axoumo all soponaibility for mfoty and uce not in macrdan vith axeptablo-raturm at once unopanod (moved to back panel)Keep out ad reach ot chlldren. CAUTION!Soo haak penai for Preenutionary Statemanta and Direstions for Uce.  \\\\nBEST AYAILA&1.  \\\\nBEST AYAILA&1.BPA-Rrg Na S04 320 (moved to back panel)\\\\n## MONSAATO COMRANY\\\\nAGRICULTURAL PRODUCTS-&T LOUIS, MIS$OURI-63167 USA (moved to back panel)  \\\\nACTIVE INGREDIENT:\\\\n|in the form of is isopropylamine k|0.96%|\\\\n| :---: | :---: |\\\\n  \\\\n:*1 ...(delered isems below are moved to back panel)ny non porn(6)CTradamerk of Menseno Company  \\\\nNET 24 fi z (1pi 8m} (delcied)  \\\\n:MONSANTO COMPANY-1993  \\\\nA000.X 1 (print piae",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "SHACKLE HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/SHACKLE_HERBICIDE_524-330.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "Ready Canola (Winter Varieties)|\\\\n|12.4|Roundup Ready Corn 2|\\\\n|12.5|Roundup Ready Gene Cotton|\\\\n|12.6|Roundup Ready Flex Cotton|\\\\n|12.7|Roundup Ready Gene Soybeans|\\\\n|12.8|Roundup Ready Gene Sugar Beets|\\\\n  \\\\n13 13.0 NON-CROP USES AROUND THE FARMSTEAD\\\\n|13.1|General Weed Control and Trim-And-Edge|\\\\n| :---: | :---: |\\\\n|13.2|Greenhouse/Shade house|\\\\n|13.3|Chemical Mowing|\\\\n|13.4|Cut Stumps|\\\\n|13.5|Habitat Management|\\\\n  \\\\n14 14.0 ANNUAL WEEDS RATE SECTION\\\\n|14.1|Annual Weeds -- Tank Mixtures with 2,4-D, Dicamba, or Tordon 22K|\\\\n| :---: | :---: |\\\\n|14.2|Annual Weeds - Hand-Held or Backpack Equipment|\\\\n|14.3|Annual Weeds - Tank Mixtures with Atrazine for Fallow and Reduced Tillage Systems|\\\\n\\\\n* 15 15.0 PERENNIAL WEEDS RATE SECTION\\\\n* 16 16.0 WOODY BRUSH AND TREES RATE SECTION\\\\n* 17 17.0 LIMIT OF WARRANTY AND LIABILITY\\\\n  \\\\n1.0 INGREDIENTS  \\\\nACTIVE INGREDIENT:\\\\n|*Glyphosate, N-(phosphonomethyl)glycine, in the form of its isopropylamine salt .|41.0%|\\\\n| :---: | :---: |\\\\n|OTHER INGREDIENTS:....|59.0%|\\\\n||100.0%|\\\\n*Contains 480 grams per liter or 4 pounds per U.S. gallon of the active ingredient glyphosate, in the form of its isopropylamine salt. Equivalent to 356 grams per liter or 3 pounds per U.S. gallon of the acid, glyphosate.license granted under any non-U.S. patent(s).\\\\n## 2.0 IMPORTANT PHONE NUMBERS\\\\nVersion: 3-Jun-2006Master Label 524-454\\\\n* I. MAIN LABEL FOR FOOD CROP USES\\\\n1. FOR PRODUCT INFORMATION OR ASSISTANCE IN USING THIS PRODUCT, CALL TOLL-FREE,\\\\n1-800-332-3111\\\\n2. IN CASE OF",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "\\\\nSincerely, Vuku KWztxd g James A. Tompkins Product Manager 25 Herbicide Branch Registration Division (7505P)\\\\n# MASTER LABEL FOR EPA REG. NO. 524-454\\\\n  \\\\n[Based on EPA approved Text Stamped Nov. 15, 2001] Registered Brand Names:\\\\n# ROUNDUP ORIGINAL II HERBICIDE ROUNDUP ORIGINAL RT HERBICIDE RASCAL PLUS HERBICIDE MON 8709 HERBICIDE HONCHO PLUS HERBICIDE\\\\n  \\\\nTable of Contents for Master Labei\\\\n||Main Label for Food Crop Uses|Page 2|\\\\n| :---: | :---: | :---: |\\\\n|II.|Main Label for Industrial, Turf, & Ornamental Uses|Page 70|\\\\n|III.|Supplementai Labeling|Page 100|\\\\n**See each label part for more detailed table of contents**Master Label 524-454Version: 3-Jun-2000  \\\\n3/119\\\\n# [INSERT BRAND NAME] Herbicide\\\\n  \\\\nComplete Directions for Use  \\\\nEPA Reg. No. 524-454AVOID CONTACT OF HERBICIDE WITH FOLIAGE, GREEN STEMS, EXPOSED NON-WOODY ROOTS OR FRUIT OF CROPS (EXCEPT AS SPECIFIED FOR INDIVIDUAL ROUNDUP READYD CROPS), DESIRABLE PLANTS AND TREES, BECAUSE SEVERE INJURY OR DESTRUCTION MAY RESULT.Herbicide for Roundup Ready\\\\\\" Crops.Selective broad-spectrum weed control in Roundup Ready crops. Non-selective, broad-spectrum weed control for many agricultural systems and farmsteads.A member of the Roundup Family of Agricultural Herbicides by MonsantoThe President\'s Green Chemistry Award was presented in 1996 to Monsanto for its innovative \\\\\\"zero-waste\\\\\\" process in the manufacture of Roundup Herbicide.Not all products recommended on this label are registered for use in California. Check the",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "Monsanto suppiemental labeling for this product include all applications of this product that can be made onto the specified Roundup Ready crops during the complete cropping season. DO NOT combine these treatment instructions with those for crops in the \\\\\\"ANNUAL AND PERENNIAL CROPS (ALPHABETICAL)\\\\\\" section of this label that do not contain a glyphosate tolerant gene, unless otherwise directed in this product\'s labeling.MONSANTO COMPANY RECOMMENDS USE OF THIS PRODUCT FOR POSTEMERGENCE (IN- CROP) APPLICATION ONLY ON CROPS DESIGNATED AS CONTAINING A GLYPHOSATE TOLERANT GENE. Applying this product to crops that are not designated as Roundup Ready will result in severe crop injury and yield loss. Avoid contact with foliage, green stems, or fruit of crops, or any desirable plants that do not contain a glyphosate tolerant gene, since severe plant injury or destruction will result. The Roundup Ready designation indicates that the crop contains a patented gene that provides tolerance to this product. Information on Roundup Ready crops may be obtained from your seed supplier or Monsanto representative. Roundup Ready crops must be purchased from an authorized licensed seed supplier.NOTE: Roundup Ready seed, and the method of selectively controlling weeds in a Roundup Ready crop by applying glyphosate to the weeds and to the Roundup Ready crop, are protected under several U.S. Patents, including 5,352,605 and 5,633,435. A license to use Roundup Ready seed must be obtained prior to use. Monsanto",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "this product in 5 to 20 gallons of spray solution per acre. Carefully select proper nozzle and spray pressure to avoid spraying a fine mist. For best results with ground application equipment, use flat spray nozzles. Check for even distribution of spray droplets.For aerial applications. All labeled treatments may be made by aerial equipment where appropriate, provided that the applicator complies with the precautions and restrictions specified on this product\'s labeling. in particular in the \\\\\\"Aerial Equipment\\\\\\" section. Apply this product in 3 to 15 gallons of water per acre. See the \\\\\\"APPLICATION EQUIPMENT AND TECHNIQUES\\\\\\" section of this label for procedures to avoid spray drift that may cause injury to any vegetation not intended for treatment. Use of appropriate buffer zones will help prevent injury to adjacent vegetation.For proper stewardship of aerial applications over the top of Roundup Ready crops, Monsanto recommends that growers and applicators read and follow all precautions and procedures contained in the use guide \\\\\\"A Guide to On-Target Aerial Application.\\\\\\" Copies of this publication are available by calling 1-800-ROUNDUP (1-800-768-6387).ATTENTION: AVOID DRIFT. EXTREME CARE MUST BE USED WHEN APPLYING THIS PRODUCT TO PREVENT INJURY TO DESIRABLE PLANTS AND CROPS WHICH DO NOT CONTAIN A GLYPHOSATE TOLERANT GENE.TANK MIXTURE: Tank mixtures with other herbicides, insecticides, fungicides, micronutrients or foliar fertilizers may result in reduced weed control or crop injury",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "General Information\\\\nAVOID CONTACT OF HERBICIDE WITH FOLIAGE, GREEN STEMS, EXPOSED NON-WOODY ROOTS OR FRUIT OF CROPS (EXCEPT AS SPECIFIED FOR INDIVIDUAL ROUNDUP READY CROPS), DESIRABLE PLANTS AND TREES, BECAUSE SEVERE INJURY OR DESTRUCTION MAY RESULT.See \\\\\\"GENERAL INFORMATION\\\\\\" and \\\\\\"MIXING\\\\\\" sections of the label booklet for [INSERT BRAND NAME] for essential product performance information.The Roundup Ready designation indicates that the alfalfa contains a patented gene that provides tolerance to this product. Information on Roundup Ready alfalfa varieties may be obtained from your seed supplier or Monsanto representative. Roundup Ready crop varieties must be purchased from an\'authorized licensed seed supplier.See the \\\\\\"ROUNDUP READY CROPS\\\\\\" section of the [INSERT BRAND NAME] label booklet for general precautionary instructions for use in Roundup Ready crops. Do NOT combine the instructions in this supplemental label with other recommendations listed in the \\\\\\"PASTURE GRASSES, FORAGE LEGUMES, AND RANGELANDS\\\\\\" section of the [INSERT BRAND NAME] label booklet intended for alfalfa varieties that do not contain a glyphosate tolerance gene.\\\\n## DIRECTIONS FOR USE\\\\nThis product will control many troublesome emerged weeds with over-the-top apptications in Roundup Ready alfalfa grown for seed. Over-the-top applications may be made from emergence through the late vegetative stage, and spot treatments may be made from early bud stage through seed harvest.For ground applications with broadcast",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "quarts per acre|\\\\n|Maximum preharvest application rate|1 quart per acre|\\\\nGENERAL PRECAUTIONS/RESTRICTIONS: See the \\\\\\"ROUNDUP READY CROPS\\\\\\" section of this label for general precautionary instructions for use in Roundup Ready crops. See the \\\\\\"GENERAL INFORMATION\\\\\\" section of this label for more information on \\\\\\"Annual Maximum Application Rates.\\\\\\" Refer to individual tank mixture product label for restrictions and precautions, use according to the most restrictive precautionary statements for each product in the tank mixture.\\\\n## Preplant, At-Planting, Preemergence\\\\nUSE INSTRUCTIONS: This product may be applied before, during or after planting.TANK MIXTURES: This product may be tank-mixed with 2,4-D, Banvel or Clarity and applied prior to planting only This product may be tank-mixed with the following products and applied prior to crop emergence. Ensure that the specific product being used in the tank mixture is registered for application prior to emergence of soybeans. Read and follow label directions of all products in the tank mixture.[Insert active ingredient(s) or brand name of product(s) containing the following active ingredients that, at the time of printing, are registered for use preplant, at-planting and/or preemergence to soybeans: alachlor, atrazine, carfentrazone-ethyl, chlorimuron ethyl, clethodim, clomazone, cloransulam-methyl, dimethenamid, dimethenamid-p, fenoxyprop, fluazifop-p-butyl, flufenacet, flumetsulam, flumiclorac pentyl ester, flumioxazin, fomesafen, imazaquin,",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "[INSERT BRAND NAME] will control labeled annual grasses and broadleaf weeds in Roundup Ready Flex cotton. To maximize yield potential, spray cotton early to elininate competing weeds. Many perennial weeds will be controlled or suppressed with one or more applications of this product. In general, an initial application of 1 quart per acre on 1 to 3 inch tall annual grass and broadleaf weeds is recommended. This product may be applied by ground application equipment at rates up to 2 quarts per acre per application postemergence to Roundup Ready Flex cotton. In addition tobroadcast applications, post-directed equipment may be used to achieve weed coverage.NOTE: For specific rates of application and instructions, refer to the \\\\\\"ANNUAL\\\\\\" and \\\\\\"PERENNIAL WEEDS RATE TABLES\\\\\\" in the labei book}et for [INSERT BRAND NAME].PRECAUTIONS, RESTRICTIONS: The maximum rate for any single in-crop application of this product is 2 quarts per acre made using ground application equipment. In-crop application rates above 1 quart per acre made alone, or with the addition of other crop chemical products containing surfactant, may cause a crop response, including leaf speckling or leaf necrosis. Do not exceed a maximum rate of 3 pints per acre of this product when making applications by air. Between layby and 60 percent open bolls, the maximum combined total rate of this product that may be applied is 2 quarts per acre. The maximum combined total of all applications made from crop emergence to 60 percent open",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "SEQUENTIAL APPLICATION OF THIS PRODUCT WILL BE REQUIRED TO CONTROL NEW FLUSHES OF WEEDS IN THE ROUNDUP READY SOYBEAN CROP. To control giant ragweed, it is recommended that 1 quart per acre of this product be applied when the weed is 8 to 12 inches tall to increase control and possibly avoid the need for a sequential application.Version: 3-Jun-2006Master Label 524-454\\\\n## 1. MAIN LABEL FOR FOOD CROP USES\\\\nTANK MIXTURES: This product may be tank-mixed with the following products and applied postemergence (in-crop) over the top of Roundup Ready soybeans. Ensure that the specific product being used in the tank mixture is registered for application postemergence (in-crop) to soybeans. Read and follow label directions of all products in the tank mixture.[Insert active ingredient(s) or brand name of product(s) containing the following active ingredients that, at the time of printing, are registered for use postemergence (in-crop) to soybeans: acifluorfen, bentazonchlorimuron ethyl, clethodim, imazethapyr, cloransulam-methyl, fenoxyprop, fluazifop-p- butyl, flumiclorac pentyl ester, fomesafen, imazamox, imazethapyr, lactofen, pendimethalin, quizalofop P-ethyl. sethoxydem, thifensulfuron-methyl.Arrow, Assure II, Basagran, Classic, Cobra, Extreme, FirstRate, Flexstar, Fusilade DX, Fusion, Harmony GT XP, Poast, Poast Plus, Pursuit, Pursuit Plus, Raptor, Reflex, Select, Select MAX, Synchrony STS, Targa, Ultra Blazer.]PRECAUTIONS, RESTRICTIONS: The combined total application from crop emergence",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "weeds in a Roundup Ready crop by applying glyphosate to the weeds and to the Roundup Ready crop, are protected under several U.S. Patents, including 5,352,605 and 5,633,435. A license to use Roundup Ready seed must be obtained prior to use. Monsanto retains ownership of the gene and process technologies, and the Purchaser of the seed receives the right to use the licensed genes and technologies subject to the limited use license conditions. Seed containing a Roundup Ready trait cannot be used for research and demonstration, reverse engineering or in connection with herbicide registration. Progeny seed containing the Roundup Ready trait cannot be saved for replanting or transferred to others for replanting. Contact your Authorized Monsanto Retailer for information on obtaining a limited use iicense.Sprayer Preparation: It is important that sprayer and mixing equipment be clean and free of pesticide residue before making applications of this product. Follow the cleaning procedures specified on the label of the product(s) previously used. THOROUGHLY CLEAN THE SPRAY TANK AND ALL LINES AND FILTERS TO ELIMINATE POTENTIAL CONTAMINATION FROM OTHER HERBICIDES PRIOR TO MIXING AND APPLYING THIS PRODUCT.For ground broadcast applications. Apply this product in 5 to 20 gallons of spray solution per acre. Carefully select proper nozzle and spray pressure to avoid spraying a fine mist. For best results with ground application equipment, use flat spray nozzles. Check for even distribution of spray",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  } ],\n  "request_id" : "a0bcd315-4327-40df-8cba-30af6d677a1d"\n}'
2025-01-18 18:26:15,731 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:26:15,732 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:26:16,319 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:26:30,170 - DEBUG - executing SQL/command
2025-01-18 18:26:30,170 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...]
2025-01-18 18:26:30,170 - DEBUG - sequence counter: 48
2025-01-18 18:26:30,170 - DEBUG - Request id: 12d5c80d-dd08-4dd0-9bc9-03caae4c07ad
2025-01-18 18:26:30,170 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...]
2025-01-18 18:26:30,170 - DEBUG - is_file_transfer: True
2025-01-18 18:26:30,170 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:30,170 - DEBUG - _cmd_query
2025-01-18 18:26:30,170 - DEBUG - serialize_to_dict() called
2025-01-18 18:26:30,170 - DEBUG - Cache Entry: (0, 1737246370018202, 0)
2025-01-18 18:26:30,171 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246370018202, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:26:30,171 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...], sequence_id=[48], is_file_transfer=[False]
2025-01-18 18:26:30,171 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:26:30,171 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:26:30,171 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:26:30,171 - DEBUG - Request guid: ea0eea1f-2213-41af-8d88-031c374af441
2025-01-18 18:26:30,171 - DEBUG - socket timeout: 60
2025-01-18 18:26:30,545 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=12d5c80d-dd08-4dd0-9bc9-03caae4c07ad&request_guid=ea0eea1f-2213-41af-8d88-031c374af441 HTTP/1.1" 200 3515
2025-01-18 18:26:30,545 - DEBUG - SUCCESS
2025-01-18 18:26:30,546 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:26:30,546 - DEBUG - ret[code] = None, after post request
2025-01-18 18:26:30,546 - DEBUG - Query id: 01b9cdfa-0002-4c77-0007-08ea001fdcd6
2025-01-18 18:26:30,546 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246385916940, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:26:30,546 - DEBUG - Cache Entry: (0, 1737246370018202, 0)
2025-01-18 18:26:30,546 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246385916940, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:26:30,546 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:26:30,546 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:30,546 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:30,546 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:26:30,546 - DEBUG - Cache Entry: (0, 1737246385916940, 0)
2025-01-18 18:26:30,546 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:30,546 - DEBUG - sfqid: 01b9cdfa-0002-4c77-0007-08ea001fdcd6
2025-01-18 18:26:30,546 - DEBUG - query execution done
2025-01-18 18:26:30,546 - DEBUG - SUCCESS
2025-01-18 18:26:30,546 - DEBUG - PUT OR GET: False
2025-01-18 18:26:30,546 - DEBUG - Query result format: arrow
2025-01-18 18:26:30,546 - INFO - Number of results in first chunk: 54
2025-01-18 18:26:30,546 - DEBUG - Execute query [queryID: 01b9cdfa-0002-4c77-0007-08ea001fdcd6] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:26:30,547 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:26:30,547 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:26:30,554 - DEBUG - Batches read: 1
2025-01-18 18:26:30,568 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:26:30,573 - DEBUG - executing SQL/command
2025-01-18 18:26:30,573 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACK...]
2025-01-18 18:26:30,573 - DEBUG - sequence counter: 49
2025-01-18 18:26:30,574 - DEBUG - Request id: 2f5ee36b-afe0-4c4f-a61f-0ec039c66088
2025-01-18 18:26:30,574 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACK...]
2025-01-18 18:26:30,574 - DEBUG - is_file_transfer: True
2025-01-18 18:26:30,574 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:30,574 - DEBUG - _cmd_query
2025-01-18 18:26:30,574 - DEBUG - serialize_to_dict() called
2025-01-18 18:26:30,574 - DEBUG - Cache Entry: (0, 1737246385916940, 0)
2025-01-18 18:26:30,574 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246385916940, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:26:30,574 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACK...], sequence_id=[49], is_file_transfer=[False]
2025-01-18 18:26:30,576 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:26:30,577 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:26:30,577 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:26:30,577 - DEBUG - Request guid: 8f1406b8-1734-4b81-8d55-efe80b26afb4
2025-01-18 18:26:30,577 - DEBUG - socket timeout: 60
2025-01-18 18:26:30,889 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=2f5ee36b-afe0-4c4f-a61f-0ec039c66088&request_guid=8f1406b8-1734-4b81-8d55-efe80b26afb4 HTTP/1.1" 200 3465
2025-01-18 18:26:30,889 - DEBUG - SUCCESS
2025-01-18 18:26:30,889 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:26:30,890 - DEBUG - ret[code] = None, after post request
2025-01-18 18:26:30,890 - DEBUG - Query id: 01b9cdfa-0002-4c78-0007-08ea00201092
2025-01-18 18:26:30,890 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246386292402, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:26:30,890 - DEBUG - Cache Entry: (0, 1737246385916940, 0)
2025-01-18 18:26:30,890 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246386292402, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:26:30,890 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:26:30,890 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:30,890 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:26:30,890 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:26:30,890 - DEBUG - Cache Entry: (0, 1737246386292402, 0)
2025-01-18 18:26:30,890 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:26:30,890 - DEBUG - sfqid: 01b9cdfa-0002-4c78-0007-08ea00201092
2025-01-18 18:26:30,890 - DEBUG - query execution done
2025-01-18 18:26:30,890 - DEBUG - SUCCESS
2025-01-18 18:26:30,890 - DEBUG - PUT OR GET: False
2025-01-18 18:26:30,890 - DEBUG - Query result format: arrow
2025-01-18 18:26:30,890 - INFO - Number of results in first chunk: 54
2025-01-18 18:26:30,890 - DEBUG - Execute query [queryID: 01b9cdfa-0002-4c78-0007-08ea00201092] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACKLE_HERBICIDE_524-330.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:26:30,890 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:26:30,891 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:26:30,891 - DEBUG - Batches read: 1
2025-01-18 18:26:30,891 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:30:16,676 - DEBUG - reading configuration file from C:\Users\ajjay\AppData\Local\snowflake\config.toml
2025-01-18 18:30:16,678 - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.10.11, Platform: Windows-10-10.0.22635-SP0
2025-01-18 18:30:16,678 - DEBUG - connect
2025-01-18 18:30:16,678 - DEBUG - __config
2025-01-18 18:30:16,678 - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:30:16,678 - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:30:16,678 - DEBUG - use_numpy: False
2025-01-18 18:30:16,679 - DEBUG - initialized
2025-01-18 18:30:16,679 - DEBUG - REST API object was created: gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:30:16,748 - DEBUG - Public key fingerprint is SHA256:MMhnSja/3AZz/s91ePEYdo5p27RfYwIdt7+BsyWAYGg=
2025-01-18 18:30:16,749 - DEBUG - authenticate
2025-01-18 18:30:16,749 - DEBUG - account=gmcpdcz-mt01740, user=preciousjunk, database=DEV_SRC_INGEST, schema=EPA_PROCESSED, warehouse=app_wh, role=app_role, request_id=ca8deda1-3bcb-4cf2-9fc8-fef969bf3b61
2025-01-18 18:30:16,750 - DEBUG - body['data']: {'CLIENT_APP_ID': 'PythonConnector', 'CLIENT_APP_VERSION': '3.12.4', 'SVN_REVISION': None, 'ACCOUNT_NAME': 'gmcpdcz-mt01740', 'LOGIN_NAME': 'preciousjunk', 'CLIENT_ENVIRONMENT': {'APPLICATION': 'streamlit', 'OS': 'Windows', 'OS_VERSION': 'Windows-10-10.0.22635-SP0', 'PYTHON_VERSION': '3.10.11', 'PYTHON_RUNTIME': 'CPython', 'PYTHON_COMPILER': 'MSC v.1929 64 bit (AMD64)', 'OCSP_MODE': 'FAIL_OPEN', 'TRACING': 10, 'LOGIN_TIMEOUT': None, 'NETWORK_TIMEOUT': None, 'SOCKET_TIMEOUT': None}, 'AUTHENTICATOR': 'SNOWFLAKE_JWT', 'TOKEN': '******', 'SESSION_PARAMETERS': {'CLIENT_PREFETCH_THREADS': 4}}
2025-01-18 18:30:16,750 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 18:30:16,750 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 18:30:16,750 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:30:16,750 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:30:16,750 - DEBUG - Request guid: 783f4046-3ecf-48b5-97e0-e72b9ab5bad3
2025-01-18 18:30:16,750 - DEBUG - socket timeout: 10
2025-01-18 18:30:16,752 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:30:17,164 - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None
2025-01-18 18:30:17,188 - DEBUG - cache directory: C:\Users\ajjay\AppData\Local\Snowflake\Caches
2025-01-18 18:30:17,190 - DEBUG - ocsp_response_cache_uri: file://C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 18:30:17,190 - DEBUG - OCSP_VALIDATION_CACHE size: 310
2025-01-18 18:30:17,190 - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 18:30:17,190 - DEBUG - OCSP dynamic cache server RETRY URL: None
2025-01-18 18:30:17,190 - DEBUG - validating certificate: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:30:17,190 - DEBUG - # of certificates: 4
2025-01-18 18:30:17,191 - DEBUG - subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:30:17,191 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:30:17,191 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:30:17,192 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:30:17,193 - DEBUG - reading certificate bundle: D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\certifi\cacert.pem
2025-01-18 18:30:17,205 - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:30:17,206 - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])
2025-01-18 18:30:17,208 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:30:17,208 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:30:17,209 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:30:17,210 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:30:17,211 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 18:30:17,211 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:30:17,213 - DEBUG - ok
2025-01-18 18:30:17,389 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /session/v1/login-request?request_id=ca8deda1-3bcb-4cf2-9fc8-fef969bf3b61&databaseName=DEV_SRC_INGEST&schemaName=EPA_PROCESSED&warehouse=app_wh&roleName=app_role&request_guid=783f4046-3ecf-48b5-97e0-e72b9ab5bad3 HTTP/1.1" 200 1781
2025-01-18 18:30:17,390 - DEBUG - SUCCESS
2025-01-18 18:30:17,391 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:30:17,391 - DEBUG - ret[code] = None, after post request
2025-01-18 18:30:17,391 - DEBUG - completed authentication
2025-01-18 18:30:17,391 - DEBUG - token = ******
2025-01-18 18:30:17,391 - DEBUG - master_token = ******
2025-01-18 18:30:17,391 - DEBUG - id_token = NULL
2025-01-18 18:30:17,391 - DEBUG - mfa_token = NULL
2025-01-18 18:30:17,392 - DEBUG - cursor
2025-01-18 18:30:17,392 - INFO - Snowpark Session information: 
"version" : 1.26.0,
"python.version" : 3.10.11,
"python.connector.version" : 3.12.4,
"python.connector.session.id" : 1980125954386758,
"os.name" : Windows

2025-01-18 18:30:17,394 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000243D8B54370>
2025-01-18 18:30:17,394 - DEBUG - created a new SFPoolManager
2025-01-18 18:30:17,394 - INFO - Querying the server for client info
2025-01-18 18:30:17,394 - DEBUG - cursor
2025-01-18 18:30:17,394 - DEBUG - executing SQL/command
2025-01-18 18:30:17,394 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:30:17,394 - DEBUG - sequence counter: 1
2025-01-18 18:30:17,394 - DEBUG - Request id: 44e8bd0f-e38c-4d6f-b47d-6e6d45ad12d7
2025-01-18 18:30:17,394 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:30:17,394 - DEBUG - is_file_transfer: True
2025-01-18 18:30:17,395 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:17,395 - DEBUG - _cmd_query
2025-01-18 18:30:17,395 - DEBUG - serialize_to_dict() called
2025-01-18 18:30:17,395 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[1], is_file_transfer=[False]
2025-01-18 18:30:17,396 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:30:17,397 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:30:17,397 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:30:17,397 - DEBUG - Request guid: 98111a1c-82a5-4c89-b11d-e03665dd02ad
2025-01-18 18:30:17,397 - DEBUG - socket timeout: 60
2025-01-18 18:30:17,538 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=44e8bd0f-e38c-4d6f-b47d-6e6d45ad12d7&request_guid=98111a1c-82a5-4c89-b11d-e03665dd02ad HTTP/1.1" 200 2620
2025-01-18 18:30:17,539 - DEBUG - SUCCESS
2025-01-18 18:30:17,539 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:30:17,539 - DEBUG - ret[code] = None, after post request
2025-01-18 18:30:17,539 - DEBUG - Query id: 01b9cdfe-0002-4c5d-0007-08ea001fccce
2025-01-18 18:30:17,539 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246612917043, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:30:17,539 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246612917043, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:30:17,539 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:30:17,539 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:17,539 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:17,539 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:30:17,539 - DEBUG - Cache Entry: (0, 1737246612917043, 0)
2025-01-18 18:30:17,539 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:17,540 - DEBUG - sfqid: 01b9cdfe-0002-4c5d-0007-08ea001fccce
2025-01-18 18:30:17,540 - DEBUG - query execution done
2025-01-18 18:30:17,540 - DEBUG - SUCCESS
2025-01-18 18:30:17,540 - DEBUG - PUT OR GET: False
2025-01-18 18:30:17,540 - DEBUG - Query result format: arrow
2025-01-18 18:30:17,540 - INFO - Number of results in first chunk: 1
2025-01-18 18:30:17,540 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:30:17,540 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:30:17,540 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:30:17,540 - DEBUG - Batches read: 0
2025-01-18 18:30:17,540 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:30:17,540 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:30:17,541 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000243D8B560B0>, telemetry enabled: True
2025-01-18 18:30:17,541 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:30:17,541 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:30:17,541 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:30:17,541 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:30:17,551 - DEBUG - executing SQL/command
2025-01-18 18:30:17,551 - DEBUG - query: [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:30:17,551 - DEBUG - sequence counter: 2
2025-01-18 18:30:17,551 - DEBUG - Request id: 324f0315-49fe-47d8-915d-359be57f3c1c
2025-01-18 18:30:17,551 - DEBUG - running query [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:30:17,551 - DEBUG - is_file_transfer: True
2025-01-18 18:30:17,551 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:17,551 - DEBUG - _cmd_query
2025-01-18 18:30:17,551 - DEBUG - serialize_to_dict() called
2025-01-18 18:30:17,551 - DEBUG - Cache Entry: (0, 1737246612917043, 0)
2025-01-18 18:30:17,551 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246612917043, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:30:17,551 - DEBUG - sql=[SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...], sequence_id=[2], is_file_transfer=[False]
2025-01-18 18:30:17,552 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:30:17,552 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:30:17,552 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:30:17,552 - DEBUG - Request guid: 8fdb7a82-dfb8-42ce-a9ba-9e7fea7c3a9d
2025-01-18 18:30:17,552 - DEBUG - socket timeout: 60
2025-01-18 18:30:17,718 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=324f0315-49fe-47d8-915d-359be57f3c1c&request_guid=8fdb7a82-dfb8-42ce-a9ba-9e7fea7c3a9d HTTP/1.1" 200 2117
2025-01-18 18:30:17,718 - DEBUG - SUCCESS
2025-01-18 18:30:17,719 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:30:17,719 - DEBUG - ret[code] = None, after post request
2025-01-18 18:30:17,719 - DEBUG - Query id: 01b9cdfe-0002-4c78-0007-08ea002010c2
2025-01-18 18:30:17,719 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246613085376, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:30:17,719 - DEBUG - Cache Entry: (0, 1737246612917043, 0)
2025-01-18 18:30:17,719 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246613085376, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:30:17,719 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:30:17,719 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:17,719 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:17,719 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:30:17,719 - DEBUG - Cache Entry: (0, 1737246613085376, 0)
2025-01-18 18:30:17,719 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:17,720 - DEBUG - sfqid: 01b9cdfe-0002-4c78-0007-08ea002010c2
2025-01-18 18:30:17,720 - DEBUG - query execution done
2025-01-18 18:30:17,720 - DEBUG - SUCCESS
2025-01-18 18:30:17,720 - DEBUG - PUT OR GET: False
2025-01-18 18:30:17,720 - DEBUG - Query result format: arrow
2025-01-18 18:30:17,720 - INFO - Number of results in first chunk: 1
2025-01-18 18:30:17,720 - DEBUG - Execute query [queryID: 01b9cdfe-0002-4c78-0007-08ea002010c2] 
        SELECT LOCATION, LATITUDE, LONGITUDE
        FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS 
        WHERE USER_ID = 'default_user'
        
2025-01-18 18:30:17,720 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:30:17,720 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:30:17,720 - DEBUG - Arrow chunk info: batchCount 1, columnCount 3, use_numpy: 0
2025-01-18 18:30:17,720 - DEBUG - Batches read: 0
2025-01-18 18:30:17,720 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:30:17,720 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:30:17,727 - DEBUG - executing SQL/command
2025-01-18 18:30:17,727 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:30:17,727 - DEBUG - sequence counter: 3
2025-01-18 18:30:17,727 - DEBUG - Request id: 2febab73-e22f-419b-a06c-f6d7eae36968
2025-01-18 18:30:17,727 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:30:17,727 - DEBUG - is_file_transfer: True
2025-01-18 18:30:17,727 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:17,727 - DEBUG - _cmd_query
2025-01-18 18:30:17,727 - DEBUG - serialize_to_dict() called
2025-01-18 18:30:17,727 - DEBUG - Cache Entry: (0, 1737246613085376, 0)
2025-01-18 18:30:17,727 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246613085376, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:30:17,727 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[3], is_file_transfer=[False]
2025-01-18 18:30:17,728 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:30:17,728 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:30:17,728 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:30:17,728 - DEBUG - Request guid: 605ecd13-fc43-4582-b128-cb3494835211
2025-01-18 18:30:17,729 - DEBUG - socket timeout: 60
2025-01-18 18:30:17,796 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=2febab73-e22f-419b-a06c-f6d7eae36968&request_guid=605ecd13-fc43-4582-b128-cb3494835211 HTTP/1.1" 200 1506
2025-01-18 18:30:17,796 - DEBUG - SUCCESS
2025-01-18 18:30:17,797 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:30:17,797 - DEBUG - ret[code] = None, after post request
2025-01-18 18:30:17,797 - DEBUG - Query id: 01b9cdfe-0002-4c5d-0007-08ea001fccd2
2025-01-18 18:30:17,797 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246613194083, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:30:17,797 - DEBUG - Cache Entry: (0, 1737246613085376, 0)
2025-01-18 18:30:17,797 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246613194083, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:30:17,797 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:30:17,797 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:17,797 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:17,797 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:30:17,797 - DEBUG - Cache Entry: (0, 1737246613194083, 0)
2025-01-18 18:30:17,797 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:17,797 - DEBUG - sfqid: 01b9cdfe-0002-4c5d-0007-08ea001fccd2
2025-01-18 18:30:17,797 - DEBUG - query execution done
2025-01-18 18:30:17,798 - DEBUG - SUCCESS
2025-01-18 18:30:17,798 - DEBUG - PUT OR GET: False
2025-01-18 18:30:17,798 - DEBUG - Query result format: arrow
2025-01-18 18:30:17,798 - INFO - Number of results in first chunk: 0
2025-01-18 18:30:17,801 - DEBUG - executing SQL/command
2025-01-18 18:30:17,801 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:30:17,801 - DEBUG - sequence counter: 4
2025-01-18 18:30:17,801 - DEBUG - Request id: 8a8f3195-3db4-4580-8f41-182d94069b2e
2025-01-18 18:30:17,801 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:30:17,801 - DEBUG - is_file_transfer: True
2025-01-18 18:30:17,801 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:17,801 - DEBUG - _cmd_query
2025-01-18 18:30:17,801 - DEBUG - serialize_to_dict() called
2025-01-18 18:30:17,801 - DEBUG - Cache Entry: (0, 1737246613194083, 0)
2025-01-18 18:30:17,801 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246613194083, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:30:17,801 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[4], is_file_transfer=[False]
2025-01-18 18:30:17,802 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:30:17,802 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:30:17,802 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:30:17,802 - DEBUG - Request guid: c3af2789-2b78-47e1-a8f4-c449aa57d684
2025-01-18 18:30:17,802 - DEBUG - socket timeout: 60
2025-01-18 18:30:17,887 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=8a8f3195-3db4-4580-8f41-182d94069b2e&request_guid=c3af2789-2b78-47e1-a8f4-c449aa57d684 HTTP/1.1" 200 1374
2025-01-18 18:30:17,888 - DEBUG - SUCCESS
2025-01-18 18:30:17,888 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:30:17,888 - DEBUG - ret[code] = None, after post request
2025-01-18 18:30:17,888 - DEBUG - Query id: 01b9cdfe-0002-4c79-0007-08ea0020013a
2025-01-18 18:30:17,888 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246613284579, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:30:17,888 - DEBUG - Cache Entry: (0, 1737246613194083, 0)
2025-01-18 18:30:17,888 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246613284579, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:30:17,888 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:30:17,888 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:17,888 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:17,888 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:30:17,889 - DEBUG - Cache Entry: (0, 1737246613284579, 0)
2025-01-18 18:30:17,889 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:17,889 - DEBUG - sfqid: 01b9cdfe-0002-4c79-0007-08ea0020013a
2025-01-18 18:30:17,889 - DEBUG - query execution done
2025-01-18 18:30:17,889 - DEBUG - SUCCESS
2025-01-18 18:30:17,889 - DEBUG - PUT OR GET: False
2025-01-18 18:30:17,889 - DEBUG - Query result format: arrow
2025-01-18 18:30:17,889 - INFO - Number of results in first chunk: 0
2025-01-18 18:30:17,890 - DEBUG - executing SQL/command
2025-01-18 18:30:17,890 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:30:17,890 - DEBUG - sequence counter: 5
2025-01-18 18:30:17,890 - DEBUG - Request id: ea3866d2-253a-4ced-a07a-dd8eafde76d6
2025-01-18 18:30:17,890 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:30:17,890 - DEBUG - is_file_transfer: True
2025-01-18 18:30:17,890 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:17,890 - DEBUG - _cmd_query
2025-01-18 18:30:17,890 - DEBUG - serialize_to_dict() called
2025-01-18 18:30:17,890 - DEBUG - Cache Entry: (0, 1737246613284579, 0)
2025-01-18 18:30:17,890 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246613284579, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:30:17,890 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[5], is_file_transfer=[False]
2025-01-18 18:30:17,891 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:30:17,891 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:30:17,891 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:30:17,891 - DEBUG - Request guid: 629359e3-aaf6-4e74-91c0-93eeab0596b5
2025-01-18 18:30:17,891 - DEBUG - socket timeout: 60
2025-01-18 18:30:17,976 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=ea3866d2-253a-4ced-a07a-dd8eafde76d6&request_guid=629359e3-aaf6-4e74-91c0-93eeab0596b5 HTTP/1.1" 200 1374
2025-01-18 18:30:17,977 - DEBUG - SUCCESS
2025-01-18 18:30:17,977 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:30:17,977 - DEBUG - ret[code] = None, after post request
2025-01-18 18:30:17,977 - DEBUG - Query id: 01b9cdfe-0002-4c7a-0007-08ea001ff632
2025-01-18 18:30:17,977 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246613380097, 'priority': 0, 'context': 'COrjJA=='}]}
2025-01-18 18:30:17,977 - DEBUG - Cache Entry: (0, 1737246613284579, 0)
2025-01-18 18:30:17,977 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246613380097, 'priority': 0, 'context': 'COrjJA=='}
2025-01-18 18:30:17,978 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:30:17,978 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:17,978 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:17,978 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:30:17,978 - DEBUG - Cache Entry: (0, 1737246613380097, 0)
2025-01-18 18:30:17,978 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:17,978 - DEBUG - sfqid: 01b9cdfe-0002-4c7a-0007-08ea001ff632
2025-01-18 18:30:17,978 - DEBUG - query execution done
2025-01-18 18:30:17,978 - DEBUG - SUCCESS
2025-01-18 18:30:17,978 - DEBUG - PUT OR GET: False
2025-01-18 18:30:17,978 - DEBUG - Query result format: arrow
2025-01-18 18:30:17,978 - INFO - Number of results in first chunk: 0
2025-01-18 18:30:17,979 - DEBUG - executing SQL/command
2025-01-18 18:30:17,979 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:30:17,979 - DEBUG - sequence counter: 6
2025-01-18 18:30:17,979 - DEBUG - Request id: 5d61361d-4de2-4ef2-a893-686362fc3c43
2025-01-18 18:30:17,979 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:30:17,979 - DEBUG - is_file_transfer: True
2025-01-18 18:30:17,979 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:17,979 - DEBUG - _cmd_query
2025-01-18 18:30:17,979 - DEBUG - serialize_to_dict() called
2025-01-18 18:30:17,979 - DEBUG - Cache Entry: (0, 1737246613380097, 0)
2025-01-18 18:30:17,979 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246613380097, 'priority': 0, 'context': {'base64Data': 'COrjJA=='}}]}
2025-01-18 18:30:17,980 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[6], is_file_transfer=[False]
2025-01-18 18:30:17,981 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:30:17,981 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:30:17,981 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:30:17,981 - DEBUG - Request guid: d5d5a1fb-9ef0-4b25-aef3-8532620e6852
2025-01-18 18:30:17,981 - DEBUG - socket timeout: 60
2025-01-18 18:30:18,081 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=5d61361d-4de2-4ef2-a893-686362fc3c43&request_guid=d5d5a1fb-9ef0-4b25-aef3-8532620e6852 HTTP/1.1" 200 2618
2025-01-18 18:30:18,082 - DEBUG - SUCCESS
2025-01-18 18:30:18,082 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:30:18,082 - DEBUG - ret[code] = None, after post request
2025-01-18 18:30:18,082 - DEBUG - Query id: 01b9cdfe-0002-4c79-0007-08ea0020013e
2025-01-18 18:30:18,082 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246613482578, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:30:18,082 - DEBUG - Cache Entry: (0, 1737246613380097, 0)
2025-01-18 18:30:18,082 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246613482578, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:30:18,082 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:30:18,082 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:18,082 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:18,082 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:30:18,082 - DEBUG - Cache Entry: (0, 1737246613482578, 0)
2025-01-18 18:30:18,082 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:18,082 - DEBUG - sfqid: 01b9cdfe-0002-4c79-0007-08ea0020013e
2025-01-18 18:30:18,082 - DEBUG - query execution done
2025-01-18 18:30:18,082 - DEBUG - SUCCESS
2025-01-18 18:30:18,082 - DEBUG - PUT OR GET: False
2025-01-18 18:30:18,082 - DEBUG - Query result format: arrow
2025-01-18 18:30:18,082 - INFO - Number of results in first chunk: 54
2025-01-18 18:30:18,082 - DEBUG - Execute query [queryID: 01b9cdfe-0002-4c79-0007-08ea0020013e]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:30:18,082 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:30:18,082 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:30:18,082 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:30:18,082 - DEBUG - Batches read: 0
2025-01-18 18:30:18,082 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:30:18,082 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:30:22,843 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000243D8B54370>
2025-01-18 18:30:22,843 - INFO - Querying the server for client info
2025-01-18 18:30:22,844 - DEBUG - cursor
2025-01-18 18:30:22,844 - DEBUG - executing SQL/command
2025-01-18 18:30:22,844 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:30:22,844 - DEBUG - sequence counter: 7
2025-01-18 18:30:22,844 - DEBUG - Request id: 672d730f-35c0-4b54-a7cf-a011dce528db
2025-01-18 18:30:22,844 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:30:22,844 - DEBUG - is_file_transfer: True
2025-01-18 18:30:22,844 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:22,844 - DEBUG - _cmd_query
2025-01-18 18:30:22,845 - DEBUG - serialize_to_dict() called
2025-01-18 18:30:22,845 - DEBUG - Cache Entry: (0, 1737246613482578, 0)
2025-01-18 18:30:22,845 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246613482578, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:30:22,845 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[7], is_file_transfer=[False]
2025-01-18 18:30:22,846 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:30:22,846 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:30:22,846 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:30:22,846 - DEBUG - Request guid: 1ab69fb6-ffdc-4408-8bf2-af8acfe579d6
2025-01-18 18:30:22,846 - DEBUG - socket timeout: 60
2025-01-18 18:30:22,956 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=672d730f-35c0-4b54-a7cf-a011dce528db&request_guid=1ab69fb6-ffdc-4408-8bf2-af8acfe579d6 HTTP/1.1" 200 2618
2025-01-18 18:30:22,956 - DEBUG - SUCCESS
2025-01-18 18:30:22,956 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:30:22,956 - DEBUG - ret[code] = None, after post request
2025-01-18 18:30:22,956 - DEBUG - Query id: 01b9cdfe-0002-4c78-0007-08ea002010c6
2025-01-18 18:30:22,956 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246618349067, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:30:22,957 - DEBUG - Cache Entry: (0, 1737246613482578, 0)
2025-01-18 18:30:22,957 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246618349067, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:30:22,957 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:30:22,957 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:22,957 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:22,957 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:30:22,957 - DEBUG - Cache Entry: (0, 1737246618349067, 0)
2025-01-18 18:30:22,957 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:22,957 - DEBUG - sfqid: 01b9cdfe-0002-4c78-0007-08ea002010c6
2025-01-18 18:30:22,957 - DEBUG - query execution done
2025-01-18 18:30:22,957 - DEBUG - SUCCESS
2025-01-18 18:30:22,957 - DEBUG - PUT OR GET: False
2025-01-18 18:30:22,957 - DEBUG - Query result format: arrow
2025-01-18 18:30:22,957 - INFO - Number of results in first chunk: 1
2025-01-18 18:30:22,957 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:30:22,957 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:30:22,957 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:30:22,957 - DEBUG - Batches read: 0
2025-01-18 18:30:22,958 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:30:22,958 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:30:22,958 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000243D8B560B0>, telemetry enabled: True
2025-01-18 18:30:22,958 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:30:22,958 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:30:22,958 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:30:22,958 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:30:22,962 - DEBUG - cursor
2025-01-18 18:30:22,962 - DEBUG - executing SQL/command
2025-01-18 18:30:22,962 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:30:22,962 - DEBUG - sequence counter: 8
2025-01-18 18:30:22,962 - DEBUG - Request id: 8de7bf73-c526-495d-9cee-aa9061db277a
2025-01-18 18:30:22,962 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:30:22,962 - DEBUG - is_file_transfer: True
2025-01-18 18:30:22,962 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:22,962 - DEBUG - _cmd_query
2025-01-18 18:30:22,962 - DEBUG - serialize_to_dict() called
2025-01-18 18:30:22,962 - DEBUG - Cache Entry: (0, 1737246618349067, 0)
2025-01-18 18:30:22,962 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246618349067, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:30:22,962 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[8], is_file_transfer=[False]
2025-01-18 18:30:22,964 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:30:22,964 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:30:22,964 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:30:22,965 - DEBUG - Request guid: 37f96ef0-aa83-4a52-b5b8-143e02a8a707
2025-01-18 18:30:22,965 - DEBUG - socket timeout: 60
2025-01-18 18:30:23,021 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=8de7bf73-c526-495d-9cee-aa9061db277a&request_guid=37f96ef0-aa83-4a52-b5b8-143e02a8a707 HTTP/1.1" 200 1501
2025-01-18 18:30:23,021 - DEBUG - SUCCESS
2025-01-18 18:30:23,021 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:30:23,021 - DEBUG - ret[code] = None, after post request
2025-01-18 18:30:23,021 - DEBUG - Query id: 01b9cdfe-0002-4c78-0007-08ea002010ca
2025-01-18 18:30:23,021 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246618414979, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:30:23,021 - DEBUG - Cache Entry: (0, 1737246618349067, 0)
2025-01-18 18:30:23,021 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246618414979, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:30:23,022 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:30:23,022 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:23,022 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:23,022 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:30:23,022 - DEBUG - Cache Entry: (0, 1737246618414979, 0)
2025-01-18 18:30:23,022 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:23,022 - DEBUG - sfqid: 01b9cdfe-0002-4c78-0007-08ea002010ca
2025-01-18 18:30:23,022 - DEBUG - query execution done
2025-01-18 18:30:23,022 - DEBUG - SUCCESS
2025-01-18 18:30:23,022 - DEBUG - PUT OR GET: False
2025-01-18 18:30:23,022 - DEBUG - Query result format: arrow
2025-01-18 18:30:23,022 - INFO - Number of results in first chunk: 0
2025-01-18 18:30:23,023 - DEBUG - executing SQL/command
2025-01-18 18:30:23,023 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:30:23,023 - DEBUG - sequence counter: 9
2025-01-18 18:30:23,023 - DEBUG - Request id: c362f528-b0e0-4d86-a34e-92a4719f4263
2025-01-18 18:30:23,023 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:30:23,023 - DEBUG - is_file_transfer: True
2025-01-18 18:30:23,023 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:23,023 - DEBUG - _cmd_query
2025-01-18 18:30:23,023 - DEBUG - serialize_to_dict() called
2025-01-18 18:30:23,023 - DEBUG - Cache Entry: (0, 1737246618414979, 0)
2025-01-18 18:30:23,023 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246618414979, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:30:23,024 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[9], is_file_transfer=[False]
2025-01-18 18:30:23,024 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:30:23,024 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:30:23,024 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:30:23,025 - DEBUG - Request guid: 4f6f8df3-814a-452a-88bc-d424d4b85313
2025-01-18 18:30:23,025 - DEBUG - socket timeout: 60
2025-01-18 18:30:23,093 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=c362f528-b0e0-4d86-a34e-92a4719f4263&request_guid=4f6f8df3-814a-452a-88bc-d424d4b85313 HTTP/1.1" 200 1376
2025-01-18 18:30:23,094 - DEBUG - SUCCESS
2025-01-18 18:30:23,094 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:30:23,094 - DEBUG - ret[code] = None, after post request
2025-01-18 18:30:23,094 - DEBUG - Query id: 01b9cdfe-0002-4d87-0007-08ea001fe5d2
2025-01-18 18:30:23,094 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246618467567, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:30:23,094 - DEBUG - Cache Entry: (0, 1737246618414979, 0)
2025-01-18 18:30:23,094 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246618467567, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:30:23,094 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:30:23,094 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:23,095 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:23,095 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:30:23,095 - DEBUG - Cache Entry: (0, 1737246618467567, 0)
2025-01-18 18:30:23,095 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:23,095 - DEBUG - sfqid: 01b9cdfe-0002-4d87-0007-08ea001fe5d2
2025-01-18 18:30:23,095 - DEBUG - query execution done
2025-01-18 18:30:23,095 - DEBUG - SUCCESS
2025-01-18 18:30:23,095 - DEBUG - PUT OR GET: False
2025-01-18 18:30:23,095 - DEBUG - Query result format: arrow
2025-01-18 18:30:23,095 - INFO - Number of results in first chunk: 0
2025-01-18 18:30:23,096 - DEBUG - executing SQL/command
2025-01-18 18:30:23,096 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:30:23,096 - DEBUG - sequence counter: 10
2025-01-18 18:30:23,096 - DEBUG - Request id: 91ca7a4f-ace9-464a-a2b6-d4405e8d3249
2025-01-18 18:30:23,096 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:30:23,096 - DEBUG - is_file_transfer: True
2025-01-18 18:30:23,096 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:23,096 - DEBUG - _cmd_query
2025-01-18 18:30:23,096 - DEBUG - serialize_to_dict() called
2025-01-18 18:30:23,096 - DEBUG - Cache Entry: (0, 1737246618467567, 0)
2025-01-18 18:30:23,096 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246618467567, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:30:23,096 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[10], is_file_transfer=[False]
2025-01-18 18:30:23,097 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:30:23,097 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:30:23,097 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:30:23,097 - DEBUG - Request guid: a9e2f33b-d84e-4de1-a368-f75b4f4c73cb
2025-01-18 18:30:23,097 - DEBUG - socket timeout: 60
2025-01-18 18:30:23,195 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=91ca7a4f-ace9-464a-a2b6-d4405e8d3249&request_guid=a9e2f33b-d84e-4de1-a368-f75b4f4c73cb HTTP/1.1" 200 1375
2025-01-18 18:30:23,195 - DEBUG - SUCCESS
2025-01-18 18:30:23,195 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:30:23,195 - DEBUG - ret[code] = None, after post request
2025-01-18 18:30:23,195 - DEBUG - Query id: 01b9cdfe-0002-4c70-0007-08ea001f9eea
2025-01-18 18:30:23,195 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246618590953, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:30:23,195 - DEBUG - Cache Entry: (0, 1737246618467567, 0)
2025-01-18 18:30:23,195 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246618590953, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:30:23,195 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:30:23,195 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:23,195 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:23,195 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:30:23,195 - DEBUG - Cache Entry: (0, 1737246618590953, 0)
2025-01-18 18:30:23,196 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:23,196 - DEBUG - sfqid: 01b9cdfe-0002-4c70-0007-08ea001f9eea
2025-01-18 18:30:23,196 - DEBUG - query execution done
2025-01-18 18:30:23,196 - DEBUG - SUCCESS
2025-01-18 18:30:23,196 - DEBUG - PUT OR GET: False
2025-01-18 18:30:23,196 - DEBUG - Query result format: arrow
2025-01-18 18:30:23,196 - INFO - Number of results in first chunk: 0
2025-01-18 18:30:23,196 - DEBUG - executing SQL/command
2025-01-18 18:30:23,197 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:30:23,197 - DEBUG - sequence counter: 11
2025-01-18 18:30:23,197 - DEBUG - Request id: e49a2ae4-d183-468e-83d6-7d6cd18177b0
2025-01-18 18:30:23,197 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:30:23,197 - DEBUG - is_file_transfer: True
2025-01-18 18:30:23,197 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:23,197 - DEBUG - _cmd_query
2025-01-18 18:30:23,197 - DEBUG - serialize_to_dict() called
2025-01-18 18:30:23,197 - DEBUG - Cache Entry: (0, 1737246618590953, 0)
2025-01-18 18:30:23,197 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246618590953, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:30:23,197 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[11], is_file_transfer=[False]
2025-01-18 18:30:23,198 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:30:23,198 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:30:23,198 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:30:23,198 - DEBUG - Request guid: ad8cbac4-0d8b-4991-b450-f9448d02b8ee
2025-01-18 18:30:23,198 - DEBUG - socket timeout: 60
2025-01-18 18:30:23,276 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=e49a2ae4-d183-468e-83d6-7d6cd18177b0&request_guid=ad8cbac4-0d8b-4991-b450-f9448d02b8ee HTTP/1.1" 200 2619
2025-01-18 18:30:23,276 - DEBUG - SUCCESS
2025-01-18 18:30:23,276 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:30:23,277 - DEBUG - ret[code] = None, after post request
2025-01-18 18:30:23,277 - DEBUG - Query id: 01b9cdfe-0002-4d87-0007-08ea001fe5d6
2025-01-18 18:30:23,277 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246618669487, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:30:23,277 - DEBUG - Cache Entry: (0, 1737246618590953, 0)
2025-01-18 18:30:23,277 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246618669487, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:30:23,277 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:30:23,277 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:23,277 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:23,277 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:30:23,277 - DEBUG - Cache Entry: (0, 1737246618669487, 0)
2025-01-18 18:30:23,277 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:23,277 - DEBUG - sfqid: 01b9cdfe-0002-4d87-0007-08ea001fe5d6
2025-01-18 18:30:23,277 - DEBUG - query execution done
2025-01-18 18:30:23,277 - DEBUG - SUCCESS
2025-01-18 18:30:23,277 - DEBUG - PUT OR GET: False
2025-01-18 18:30:23,277 - DEBUG - Query result format: arrow
2025-01-18 18:30:23,277 - INFO - Number of results in first chunk: 54
2025-01-18 18:30:23,277 - DEBUG - Execute query [queryID: 01b9cdfe-0002-4d87-0007-08ea001fe5d6]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:30:23,278 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:30:23,278 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:30:23,278 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:30:23,278 - DEBUG - Batches read: 0
2025-01-18 18:30:23,278 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:30:23,278 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:30:23,284 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:30:23,287 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:30:23,759 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:30:23,785 - DEBUG - calling method search on class CortexSearchServiceResource after submitting telemetry if enabled
2025-01-18 18:30:23,785 - INFO - performing a HTTP POST call to /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query
2025-01-18 18:30:23,785 - DEBUG - request has path params: {'database': 'DEV_SRC_INGEST', 'schema': 'EPA_PROCESSED', 'service_name': 'CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST'}, query_params: [], header params: {'Accept': 'application/json', 'Content-Type': 'application/json'} and body: QueryRequest(query='tELL ME ABOUT ROUNDUP', columns=['chunk', 'relative_path', 'PRODUCTNAME', 'COMPANYNAME', 'CATEGORY_EPA_TYPE', 'SIGNAL_WORD'], filter=None, limit=10, experimental=None)
2025-01-18 18:30:23,788 - DEBUG - making an http POST call to 'https://gmcpdcz-mt01740.snowflakecomputing.com:443/api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query'
2025-01-18 18:30:23,789 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:30:24,262 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query HTTP/1.1" 200 None
2025-01-18 18:30:24,263 - DEBUG - created a RESTResponse with status 200 and length of 18392
2025-01-18 18:30:24,263 - DEBUG - response body: b'{\n  "results" : [ {\n    "SIGNAL_WORD" : "Caution",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\"\\n]",\n    "chunk" : "{\\"content\\":\\"\\\\n# FRQNT PANEL\\\\n\\\\n# Roundup* L&G READY-TO-USE by Moasanto Grass & Weed Killer\\\\n  \\\\n[graphics of weeds dying in 1-7 days]\\\\n* .READY.TO-USE, RBCUIRES NO\\\\n* : SYSTEMIC GRASS AND WEED KILLER FOR SPOT TREATMENT OF UNDESIRABLB VEGETATION\\\\n* . KILLS LARELID E WEEDS AND GRASSES, ROOTS AND ALL\\\\nGUARANTEEDT AESIN NTIH OREAETLACATEN  \\\\nS YTITACTKNGUAWANEEORXOAR KONEKRAE\\\\n* :_DOES NOT HAVE SOIL ACTIVTTY\\\\n+-SUTABLB-FOR- USE-AROUND-FLOWER-BEDS TREES,-SHRUTS FENCES-WALKS -AND-SPOT TRRATMEIT IN LAWNS\\\\nSHRURSAND ORWN RENOXATION (This Taun renovation*phrase no for 24 Oz container sixe.)\\\\n* : THIS 24 OZ BOTTLE CAN BE REFILLED WTIH ONE TABLET OF ROUNDUF QUIK STIK GRASS & WEED KILLER!. SEE STORAGE AND DISPOSAL SECTION FOR MORE INFORMATION. H\\\\nRd thai laST Wlor wg thT p?x3a? Ox ony msR4ng ioTT nmRRan (moved io back panel)NOTICEt- Dwyor-axoumo all soponaibility for mfoty and uce not in macrdan vith axeptablo-raturm at once unopanod (moved to back panel)Keep out ad reach ot chlldren. CAUTION!Soo haak penai for Preenutionary Statemanta and Direstions for Uce.  \\\\nBEST AYAILA&1.  \\\\nBEST AYAILA&1.BPA-Rrg Na S04 320 (moved to back panel)\\\\n## MONSAATO COMRANY\\\\nAGRICULTURAL PRODUCTS-&T LOUIS, MIS$OURI-63167 USA (moved to back panel)  \\\\nACTIVE INGREDIENT:\\\\n|in the form of is isopropylamine k|0.96%|\\\\n| :---: | :---: |\\\\n  \\\\n:*1 ...(delered isems below are moved to back panel)ny non porn(6)CTradamerk of Menseno Company  \\\\nNET 24 fi z (1pi 8m} (delcied)  \\\\n:MONSANTO COMPANY-1993  \\\\nA000.X 1 (print piae",\n    "PRODUCTNAME" : "SHACKLE HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/SHACKLE_HERBICIDE_524-330.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "chunk" : "Ready Canola (Winter Varieties)|\\\\n|12.4|Roundup Ready Corn 2|\\\\n|12.5|Roundup Ready Gene Cotton|\\\\n|12.6|Roundup Ready Flex Cotton|\\\\n|12.7|Roundup Ready Gene Soybeans|\\\\n|12.8|Roundup Ready Gene Sugar Beets|\\\\n  \\\\n13 13.0 NON-CROP USES AROUND THE FARMSTEAD\\\\n|13.1|General Weed Control and Trim-And-Edge|\\\\n| :---: | :---: |\\\\n|13.2|Greenhouse/Shade house|\\\\n|13.3|Chemical Mowing|\\\\n|13.4|Cut Stumps|\\\\n|13.5|Habitat Management|\\\\n  \\\\n14 14.0 ANNUAL WEEDS RATE SECTION\\\\n|14.1|Annual Weeds -- Tank Mixtures with 2,4-D, Dicamba, or Tordon 22K|\\\\n| :---: | :---: |\\\\n|14.2|Annual Weeds - Hand-Held or Backpack Equipment|\\\\n|14.3|Annual Weeds - Tank Mixtures with Atrazine for Fallow and Reduced Tillage Systems|\\\\n\\\\n* 15 15.0 PERENNIAL WEEDS RATE SECTION\\\\n* 16 16.0 WOODY BRUSH AND TREES RATE SECTION\\\\n* 17 17.0 LIMIT OF WARRANTY AND LIABILITY\\\\n  \\\\n1.0 INGREDIENTS  \\\\nACTIVE INGREDIENT:\\\\n|*Glyphosate, N-(phosphonomethyl)glycine, in the form of its isopropylamine salt .|41.0%|\\\\n| :---: | :---: |\\\\n|OTHER INGREDIENTS:....|59.0%|\\\\n||100.0%|\\\\n*Contains 480 grams per liter or 4 pounds per U.S. gallon of the active ingredient glyphosate, in the form of its isopropylamine salt. Equivalent to 356 grams per liter or 3 pounds per U.S. gallon of the acid, glyphosate.license granted under any non-U.S. patent(s).\\\\n## 2.0 IMPORTANT PHONE NUMBERS\\\\nVersion: 3-Jun-2006Master Label 524-454\\\\n* I. MAIN LABEL FOR FOOD CROP USES\\\\n1. FOR PRODUCT INFORMATION OR ASSISTANCE IN USING THIS PRODUCT, CALL TOLL-FREE,\\\\n1-800-332-3111\\\\n2. IN CASE OF",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "\\\\nSincerely, Vuku KWztxd g James A. Tompkins Product Manager 25 Herbicide Branch Registration Division (7505P)\\\\n# MASTER LABEL FOR EPA REG. NO. 524-454\\\\n  \\\\n[Based on EPA approved Text Stamped Nov. 15, 2001] Registered Brand Names:\\\\n# ROUNDUP ORIGINAL II HERBICIDE ROUNDUP ORIGINAL RT HERBICIDE RASCAL PLUS HERBICIDE MON 8709 HERBICIDE HONCHO PLUS HERBICIDE\\\\n  \\\\nTable of Contents for Master Labei\\\\n||Main Label for Food Crop Uses|Page 2|\\\\n| :---: | :---: | :---: |\\\\n|II.|Main Label for Industrial, Turf, & Ornamental Uses|Page 70|\\\\n|III.|Supplementai Labeling|Page 100|\\\\n**See each label part for more detailed table of contents**Master Label 524-454Version: 3-Jun-2000  \\\\n3/119\\\\n# [INSERT BRAND NAME] Herbicide\\\\n  \\\\nComplete Directions for Use  \\\\nEPA Reg. No. 524-454AVOID CONTACT OF HERBICIDE WITH FOLIAGE, GREEN STEMS, EXPOSED NON-WOODY ROOTS OR FRUIT OF CROPS (EXCEPT AS SPECIFIED FOR INDIVIDUAL ROUNDUP READYD CROPS), DESIRABLE PLANTS AND TREES, BECAUSE SEVERE INJURY OR DESTRUCTION MAY RESULT.Herbicide for Roundup Ready\\\\\\" Crops.Selective broad-spectrum weed control in Roundup Ready crops. Non-selective, broad-spectrum weed control for many agricultural systems and farmsteads.A member of the Roundup Family of Agricultural Herbicides by MonsantoThe President\'s Green Chemistry Award was presented in 1996 to Monsanto for its innovative \\\\\\"zero-waste\\\\\\" process in the manufacture of Roundup Herbicide.Not all products recommended on this label are registered for use in California. Check the",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "Monsanto suppiemental labeling for this product include all applications of this product that can be made onto the specified Roundup Ready crops during the complete cropping season. DO NOT combine these treatment instructions with those for crops in the \\\\\\"ANNUAL AND PERENNIAL CROPS (ALPHABETICAL)\\\\\\" section of this label that do not contain a glyphosate tolerant gene, unless otherwise directed in this product\'s labeling.MONSANTO COMPANY RECOMMENDS USE OF THIS PRODUCT FOR POSTEMERGENCE (IN- CROP) APPLICATION ONLY ON CROPS DESIGNATED AS CONTAINING A GLYPHOSATE TOLERANT GENE. Applying this product to crops that are not designated as Roundup Ready will result in severe crop injury and yield loss. Avoid contact with foliage, green stems, or fruit of crops, or any desirable plants that do not contain a glyphosate tolerant gene, since severe plant injury or destruction will result. The Roundup Ready designation indicates that the crop contains a patented gene that provides tolerance to this product. Information on Roundup Ready crops may be obtained from your seed supplier or Monsanto representative. Roundup Ready crops must be purchased from an authorized licensed seed supplier.NOTE: Roundup Ready seed, and the method of selectively controlling weeds in a Roundup Ready crop by applying glyphosate to the weeds and to the Roundup Ready crop, are protected under several U.S. Patents, including 5,352,605 and 5,633,435. A license to use Roundup Ready seed must be obtained prior to use. Monsanto",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "chunk" : "this product in 5 to 20 gallons of spray solution per acre. Carefully select proper nozzle and spray pressure to avoid spraying a fine mist. For best results with ground application equipment, use flat spray nozzles. Check for even distribution of spray droplets.For aerial applications. All labeled treatments may be made by aerial equipment where appropriate, provided that the applicator complies with the precautions and restrictions specified on this product\'s labeling. in particular in the \\\\\\"Aerial Equipment\\\\\\" section. Apply this product in 3 to 15 gallons of water per acre. See the \\\\\\"APPLICATION EQUIPMENT AND TECHNIQUES\\\\\\" section of this label for procedures to avoid spray drift that may cause injury to any vegetation not intended for treatment. Use of appropriate buffer zones will help prevent injury to adjacent vegetation.For proper stewardship of aerial applications over the top of Roundup Ready crops, Monsanto recommends that growers and applicators read and follow all precautions and procedures contained in the use guide \\\\\\"A Guide to On-Target Aerial Application.\\\\\\" Copies of this publication are available by calling 1-800-ROUNDUP (1-800-768-6387).ATTENTION: AVOID DRIFT. EXTREME CARE MUST BE USED WHEN APPLYING THIS PRODUCT TO PREVENT INJURY TO DESIRABLE PLANTS AND CROPS WHICH DO NOT CONTAIN A GLYPHOSATE TOLERANT GENE.TANK MIXTURE: Tank mixtures with other herbicides, insecticides, fungicides, micronutrients or foliar fertilizers may result in reduced weed control or crop injury",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "General Information\\\\nAVOID CONTACT OF HERBICIDE WITH FOLIAGE, GREEN STEMS, EXPOSED NON-WOODY ROOTS OR FRUIT OF CROPS (EXCEPT AS SPECIFIED FOR INDIVIDUAL ROUNDUP READY CROPS), DESIRABLE PLANTS AND TREES, BECAUSE SEVERE INJURY OR DESTRUCTION MAY RESULT.See \\\\\\"GENERAL INFORMATION\\\\\\" and \\\\\\"MIXING\\\\\\" sections of the label booklet for [INSERT BRAND NAME] for essential product performance information.The Roundup Ready designation indicates that the alfalfa contains a patented gene that provides tolerance to this product. Information on Roundup Ready alfalfa varieties may be obtained from your seed supplier or Monsanto representative. Roundup Ready crop varieties must be purchased from an\'authorized licensed seed supplier.See the \\\\\\"ROUNDUP READY CROPS\\\\\\" section of the [INSERT BRAND NAME] label booklet for general precautionary instructions for use in Roundup Ready crops. Do NOT combine the instructions in this supplemental label with other recommendations listed in the \\\\\\"PASTURE GRASSES, FORAGE LEGUMES, AND RANGELANDS\\\\\\" section of the [INSERT BRAND NAME] label booklet intended for alfalfa varieties that do not contain a glyphosate tolerance gene.\\\\n## DIRECTIONS FOR USE\\\\nThis product will control many troublesome emerged weeds with over-the-top apptications in Roundup Ready alfalfa grown for seed. Over-the-top applications may be made from emergence through the late vegetative stage, and spot treatments may be made from early bud stage through seed harvest.For ground applications with broadcast",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "quarts per acre|\\\\n|Maximum preharvest application rate|1 quart per acre|\\\\nGENERAL PRECAUTIONS/RESTRICTIONS: See the \\\\\\"ROUNDUP READY CROPS\\\\\\" section of this label for general precautionary instructions for use in Roundup Ready crops. See the \\\\\\"GENERAL INFORMATION\\\\\\" section of this label for more information on \\\\\\"Annual Maximum Application Rates.\\\\\\" Refer to individual tank mixture product label for restrictions and precautions, use according to the most restrictive precautionary statements for each product in the tank mixture.\\\\n## Preplant, At-Planting, Preemergence\\\\nUSE INSTRUCTIONS: This product may be applied before, during or after planting.TANK MIXTURES: This product may be tank-mixed with 2,4-D, Banvel or Clarity and applied prior to planting only This product may be tank-mixed with the following products and applied prior to crop emergence. Ensure that the specific product being used in the tank mixture is registered for application prior to emergence of soybeans. Read and follow label directions of all products in the tank mixture.[Insert active ingredient(s) or brand name of product(s) containing the following active ingredients that, at the time of printing, are registered for use preplant, at-planting and/or preemergence to soybeans: alachlor, atrazine, carfentrazone-ethyl, chlorimuron ethyl, clethodim, clomazone, cloransulam-methyl, dimethenamid, dimethenamid-p, fenoxyprop, fluazifop-p-butyl, flufenacet, flumetsulam, flumiclorac pentyl ester, flumioxazin, fomesafen, imazaquin,",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "[INSERT BRAND NAME] will control labeled annual grasses and broadleaf weeds in Roundup Ready Flex cotton. To maximize yield potential, spray cotton early to elininate competing weeds. Many perennial weeds will be controlled or suppressed with one or more applications of this product. In general, an initial application of 1 quart per acre on 1 to 3 inch tall annual grass and broadleaf weeds is recommended. This product may be applied by ground application equipment at rates up to 2 quarts per acre per application postemergence to Roundup Ready Flex cotton. In addition tobroadcast applications, post-directed equipment may be used to achieve weed coverage.NOTE: For specific rates of application and instructions, refer to the \\\\\\"ANNUAL\\\\\\" and \\\\\\"PERENNIAL WEEDS RATE TABLES\\\\\\" in the labei book}et for [INSERT BRAND NAME].PRECAUTIONS, RESTRICTIONS: The maximum rate for any single in-crop application of this product is 2 quarts per acre made using ground application equipment. In-crop application rates above 1 quart per acre made alone, or with the addition of other crop chemical products containing surfactant, may cause a crop response, including leaf speckling or leaf necrosis. Do not exceed a maximum rate of 3 pints per acre of this product when making applications by air. Between layby and 60 percent open bolls, the maximum combined total rate of this product that may be applied is 2 quarts per acre. The maximum combined total of all applications made from crop emergence to 60 percent open",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "chunk" : "SEQUENTIAL APPLICATION OF THIS PRODUCT WILL BE REQUIRED TO CONTROL NEW FLUSHES OF WEEDS IN THE ROUNDUP READY SOYBEAN CROP. To control giant ragweed, it is recommended that 1 quart per acre of this product be applied when the weed is 8 to 12 inches tall to increase control and possibly avoid the need for a sequential application.Version: 3-Jun-2006Master Label 524-454\\\\n## 1. MAIN LABEL FOR FOOD CROP USES\\\\nTANK MIXTURES: This product may be tank-mixed with the following products and applied postemergence (in-crop) over the top of Roundup Ready soybeans. Ensure that the specific product being used in the tank mixture is registered for application postemergence (in-crop) to soybeans. Read and follow label directions of all products in the tank mixture.[Insert active ingredient(s) or brand name of product(s) containing the following active ingredients that, at the time of printing, are registered for use postemergence (in-crop) to soybeans: acifluorfen, bentazonchlorimuron ethyl, clethodim, imazethapyr, cloransulam-methyl, fenoxyprop, fluazifop-p- butyl, flumiclorac pentyl ester, fomesafen, imazamox, imazethapyr, lactofen, pendimethalin, quizalofop P-ethyl. sethoxydem, thifensulfuron-methyl.Arrow, Assure II, Basagran, Classic, Cobra, Extreme, FirstRate, Flexstar, Fusilade DX, Fusion, Harmony GT XP, Poast, Poast Plus, Pursuit, Pursuit Plus, Raptor, Reflex, Select, Select MAX, Synchrony STS, Targa, Ultra Blazer.]PRECAUTIONS, RESTRICTIONS: The combined total application from crop emergence",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "weeds in a Roundup Ready crop by applying glyphosate to the weeds and to the Roundup Ready crop, are protected under several U.S. Patents, including 5,352,605 and 5,633,435. A license to use Roundup Ready seed must be obtained prior to use. Monsanto retains ownership of the gene and process technologies, and the Purchaser of the seed receives the right to use the licensed genes and technologies subject to the limited use license conditions. Seed containing a Roundup Ready trait cannot be used for research and demonstration, reverse engineering or in connection with herbicide registration. Progeny seed containing the Roundup Ready trait cannot be saved for replanting or transferred to others for replanting. Contact your Authorized Monsanto Retailer for information on obtaining a limited use iicense.Sprayer Preparation: It is important that sprayer and mixing equipment be clean and free of pesticide residue before making applications of this product. Follow the cleaning procedures specified on the label of the product(s) previously used. THOROUGHLY CLEAN THE SPRAY TANK AND ALL LINES AND FILTERS TO ELIMINATE POTENTIAL CONTAMINATION FROM OTHER HERBICIDES PRIOR TO MIXING AND APPLYING THIS PRODUCT.For ground broadcast applications. Apply this product in 5 to 20 gallons of spray solution per acre. Carefully select proper nozzle and spray pressure to avoid spraying a fine mist. For best results with ground application equipment, use flat spray nozzles. Check for even distribution of spray",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE"\n  } ],\n  "request_id" : "0f749310-4e1f-4c0b-a202-ab938631030a"\n}'
2025-01-18 18:30:24,266 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:30:24,268 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:30:24,784 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:30:34,580 - DEBUG - executing SQL/command
2025-01-18 18:30:34,581 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACK...]
2025-01-18 18:30:34,581 - DEBUG - sequence counter: 12
2025-01-18 18:30:34,581 - DEBUG - Request id: 38fef487-c71b-4b46-a734-c0e888111e66
2025-01-18 18:30:34,581 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACK...]
2025-01-18 18:30:34,581 - DEBUG - is_file_transfer: True
2025-01-18 18:30:34,581 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:34,581 - DEBUG - _cmd_query
2025-01-18 18:30:34,581 - DEBUG - serialize_to_dict() called
2025-01-18 18:30:34,581 - DEBUG - Cache Entry: (0, 1737246618669487, 0)
2025-01-18 18:30:34,581 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246618669487, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:30:34,581 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACK...], sequence_id=[12], is_file_transfer=[False]
2025-01-18 18:30:34,581 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:30:34,581 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:30:34,581 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:30:34,581 - DEBUG - Request guid: c6bb3f5f-b9ea-40d1-a234-1d8f9564452d
2025-01-18 18:30:34,582 - DEBUG - socket timeout: 60
2025-01-18 18:30:34,946 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=38fef487-c71b-4b46-a734-c0e888111e66&request_guid=c6bb3f5f-b9ea-40d1-a234-1d8f9564452d HTTP/1.1" 200 3449
2025-01-18 18:30:34,946 - DEBUG - SUCCESS
2025-01-18 18:30:34,946 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:30:34,946 - DEBUG - ret[code] = None, after post request
2025-01-18 18:30:34,947 - DEBUG - Query id: 01b9cdfe-0002-4c71-0007-08ea00202046
2025-01-18 18:30:34,947 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246630343374, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 18:30:34,947 - DEBUG - Cache Entry: (0, 1737246618669487, 0)
2025-01-18 18:30:34,947 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246630343374, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 18:30:34,947 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:30:34,947 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:34,947 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:34,947 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:30:34,947 - DEBUG - Cache Entry: (0, 1737246630343374, 0)
2025-01-18 18:30:34,947 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:34,947 - DEBUG - sfqid: 01b9cdfe-0002-4c71-0007-08ea00202046
2025-01-18 18:30:34,947 - DEBUG - query execution done
2025-01-18 18:30:34,948 - DEBUG - SUCCESS
2025-01-18 18:30:34,948 - DEBUG - PUT OR GET: False
2025-01-18 18:30:34,948 - DEBUG - Query result format: arrow
2025-01-18 18:30:34,948 - INFO - Number of results in first chunk: 54
2025-01-18 18:30:34,948 - DEBUG - Execute query [queryID: 01b9cdfe-0002-4c71-0007-08ea00202046] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACKLE_HERBICIDE_524-330.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:30:34,948 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:30:34,948 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:30:34,948 - DEBUG - Batches read: 1
2025-01-18 18:30:34,951 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:30:34,954 - DEBUG - executing SQL/command
2025-01-18 18:30:34,954 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...]
2025-01-18 18:30:34,954 - DEBUG - sequence counter: 13
2025-01-18 18:30:34,954 - DEBUG - Request id: 6907243c-8ec7-488c-ac30-da1af0d539ad
2025-01-18 18:30:34,954 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...]
2025-01-18 18:30:34,954 - DEBUG - is_file_transfer: True
2025-01-18 18:30:34,954 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:34,954 - DEBUG - _cmd_query
2025-01-18 18:30:34,954 - DEBUG - serialize_to_dict() called
2025-01-18 18:30:34,954 - DEBUG - Cache Entry: (0, 1737246630343374, 0)
2025-01-18 18:30:34,954 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246630343374, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 18:30:34,954 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...], sequence_id=[13], is_file_transfer=[False]
2025-01-18 18:30:34,955 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:30:34,955 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:30:34,955 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:30:34,955 - DEBUG - Request guid: 6dc22a1a-b65b-4d17-b0c4-bad3814dc667
2025-01-18 18:30:34,955 - DEBUG - socket timeout: 60
2025-01-18 18:30:35,312 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=6907243c-8ec7-488c-ac30-da1af0d539ad&request_guid=6dc22a1a-b65b-4d17-b0c4-bad3814dc667 HTTP/1.1" 200 3517
2025-01-18 18:30:35,313 - DEBUG - SUCCESS
2025-01-18 18:30:35,314 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:30:35,314 - DEBUG - ret[code] = None, after post request
2025-01-18 18:30:35,314 - DEBUG - Query id: 01b9cdfe-0002-4c79-0007-08ea00200146
2025-01-18 18:30:35,314 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246630661548, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:30:35,314 - DEBUG - Cache Entry: (0, 1737246630343374, 0)
2025-01-18 18:30:35,314 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246630661548, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:30:35,314 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:30:35,314 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:35,314 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:30:35,314 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:30:35,314 - DEBUG - Cache Entry: (0, 1737246630661548, 0)
2025-01-18 18:30:35,315 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:30:35,315 - DEBUG - sfqid: 01b9cdfe-0002-4c79-0007-08ea00200146
2025-01-18 18:30:35,315 - DEBUG - query execution done
2025-01-18 18:30:35,315 - DEBUG - SUCCESS
2025-01-18 18:30:35,315 - DEBUG - PUT OR GET: False
2025-01-18 18:30:35,315 - DEBUG - Query result format: arrow
2025-01-18 18:30:35,315 - INFO - Number of results in first chunk: 54
2025-01-18 18:30:35,315 - DEBUG - Execute query [queryID: 01b9cdfe-0002-4c79-0007-08ea00200146] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:30:35,315 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:30:35,315 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:30:35,316 - DEBUG - Batches read: 1
2025-01-18 18:30:35,316 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:31:09,163 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000243D8B54370>
2025-01-18 18:31:09,163 - INFO - Querying the server for client info
2025-01-18 18:31:09,163 - DEBUG - cursor
2025-01-18 18:31:09,163 - DEBUG - executing SQL/command
2025-01-18 18:31:09,163 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:31:09,164 - DEBUG - sequence counter: 14
2025-01-18 18:31:09,164 - DEBUG - Request id: 9c823c79-b6ee-4d32-9810-2043dd34ad77
2025-01-18 18:31:09,165 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:31:09,165 - DEBUG - is_file_transfer: True
2025-01-18 18:31:09,165 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:31:09,165 - DEBUG - _cmd_query
2025-01-18 18:31:09,166 - DEBUG - serialize_to_dict() called
2025-01-18 18:31:09,166 - DEBUG - Cache Entry: (0, 1737246630661548, 0)
2025-01-18 18:31:09,166 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246630661548, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:31:09,166 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[14], is_file_transfer=[False]
2025-01-18 18:31:09,166 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:31:09,166 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:31:09,166 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:31:09,167 - DEBUG - Request guid: dfb17c0b-47bf-4ffa-8c36-7bdca35e55e0
2025-01-18 18:31:09,167 - DEBUG - socket timeout: 60
2025-01-18 18:31:09,296 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=9c823c79-b6ee-4d32-9810-2043dd34ad77&request_guid=dfb17c0b-47bf-4ffa-8c36-7bdca35e55e0 HTTP/1.1" 200 2620
2025-01-18 18:31:09,297 - DEBUG - SUCCESS
2025-01-18 18:31:09,297 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:31:09,297 - DEBUG - ret[code] = None, after post request
2025-01-18 18:31:09,297 - DEBUG - Query id: 01b9cdff-0002-4c76-0007-08ea001fbe02
2025-01-18 18:31:09,297 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246664695082, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:31:09,297 - DEBUG - Cache Entry: (0, 1737246630661548, 0)
2025-01-18 18:31:09,298 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246664695082, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:31:09,298 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:31:09,298 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:31:09,298 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:31:09,298 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:31:09,298 - DEBUG - Cache Entry: (0, 1737246664695082, 0)
2025-01-18 18:31:09,298 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:31:09,298 - DEBUG - sfqid: 01b9cdff-0002-4c76-0007-08ea001fbe02
2025-01-18 18:31:09,298 - DEBUG - query execution done
2025-01-18 18:31:09,299 - DEBUG - SUCCESS
2025-01-18 18:31:09,299 - DEBUG - PUT OR GET: False
2025-01-18 18:31:09,299 - DEBUG - Query result format: arrow
2025-01-18 18:31:09,299 - INFO - Number of results in first chunk: 1
2025-01-18 18:31:09,299 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:31:09,299 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:31:09,299 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:31:09,299 - DEBUG - Batches read: 0
2025-01-18 18:31:09,300 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:31:09,300 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:31:09,300 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000243D8B560B0>, telemetry enabled: True
2025-01-18 18:31:09,300 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:31:09,301 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:31:09,301 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:31:09,301 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:31:09,307 - DEBUG - cursor
2025-01-18 18:31:09,307 - DEBUG - executing SQL/command
2025-01-18 18:31:09,307 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:31:09,307 - DEBUG - sequence counter: 15
2025-01-18 18:31:09,307 - DEBUG - Request id: a35269c9-efc7-4c2a-8149-2f322eda2bef
2025-01-18 18:31:09,307 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:31:09,307 - DEBUG - is_file_transfer: True
2025-01-18 18:31:09,307 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:31:09,307 - DEBUG - _cmd_query
2025-01-18 18:31:09,308 - DEBUG - serialize_to_dict() called
2025-01-18 18:31:09,308 - DEBUG - Cache Entry: (0, 1737246664695082, 0)
2025-01-18 18:31:09,308 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246664695082, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:31:09,308 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[15], is_file_transfer=[False]
2025-01-18 18:31:09,309 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:31:09,309 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:31:09,309 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:31:09,309 - DEBUG - Request guid: e66d2ca6-07a7-4ce4-91d4-5f04f00c59ad
2025-01-18 18:31:09,309 - DEBUG - socket timeout: 60
2025-01-18 18:31:09,376 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=a35269c9-efc7-4c2a-8149-2f322eda2bef&request_guid=e66d2ca6-07a7-4ce4-91d4-5f04f00c59ad HTTP/1.1" 200 1501
2025-01-18 18:31:09,377 - DEBUG - SUCCESS
2025-01-18 18:31:09,377 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:31:09,377 - DEBUG - ret[code] = None, after post request
2025-01-18 18:31:09,377 - DEBUG - Query id: 01b9cdff-0002-4c79-0007-08ea0020014a
2025-01-18 18:31:09,377 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246664771122, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:31:09,377 - DEBUG - Cache Entry: (0, 1737246664695082, 0)
2025-01-18 18:31:09,377 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246664771122, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:31:09,377 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:31:09,377 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:31:09,377 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:31:09,377 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:31:09,377 - DEBUG - Cache Entry: (0, 1737246664771122, 0)
2025-01-18 18:31:09,377 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:31:09,378 - DEBUG - sfqid: 01b9cdff-0002-4c79-0007-08ea0020014a
2025-01-18 18:31:09,378 - DEBUG - query execution done
2025-01-18 18:31:09,378 - DEBUG - SUCCESS
2025-01-18 18:31:09,378 - DEBUG - PUT OR GET: False
2025-01-18 18:31:09,378 - DEBUG - Query result format: arrow
2025-01-18 18:31:09,378 - INFO - Number of results in first chunk: 0
2025-01-18 18:31:09,380 - DEBUG - executing SQL/command
2025-01-18 18:31:09,380 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:31:09,380 - DEBUG - sequence counter: 16
2025-01-18 18:31:09,380 - DEBUG - Request id: 8412268d-4f6b-4768-9eed-71c1ebb26bd1
2025-01-18 18:31:09,380 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:31:09,380 - DEBUG - is_file_transfer: True
2025-01-18 18:31:09,381 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:31:09,381 - DEBUG - _cmd_query
2025-01-18 18:31:09,381 - DEBUG - serialize_to_dict() called
2025-01-18 18:31:09,381 - DEBUG - Cache Entry: (0, 1737246664771122, 0)
2025-01-18 18:31:09,381 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246664771122, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:31:09,381 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[16], is_file_transfer=[False]
2025-01-18 18:31:09,382 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:31:09,382 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:31:09,382 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:31:09,382 - DEBUG - Request guid: 00685f74-ba94-47ea-af0e-7684d263b9ca
2025-01-18 18:31:09,382 - DEBUG - socket timeout: 60
2025-01-18 18:31:09,462 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=8412268d-4f6b-4768-9eed-71c1ebb26bd1&request_guid=00685f74-ba94-47ea-af0e-7684d263b9ca HTTP/1.1" 200 1375
2025-01-18 18:31:09,463 - DEBUG - SUCCESS
2025-01-18 18:31:09,463 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:31:09,463 - DEBUG - ret[code] = None, after post request
2025-01-18 18:31:09,463 - DEBUG - Query id: 01b9cdff-0002-4c76-0007-08ea001fbe06
2025-01-18 18:31:09,463 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246664863303, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:31:09,463 - DEBUG - Cache Entry: (0, 1737246664771122, 0)
2025-01-18 18:31:09,463 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246664863303, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:31:09,463 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:31:09,463 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:31:09,463 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:31:09,463 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:31:09,464 - DEBUG - Cache Entry: (0, 1737246664863303, 0)
2025-01-18 18:31:09,464 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:31:09,464 - DEBUG - sfqid: 01b9cdff-0002-4c76-0007-08ea001fbe06
2025-01-18 18:31:09,464 - DEBUG - query execution done
2025-01-18 18:31:09,464 - DEBUG - SUCCESS
2025-01-18 18:31:09,464 - DEBUG - PUT OR GET: False
2025-01-18 18:31:09,464 - DEBUG - Query result format: arrow
2025-01-18 18:31:09,464 - INFO - Number of results in first chunk: 0
2025-01-18 18:31:09,465 - DEBUG - executing SQL/command
2025-01-18 18:31:09,465 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:31:09,465 - DEBUG - sequence counter: 17
2025-01-18 18:31:09,465 - DEBUG - Request id: b9c5392a-526b-4501-b635-c1e3c02b515e
2025-01-18 18:31:09,465 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:31:09,465 - DEBUG - is_file_transfer: True
2025-01-18 18:31:09,465 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:31:09,465 - DEBUG - _cmd_query
2025-01-18 18:31:09,465 - DEBUG - serialize_to_dict() called
2025-01-18 18:31:09,465 - DEBUG - Cache Entry: (0, 1737246664863303, 0)
2025-01-18 18:31:09,465 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246664863303, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:31:09,465 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[17], is_file_transfer=[False]
2025-01-18 18:31:09,466 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:31:09,466 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:31:09,466 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:31:09,466 - DEBUG - Request guid: ab742877-12ff-4ed8-b88c-b9ffa0cf9d32
2025-01-18 18:31:09,466 - DEBUG - socket timeout: 60
2025-01-18 18:31:09,531 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=b9c5392a-526b-4501-b635-c1e3c02b515e&request_guid=ab742877-12ff-4ed8-b88c-b9ffa0cf9d32 HTTP/1.1" 200 1374
2025-01-18 18:31:09,532 - DEBUG - SUCCESS
2025-01-18 18:31:09,532 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:31:09,532 - DEBUG - ret[code] = None, after post request
2025-01-18 18:31:09,532 - DEBUG - Query id: 01b9cdff-0002-4c79-0007-08ea0020014e
2025-01-18 18:31:09,532 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246664879406, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:31:09,532 - DEBUG - Cache Entry: (0, 1737246664863303, 0)
2025-01-18 18:31:09,532 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246664879406, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:31:09,532 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:31:09,532 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:31:09,532 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:31:09,532 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:31:09,532 - DEBUG - Cache Entry: (0, 1737246664879406, 0)
2025-01-18 18:31:09,532 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:31:09,532 - DEBUG - sfqid: 01b9cdff-0002-4c79-0007-08ea0020014e
2025-01-18 18:31:09,532 - DEBUG - query execution done
2025-01-18 18:31:09,532 - DEBUG - SUCCESS
2025-01-18 18:31:09,532 - DEBUG - PUT OR GET: False
2025-01-18 18:31:09,532 - DEBUG - Query result format: arrow
2025-01-18 18:31:09,532 - INFO - Number of results in first chunk: 0
2025-01-18 18:31:09,533 - DEBUG - executing SQL/command
2025-01-18 18:31:09,533 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:31:09,533 - DEBUG - sequence counter: 18
2025-01-18 18:31:09,533 - DEBUG - Request id: 2f0c7940-f0cf-40d7-9991-46249160d47f
2025-01-18 18:31:09,533 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:31:09,533 - DEBUG - is_file_transfer: True
2025-01-18 18:31:09,533 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:31:09,533 - DEBUG - _cmd_query
2025-01-18 18:31:09,533 - DEBUG - serialize_to_dict() called
2025-01-18 18:31:09,533 - DEBUG - Cache Entry: (0, 1737246664879406, 0)
2025-01-18 18:31:09,533 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246664879406, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:31:09,533 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[18], is_file_transfer=[False]
2025-01-18 18:31:09,534 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:31:09,534 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:31:09,534 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:31:09,534 - DEBUG - Request guid: fcda4580-d2df-45a5-909f-2ce2ccb6cf4c
2025-01-18 18:31:09,534 - DEBUG - socket timeout: 60
2025-01-18 18:31:09,656 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=2f0c7940-f0cf-40d7-9991-46249160d47f&request_guid=fcda4580-d2df-45a5-909f-2ce2ccb6cf4c HTTP/1.1" 200 2617
2025-01-18 18:31:09,657 - DEBUG - SUCCESS
2025-01-18 18:31:09,657 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:31:09,657 - DEBUG - ret[code] = None, after post request
2025-01-18 18:31:09,657 - DEBUG - Query id: 01b9cdff-0002-4c71-0007-08ea00202082
2025-01-18 18:31:09,657 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246665049808, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 18:31:09,657 - DEBUG - Cache Entry: (0, 1737246664879406, 0)
2025-01-18 18:31:09,657 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246665049808, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 18:31:09,657 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:31:09,657 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:31:09,658 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:31:09,658 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:31:09,658 - DEBUG - Cache Entry: (0, 1737246665049808, 0)
2025-01-18 18:31:09,658 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:31:09,658 - DEBUG - sfqid: 01b9cdff-0002-4c71-0007-08ea00202082
2025-01-18 18:31:09,658 - DEBUG - query execution done
2025-01-18 18:31:09,658 - DEBUG - SUCCESS
2025-01-18 18:31:09,658 - DEBUG - PUT OR GET: False
2025-01-18 18:31:09,658 - DEBUG - Query result format: arrow
2025-01-18 18:31:09,658 - INFO - Number of results in first chunk: 54
2025-01-18 18:31:09,658 - DEBUG - Execute query [queryID: 01b9cdff-0002-4c71-0007-08ea00202082]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:31:09,658 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:31:09,658 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:31:09,658 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:31:09,658 - DEBUG - Batches read: 0
2025-01-18 18:31:09,658 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:31:09,658 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:31:09,665 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:31:09,666 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:31:10,135 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:31:10,158 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:31:10,159 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:31:10,574 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:31:10,929 - DEBUG - calling method search on class CortexSearchServiceResource after submitting telemetry if enabled
2025-01-18 18:31:10,929 - INFO - performing a HTTP POST call to /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query
2025-01-18 18:31:10,929 - DEBUG - request has path params: {'database': 'DEV_SRC_INGEST', 'schema': 'EPA_PROCESSED', 'service_name': 'CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST'}, query_params: [], header params: {'Accept': 'application/json', 'Content-Type': 'application/json'} and body: QueryRequest(query=' Tell me more about the active ingredient in Roundup and how it works.', columns=['chunk', 'relative_path', 'PRODUCTNAME', 'COMPANYNAME', 'CATEGORY_EPA_TYPE', 'SIGNAL_WORD'], filter=None, limit=10, experimental=None)
2025-01-18 18:31:10,930 - DEBUG - making an http POST call to 'https://gmcpdcz-mt01740.snowflakecomputing.com:443/api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query'
2025-01-18 18:31:11,213 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query HTTP/1.1" 200 None
2025-01-18 18:31:11,214 - DEBUG - created a RESTResponse with status 200 and length of 18400
2025-01-18 18:31:11,214 - DEBUG - response body: b'{\n  "results" : [ {\n    "SIGNAL_WORD" : "Warning",\n    "chunk" : "Do not spray foliage to the point of runoff.Mode of Action: The active ingredient in this product inhibits an enzyme found only in plants and microorganisms that is essential to the formation of specific amino acids.No Soil Activity: Weeds must be emerged at the time of application to be controlled by this product. Weeds germinating from seed after application will not be controlled. Unemerged plants arising from unattached underground rhizomes or root stocks of perennials will not be affected by this herbicide and will continue to grow.Master Label 524-454Version: 3-Jun-2006\\\\n# I.MAIN LABEL FOR FOOD CROP USES\\\\nBiological Degradation: Degradation of this product is primarily a biological process carried out by soil microbes.Annual Maximum Application Rates: The maximum application or use rates stated throughout this product\'s labeling are given in units of volume (fluid ounces, pints, or quarts) of this product per acre. However, the maximum allowed application rates apply to this product combined with the use of any and all other herbicides containing the active ingredient glyphosate, whether applied separately or as text mixtures, on a basis of total pounds of glyphosate (acid equivalents) per acre. If more than one glyphosate-containing product is applied to the same site within the same year, you must ensure that the total use of glyphosate does not exceed the maximum allowed. See the \\\\\\"INGREDIENTS\\\\\\" section of this label for necessary product information.Except as otherwise",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "product is applied to the same site within the same year, you must ensure that the total use of glyphosate does not exceed the maximum allowed. See the \\\\\\"INGREDIENTS\\\\\\" section of this label for necessary product information.Except as otherwise specified in a crop section of this label, the combined total of all treatments must not exceed 8 quarts of this product (6 pounds of glyphosate acid) per acre per year. For applications in non-crop sites or in tree, vine, or shrub crops, the combined total of all treatments must not exceed 10.6 quarts of this product (8 pounds of glyphosate acid) per acre per year.NOTE: Use of this product in any manner not consistent with this label may result in injury to persons, animals or crops, or have other unintended consequences.  \\\\n6.0 WEED RESISTANCE MANAGEMENTGlyphosate, the -active ingredient in this product, is a Group 9 herbicide based on the mode of action classification system of the Weed Science Society of America. Any weed population may contain plants naturally resistant to Group 9 herbicides. Weed species resistant to Group 9 herbicides may be effectively managed utilizing another herbicide from a different Group or by using other cultural or mechanical practices.  \\\\n6.1 General Weed Management RecommendationsTo minimize the occurrence of glyphosate-resistant biotypes observe the following general weed management recommendations:\\\\n* 1 Scout your fields before and after herbicide applications.\\\\n* Start with a clean field, using either a",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "cotton. To maximize yield potential, spray cotton early to eliminate competing weeds. Many perennial weeds will be controlled or suppressed with one or more applications of this product. In general, an initial application of 1 quart per acre on 1 to 3 inch tall annual grass and broadleaf weeds is recommended. This product may be applied postemergence at rates up to 1.5 quarts per acre per application. In addition to broadcast applications, post-directed spray equipment may be used to achieve weed coverage.TANK MIXTURES: This product may be tank-mixed with the following products and applied postemergence (in-crop) over the top of Roundup Ready Flex cotton. Ensure that the specific product being used in the tank mixture is registered for application postemergence (in-crop) to cotton. Read and follow label directions of all products in the tank mixture.[Insert active ingredient(s) or brand nane of product(s) containing the following active ingredients that, at the tirne of printing, are registered for use postemergence (in-crop) to cotton: clethodim, fluazifop-P- butyl, metolachlor, s-metolachlor, pyrithiobac-sodium, quizalofop-p-ethyl, sethoxydim, trifloxysulfuron-sodium.Assure II, Dual MAGNUM, Envoke, Fusilade, Poast Plus, Select, Stalwart, StapleStaple may cause leaf yellowing and/or leaf crinkling when applied postemergence (in-crop).Dual Magnum and Stalwart applied over the top of Roundup Ready cotton may cause leaf injury in the form of necrotic spotting to exposed cotton",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "Ready Canola (Winter Varieties)|\\\\n|12.4|Roundup Ready Corn 2|\\\\n|12.5|Roundup Ready Gene Cotton|\\\\n|12.6|Roundup Ready Flex Cotton|\\\\n|12.7|Roundup Ready Gene Soybeans|\\\\n|12.8|Roundup Ready Gene Sugar Beets|\\\\n  \\\\n13 13.0 NON-CROP USES AROUND THE FARMSTEAD\\\\n|13.1|General Weed Control and Trim-And-Edge|\\\\n| :---: | :---: |\\\\n|13.2|Greenhouse/Shade house|\\\\n|13.3|Chemical Mowing|\\\\n|13.4|Cut Stumps|\\\\n|13.5|Habitat Management|\\\\n  \\\\n14 14.0 ANNUAL WEEDS RATE SECTION\\\\n|14.1|Annual Weeds -- Tank Mixtures with 2,4-D, Dicamba, or Tordon 22K|\\\\n| :---: | :---: |\\\\n|14.2|Annual Weeds - Hand-Held or Backpack Equipment|\\\\n|14.3|Annual Weeds - Tank Mixtures with Atrazine for Fallow and Reduced Tillage Systems|\\\\n\\\\n* 15 15.0 PERENNIAL WEEDS RATE SECTION\\\\n* 16 16.0 WOODY BRUSH AND TREES RATE SECTION\\\\n* 17 17.0 LIMIT OF WARRANTY AND LIABILITY\\\\n  \\\\n1.0 INGREDIENTS  \\\\nACTIVE INGREDIENT:\\\\n|*Glyphosate, N-(phosphonomethyl)glycine, in the form of its isopropylamine salt .|41.0%|\\\\n| :---: | :---: |\\\\n|OTHER INGREDIENTS:....|59.0%|\\\\n||100.0%|\\\\n*Contains 480 grams per liter or 4 pounds per U.S. gallon of the active ingredient glyphosate, in the form of its isopropylamine salt. Equivalent to 356 grams per liter or 3 pounds per U.S. gallon of the acid, glyphosate.license granted under any non-U.S. patent(s).\\\\n## 2.0 IMPORTANT PHONE NUMBERS\\\\nVersion: 3-Jun-2006Master Label 524-454\\\\n* I. MAIN LABEL FOR FOOD CROP USES\\\\n1. FOR PRODUCT INFORMATION OR ASSISTANCE IN USING THIS PRODUCT, CALL TOLL-FREE,\\\\n1-800-332-3111\\\\n2. IN CASE OF",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "this product in 5 to 20 gallons of spray solution per acre. Carefully select proper nozzle and spray pressure to avoid spraying a fine mist. For best results with ground application equipment, use flat spray nozzles. Check for even distribution of spray droplets.For aerial applications. All labeled treatments may be made by aerial equipment where appropriate, provided that the applicator complies with the precautions and restrictions specified on this product\'s labeling. in particular in the \\\\\\"Aerial Equipment\\\\\\" section. Apply this product in 3 to 15 gallons of water per acre. See the \\\\\\"APPLICATION EQUIPMENT AND TECHNIQUES\\\\\\" section of this label for procedures to avoid spray drift that may cause injury to any vegetation not intended for treatment. Use of appropriate buffer zones will help prevent injury to adjacent vegetation.For proper stewardship of aerial applications over the top of Roundup Ready crops, Monsanto recommends that growers and applicators read and follow all precautions and procedures contained in the use guide \\\\\\"A Guide to On-Target Aerial Application.\\\\\\" Copies of this publication are available by calling 1-800-ROUNDUP (1-800-768-6387).ATTENTION: AVOID DRIFT. EXTREME CARE MUST BE USED WHEN APPLYING THIS PRODUCT TO PREVENT INJURY TO DESIRABLE PLANTS AND CROPS WHICH DO NOT CONTAIN A GLYPHOSATE TOLERANT GENE.TANK MIXTURE: Tank mixtures with other herbicides, insecticides, fungicides, micronutrients or foliar fertilizers may result in reduced weed control or crop injury",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "weeds in a Roundup Ready crop by applying glyphosate to the weeds and to the Roundup Ready crop, are protected under several U.S. Patents, including 5,352,605 and 5,633,435. A license to use Roundup Ready seed must be obtained prior to use. Monsanto retains ownership of the gene and process technologies, and the Purchaser of the seed receives the right to use the licensed genes and technologies subject to the limited use license conditions. Seed containing a Roundup Ready trait cannot be used for research and demonstration, reverse engineering or in connection with herbicide registration. Progeny seed containing the Roundup Ready trait cannot be saved for replanting or transferred to others for replanting. Contact your Authorized Monsanto Retailer for information on obtaining a limited use iicense.Sprayer Preparation: It is important that sprayer and mixing equipment be clean and free of pesticide residue before making applications of this product. Follow the cleaning procedures specified on the label of the product(s) previously used. THOROUGHLY CLEAN THE SPRAY TANK AND ALL LINES AND FILTERS TO ELIMINATE POTENTIAL CONTAMINATION FROM OTHER HERBICIDES PRIOR TO MIXING AND APPLYING THIS PRODUCT.For ground broadcast applications. Apply this product in 5 to 20 gallons of spray solution per acre. Carefully select proper nozzle and spray pressure to avoid spraying a fine mist. For best results with ground application equipment, use flat spray nozzles. Check for even distribution of spray",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "quarts per acre|\\\\n|Maximum preharvest application rate|1 quart per acre|\\\\nGENERAL PRECAUTIONS/RESTRICTIONS: See the \\\\\\"ROUNDUP READY CROPS\\\\\\" section of this label for general precautionary instructions for use in Roundup Ready crops. See the \\\\\\"GENERAL INFORMATION\\\\\\" section of this label for more information on \\\\\\"Annual Maximum Application Rates.\\\\\\" Refer to individual tank mixture product label for restrictions and precautions, use according to the most restrictive precautionary statements for each product in the tank mixture.\\\\n## Preplant, At-Planting, Preemergence\\\\nUSE INSTRUCTIONS: This product may be applied before, during or after planting.TANK MIXTURES: This product may be tank-mixed with 2,4-D, Banvel or Clarity and applied prior to planting only This product may be tank-mixed with the following products and applied prior to crop emergence. Ensure that the specific product being used in the tank mixture is registered for application prior to emergence of soybeans. Read and follow label directions of all products in the tank mixture.[Insert active ingredient(s) or brand name of product(s) containing the following active ingredients that, at the time of printing, are registered for use preplant, at-planting and/or preemergence to soybeans: alachlor, atrazine, carfentrazone-ethyl, chlorimuron ethyl, clethodim, clomazone, cloransulam-methyl, dimethenamid, dimethenamid-p, fenoxyprop, fluazifop-p-butyl, flufenacet, flumetsulam, flumiclorac pentyl ester, flumioxazin, fomesafen, imazaquin,",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "chunk" : "524-454  \\\\nyu/r9\\\\n# I. MAIN LABEL FOR FOOD CROP USES\\\\n\\\\n## Dormant Application\\\\nKerb 50-W, Lexone, Raptor, Sencor, Sinbar, Velpar AlfaMax.]\\\\n## Winter Treatment\\\\n[Insert active ingredient(s) or brand name of product(s) containing the following active ingredients that, at the time of printing, are registered for use on alfalfa: 2,4-DB, diuron, hexazinone.Butoxone, Diruon, Velpar AlfaMax.]PRECAUTIONS, RESTRICTIONS: Tank mixtures of this product with other herbicides, insecticides, or fungicides may result in crop injury or reduced weed control. Applications should not be made to frozen or snow covered ground.\\\\n## 12.2 Roundup Ready Canola (Spring)\\\\nRoundup Ready spring canola is defined as those Roundup Ready canola varieties that are seeded in the spring and harvested in the fall and do not enter a winter dormancy period.TYPES OF APPLICATIONS: Preplant, At-Planting, Preemergence, Postemergence (In-crop).DO NOT USE THIS PRODUCT ON CANOLA WITH A GLYPHOSATE TOLERANT GENE PLANTED IN THE FOLLOWING STATES: ALABAMA, DELAWARE, FLORIDA, GEORGIA, KENTUCKY, MARYLAND, NEW JERSEY, NORTH CAROLINA, SOUTH CAROLINA, TENNESSEE, VIRGINIA AND WEST VIRGINIA, EXCEPT FOR USES IN WILDLIFE FOOD PLOTS THAT WILL NOT BE HARVESTED FOR HUMAN OR LIVESTOCK FOOD.\\\\n|Preplant, At-planting, Preemergence applications|2 quarts per acre|\\\\n| :---: | :---: |\\\\n|Total in-crop application from emergence to 6-leaf stage|1 quart per acre|\\\\nGENERAL PRECAUTIONS AND RESTRICTIONS: See the \\\\\\"ROUNDUP READY CROPS\\\\\\" section of this label",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "General Information\\\\nAVOID CONTACT OF HERBICIDE WITH FOLIAGE, GREEN STEMS, EXPOSED NON-WOODY ROOTS OR FRUIT OF CROPS (EXCEPT AS SPECIFIED FOR INDIVIDUAL ROUNDUP READY CROPS), DESIRABLE PLANTS AND TREES, BECAUSE SEVERE INJURY OR DESTRUCTION MAY RESULT.See \\\\\\"GENERAL INFORMATION\\\\\\" and \\\\\\"MIXING\\\\\\" sections of the label booklet for [INSERT BRAND NAME] for essential product performance information.The Roundup Ready designation indicates that the alfalfa contains a patented gene that provides tolerance to this product. Information on Roundup Ready alfalfa varieties may be obtained from your seed supplier or Monsanto representative. Roundup Ready crop varieties must be purchased from an\'authorized licensed seed supplier.See the \\\\\\"ROUNDUP READY CROPS\\\\\\" section of the [INSERT BRAND NAME] label booklet for general precautionary instructions for use in Roundup Ready crops. Do NOT combine the instructions in this supplemental label with other recommendations listed in the \\\\\\"PASTURE GRASSES, FORAGE LEGUMES, AND RANGELANDS\\\\\\" section of the [INSERT BRAND NAME] label booklet intended for alfalfa varieties that do not contain a glyphosate tolerance gene.\\\\n## DIRECTIONS FOR USE\\\\nThis product will control many troublesome emerged weeds with over-the-top apptications in Roundup Ready alfalfa grown for seed. Over-the-top applications may be made from emergence through the late vegetative stage, and spot treatments may be made from early bud stage through seed harvest.For ground applications with broadcast",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "Monsanto suppiemental labeling for this product include all applications of this product that can be made onto the specified Roundup Ready crops during the complete cropping season. DO NOT combine these treatment instructions with those for crops in the \\\\\\"ANNUAL AND PERENNIAL CROPS (ALPHABETICAL)\\\\\\" section of this label that do not contain a glyphosate tolerant gene, unless otherwise directed in this product\'s labeling.MONSANTO COMPANY RECOMMENDS USE OF THIS PRODUCT FOR POSTEMERGENCE (IN- CROP) APPLICATION ONLY ON CROPS DESIGNATED AS CONTAINING A GLYPHOSATE TOLERANT GENE. Applying this product to crops that are not designated as Roundup Ready will result in severe crop injury and yield loss. Avoid contact with foliage, green stems, or fruit of crops, or any desirable plants that do not contain a glyphosate tolerant gene, since severe plant injury or destruction will result. The Roundup Ready designation indicates that the crop contains a patented gene that provides tolerance to this product. Information on Roundup Ready crops may be obtained from your seed supplier or Monsanto representative. Roundup Ready crops must be purchased from an authorized licensed seed supplier.NOTE: Roundup Ready seed, and the method of selectively controlling weeds in a Roundup Ready crop by applying glyphosate to the weeds and to the Roundup Ready crop, are protected under several U.S. Patents, including 5,352,605 and 5,633,435. A license to use Roundup Ready seed must be obtained prior to use. Monsanto",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  } ],\n  "request_id" : "2d9c0fa5-6fae-4065-8088-50610e099b2d"\n}'
2025-01-18 18:31:11,217 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:31:11,219 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:31:11,679 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:31:21,215 - DEBUG - executing SQL/command
2025-01-18 18:31:21,215 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...]
2025-01-18 18:31:21,215 - DEBUG - sequence counter: 19
2025-01-18 18:31:21,215 - DEBUG - Request id: d4142ea1-6553-49ed-b136-7a6add08601f
2025-01-18 18:31:21,215 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...]
2025-01-18 18:31:21,216 - DEBUG - is_file_transfer: True
2025-01-18 18:31:21,216 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:31:21,216 - DEBUG - _cmd_query
2025-01-18 18:31:21,216 - DEBUG - serialize_to_dict() called
2025-01-18 18:31:21,216 - DEBUG - Cache Entry: (0, 1737246665049808, 0)
2025-01-18 18:31:21,216 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246665049808, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 18:31:21,216 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...], sequence_id=[19], is_file_transfer=[False]
2025-01-18 18:31:21,217 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:31:21,217 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:31:21,217 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:31:21,217 - DEBUG - Request guid: ecd89516-5f77-4c2c-a333-dd0764404662
2025-01-18 18:31:21,217 - DEBUG - socket timeout: 60
2025-01-18 18:31:21,377 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=d4142ea1-6553-49ed-b136-7a6add08601f&request_guid=ecd89516-5f77-4c2c-a333-dd0764404662 HTTP/1.1" 200 3519
2025-01-18 18:31:21,377 - DEBUG - SUCCESS
2025-01-18 18:31:21,377 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:31:21,377 - DEBUG - ret[code] = None, after post request
2025-01-18 18:31:21,377 - DEBUG - Query id: 01b9cdff-0002-4c77-0007-08ea001fdd2e
2025-01-18 18:31:21,377 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246676775374, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:31:21,377 - DEBUG - Cache Entry: (0, 1737246665049808, 0)
2025-01-18 18:31:21,377 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246676775374, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:31:21,378 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:31:21,378 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:31:21,378 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:31:21,378 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:31:21,378 - DEBUG - Cache Entry: (0, 1737246676775374, 0)
2025-01-18 18:31:21,378 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:31:21,378 - DEBUG - sfqid: 01b9cdff-0002-4c77-0007-08ea001fdd2e
2025-01-18 18:31:21,378 - DEBUG - query execution done
2025-01-18 18:31:21,378 - DEBUG - SUCCESS
2025-01-18 18:31:21,378 - DEBUG - PUT OR GET: False
2025-01-18 18:31:21,378 - DEBUG - Query result format: arrow
2025-01-18 18:31:21,378 - INFO - Number of results in first chunk: 54
2025-01-18 18:31:21,378 - DEBUG - Execute query [queryID: 01b9cdff-0002-4c77-0007-08ea001fdd2e] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:31:21,378 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:31:21,378 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:31:21,378 - DEBUG - Batches read: 1
2025-01-18 18:31:21,380 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:31:33,827 - INFO - Closing session: 1980125954386758
2025-01-18 18:31:33,827 - INFO - Canceling all running queries
2025-01-18 18:31:33,827 - DEBUG - cursor
2025-01-18 18:31:33,827 - DEBUG - executing SQL/command
2025-01-18 18:31:33,827 - DEBUG - query: [select system$cancel_all_queries(1980125954386758)]
2025-01-18 18:31:33,827 - DEBUG - sequence counter: 20
2025-01-18 18:31:33,827 - DEBUG - Request id: 87c16f10-688f-4e23-8e2e-437811955612
2025-01-18 18:31:33,827 - DEBUG - running query [select system$cancel_all_queries(1980125954386758)]
2025-01-18 18:31:33,828 - DEBUG - is_file_transfer: True
2025-01-18 18:31:33,828 - DEBUG - _cmd_query
2025-01-18 18:31:33,828 - DEBUG - serialize_to_dict() called
2025-01-18 18:31:33,828 - DEBUG - Cache Entry: (0, 1737246676775374, 0)
2025-01-18 18:31:33,828 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246676775374, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:31:33,828 - DEBUG - sql=[select system$cancel_all_queries(1980125954386758)], sequence_id=[20], is_file_transfer=[False]
2025-01-18 18:31:33,828 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:31:33,829 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:31:33,829 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:31:33,829 - DEBUG - Request guid: 142afb04-cbfc-4243-a314-550c2c472c38
2025-01-18 18:31:33,829 - DEBUG - socket timeout: 60
2025-01-18 18:31:33,920 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=87c16f10-688f-4e23-8e2e-437811955612&request_guid=142afb04-cbfc-4243-a314-550c2c472c38 HTTP/1.1" 200 1761
2025-01-18 18:31:33,920 - DEBUG - SUCCESS
2025-01-18 18:31:33,920 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:31:33,920 - DEBUG - ret[code] = None, after post request
2025-01-18 18:31:33,920 - DEBUG - Query id: 01b9cdff-0002-4c76-0007-08ea001fbe0a
2025-01-18 18:31:33,920 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246689321722, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:31:33,920 - DEBUG - Cache Entry: (0, 1737246676775374, 0)
2025-01-18 18:31:33,920 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246689321722, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:31:33,920 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:31:33,920 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:31:33,920 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:31:33,920 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:31:33,921 - DEBUG - Cache Entry: (0, 1737246689321722, 0)
2025-01-18 18:31:33,921 - DEBUG - sfqid: 01b9cdff-0002-4c76-0007-08ea001fbe0a
2025-01-18 18:31:33,921 - DEBUG - query execution done
2025-01-18 18:31:33,921 - DEBUG - SUCCESS
2025-01-18 18:31:33,921 - DEBUG - PUT OR GET: False
2025-01-18 18:31:33,921 - DEBUG - Query result format: arrow
2025-01-18 18:31:33,921 - INFO - Number of results in first chunk: 1
2025-01-18 18:31:33,921 - DEBUG - Execute query [queryID: 01b9cdff-0002-4c76-0007-08ea001fbe0a] select system$cancel_all_queries(1980125954386758)
2025-01-18 18:31:33,921 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:31:33,921 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:31:33,921 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:31:33,921 - DEBUG - Batches read: 0
2025-01-18 18:31:33,921 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:31:33,921 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:31:33,921 - INFO - closed
2025-01-18 18:31:33,921 - DEBUG - Closing telemetry client.
2025-01-18 18:31:33,926 - DEBUG - Sending 1 logs to telemetry. Data is {'logs': [{'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_imported_packages', 'value': "{'quopri', 'html', 'zoneinfo', 'io', 'anyio', 'token', 'signal', 'platformdirs', 'importlib', 'glob', 'tzlocal', 'httpx', 'math', 'functools', 'requests', 'bisect', 'PIL', 'pydoc', 'cython_runtime', 'subprocess', 'dis', 'typing', 'sniffio', 'zlib', 'selectors', 'ctypes', 'select', 'textwrap', 'pkgutil', 'configparser', 're', 'pprint', 'getpass', 'cloudpickle', 'sre_parse', 'toml', 'codecs', 'genericpath', 'bz2', 'pydantic', 'pathlib', 'xml', 'http', 'json', 'colorama', 'atexit', 'timeit', 'asyncio', 'socket', 'yaml', 'attr', 'jiter', 'contextvars', 'shutil', 'builtins', 'webbrowser', 'win32api', 'dataclasses', 'stat', 'csv', 'ntpath', 'pywin32_system32', 'runpy', 'threading', 'sre_constants', 'jwt', 'nturl2path', 'absl', 'distro', 'site', 'streamlit', 'abc', 'snowflake', 'queue', 'copyreg', 'git', 'secrets', 'ipaddress', 'smmap', 'stringprep', 'ssl', 'gettext', 'os', 'pyexpat', 'traceback', 'multiprocessing', 'sys', 'packaging', 'datetime', 'heapq', 'OpenSSL', 'plistlib', 'itertools', 'msvcrt', 'win32com', 'public', 'annotated_types', 'uu', 'weakref', 'uuid', 'hmac', 'urllib', 'shlex', 'pkg_resources', 'email', 'filelock', 'google', 'pygments', 'pywin32_bootstrap', 'unicodedata', 'decimal', 'inspect', 'zipfile', 'cryptography', 'ast', 'cmath', 'fractions', 'asn1crypto', 'certifi', 'charset_normalizer', 'pythoncom', 'random', 'difflib', 'posixpath', 'pydantic_core', 'warnings', 'locale', 'pickle', 'click', 'gzip', 'reprlib', 'opcode', 'idna', 'plotly', 'mmap', 'numpy', 'errno', 'enum', 'string', 'platform', 'winreg', 'getopt', 'lzma', 'pyarrow', 'copy', 'gitdb', 'contextlib', 'tornado', 'time', 'tarfile', 'nt', 'gc', 'base64', 'linecache', 'encodings', 'collections', 'tomlkit', 'zipimport', 'urllib3', 'marshal', 'sortedcontainers', 'typing_extensions', 'unittest', 'rich', 'pywintypes', 'blinker', 'tempfile', 'sysconfig', 'tokenize', 'numbers', 'pytz', 'types', 'pandas', 'operator', 'argparse', 'logging', 'sre_compile', 'calendar', 'colorsys', 'dateutil', 'concurrent', 'hashlib', 'binascii', 'six', 'watchdog', 'openai', 'keyword', 'fnmatch', 'statistics', 'struct', 'mimetypes', 'array', 'cachetools'}"}, 'timestamp': '1737246617392'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_session_created', 'data': {'start_time': 1737246617392, 'created_by_snowpark': 0}}, 'timestamp': '1737246617392'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386758, 'thread_ident': 31912}}, 'timestamp': '1737246617392'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdfe-0002-4c5d-0007-08ea001fccce', 'value': 4592}, 'timestamp': '1737246617540'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdfe-0002-4c78-0007-08ea002010c2', 'value': 4593}, 'timestamp': '1737246617720'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdfe-0002-4c78-0007-08ea002010c2', 'value': 0}, 'timestamp': '1737246617720'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '8309d49f-156a-431e-a9a5-16f6ea1a295d', 'query_plan_complexity': {'column': 1}, 'thread_ident': 31912}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdfe-0002-4c78-0007-08ea002010c2']}}, 'timestamp': '1737246617721'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdfe-0002-4c5d-0007-08ea001fccd2', 'value': 4593}, 'timestamp': '1737246617798'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386758, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.07139158248901367, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246617798'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdfe-0002-4c79-0007-08ea0020013a', 'value': 4594}, 'timestamp': '1737246617889'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386758, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.08777713775634766, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246617889'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdfe-0002-4c7a-0007-08ea001ff632', 'value': 4594}, 'timestamp': '1737246617978'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386758, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.0883331298828125, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246617978'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdfe-0002-4c79-0007-08ea0020013e', 'value': 4592}, 'timestamp': '1737246618082'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdfe-0002-4c79-0007-08ea0020013e', 'value': 1}, 'timestamp': '1737246618083'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '799661f2-d243-4507-92ec-98f8790f2ce8', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 31912}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdfe-0002-4c79-0007-08ea0020013e']}}, 'timestamp': '1737246618083'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdfe-0002-4c78-0007-08ea002010c6', 'value': 4595}, 'timestamp': '1737246622957'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386758, 'thread_ident': 32260}}, 'timestamp': '1737246622962'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdfe-0002-4c78-0007-08ea002010ca', 'value': 4592}, 'timestamp': '1737246623022'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386758, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.06005358695983887, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246623022'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdfe-0002-4d87-0007-08ea001fe5d2', 'value': 4592}, 'timestamp': '1737246623095'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386758, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.07169222831726074, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246623095'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdfe-0002-4c70-0007-08ea001f9eea', 'value': 4593}, 'timestamp': '1737246623196'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386758, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.09939742088317871, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246623196'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdfe-0002-4d87-0007-08ea001fe5d6', 'value': 4593}, 'timestamp': '1737246623277'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdfe-0002-4d87-0007-08ea001fe5d6', 'value': 1}, 'timestamp': '1737246623278'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '5f7b37a2-43a9-4615-ba7b-058ec08ae0c4', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 32260}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdfe-0002-4d87-0007-08ea001fe5d6']}}, 'timestamp': '1737246623278'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737246623782'}, {'message': {'source': 'snowflake.core', 'version': '1.0.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'python_api', 'data': {'class_name': 'CortexSearchServiceResource', 'func_name': 'search'}}, 'timestamp': '1737246623785'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737246634579'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdfe-0002-4c71-0007-08ea00202046', 'value': 4594}, 'timestamp': '1737246634948'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9cdfe-0002-4c71-0007-08ea00202046', 'value': 1}, 'timestamp': '1737246634948'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdfe-0002-4c71-0007-08ea00202046', 'value': 3}, 'timestamp': '1737246634951'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'd4e25258-8f95-4f60-a333-cd0bda01b4ed', 'query_plan_complexity': {'column': 1}, 'thread_ident': 32260}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9cdfe-0002-4c71-0007-08ea00202046']}}, 'timestamp': '1737246634952'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdfe-0002-4c79-0007-08ea00200146', 'value': 4642}, 'timestamp': '1737246635315'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9cdfe-0002-4c79-0007-08ea00200146', 'value': 1}, 'timestamp': '1737246635315'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdfe-0002-4c79-0007-08ea00200146', 'value': 2}, 'timestamp': '1737246635317'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '477232c0-b7e1-4b9f-9cf7-0c080e432fb5', 'query_plan_complexity': {'column': 1}, 'thread_ident': 32260}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9cdfe-0002-4c79-0007-08ea00200146']}}, 'timestamp': '1737246635317'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdff-0002-4c76-0007-08ea001fbe02', 'value': 4595}, 'timestamp': '1737246669298'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386758, 'thread_ident': 31800}}, 'timestamp': '1737246669307'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdff-0002-4c79-0007-08ea0020014a', 'value': 4600}, 'timestamp': '1737246669378'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386758, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.07030367851257324, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246669378'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdff-0002-4c76-0007-08ea001fbe06', 'value': 4593}, 'timestamp': '1737246669464'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386758, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.08445167541503906, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246669464'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdff-0002-4c79-0007-08ea0020014e', 'value': 4591}, 'timestamp': '1737246669532'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386758, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.06646299362182617, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246669532'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdff-0002-4c71-0007-08ea00202082', 'value': 4594}, 'timestamp': '1737246669658'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdff-0002-4c71-0007-08ea00202082', 'value': 0}, 'timestamp': '1737246669658'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'd29f2d23-ef31-401d-b92a-64c2ab944e1f', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 31800}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9cdff-0002-4c71-0007-08ea00202082']}}, 'timestamp': '1737246669659'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737246670157'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737246670927'}, {'message': {'source': 'snowflake.core', 'version': '1.0.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'python_api', 'data': {'class_name': 'CortexSearchServiceResource', 'func_name': 'search'}}, 'timestamp': '1737246670929'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737246681211'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdff-0002-4c77-0007-08ea001fdd2e', 'value': 4594}, 'timestamp': '1737246681378'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9cdff-0002-4c77-0007-08ea001fdd2e', 'value': 1}, 'timestamp': '1737246681378'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdff-0002-4c77-0007-08ea001fdd2e', 'value': 2}, 'timestamp': '1737246681380'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '796824d5-4c65-4444-9c7e-a63812a4707a', 'query_plan_complexity': {'column': 1}, 'thread_ident': 31800}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9cdff-0002-4c77-0007-08ea001fdd2e']}}, 'timestamp': '1737246681380'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386758, 'thread_ident': 31208}}, 'timestamp': '1737246693827'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9cdff-0002-4c76-0007-08ea001fbe0a', 'value': 4593}, 'timestamp': '1737246693921'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9cdff-0002-4c76-0007-08ea001fbe0a', 'value': 0}, 'timestamp': '1737246693921'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_temp_table_cleanup', 'data': {'session_id': 1980125954386758, 'temp_table_cleaner_enabled': False, 'num_temp_tables_cleaned': 0, 'num_temp_tables_created': 0}}, 'timestamp': '1737246693921'}]}.
2025-01-18 18:31:33,927 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:31:33,927 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:31:33,927 - DEBUG - remaining request timeout: 5000 ms, retry cnt: 1
2025-01-18 18:31:33,928 - DEBUG - Request guid: 42c7f3ce-cdfa-428c-9464-8658846c19b7
2025-01-18 18:31:33,928 - DEBUG - socket timeout: 60
2025-01-18 18:31:33,988 - DEBUG - Hit retryable client error. Retrying... Ignore the following error stack: Event loop is closed
RuntimeError: Event loop is closed
2025-01-18 18:31:33,988 - DEBUG - retrying: errorclass=<class 'RuntimeError'>, error=Event loop is closed, counter=1, sleeping=1(s)
2025-01-18 18:31:35,003 - DEBUG - Update retry count to 1
2025-01-18 18:31:35,003 - DEBUG - Update sleep time to 1 seconds
2025-01-18 18:31:35,003 - DEBUG - remaining request timeout: 3924 ms, retry cnt: 2
2025-01-18 18:31:35,003 - DEBUG - Request guid: fd4a7e23-8428-49da-80da-0258cb374455
2025-01-18 18:31:35,003 - DEBUG - socket timeout: 60
2025-01-18 18:31:35,005 - DEBUG - Starting new HTTPS connection (2): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:31:35,468 - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None
2025-01-18 18:31:35,468 - DEBUG - ocsp_response_cache_uri: file://C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 18:31:35,468 - DEBUG - OCSP_VALIDATION_CACHE size: 310
2025-01-18 18:31:35,468 - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 18:31:35,468 - DEBUG - OCSP dynamic cache server RETRY URL: None
2025-01-18 18:31:35,468 - DEBUG - validating certificate: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:31:35,468 - DEBUG - # of certificates: 4
2025-01-18 18:31:35,469 - DEBUG - subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:31:35,469 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:31:35,469 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:31:35,470 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:31:35,472 - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:31:35,472 - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])
2025-01-18 18:31:35,474 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:31:35,474 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:31:35,476 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:31:35,476 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:31:35,477 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 18:31:35,477 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:31:35,479 - DEBUG - ok
2025-01-18 18:31:35,539 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /telemetry/send?request_guid=fd4a7e23-8428-49da-80da-0258cb374455 HTTP/1.1" 200 86
2025-01-18 18:31:35,540 - DEBUG - SUCCESS
2025-01-18 18:31:35,540 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:31:35,540 - DEBUG - ret[code] = None, after post request
2025-01-18 18:31:35,540 - DEBUG - Successfully uploading metrics to telemetry.
2025-01-18 18:31:35,540 - INFO - No async queries seem to be running, deleting session
2025-01-18 18:31:35,541 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:31:35,541 - DEBUG - remaining request timeout: 5000 ms, retry cnt: 1
2025-01-18 18:31:35,541 - DEBUG - Request guid: e6a5e51f-4ecf-4983-ac61-fdac73174663
2025-01-18 18:31:35,541 - DEBUG - socket timeout: 60
2025-01-18 18:31:35,614 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /session?delete=true&request_guid=e6a5e51f-4ecf-4983-ac61-fdac73174663 HTTP/1.1" 200 76
2025-01-18 18:31:35,615 - DEBUG - SUCCESS
2025-01-18 18:31:35,615 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:31:35,615 - DEBUG - ret[code] = None, after post request
2025-01-18 18:31:35,616 - DEBUG - clear_cache() called
2025-01-18 18:31:35,616 - DEBUG - Session is closed
2025-01-18 18:31:35,616 - INFO - Closed session: 1980125954386758
2025-01-18 18:32:31,254 - DEBUG - reading configuration file from C:\Users\ajjay\AppData\Local\snowflake\config.toml
2025-01-18 18:32:31,256 - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.10.11, Platform: Windows-10-10.0.22635-SP0
2025-01-18 18:32:31,256 - DEBUG - connect
2025-01-18 18:32:31,256 - DEBUG - __config
2025-01-18 18:32:31,256 - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:32:31,256 - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:32:31,257 - DEBUG - use_numpy: False
2025-01-18 18:32:31,257 - DEBUG - initialized
2025-01-18 18:32:31,257 - DEBUG - REST API object was created: gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:32:31,327 - DEBUG - Public key fingerprint is SHA256:MMhnSja/3AZz/s91ePEYdo5p27RfYwIdt7+BsyWAYGg=
2025-01-18 18:32:31,328 - DEBUG - authenticate
2025-01-18 18:32:31,328 - DEBUG - account=gmcpdcz-mt01740, user=preciousjunk, database=DEV_SRC_INGEST, schema=EPA_PROCESSED, warehouse=app_wh, role=app_role, request_id=b2f705cf-6e66-4768-a7d2-253744caf3d6
2025-01-18 18:32:31,328 - DEBUG - body['data']: {'CLIENT_APP_ID': 'PythonConnector', 'CLIENT_APP_VERSION': '3.12.4', 'SVN_REVISION': None, 'ACCOUNT_NAME': 'gmcpdcz-mt01740', 'LOGIN_NAME': 'preciousjunk', 'CLIENT_ENVIRONMENT': {'APPLICATION': 'streamlit', 'OS': 'Windows', 'OS_VERSION': 'Windows-10-10.0.22635-SP0', 'PYTHON_VERSION': '3.10.11', 'PYTHON_RUNTIME': 'CPython', 'PYTHON_COMPILER': 'MSC v.1929 64 bit (AMD64)', 'OCSP_MODE': 'FAIL_OPEN', 'TRACING': 10, 'LOGIN_TIMEOUT': None, 'NETWORK_TIMEOUT': None, 'SOCKET_TIMEOUT': None}, 'AUTHENTICATOR': 'SNOWFLAKE_JWT', 'TOKEN': '******', 'SESSION_PARAMETERS': {'CLIENT_PREFETCH_THREADS': 4}}
2025-01-18 18:32:31,329 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 18:32:31,329 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 18:32:31,329 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:32:31,329 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:32:31,329 - DEBUG - Request guid: b98f1ba2-d670-4147-92b6-da98e2d47065
2025-01-18 18:32:31,329 - DEBUG - socket timeout: 10
2025-01-18 18:32:31,331 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:32:31,735 - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None
2025-01-18 18:32:31,758 - DEBUG - cache directory: C:\Users\ajjay\AppData\Local\Snowflake\Caches
2025-01-18 18:32:31,759 - DEBUG - ocsp_response_cache_uri: file://C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 18:32:31,759 - DEBUG - OCSP_VALIDATION_CACHE size: 310
2025-01-18 18:32:31,759 - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 18:32:31,759 - DEBUG - OCSP dynamic cache server RETRY URL: None
2025-01-18 18:32:31,759 - DEBUG - validating certificate: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:32:31,759 - DEBUG - # of certificates: 4
2025-01-18 18:32:31,759 - DEBUG - subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:32:31,760 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:32:31,760 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:32:31,760 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:32:31,763 - DEBUG - reading certificate bundle: D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\certifi\cacert.pem
2025-01-18 18:32:31,775 - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:32:31,776 - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])
2025-01-18 18:32:31,777 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:32:31,778 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:32:31,779 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:32:31,780 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:32:31,781 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 18:32:31,781 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:32:31,784 - DEBUG - ok
2025-01-18 18:32:31,909 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /session/v1/login-request?request_id=b2f705cf-6e66-4768-a7d2-253744caf3d6&databaseName=DEV_SRC_INGEST&schemaName=EPA_PROCESSED&warehouse=app_wh&roleName=app_role&request_guid=b98f1ba2-d670-4147-92b6-da98e2d47065 HTTP/1.1" 200 1781
2025-01-18 18:32:31,910 - DEBUG - SUCCESS
2025-01-18 18:32:31,910 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:32:31,910 - DEBUG - ret[code] = None, after post request
2025-01-18 18:32:31,910 - DEBUG - completed authentication
2025-01-18 18:32:31,910 - DEBUG - token = ******
2025-01-18 18:32:31,910 - DEBUG - master_token = ******
2025-01-18 18:32:31,910 - DEBUG - id_token = NULL
2025-01-18 18:32:31,911 - DEBUG - mfa_token = NULL
2025-01-18 18:32:31,912 - DEBUG - cursor
2025-01-18 18:32:31,913 - INFO - Snowpark Session information: 
"version" : 1.26.0,
"python.version" : 3.10.11,
"python.connector.version" : 3.12.4,
"python.connector.session.id" : 1980125954386766,
"os.name" : Windows

2025-01-18 18:32:31,913 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:32:31,913 - DEBUG - created a new SFPoolManager
2025-01-18 18:32:31,913 - INFO - Querying the server for client info
2025-01-18 18:32:31,913 - DEBUG - cursor
2025-01-18 18:32:31,913 - DEBUG - executing SQL/command
2025-01-18 18:32:31,913 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:32:31,914 - DEBUG - sequence counter: 1
2025-01-18 18:32:31,914 - DEBUG - Request id: 7365a739-9e48-4440-916c-d62161980bf7
2025-01-18 18:32:31,914 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:32:31,914 - DEBUG - is_file_transfer: True
2025-01-18 18:32:31,914 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:31,914 - DEBUG - _cmd_query
2025-01-18 18:32:31,914 - DEBUG - serialize_to_dict() called
2025-01-18 18:32:31,914 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[1], is_file_transfer=[False]
2025-01-18 18:32:31,915 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:32:31,916 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:32:31,916 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:32:31,916 - DEBUG - Request guid: 44f349b0-12fc-410e-bf0d-7073ebb98bd3
2025-01-18 18:32:31,916 - DEBUG - socket timeout: 60
2025-01-18 18:32:32,007 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=7365a739-9e48-4440-916c-d62161980bf7&request_guid=44f349b0-12fc-410e-bf0d-7073ebb98bd3 HTTP/1.1" 200 2619
2025-01-18 18:32:32,007 - DEBUG - SUCCESS
2025-01-18 18:32:32,007 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:32:32,007 - DEBUG - ret[code] = None, after post request
2025-01-18 18:32:32,007 - DEBUG - Query id: 01b9ce00-0002-4c79-0007-08ea00200166
2025-01-18 18:32:32,007 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246747405624, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:32:32,007 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246747405624, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:32:32,008 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:32:32,008 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:32,008 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:32,008 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:32:32,008 - DEBUG - Cache Entry: (0, 1737246747405624, 0)
2025-01-18 18:32:32,008 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:32,008 - DEBUG - sfqid: 01b9ce00-0002-4c79-0007-08ea00200166
2025-01-18 18:32:32,008 - DEBUG - query execution done
2025-01-18 18:32:32,008 - DEBUG - SUCCESS
2025-01-18 18:32:32,008 - DEBUG - PUT OR GET: False
2025-01-18 18:32:32,008 - DEBUG - Query result format: arrow
2025-01-18 18:32:32,008 - INFO - Number of results in first chunk: 1
2025-01-18 18:32:32,008 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:32:32,008 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:32:32,008 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:32:32,008 - DEBUG - Batches read: 0
2025-01-18 18:32:32,009 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:32:32,009 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:32:32,009 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:32:32,010 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:32:32,010 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:32:32,010 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:32:32,010 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:32:32,020 - DEBUG - executing SQL/command
2025-01-18 18:32:32,020 - DEBUG - query: [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:32:32,020 - DEBUG - sequence counter: 2
2025-01-18 18:32:32,020 - DEBUG - Request id: a8bd9e1b-d1c4-4558-8208-99895222e442
2025-01-18 18:32:32,020 - DEBUG - running query [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:32:32,020 - DEBUG - is_file_transfer: True
2025-01-18 18:32:32,020 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:32,020 - DEBUG - _cmd_query
2025-01-18 18:32:32,020 - DEBUG - serialize_to_dict() called
2025-01-18 18:32:32,020 - DEBUG - Cache Entry: (0, 1737246747405624, 0)
2025-01-18 18:32:32,021 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246747405624, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:32:32,021 - DEBUG - sql=[SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...], sequence_id=[2], is_file_transfer=[False]
2025-01-18 18:32:32,021 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:32:32,021 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:32:32,021 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:32:32,021 - DEBUG - Request guid: cfc63556-216d-43dd-85aa-1fe1f0dec27e
2025-01-18 18:32:32,021 - DEBUG - socket timeout: 60
2025-01-18 18:32:32,101 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=a8bd9e1b-d1c4-4558-8208-99895222e442&request_guid=cfc63556-216d-43dd-85aa-1fe1f0dec27e HTTP/1.1" 200 2112
2025-01-18 18:32:32,101 - DEBUG - SUCCESS
2025-01-18 18:32:32,101 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:32:32,102 - DEBUG - ret[code] = None, after post request
2025-01-18 18:32:32,102 - DEBUG - Query id: 01b9ce00-0002-4c79-0007-08ea0020016a
2025-01-18 18:32:32,102 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246747500201, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:32:32,102 - DEBUG - Cache Entry: (0, 1737246747405624, 0)
2025-01-18 18:32:32,102 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246747500201, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:32:32,102 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:32:32,102 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:32,102 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:32,102 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:32:32,102 - DEBUG - Cache Entry: (0, 1737246747500201, 0)
2025-01-18 18:32:32,102 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:32,102 - DEBUG - sfqid: 01b9ce00-0002-4c79-0007-08ea0020016a
2025-01-18 18:32:32,102 - DEBUG - query execution done
2025-01-18 18:32:32,102 - DEBUG - SUCCESS
2025-01-18 18:32:32,102 - DEBUG - PUT OR GET: False
2025-01-18 18:32:32,102 - DEBUG - Query result format: arrow
2025-01-18 18:32:32,102 - INFO - Number of results in first chunk: 1
2025-01-18 18:32:32,102 - DEBUG - Execute query [queryID: 01b9ce00-0002-4c79-0007-08ea0020016a] 
        SELECT LOCATION, LATITUDE, LONGITUDE
        FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS 
        WHERE USER_ID = 'default_user'
        
2025-01-18 18:32:32,102 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:32:32,103 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:32:32,103 - DEBUG - Arrow chunk info: batchCount 1, columnCount 3, use_numpy: 0
2025-01-18 18:32:32,103 - DEBUG - Batches read: 0
2025-01-18 18:32:32,103 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:32:32,103 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:32:32,108 - DEBUG - executing SQL/command
2025-01-18 18:32:32,108 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:32:32,108 - DEBUG - sequence counter: 3
2025-01-18 18:32:32,108 - DEBUG - Request id: 0222b378-dc5a-4123-aacc-106c2d8b4e87
2025-01-18 18:32:32,108 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:32:32,108 - DEBUG - is_file_transfer: True
2025-01-18 18:32:32,108 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:32,108 - DEBUG - _cmd_query
2025-01-18 18:32:32,108 - DEBUG - serialize_to_dict() called
2025-01-18 18:32:32,108 - DEBUG - Cache Entry: (0, 1737246747500201, 0)
2025-01-18 18:32:32,108 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246747500201, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:32:32,108 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[3], is_file_transfer=[False]
2025-01-18 18:32:32,109 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:32:32,109 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:32:32,109 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:32:32,109 - DEBUG - Request guid: aaf94e8e-2f87-4b33-ada0-8f32a9a35195
2025-01-18 18:32:32,109 - DEBUG - socket timeout: 60
2025-01-18 18:32:32,198 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=0222b378-dc5a-4123-aacc-106c2d8b4e87&request_guid=aaf94e8e-2f87-4b33-ada0-8f32a9a35195 HTTP/1.1" 200 1503
2025-01-18 18:32:32,199 - DEBUG - SUCCESS
2025-01-18 18:32:32,199 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:32:32,199 - DEBUG - ret[code] = None, after post request
2025-01-18 18:32:32,199 - DEBUG - Query id: 01b9ce00-0002-4c72-0007-08ea001fafe2
2025-01-18 18:32:32,199 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246747597027, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:32:32,199 - DEBUG - Cache Entry: (0, 1737246747500201, 0)
2025-01-18 18:32:32,199 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246747597027, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:32:32,199 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:32:32,199 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:32,199 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:32,199 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:32:32,199 - DEBUG - Cache Entry: (0, 1737246747597027, 0)
2025-01-18 18:32:32,199 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:32,199 - DEBUG - sfqid: 01b9ce00-0002-4c72-0007-08ea001fafe2
2025-01-18 18:32:32,199 - DEBUG - query execution done
2025-01-18 18:32:32,199 - DEBUG - SUCCESS
2025-01-18 18:32:32,199 - DEBUG - PUT OR GET: False
2025-01-18 18:32:32,200 - DEBUG - Query result format: arrow
2025-01-18 18:32:32,200 - INFO - Number of results in first chunk: 0
2025-01-18 18:32:32,201 - DEBUG - executing SQL/command
2025-01-18 18:32:32,201 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:32:32,201 - DEBUG - sequence counter: 4
2025-01-18 18:32:32,201 - DEBUG - Request id: a091a919-bee7-405d-abb1-587ca520bfca
2025-01-18 18:32:32,201 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:32:32,201 - DEBUG - is_file_transfer: True
2025-01-18 18:32:32,201 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:32,201 - DEBUG - _cmd_query
2025-01-18 18:32:32,201 - DEBUG - serialize_to_dict() called
2025-01-18 18:32:32,201 - DEBUG - Cache Entry: (0, 1737246747597027, 0)
2025-01-18 18:32:32,201 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246747597027, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:32:32,201 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[4], is_file_transfer=[False]
2025-01-18 18:32:32,203 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:32:32,203 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:32:32,203 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:32:32,203 - DEBUG - Request guid: aeb875f6-7529-4783-a75a-f4fe70c8a2ed
2025-01-18 18:32:32,203 - DEBUG - socket timeout: 60
2025-01-18 18:32:32,283 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=a091a919-bee7-405d-abb1-587ca520bfca&request_guid=aeb875f6-7529-4783-a75a-f4fe70c8a2ed HTTP/1.1" 200 1373
2025-01-18 18:32:32,283 - DEBUG - SUCCESS
2025-01-18 18:32:32,284 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:32:32,284 - DEBUG - ret[code] = None, after post request
2025-01-18 18:32:32,284 - DEBUG - Query id: 01b9ce00-0002-4c70-0007-08ea001f9f06
2025-01-18 18:32:32,284 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246747681567, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:32:32,284 - DEBUG - Cache Entry: (0, 1737246747597027, 0)
2025-01-18 18:32:32,284 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246747681567, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:32:32,284 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:32:32,284 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:32,284 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:32,284 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:32:32,284 - DEBUG - Cache Entry: (0, 1737246747681567, 0)
2025-01-18 18:32:32,284 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:32,284 - DEBUG - sfqid: 01b9ce00-0002-4c70-0007-08ea001f9f06
2025-01-18 18:32:32,284 - DEBUG - query execution done
2025-01-18 18:32:32,284 - DEBUG - SUCCESS
2025-01-18 18:32:32,284 - DEBUG - PUT OR GET: False
2025-01-18 18:32:32,284 - DEBUG - Query result format: arrow
2025-01-18 18:32:32,284 - INFO - Number of results in first chunk: 0
2025-01-18 18:32:32,285 - DEBUG - executing SQL/command
2025-01-18 18:32:32,285 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:32:32,286 - DEBUG - sequence counter: 5
2025-01-18 18:32:32,286 - DEBUG - Request id: acbb2540-c311-45b8-b2e7-4698c36ce96b
2025-01-18 18:32:32,286 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:32:32,286 - DEBUG - is_file_transfer: True
2025-01-18 18:32:32,286 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:32,286 - DEBUG - _cmd_query
2025-01-18 18:32:32,286 - DEBUG - serialize_to_dict() called
2025-01-18 18:32:32,286 - DEBUG - Cache Entry: (0, 1737246747681567, 0)
2025-01-18 18:32:32,286 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246747681567, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:32:32,286 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[5], is_file_transfer=[False]
2025-01-18 18:32:32,287 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:32:32,287 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:32:32,287 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:32:32,287 - DEBUG - Request guid: 2dfdd120-97c4-40e5-8fd6-84c5c86a62e8
2025-01-18 18:32:32,287 - DEBUG - socket timeout: 60
2025-01-18 18:32:32,341 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=acbb2540-c311-45b8-b2e7-4698c36ce96b&request_guid=2dfdd120-97c4-40e5-8fd6-84c5c86a62e8 HTTP/1.1" 200 1373
2025-01-18 18:32:32,343 - DEBUG - SUCCESS
2025-01-18 18:32:32,343 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:32:32,343 - DEBUG - ret[code] = None, after post request
2025-01-18 18:32:32,343 - DEBUG - Query id: 01b9ce00-0002-4c70-0007-08ea001f9f0a
2025-01-18 18:32:32,343 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246747727549, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:32:32,343 - DEBUG - Cache Entry: (0, 1737246747681567, 0)
2025-01-18 18:32:32,343 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246747727549, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:32:32,343 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:32:32,343 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:32,344 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:32,344 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:32:32,344 - DEBUG - Cache Entry: (0, 1737246747727549, 0)
2025-01-18 18:32:32,344 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:32,344 - DEBUG - sfqid: 01b9ce00-0002-4c70-0007-08ea001f9f0a
2025-01-18 18:32:32,344 - DEBUG - query execution done
2025-01-18 18:32:32,344 - DEBUG - SUCCESS
2025-01-18 18:32:32,344 - DEBUG - PUT OR GET: False
2025-01-18 18:32:32,344 - DEBUG - Query result format: arrow
2025-01-18 18:32:32,344 - INFO - Number of results in first chunk: 0
2025-01-18 18:32:32,345 - DEBUG - executing SQL/command
2025-01-18 18:32:32,345 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:32:32,345 - DEBUG - sequence counter: 6
2025-01-18 18:32:32,345 - DEBUG - Request id: b3a45352-5b00-40c8-9644-64c730efd68c
2025-01-18 18:32:32,345 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:32:32,345 - DEBUG - is_file_transfer: True
2025-01-18 18:32:32,345 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:32,345 - DEBUG - _cmd_query
2025-01-18 18:32:32,345 - DEBUG - serialize_to_dict() called
2025-01-18 18:32:32,345 - DEBUG - Cache Entry: (0, 1737246747727549, 0)
2025-01-18 18:32:32,345 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246747727549, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:32:32,345 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[6], is_file_transfer=[False]
2025-01-18 18:32:32,346 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:32:32,346 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:32:32,346 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:32:32,346 - DEBUG - Request guid: a29be171-1656-45b8-8362-64d81c3726d9
2025-01-18 18:32:32,346 - DEBUG - socket timeout: 60
2025-01-18 18:32:32,523 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=b3a45352-5b00-40c8-9644-64c730efd68c&request_guid=a29be171-1656-45b8-8362-64d81c3726d9 HTTP/1.1" 200 2620
2025-01-18 18:32:32,523 - DEBUG - SUCCESS
2025-01-18 18:32:32,524 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:32:32,524 - DEBUG - ret[code] = None, after post request
2025-01-18 18:32:32,524 - DEBUG - Query id: 01b9ce00-0002-4c79-0007-08ea0020016e
2025-01-18 18:32:32,524 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246747853918, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:32:32,524 - DEBUG - Cache Entry: (0, 1737246747727549, 0)
2025-01-18 18:32:32,524 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246747853918, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:32:32,524 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:32:32,524 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:32,524 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:32,524 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:32:32,524 - DEBUG - Cache Entry: (0, 1737246747853918, 0)
2025-01-18 18:32:32,524 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:32,524 - DEBUG - sfqid: 01b9ce00-0002-4c79-0007-08ea0020016e
2025-01-18 18:32:32,524 - DEBUG - query execution done
2025-01-18 18:32:32,524 - DEBUG - SUCCESS
2025-01-18 18:32:32,524 - DEBUG - PUT OR GET: False
2025-01-18 18:32:32,524 - DEBUG - Query result format: arrow
2025-01-18 18:32:32,524 - INFO - Number of results in first chunk: 54
2025-01-18 18:32:32,524 - DEBUG - Execute query [queryID: 01b9ce00-0002-4c79-0007-08ea0020016e]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:32:32,524 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:32:32,525 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:32:32,525 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:32:32,525 - DEBUG - Batches read: 0
2025-01-18 18:32:32,525 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:32:32,525 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:32:36,415 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:32:36,415 - INFO - Querying the server for client info
2025-01-18 18:32:36,415 - DEBUG - cursor
2025-01-18 18:32:36,415 - DEBUG - executing SQL/command
2025-01-18 18:32:36,415 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:32:36,415 - DEBUG - sequence counter: 7
2025-01-18 18:32:36,415 - DEBUG - Request id: f65949a3-dd92-4310-94bd-93f1f00a2250
2025-01-18 18:32:36,415 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:32:36,415 - DEBUG - is_file_transfer: True
2025-01-18 18:32:36,415 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:36,415 - DEBUG - _cmd_query
2025-01-18 18:32:36,415 - DEBUG - serialize_to_dict() called
2025-01-18 18:32:36,415 - DEBUG - Cache Entry: (0, 1737246747853918, 0)
2025-01-18 18:32:36,415 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246747853918, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:32:36,415 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[7], is_file_transfer=[False]
2025-01-18 18:32:36,417 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:32:36,417 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:32:36,417 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:32:36,417 - DEBUG - Request guid: a0b75315-d66a-4ed8-8ef0-15e681d8e336
2025-01-18 18:32:36,417 - DEBUG - socket timeout: 60
2025-01-18 18:32:36,541 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=f65949a3-dd92-4310-94bd-93f1f00a2250&request_guid=a0b75315-d66a-4ed8-8ef0-15e681d8e336 HTTP/1.1" 200 2617
2025-01-18 18:32:36,543 - DEBUG - SUCCESS
2025-01-18 18:32:36,543 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:32:36,543 - DEBUG - ret[code] = None, after post request
2025-01-18 18:32:36,543 - DEBUG - Query id: 01b9ce00-0002-4d87-0007-08ea001fe5f2
2025-01-18 18:32:36,543 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246751932780, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:32:36,543 - DEBUG - Cache Entry: (0, 1737246747853918, 0)
2025-01-18 18:32:36,543 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246751932780, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:32:36,544 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:32:36,544 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:36,544 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:36,544 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:32:36,544 - DEBUG - Cache Entry: (0, 1737246751932780, 0)
2025-01-18 18:32:36,544 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:36,544 - DEBUG - sfqid: 01b9ce00-0002-4d87-0007-08ea001fe5f2
2025-01-18 18:32:36,544 - DEBUG - query execution done
2025-01-18 18:32:36,544 - DEBUG - SUCCESS
2025-01-18 18:32:36,545 - DEBUG - PUT OR GET: False
2025-01-18 18:32:36,545 - DEBUG - Query result format: arrow
2025-01-18 18:32:36,545 - INFO - Number of results in first chunk: 1
2025-01-18 18:32:36,545 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:32:36,545 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:32:36,545 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:32:36,545 - DEBUG - Batches read: 0
2025-01-18 18:32:36,545 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:32:36,545 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:32:36,545 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:32:36,545 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:32:36,545 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:32:36,545 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:32:36,545 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:32:36,549 - DEBUG - cursor
2025-01-18 18:32:36,549 - DEBUG - executing SQL/command
2025-01-18 18:32:36,549 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:32:36,549 - DEBUG - sequence counter: 8
2025-01-18 18:32:36,549 - DEBUG - Request id: 5bc5e97a-11b7-4c96-b94a-dc47b3eb8127
2025-01-18 18:32:36,549 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:32:36,549 - DEBUG - is_file_transfer: True
2025-01-18 18:32:36,549 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:36,550 - DEBUG - _cmd_query
2025-01-18 18:32:36,550 - DEBUG - serialize_to_dict() called
2025-01-18 18:32:36,550 - DEBUG - Cache Entry: (0, 1737246751932780, 0)
2025-01-18 18:32:36,550 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246751932780, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:32:36,550 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[8], is_file_transfer=[False]
2025-01-18 18:32:36,550 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:32:36,551 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:32:36,551 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:32:36,551 - DEBUG - Request guid: 7e1f6ffc-162a-4af2-87e8-ddd059391439
2025-01-18 18:32:36,551 - DEBUG - socket timeout: 60
2025-01-18 18:32:36,613 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=5bc5e97a-11b7-4c96-b94a-dc47b3eb8127&request_guid=7e1f6ffc-162a-4af2-87e8-ddd059391439 HTTP/1.1" 200 1501
2025-01-18 18:32:36,613 - DEBUG - SUCCESS
2025-01-18 18:32:36,614 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:32:36,614 - DEBUG - ret[code] = None, after post request
2025-01-18 18:32:36,614 - DEBUG - Query id: 01b9ce00-0002-4c70-0007-08ea001f9f0e
2025-01-18 18:32:36,614 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246752009249, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:32:36,614 - DEBUG - Cache Entry: (0, 1737246751932780, 0)
2025-01-18 18:32:36,614 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246752009249, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:32:36,615 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:32:36,615 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:36,615 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:36,615 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:32:36,615 - DEBUG - Cache Entry: (0, 1737246752009249, 0)
2025-01-18 18:32:36,615 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:36,615 - DEBUG - sfqid: 01b9ce00-0002-4c70-0007-08ea001f9f0e
2025-01-18 18:32:36,615 - DEBUG - query execution done
2025-01-18 18:32:36,615 - DEBUG - SUCCESS
2025-01-18 18:32:36,615 - DEBUG - PUT OR GET: False
2025-01-18 18:32:36,615 - DEBUG - Query result format: arrow
2025-01-18 18:32:36,615 - INFO - Number of results in first chunk: 0
2025-01-18 18:32:36,616 - DEBUG - executing SQL/command
2025-01-18 18:32:36,616 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:32:36,616 - DEBUG - sequence counter: 9
2025-01-18 18:32:36,616 - DEBUG - Request id: f250526d-bda0-4dd7-ac84-c64fedfd1c45
2025-01-18 18:32:36,616 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:32:36,616 - DEBUG - is_file_transfer: True
2025-01-18 18:32:36,616 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:36,616 - DEBUG - _cmd_query
2025-01-18 18:32:36,617 - DEBUG - serialize_to_dict() called
2025-01-18 18:32:36,617 - DEBUG - Cache Entry: (0, 1737246752009249, 0)
2025-01-18 18:32:36,617 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246752009249, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:32:36,617 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[9], is_file_transfer=[False]
2025-01-18 18:32:36,617 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:32:36,617 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:32:36,617 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:32:36,618 - DEBUG - Request guid: 99d28e3e-17a7-4235-b193-0082f02f7bb3
2025-01-18 18:32:36,618 - DEBUG - socket timeout: 60
2025-01-18 18:32:36,729 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=f250526d-bda0-4dd7-ac84-c64fedfd1c45&request_guid=99d28e3e-17a7-4235-b193-0082f02f7bb3 HTTP/1.1" 200 1373
2025-01-18 18:32:36,729 - DEBUG - SUCCESS
2025-01-18 18:32:36,730 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:32:36,730 - DEBUG - ret[code] = None, after post request
2025-01-18 18:32:36,730 - DEBUG - Query id: 01b9ce00-0002-4c78-0007-08ea002010d6
2025-01-18 18:32:36,730 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246752131559, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:32:36,730 - DEBUG - Cache Entry: (0, 1737246752009249, 0)
2025-01-18 18:32:36,730 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246752131559, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:32:36,730 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:32:36,730 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:36,730 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:36,730 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:32:36,730 - DEBUG - Cache Entry: (0, 1737246752131559, 0)
2025-01-18 18:32:36,730 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:36,730 - DEBUG - sfqid: 01b9ce00-0002-4c78-0007-08ea002010d6
2025-01-18 18:32:36,730 - DEBUG - query execution done
2025-01-18 18:32:36,730 - DEBUG - SUCCESS
2025-01-18 18:32:36,730 - DEBUG - PUT OR GET: False
2025-01-18 18:32:36,731 - DEBUG - Query result format: arrow
2025-01-18 18:32:36,731 - INFO - Number of results in first chunk: 0
2025-01-18 18:32:36,731 - DEBUG - executing SQL/command
2025-01-18 18:32:36,732 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:32:36,732 - DEBUG - sequence counter: 10
2025-01-18 18:32:36,732 - DEBUG - Request id: 6f7b0cf0-c7ce-4efc-925f-d43f8fbcc6f6
2025-01-18 18:32:36,732 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:32:36,732 - DEBUG - is_file_transfer: True
2025-01-18 18:32:36,732 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:36,732 - DEBUG - _cmd_query
2025-01-18 18:32:36,732 - DEBUG - serialize_to_dict() called
2025-01-18 18:32:36,732 - DEBUG - Cache Entry: (0, 1737246752131559, 0)
2025-01-18 18:32:36,732 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246752131559, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:32:36,732 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[10], is_file_transfer=[False]
2025-01-18 18:32:36,733 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:32:36,733 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:32:36,733 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:32:36,733 - DEBUG - Request guid: 52eca1f8-8a19-4828-92cd-78ba1536af60
2025-01-18 18:32:36,733 - DEBUG - socket timeout: 60
2025-01-18 18:32:36,794 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=6f7b0cf0-c7ce-4efc-925f-d43f8fbcc6f6&request_guid=52eca1f8-8a19-4828-92cd-78ba1536af60 HTTP/1.1" 200 1375
2025-01-18 18:32:36,794 - DEBUG - SUCCESS
2025-01-18 18:32:36,794 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:32:36,794 - DEBUG - ret[code] = None, after post request
2025-01-18 18:32:36,794 - DEBUG - Query id: 01b9ce00-0002-4d87-0007-08ea001fe5f6
2025-01-18 18:32:36,794 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246752190454, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:32:36,795 - DEBUG - Cache Entry: (0, 1737246752131559, 0)
2025-01-18 18:32:36,795 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246752190454, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:32:36,795 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:32:36,795 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:36,795 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:36,795 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:32:36,795 - DEBUG - Cache Entry: (0, 1737246752190454, 0)
2025-01-18 18:32:36,795 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:36,795 - DEBUG - sfqid: 01b9ce00-0002-4d87-0007-08ea001fe5f6
2025-01-18 18:32:36,795 - DEBUG - query execution done
2025-01-18 18:32:36,795 - DEBUG - SUCCESS
2025-01-18 18:32:36,795 - DEBUG - PUT OR GET: False
2025-01-18 18:32:36,795 - DEBUG - Query result format: arrow
2025-01-18 18:32:36,795 - INFO - Number of results in first chunk: 0
2025-01-18 18:32:36,796 - DEBUG - executing SQL/command
2025-01-18 18:32:36,797 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:32:36,797 - DEBUG - sequence counter: 11
2025-01-18 18:32:36,797 - DEBUG - Request id: 97589382-fc40-43ca-99a2-314b5a0f9330
2025-01-18 18:32:36,797 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:32:36,797 - DEBUG - is_file_transfer: True
2025-01-18 18:32:36,797 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:36,797 - DEBUG - _cmd_query
2025-01-18 18:32:36,797 - DEBUG - serialize_to_dict() called
2025-01-18 18:32:36,797 - DEBUG - Cache Entry: (0, 1737246752190454, 0)
2025-01-18 18:32:36,797 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246752190454, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:32:36,797 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[11], is_file_transfer=[False]
2025-01-18 18:32:36,800 - DEBUG - Opentelemtry otel injection failed
Traceback (most recent call last):
  File "D:\Personal\Data Science\LLM RAG\Streamlit\streamlit-env\lib\site-packages\snowflake\connector\network.py", line 487, in request
    from opentelemetry.trace.propagation.tracecontext import (
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:32:36,800 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:32:36,800 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:32:36,801 - DEBUG - Request guid: 5b1e5a6c-4752-4b8c-91ef-88a86694d57c
2025-01-18 18:32:36,801 - DEBUG - socket timeout: 60
2025-01-18 18:32:36,904 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=97589382-fc40-43ca-99a2-314b5a0f9330&request_guid=5b1e5a6c-4752-4b8c-91ef-88a86694d57c HTTP/1.1" 200 2620
2025-01-18 18:32:36,904 - DEBUG - SUCCESS
2025-01-18 18:32:36,904 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:32:36,904 - DEBUG - ret[code] = None, after post request
2025-01-18 18:32:36,904 - DEBUG - Query id: 01b9ce00-0002-4c5d-0007-08ea001fccda
2025-01-18 18:32:36,904 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246752293298, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:32:36,904 - DEBUG - Cache Entry: (0, 1737246752190454, 0)
2025-01-18 18:32:36,904 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246752293298, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:32:36,905 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:32:36,905 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:36,905 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:36,905 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:32:36,905 - DEBUG - Cache Entry: (0, 1737246752293298, 0)
2025-01-18 18:32:36,905 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:36,905 - DEBUG - sfqid: 01b9ce00-0002-4c5d-0007-08ea001fccda
2025-01-18 18:32:36,905 - DEBUG - query execution done
2025-01-18 18:32:36,905 - DEBUG - SUCCESS
2025-01-18 18:32:36,905 - DEBUG - PUT OR GET: False
2025-01-18 18:32:36,905 - DEBUG - Query result format: arrow
2025-01-18 18:32:36,905 - INFO - Number of results in first chunk: 54
2025-01-18 18:32:36,905 - DEBUG - Execute query [queryID: 01b9ce00-0002-4c5d-0007-08ea001fccda]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:32:36,905 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:32:36,905 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:32:36,905 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:32:36,905 - DEBUG - Batches read: 0
2025-01-18 18:32:36,905 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:32:36,905 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:32:36,914 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:32:36,917 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:32:37,495 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:32:37,523 - DEBUG - calling method search on class CortexSearchServiceResource after submitting telemetry if enabled
2025-01-18 18:32:37,523 - INFO - performing a HTTP POST call to /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query
2025-01-18 18:32:37,523 - DEBUG - request has path params: {'database': 'DEV_SRC_INGEST', 'schema': 'EPA_PROCESSED', 'service_name': 'CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST'}, query_params: [], header params: {'Accept': 'application/json', 'Content-Type': 'application/json'} and body: QueryRequest(query='Tell me about roundup', columns=['chunk', 'relative_path', 'PRODUCTNAME', 'COMPANYNAME', 'CATEGORY_EPA_TYPE', 'SIGNAL_WORD'], filter=None, limit=10, experimental=None)
2025-01-18 18:32:37,525 - DEBUG - making an http POST call to 'https://gmcpdcz-mt01740.snowflakecomputing.com:443/api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query'
2025-01-18 18:32:37,525 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:32:38,034 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query HTTP/1.1" 200 None
2025-01-18 18:32:38,035 - DEBUG - created a RESTResponse with status 200 and length of 18392
2025-01-18 18:32:38,035 - DEBUG - response body: b'{\n  "results" : [ {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\"\\n]",\n    "chunk" : "{\\"content\\":\\"\\\\n# FRQNT PANEL\\\\n\\\\n# Roundup* L&G READY-TO-USE by Moasanto Grass & Weed Killer\\\\n  \\\\n[graphics of weeds dying in 1-7 days]\\\\n* .READY.TO-USE, RBCUIRES NO\\\\n* : SYSTEMIC GRASS AND WEED KILLER FOR SPOT TREATMENT OF UNDESIRABLB VEGETATION\\\\n* . KILLS LARELID E WEEDS AND GRASSES, ROOTS AND ALL\\\\nGUARANTEEDT AESIN NTIH OREAETLACATEN  \\\\nS YTITACTKNGUAWANEEORXOAR KONEKRAE\\\\n* :_DOES NOT HAVE SOIL ACTIVTTY\\\\n+-SUTABLB-FOR- USE-AROUND-FLOWER-BEDS TREES,-SHRUTS FENCES-WALKS -AND-SPOT TRRATMEIT IN LAWNS\\\\nSHRURSAND ORWN RENOXATION (This Taun renovation*phrase no for 24 Oz container sixe.)\\\\n* : THIS 24 OZ BOTTLE CAN BE REFILLED WTIH ONE TABLET OF ROUNDUF QUIK STIK GRASS & WEED KILLER!. SEE STORAGE AND DISPOSAL SECTION FOR MORE INFORMATION. H\\\\nRd thai laST Wlor wg thT p?x3a? Ox ony msR4ng ioTT nmRRan (moved io back panel)NOTICEt- Dwyor-axoumo all soponaibility for mfoty and uce not in macrdan vith axeptablo-raturm at once unopanod (moved to back panel)Keep out ad reach ot chlldren. CAUTION!Soo haak penai for Preenutionary Statemanta and Direstions for Uce.  \\\\nBEST AYAILA&1.  \\\\nBEST AYAILA&1.BPA-Rrg Na S04 320 (moved to back panel)\\\\n## MONSAATO COMRANY\\\\nAGRICULTURAL PRODUCTS-&T LOUIS, MIS$OURI-63167 USA (moved to back panel)  \\\\nACTIVE INGREDIENT:\\\\n|in the form of is isopropylamine k|0.96%|\\\\n| :---: | :---: |\\\\n  \\\\n:*1 ...(delered isems below are moved to back panel)ny non porn(6)CTradamerk of Menseno Company  \\\\nNET 24 fi z (1pi 8m} (delcied)  \\\\n:MONSANTO COMPANY-1993  \\\\nA000.X 1 (print piae",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "relative_path" : "EPA_LABEL_PDF/SHACKLE_HERBICIDE_524-330.pdf",\n    "PRODUCTNAME" : "SHACKLE HERBICIDE"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "this product in 5 to 20 gallons of spray solution per acre. Carefully select proper nozzle and spray pressure to avoid spraying a fine mist. For best results with ground application equipment, use flat spray nozzles. Check for even distribution of spray droplets.For aerial applications. All labeled treatments may be made by aerial equipment where appropriate, provided that the applicator complies with the precautions and restrictions specified on this product\'s labeling. in particular in the \\\\\\"Aerial Equipment\\\\\\" section. Apply this product in 3 to 15 gallons of water per acre. See the \\\\\\"APPLICATION EQUIPMENT AND TECHNIQUES\\\\\\" section of this label for procedures to avoid spray drift that may cause injury to any vegetation not intended for treatment. Use of appropriate buffer zones will help prevent injury to adjacent vegetation.For proper stewardship of aerial applications over the top of Roundup Ready crops, Monsanto recommends that growers and applicators read and follow all precautions and procedures contained in the use guide \\\\\\"A Guide to On-Target Aerial Application.\\\\\\" Copies of this publication are available by calling 1-800-ROUNDUP (1-800-768-6387).ATTENTION: AVOID DRIFT. EXTREME CARE MUST BE USED WHEN APPLYING THIS PRODUCT TO PREVENT INJURY TO DESIRABLE PLANTS AND CROPS WHICH DO NOT CONTAIN A GLYPHOSATE TOLERANT GENE.TANK MIXTURE: Tank mixtures with other herbicides, insecticides, fungicides, micronutrients or foliar fertilizers may result in reduced weed control or crop injury",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "chunk" : "weeds in a Roundup Ready crop by applying glyphosate to the weeds and to the Roundup Ready crop, are protected under several U.S. Patents, including 5,352,605 and 5,633,435. A license to use Roundup Ready seed must be obtained prior to use. Monsanto retains ownership of the gene and process technologies, and the Purchaser of the seed receives the right to use the licensed genes and technologies subject to the limited use license conditions. Seed containing a Roundup Ready trait cannot be used for research and demonstration, reverse engineering or in connection with herbicide registration. Progeny seed containing the Roundup Ready trait cannot be saved for replanting or transferred to others for replanting. Contact your Authorized Monsanto Retailer for information on obtaining a limited use iicense.Sprayer Preparation: It is important that sprayer and mixing equipment be clean and free of pesticide residue before making applications of this product. Follow the cleaning procedures specified on the label of the product(s) previously used. THOROUGHLY CLEAN THE SPRAY TANK AND ALL LINES AND FILTERS TO ELIMINATE POTENTIAL CONTAMINATION FROM OTHER HERBICIDES PRIOR TO MIXING AND APPLYING THIS PRODUCT.For ground broadcast applications. Apply this product in 5 to 20 gallons of spray solution per acre. Carefully select proper nozzle and spray pressure to avoid spraying a fine mist. For best results with ground application equipment, use flat spray nozzles. Check for even distribution of spray",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "\\\\nSincerely, Vuku KWztxd g James A. Tompkins Product Manager 25 Herbicide Branch Registration Division (7505P)\\\\n# MASTER LABEL FOR EPA REG. NO. 524-454\\\\n  \\\\n[Based on EPA approved Text Stamped Nov. 15, 2001] Registered Brand Names:\\\\n# ROUNDUP ORIGINAL II HERBICIDE ROUNDUP ORIGINAL RT HERBICIDE RASCAL PLUS HERBICIDE MON 8709 HERBICIDE HONCHO PLUS HERBICIDE\\\\n  \\\\nTable of Contents for Master Labei\\\\n||Main Label for Food Crop Uses|Page 2|\\\\n| :---: | :---: | :---: |\\\\n|II.|Main Label for Industrial, Turf, & Ornamental Uses|Page 70|\\\\n|III.|Supplementai Labeling|Page 100|\\\\n**See each label part for more detailed table of contents**Master Label 524-454Version: 3-Jun-2000  \\\\n3/119\\\\n# [INSERT BRAND NAME] Herbicide\\\\n  \\\\nComplete Directions for Use  \\\\nEPA Reg. No. 524-454AVOID CONTACT OF HERBICIDE WITH FOLIAGE, GREEN STEMS, EXPOSED NON-WOODY ROOTS OR FRUIT OF CROPS (EXCEPT AS SPECIFIED FOR INDIVIDUAL ROUNDUP READYD CROPS), DESIRABLE PLANTS AND TREES, BECAUSE SEVERE INJURY OR DESTRUCTION MAY RESULT.Herbicide for Roundup Ready\\\\\\" Crops.Selective broad-spectrum weed control in Roundup Ready crops. Non-selective, broad-spectrum weed control for many agricultural systems and farmsteads.A member of the Roundup Family of Agricultural Herbicides by MonsantoThe President\'s Green Chemistry Award was presented in 1996 to Monsanto for its innovative \\\\\\"zero-waste\\\\\\" process in the manufacture of Roundup Herbicide.Not all products recommended on this label are registered for use in California. Check the",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "[INSERT BRAND NAME] will control labeled annual grasses and broadleaf weeds in Roundup Ready Flex cotton. To maximize yield potential, spray cotton early to elininate competing weeds. Many perennial weeds will be controlled or suppressed with one or more applications of this product. In general, an initial application of 1 quart per acre on 1 to 3 inch tall annual grass and broadleaf weeds is recommended. This product may be applied by ground application equipment at rates up to 2 quarts per acre per application postemergence to Roundup Ready Flex cotton. In addition tobroadcast applications, post-directed equipment may be used to achieve weed coverage.NOTE: For specific rates of application and instructions, refer to the \\\\\\"ANNUAL\\\\\\" and \\\\\\"PERENNIAL WEEDS RATE TABLES\\\\\\" in the labei book}et for [INSERT BRAND NAME].PRECAUTIONS, RESTRICTIONS: The maximum rate for any single in-crop application of this product is 2 quarts per acre made using ground application equipment. In-crop application rates above 1 quart per acre made alone, or with the addition of other crop chemical products containing surfactant, may cause a crop response, including leaf speckling or leaf necrosis. Do not exceed a maximum rate of 3 pints per acre of this product when making applications by air. Between layby and 60 percent open bolls, the maximum combined total rate of this product that may be applied is 2 quarts per acre. The maximum combined total of all applications made from crop emergence to 60 percent open",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "Ready Canola (Winter Varieties)|\\\\n|12.4|Roundup Ready Corn 2|\\\\n|12.5|Roundup Ready Gene Cotton|\\\\n|12.6|Roundup Ready Flex Cotton|\\\\n|12.7|Roundup Ready Gene Soybeans|\\\\n|12.8|Roundup Ready Gene Sugar Beets|\\\\n  \\\\n13 13.0 NON-CROP USES AROUND THE FARMSTEAD\\\\n|13.1|General Weed Control and Trim-And-Edge|\\\\n| :---: | :---: |\\\\n|13.2|Greenhouse/Shade house|\\\\n|13.3|Chemical Mowing|\\\\n|13.4|Cut Stumps|\\\\n|13.5|Habitat Management|\\\\n  \\\\n14 14.0 ANNUAL WEEDS RATE SECTION\\\\n|14.1|Annual Weeds -- Tank Mixtures with 2,4-D, Dicamba, or Tordon 22K|\\\\n| :---: | :---: |\\\\n|14.2|Annual Weeds - Hand-Held or Backpack Equipment|\\\\n|14.3|Annual Weeds - Tank Mixtures with Atrazine for Fallow and Reduced Tillage Systems|\\\\n\\\\n* 15 15.0 PERENNIAL WEEDS RATE SECTION\\\\n* 16 16.0 WOODY BRUSH AND TREES RATE SECTION\\\\n* 17 17.0 LIMIT OF WARRANTY AND LIABILITY\\\\n  \\\\n1.0 INGREDIENTS  \\\\nACTIVE INGREDIENT:\\\\n|*Glyphosate, N-(phosphonomethyl)glycine, in the form of its isopropylamine salt .|41.0%|\\\\n| :---: | :---: |\\\\n|OTHER INGREDIENTS:....|59.0%|\\\\n||100.0%|\\\\n*Contains 480 grams per liter or 4 pounds per U.S. gallon of the active ingredient glyphosate, in the form of its isopropylamine salt. Equivalent to 356 grams per liter or 3 pounds per U.S. gallon of the acid, glyphosate.license granted under any non-U.S. patent(s).\\\\n## 2.0 IMPORTANT PHONE NUMBERS\\\\nVersion: 3-Jun-2006Master Label 524-454\\\\n* I. MAIN LABEL FOR FOOD CROP USES\\\\n1. FOR PRODUCT INFORMATION OR ASSISTANCE IN USING THIS PRODUCT, CALL TOLL-FREE,\\\\n1-800-332-3111\\\\n2. IN CASE OF",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "Monsanto suppiemental labeling for this product include all applications of this product that can be made onto the specified Roundup Ready crops during the complete cropping season. DO NOT combine these treatment instructions with those for crops in the \\\\\\"ANNUAL AND PERENNIAL CROPS (ALPHABETICAL)\\\\\\" section of this label that do not contain a glyphosate tolerant gene, unless otherwise directed in this product\'s labeling.MONSANTO COMPANY RECOMMENDS USE OF THIS PRODUCT FOR POSTEMERGENCE (IN- CROP) APPLICATION ONLY ON CROPS DESIGNATED AS CONTAINING A GLYPHOSATE TOLERANT GENE. Applying this product to crops that are not designated as Roundup Ready will result in severe crop injury and yield loss. Avoid contact with foliage, green stems, or fruit of crops, or any desirable plants that do not contain a glyphosate tolerant gene, since severe plant injury or destruction will result. The Roundup Ready designation indicates that the crop contains a patented gene that provides tolerance to this product. Information on Roundup Ready crops may be obtained from your seed supplier or Monsanto representative. Roundup Ready crops must be purchased from an authorized licensed seed supplier.NOTE: Roundup Ready seed, and the method of selectively controlling weeds in a Roundup Ready crop by applying glyphosate to the weeds and to the Roundup Ready crop, are protected under several U.S. Patents, including 5,352,605 and 5,633,435. A license to use Roundup Ready seed must be obtained prior to use. Monsanto",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "General Information\\\\nAVOID CONTACT OF HERBICIDE WITH FOLIAGE, GREEN STEMS, EXPOSED NON-WOODY ROOTS OR FRUIT OF CROPS (EXCEPT AS SPECIFIED FOR INDIVIDUAL ROUNDUP READY CROPS), DESIRABLE PLANTS AND TREES, BECAUSE SEVERE INJURY OR DESTRUCTION MAY RESULT.See \\\\\\"GENERAL INFORMATION\\\\\\" and \\\\\\"MIXING\\\\\\" sections of the label booklet for [INSERT BRAND NAME] for essential product performance information.The Roundup Ready designation indicates that the alfalfa contains a patented gene that provides tolerance to this product. Information on Roundup Ready alfalfa varieties may be obtained from your seed supplier or Monsanto representative. Roundup Ready crop varieties must be purchased from an\'authorized licensed seed supplier.See the \\\\\\"ROUNDUP READY CROPS\\\\\\" section of the [INSERT BRAND NAME] label booklet for general precautionary instructions for use in Roundup Ready crops. Do NOT combine the instructions in this supplemental label with other recommendations listed in the \\\\\\"PASTURE GRASSES, FORAGE LEGUMES, AND RANGELANDS\\\\\\" section of the [INSERT BRAND NAME] label booklet intended for alfalfa varieties that do not contain a glyphosate tolerance gene.\\\\n## DIRECTIONS FOR USE\\\\nThis product will control many troublesome emerged weeds with over-the-top apptications in Roundup Ready alfalfa grown for seed. Over-the-top applications may be made from emergence through the late vegetative stage, and spot treatments may be made from early bud stage through seed harvest.For ground applications with broadcast",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "chunk" : "quarts per acre|\\\\n|Maximum preharvest application rate|1 quart per acre|\\\\nGENERAL PRECAUTIONS/RESTRICTIONS: See the \\\\\\"ROUNDUP READY CROPS\\\\\\" section of this label for general precautionary instructions for use in Roundup Ready crops. See the \\\\\\"GENERAL INFORMATION\\\\\\" section of this label for more information on \\\\\\"Annual Maximum Application Rates.\\\\\\" Refer to individual tank mixture product label for restrictions and precautions, use according to the most restrictive precautionary statements for each product in the tank mixture.\\\\n## Preplant, At-Planting, Preemergence\\\\nUSE INSTRUCTIONS: This product may be applied before, during or after planting.TANK MIXTURES: This product may be tank-mixed with 2,4-D, Banvel or Clarity and applied prior to planting only This product may be tank-mixed with the following products and applied prior to crop emergence. Ensure that the specific product being used in the tank mixture is registered for application prior to emergence of soybeans. Read and follow label directions of all products in the tank mixture.[Insert active ingredient(s) or brand name of product(s) containing the following active ingredients that, at the time of printing, are registered for use preplant, at-planting and/or preemergence to soybeans: alachlor, atrazine, carfentrazone-ethyl, chlorimuron ethyl, clethodim, clomazone, cloransulam-methyl, dimethenamid, dimethenamid-p, fenoxyprop, fluazifop-p-butyl, flufenacet, flumetsulam, flumiclorac pentyl ester, flumioxazin, fomesafen, imazaquin,",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "SEQUENTIAL APPLICATION OF THIS PRODUCT WILL BE REQUIRED TO CONTROL NEW FLUSHES OF WEEDS IN THE ROUNDUP READY SOYBEAN CROP. To control giant ragweed, it is recommended that 1 quart per acre of this product be applied when the weed is 8 to 12 inches tall to increase control and possibly avoid the need for a sequential application.Version: 3-Jun-2006Master Label 524-454\\\\n## 1. MAIN LABEL FOR FOOD CROP USES\\\\nTANK MIXTURES: This product may be tank-mixed with the following products and applied postemergence (in-crop) over the top of Roundup Ready soybeans. Ensure that the specific product being used in the tank mixture is registered for application postemergence (in-crop) to soybeans. Read and follow label directions of all products in the tank mixture.[Insert active ingredient(s) or brand name of product(s) containing the following active ingredients that, at the time of printing, are registered for use postemergence (in-crop) to soybeans: acifluorfen, bentazonchlorimuron ethyl, clethodim, imazethapyr, cloransulam-methyl, fenoxyprop, fluazifop-p- butyl, flumiclorac pentyl ester, fomesafen, imazamox, imazethapyr, lactofen, pendimethalin, quizalofop P-ethyl. sethoxydem, thifensulfuron-methyl.Arrow, Assure II, Basagran, Classic, Cobra, Extreme, FirstRate, Flexstar, Fusilade DX, Fusion, Harmony GT XP, Poast, Poast Plus, Pursuit, Pursuit Plus, Raptor, Reflex, Select, Select MAX, Synchrony STS, Targa, Ultra Blazer.]PRECAUTIONS, RESTRICTIONS: The combined total application from crop emergence",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE"\n  } ],\n  "request_id" : "24545c09-1b31-4813-9679-30ae1b3218ff"\n}'
2025-01-18 18:32:38,037 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:32:38,039 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:32:38,502 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:32:53,033 - DEBUG - executing SQL/command
2025-01-18 18:32:53,033 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...]
2025-01-18 18:32:53,033 - DEBUG - sequence counter: 12
2025-01-18 18:32:53,033 - DEBUG - Request id: 1da35a0e-dabe-4b31-943c-0c36f393b9c3
2025-01-18 18:32:53,033 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...]
2025-01-18 18:32:53,034 - DEBUG - is_file_transfer: True
2025-01-18 18:32:53,034 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:53,034 - DEBUG - _cmd_query
2025-01-18 18:32:53,034 - DEBUG - serialize_to_dict() called
2025-01-18 18:32:53,034 - DEBUG - Cache Entry: (0, 1737246752293298, 0)
2025-01-18 18:32:53,034 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246752293298, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:32:53,034 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...], sequence_id=[12], is_file_transfer=[False]
2025-01-18 18:32:53,035 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:32:53,035 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:32:53,035 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:32:53,035 - DEBUG - Request guid: cf19bbf5-390d-4a81-b598-c75c4599bbad
2025-01-18 18:32:53,035 - DEBUG - socket timeout: 60
2025-01-18 18:32:53,216 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=1da35a0e-dabe-4b31-943c-0c36f393b9c3&request_guid=cf19bbf5-390d-4a81-b598-c75c4599bbad HTTP/1.1" 200 3510
2025-01-18 18:32:53,216 - DEBUG - SUCCESS
2025-01-18 18:32:53,216 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:32:53,217 - DEBUG - ret[code] = None, after post request
2025-01-18 18:32:53,217 - DEBUG - Query id: 01b9ce00-0002-4c79-0007-08ea00200172
2025-01-18 18:32:53,217 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246768590476, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:32:53,217 - DEBUG - Cache Entry: (0, 1737246752293298, 0)
2025-01-18 18:32:53,217 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246768590476, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:32:53,217 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:32:53,217 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:53,217 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:53,217 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:32:53,217 - DEBUG - Cache Entry: (0, 1737246768590476, 0)
2025-01-18 18:32:53,217 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:53,217 - DEBUG - sfqid: 01b9ce00-0002-4c79-0007-08ea00200172
2025-01-18 18:32:53,217 - DEBUG - query execution done
2025-01-18 18:32:53,217 - DEBUG - SUCCESS
2025-01-18 18:32:53,217 - DEBUG - PUT OR GET: False
2025-01-18 18:32:53,217 - DEBUG - Query result format: arrow
2025-01-18 18:32:53,217 - INFO - Number of results in first chunk: 54
2025-01-18 18:32:53,217 - DEBUG - Execute query [queryID: 01b9ce00-0002-4c79-0007-08ea00200172] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:32:53,218 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:32:53,218 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:32:53,218 - DEBUG - Batches read: 1
2025-01-18 18:32:53,221 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:32:53,222 - DEBUG - executing SQL/command
2025-01-18 18:32:53,223 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACK...]
2025-01-18 18:32:53,223 - DEBUG - sequence counter: 13
2025-01-18 18:32:53,223 - DEBUG - Request id: 0acb1008-5840-4c7b-857c-14d0442cc6f3
2025-01-18 18:32:53,223 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACK...]
2025-01-18 18:32:53,223 - DEBUG - is_file_transfer: True
2025-01-18 18:32:53,223 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:53,223 - DEBUG - _cmd_query
2025-01-18 18:32:53,223 - DEBUG - serialize_to_dict() called
2025-01-18 18:32:53,223 - DEBUG - Cache Entry: (0, 1737246768590476, 0)
2025-01-18 18:32:53,223 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246768590476, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:32:53,223 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACK...], sequence_id=[13], is_file_transfer=[False]
2025-01-18 18:32:53,224 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:32:53,224 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:32:53,224 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:32:53,224 - DEBUG - Request guid: 236d2dbc-f87d-4899-8033-36ea3e60e3c0
2025-01-18 18:32:53,224 - DEBUG - socket timeout: 60
2025-01-18 18:32:53,567 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=0acb1008-5840-4c7b-857c-14d0442cc6f3&request_guid=236d2dbc-f87d-4899-8033-36ea3e60e3c0 HTTP/1.1" 200 3464
2025-01-18 18:32:53,568 - DEBUG - SUCCESS
2025-01-18 18:32:53,568 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:32:53,568 - DEBUG - ret[code] = None, after post request
2025-01-18 18:32:53,568 - DEBUG - Query id: 01b9ce00-0002-4c72-0007-08ea001fafe6
2025-01-18 18:32:53,568 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246768934130, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:32:53,568 - DEBUG - Cache Entry: (0, 1737246768590476, 0)
2025-01-18 18:32:53,568 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246768934130, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:32:53,568 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:32:53,568 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:53,568 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:32:53,568 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:32:53,568 - DEBUG - Cache Entry: (0, 1737246768934130, 0)
2025-01-18 18:32:53,568 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:32:53,569 - DEBUG - sfqid: 01b9ce00-0002-4c72-0007-08ea001fafe6
2025-01-18 18:32:53,569 - DEBUG - query execution done
2025-01-18 18:32:53,569 - DEBUG - SUCCESS
2025-01-18 18:32:53,569 - DEBUG - PUT OR GET: False
2025-01-18 18:32:53,569 - DEBUG - Query result format: arrow
2025-01-18 18:32:53,569 - INFO - Number of results in first chunk: 54
2025-01-18 18:32:53,569 - DEBUG - Execute query [queryID: 01b9ce00-0002-4c72-0007-08ea001fafe6] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACKLE_HERBICIDE_524-330.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:32:53,569 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:32:53,569 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:32:53,569 - DEBUG - Batches read: 1
2025-01-18 18:32:53,570 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:33:27,882 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:33:27,883 - INFO - Querying the server for client info
2025-01-18 18:33:27,883 - DEBUG - cursor
2025-01-18 18:33:27,883 - DEBUG - executing SQL/command
2025-01-18 18:33:27,884 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:33:27,884 - DEBUG - sequence counter: 14
2025-01-18 18:33:27,884 - DEBUG - Request id: edff79ae-34eb-4f65-9d8f-601d2c735f79
2025-01-18 18:33:27,884 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:33:27,884 - DEBUG - is_file_transfer: True
2025-01-18 18:33:27,884 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:33:27,884 - DEBUG - _cmd_query
2025-01-18 18:33:27,884 - DEBUG - serialize_to_dict() called
2025-01-18 18:33:27,884 - DEBUG - Cache Entry: (0, 1737246768934130, 0)
2025-01-18 18:33:27,884 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246768934130, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:33:27,884 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[14], is_file_transfer=[False]
2025-01-18 18:33:27,885 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:33:27,885 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:33:27,885 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:33:27,885 - DEBUG - Request guid: 1588b3de-f1cc-43b8-8971-0d4957cc3d9f
2025-01-18 18:33:27,885 - DEBUG - socket timeout: 60
2025-01-18 18:33:27,980 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=edff79ae-34eb-4f65-9d8f-601d2c735f79&request_guid=1588b3de-f1cc-43b8-8971-0d4957cc3d9f HTTP/1.1" 200 2618
2025-01-18 18:33:27,981 - DEBUG - SUCCESS
2025-01-18 18:33:27,981 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:33:27,981 - DEBUG - ret[code] = None, after post request
2025-01-18 18:33:27,981 - DEBUG - Query id: 01b9ce01-0002-4c76-0007-08ea001fbe12
2025-01-18 18:33:27,982 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246803375147, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:33:27,982 - DEBUG - Cache Entry: (0, 1737246768934130, 0)
2025-01-18 18:33:27,982 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246803375147, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:33:27,982 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:33:27,982 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:33:27,983 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:33:27,983 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:33:27,983 - DEBUG - Cache Entry: (0, 1737246803375147, 0)
2025-01-18 18:33:27,983 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:33:27,983 - DEBUG - sfqid: 01b9ce01-0002-4c76-0007-08ea001fbe12
2025-01-18 18:33:27,983 - DEBUG - query execution done
2025-01-18 18:33:27,983 - DEBUG - SUCCESS
2025-01-18 18:33:27,983 - DEBUG - PUT OR GET: False
2025-01-18 18:33:27,983 - DEBUG - Query result format: arrow
2025-01-18 18:33:27,984 - INFO - Number of results in first chunk: 1
2025-01-18 18:33:27,984 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:33:27,984 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:33:27,984 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:33:27,984 - DEBUG - Batches read: 0
2025-01-18 18:33:27,984 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:33:27,984 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:33:27,985 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:33:27,986 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:33:27,986 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:33:27,986 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:33:27,986 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:33:27,994 - DEBUG - cursor
2025-01-18 18:33:27,994 - DEBUG - executing SQL/command
2025-01-18 18:33:27,994 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:33:27,994 - DEBUG - sequence counter: 15
2025-01-18 18:33:27,994 - DEBUG - Request id: 7022cf45-16af-47f8-8066-552a303f8d75
2025-01-18 18:33:27,994 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:33:27,994 - DEBUG - is_file_transfer: True
2025-01-18 18:33:27,994 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:33:27,994 - DEBUG - _cmd_query
2025-01-18 18:33:27,995 - DEBUG - serialize_to_dict() called
2025-01-18 18:33:27,995 - DEBUG - Cache Entry: (0, 1737246803375147, 0)
2025-01-18 18:33:27,995 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246803375147, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:33:27,995 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[15], is_file_transfer=[False]
2025-01-18 18:33:27,996 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:33:27,997 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:33:27,997 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:33:27,997 - DEBUG - Request guid: a3cab469-f504-4a21-a32d-fbe652fc1c23
2025-01-18 18:33:27,997 - DEBUG - socket timeout: 60
2025-01-18 18:33:28,073 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=7022cf45-16af-47f8-8066-552a303f8d75&request_guid=a3cab469-f504-4a21-a32d-fbe652fc1c23 HTTP/1.1" 200 1500
2025-01-18 18:33:28,074 - DEBUG - SUCCESS
2025-01-18 18:33:28,074 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:33:28,074 - DEBUG - ret[code] = None, after post request
2025-01-18 18:33:28,074 - DEBUG - Query id: 01b9ce01-0002-4c77-0007-08ea001fdd3e
2025-01-18 18:33:28,075 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246803466120, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:33:28,075 - DEBUG - Cache Entry: (0, 1737246803375147, 0)
2025-01-18 18:33:28,075 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246803466120, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:33:28,075 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:33:28,075 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:33:28,075 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:33:28,075 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:33:28,075 - DEBUG - Cache Entry: (0, 1737246803466120, 0)
2025-01-18 18:33:28,075 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:33:28,075 - DEBUG - sfqid: 01b9ce01-0002-4c77-0007-08ea001fdd3e
2025-01-18 18:33:28,076 - DEBUG - query execution done
2025-01-18 18:33:28,076 - DEBUG - SUCCESS
2025-01-18 18:33:28,076 - DEBUG - PUT OR GET: False
2025-01-18 18:33:28,076 - DEBUG - Query result format: arrow
2025-01-18 18:33:28,076 - INFO - Number of results in first chunk: 0
2025-01-18 18:33:28,078 - DEBUG - executing SQL/command
2025-01-18 18:33:28,078 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:33:28,079 - DEBUG - sequence counter: 16
2025-01-18 18:33:28,079 - DEBUG - Request id: 2282f326-6e48-457c-8276-b9e8372ea3d3
2025-01-18 18:33:28,079 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:33:28,079 - DEBUG - is_file_transfer: True
2025-01-18 18:33:28,079 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:33:28,079 - DEBUG - _cmd_query
2025-01-18 18:33:28,079 - DEBUG - serialize_to_dict() called
2025-01-18 18:33:28,079 - DEBUG - Cache Entry: (0, 1737246803466120, 0)
2025-01-18 18:33:28,079 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246803466120, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:33:28,079 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[16], is_file_transfer=[False]
2025-01-18 18:33:28,081 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:33:28,082 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:33:28,082 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:33:28,083 - DEBUG - Request guid: c07ecffa-7f0c-40fe-a9a4-7640af8a77d6
2025-01-18 18:33:28,083 - DEBUG - socket timeout: 60
2025-01-18 18:33:28,157 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=2282f326-6e48-457c-8276-b9e8372ea3d3&request_guid=c07ecffa-7f0c-40fe-a9a4-7640af8a77d6 HTTP/1.1" 200 1371
2025-01-18 18:33:28,158 - DEBUG - SUCCESS
2025-01-18 18:33:28,159 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:33:28,159 - DEBUG - ret[code] = None, after post request
2025-01-18 18:33:28,159 - DEBUG - Query id: 01b9ce01-0002-4c71-0007-08ea00202096
2025-01-18 18:33:28,159 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246803550157, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 18:33:28,159 - DEBUG - Cache Entry: (0, 1737246803466120, 0)
2025-01-18 18:33:28,159 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246803550157, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 18:33:28,159 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:33:28,159 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:33:28,159 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:33:28,159 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:33:28,160 - DEBUG - Cache Entry: (0, 1737246803550157, 0)
2025-01-18 18:33:28,160 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:33:28,160 - DEBUG - sfqid: 01b9ce01-0002-4c71-0007-08ea00202096
2025-01-18 18:33:28,160 - DEBUG - query execution done
2025-01-18 18:33:28,160 - DEBUG - SUCCESS
2025-01-18 18:33:28,160 - DEBUG - PUT OR GET: False
2025-01-18 18:33:28,160 - DEBUG - Query result format: arrow
2025-01-18 18:33:28,160 - INFO - Number of results in first chunk: 0
2025-01-18 18:33:28,162 - DEBUG - executing SQL/command
2025-01-18 18:33:28,162 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:33:28,162 - DEBUG - sequence counter: 17
2025-01-18 18:33:28,162 - DEBUG - Request id: a537ab8b-66bc-42e6-abe2-e181499ac8af
2025-01-18 18:33:28,162 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:33:28,162 - DEBUG - is_file_transfer: True
2025-01-18 18:33:28,162 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:33:28,162 - DEBUG - _cmd_query
2025-01-18 18:33:28,162 - DEBUG - serialize_to_dict() called
2025-01-18 18:33:28,163 - DEBUG - Cache Entry: (0, 1737246803550157, 0)
2025-01-18 18:33:28,163 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246803550157, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 18:33:28,163 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[17], is_file_transfer=[False]
2025-01-18 18:33:28,164 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:33:28,165 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:33:28,165 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:33:28,165 - DEBUG - Request guid: 67e63aa1-f8ff-4a88-889c-21f088b62a53
2025-01-18 18:33:28,165 - DEBUG - socket timeout: 60
2025-01-18 18:33:28,236 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=a537ab8b-66bc-42e6-abe2-e181499ac8af&request_guid=67e63aa1-f8ff-4a88-889c-21f088b62a53 HTTP/1.1" 200 1374
2025-01-18 18:33:28,237 - DEBUG - SUCCESS
2025-01-18 18:33:28,237 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:33:28,237 - DEBUG - ret[code] = None, after post request
2025-01-18 18:33:28,237 - DEBUG - Query id: 01b9ce01-0002-4c76-0007-08ea001fbe16
2025-01-18 18:33:28,237 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246803640886, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:33:28,237 - DEBUG - Cache Entry: (0, 1737246803550157, 0)
2025-01-18 18:33:28,237 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246803640886, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:33:28,238 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:33:28,238 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:33:28,238 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:33:28,238 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:33:28,238 - DEBUG - Cache Entry: (0, 1737246803640886, 0)
2025-01-18 18:33:28,238 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:33:28,238 - DEBUG - sfqid: 01b9ce01-0002-4c76-0007-08ea001fbe16
2025-01-18 18:33:28,238 - DEBUG - query execution done
2025-01-18 18:33:28,238 - DEBUG - SUCCESS
2025-01-18 18:33:28,238 - DEBUG - PUT OR GET: False
2025-01-18 18:33:28,238 - DEBUG - Query result format: arrow
2025-01-18 18:33:28,238 - INFO - Number of results in first chunk: 0
2025-01-18 18:33:28,239 - DEBUG - executing SQL/command
2025-01-18 18:33:28,239 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:33:28,240 - DEBUG - sequence counter: 18
2025-01-18 18:33:28,240 - DEBUG - Request id: e901c5e3-7010-4464-a897-b67329511002
2025-01-18 18:33:28,240 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:33:28,240 - DEBUG - is_file_transfer: True
2025-01-18 18:33:28,240 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:33:28,240 - DEBUG - _cmd_query
2025-01-18 18:33:28,240 - DEBUG - serialize_to_dict() called
2025-01-18 18:33:28,240 - DEBUG - Cache Entry: (0, 1737246803640886, 0)
2025-01-18 18:33:28,240 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246803640886, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:33:28,240 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[18], is_file_transfer=[False]
2025-01-18 18:33:28,241 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:33:28,241 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:33:28,241 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:33:28,241 - DEBUG - Request guid: fde2d1c4-0f19-4e69-93d2-30f1b14198cf
2025-01-18 18:33:28,241 - DEBUG - socket timeout: 60
2025-01-18 18:33:28,326 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=e901c5e3-7010-4464-a897-b67329511002&request_guid=fde2d1c4-0f19-4e69-93d2-30f1b14198cf HTTP/1.1" 200 2617
2025-01-18 18:33:28,327 - DEBUG - SUCCESS
2025-01-18 18:33:28,327 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:33:28,327 - DEBUG - ret[code] = None, after post request
2025-01-18 18:33:28,327 - DEBUG - Query id: 01b9ce01-0002-4c76-0007-08ea001fbe1a
2025-01-18 18:33:28,327 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246803731839, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:33:28,327 - DEBUG - Cache Entry: (0, 1737246803640886, 0)
2025-01-18 18:33:28,327 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246803731839, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:33:28,327 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:33:28,327 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:33:28,327 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:33:28,327 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:33:28,328 - DEBUG - Cache Entry: (0, 1737246803731839, 0)
2025-01-18 18:33:28,328 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:33:28,328 - DEBUG - sfqid: 01b9ce01-0002-4c76-0007-08ea001fbe1a
2025-01-18 18:33:28,328 - DEBUG - query execution done
2025-01-18 18:33:28,328 - DEBUG - SUCCESS
2025-01-18 18:33:28,328 - DEBUG - PUT OR GET: False
2025-01-18 18:33:28,328 - DEBUG - Query result format: arrow
2025-01-18 18:33:28,328 - INFO - Number of results in first chunk: 54
2025-01-18 18:33:28,328 - DEBUG - Execute query [queryID: 01b9ce01-0002-4c76-0007-08ea001fbe1a]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:33:28,328 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:33:28,328 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:33:28,328 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:33:28,328 - DEBUG - Batches read: 0
2025-01-18 18:33:28,328 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:33:28,328 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:33:28,338 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:33:28,340 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:33:28,993 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:33:29,014 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:33:29,016 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:33:29,552 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:33:30,608 - DEBUG - calling method search on class CortexSearchServiceResource after submitting telemetry if enabled
2025-01-18 18:33:30,609 - INFO - performing a HTTP POST call to /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query
2025-01-18 18:33:30,609 - DEBUG - request has path params: {'database': 'DEV_SRC_INGEST', 'schema': 'EPA_PROCESSED', 'service_name': 'CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST'}, query_params: [], header params: {'Accept': 'application/json', 'Content-Type': 'application/json'} and body: QueryRequest(query=' What is WRC AP1, and how does it compare to Roundup in terms of its active ingredients, usage, application, precautions, environmental hazards, mode of action, target pests, and required personal protective equipment?', columns=['chunk', 'relative_path', 'PRODUCTNAME', 'COMPANYNAME', 'CATEGORY_EPA_TYPE', 'SIGNAL_WORD'], filter=None, limit=10, experimental=None)
2025-01-18 18:33:30,609 - DEBUG - making an http POST call to 'https://gmcpdcz-mt01740.snowflakecomputing.com:443/api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query'
2025-01-18 18:33:30,935 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query HTTP/1.1" 200 None
2025-01-18 18:33:30,936 - DEBUG - created a RESTResponse with status 200 and length of 17914
2025-01-18 18:33:30,936 - DEBUG - response body: b'{\n  "results" : [ {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "plant pathogenic fungi such as Pythium and Rhizoctonia, thereby aiding in control of these damping off\\\\\\" and root rot pathogens. WRC-AP-1 is a granular formulation containing a high concentration of G. virens spores suitable for incorporation into soil or soilless media. WRC-AP-1 acts as a preventative and will protect non-infected plants. It may not, however, cure aiready diseased plants. Where possible, allow the treated soil or media to incubate for 1 day prior to planting to achieve best results. Do not use other soil fungicides with WRC-AP-1 at time of incorpora- tion. Later, addition of fungicides are acceptable but usually unnecessary. Best results are achieved if the contents of an open package are used within three months. Be careful to seal out moisture from the unused material by closingthe inner bag tightly.WRC-AP-1 can be mixed with water for application as a soil drench, as aroot dip, or through irrigation systems. The dry granules can also be mixed directly into soil or growing media. Use lower rates in sandy soils, warm soils (60\\\\\\"F or higher temperature at 4-inch depth), and as a preventative against low to moderate disease pressure. Use higher rates in heavy soils (high clay and/or organic matter), low temperatures (less than 60\xc2\xb0F at 4 inch depth), as a preventative against heavy disease pressure, or as a curative for low to moderate disease pressure early in the grow- ing season. The soil or growing medium should be moist but not wet at the time of application; the",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "that WRC-AP-1 be uniformly mixed into the media to pro- vide the best performance possible. Soil can then be placed in pots. Moisten the media with water and keep moist . (but not wet) for the next three days.. Transplants or plants for repotting can be placed into pots immediately, but wait at least 24 hours to plant seeds, bulbs or non-rooted cuttings. The protective fungus will spread throughout the root system of the plant protecting it from disease organisms.\\\\n## For Incorporation Into Garden Rows\\\\nWRC-AP-1 can be used to control soil-borne pathogens including Rhizoctonia, Pythium, and Sclerotinia that might attack crops grown outside in the home garden. Disease can be prevented by applying WRC-AP-1 in the garden when plants are seeded or transpiants are moved into the outside home garden. Disease prevention will exist for up to two months after application, depending on the disease pressure present.\\\\n## STORAGE AND DISPOSAL\\\\nDo not contaminate water, food, or feed by storage and disposal.\\\\n## COMMERCIAL USE\\\\nPesticide Storage: WRC-AP-1 is packaged in an airtight, foil-lined, resealable bag designed to protect the fungus from exposure to moisture and oxygen, which can impact storage life. For best results store in a cool, dry place (preferably refrigerated). In an unopened bag, WRC-AP-1 will retain its biological activity for up to one year at room temperature (70\xc2\xb0F). Long-term exposure to air and higher temperatures (75\xc2\xb0F to 100\xc2\xb0F) may accelerat\xc3\xa9 loss of bioactivity. Exposure to",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "in a way that will contact workers or other persons, either directly or through drift. Only protected handlers may be in the area during application. For any requirements specific to your State or Tribe, con- sult the agency responsible for pesticide regulation.\\\\n||AGRICULTURAL USE REQUIREMENTS|\\\\n| :---: | :---: |\\\\n|Use|product only in accordance with its labeling and with the Worker Protection Standard, 40 CFR Part 170.|\\\\n|This|contains requirements for the protection of agricultural workers on farms, forests, nurseries, and|\\\\n|greenhouses,|and handlers of agricultural pesticides. It contains requirements for training, decontamination, notifica-|\\\\n|tion,|emergency assistance. It also contains specific instructions and exceptions pertaining to the statements on|\\\\n|this|about personal protective equipment (PPE), and restricted entry interval. The requirements in this box only|\\\\n|apply|uses of this product that are covered by the Worker Protection Standard. Do not enter or allow worker entry|\\\\n|into|areas without footwear until sprays have dried. A Restricted Entry Interval (REl) is not required.|\\\\n\\\\n## GENERAL INFORMATION\\\\nGliocladium virens, the active component in WRC-AP-1, is a naturally occurring soil fungus which is antagonistic to plant pathogenic fungi such as Pythium and Rhizoctonia, thereby aiding in control of these damping off\\\\\\" and root rot pathogens. WRC-AP-1 is a granular formulation containing a high concentration of G. virens spores suitable for incorporation into soil or",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "(preferably refrigerated). In an unopened bag, WRC-AP-1 will retain its biological activity for up to one year at room temperature (70\xc2\xb0F). Long-term exposure to air and higher temperatures (75\xc2\xb0F to 100\xc2\xb0F) may accelerat\xc3\xa9 loss of bioactivity. Exposure to temperatures above 100\xc2\xb0F for extended periods can be detrimental to WRC-AP-1. An open bag of WRC-AP-1 can be kept for up to 3 months if the bag is tightly resealed and refrigerated (40\xc2\xb0F to 45\xc2\xb0F). Squeeze excess air from the bag before resealingPesticide Disposal: Wastes resulting from the use of this product may be disposed of onsite or at an approved waste disposal facility.Container Disposal: Completely empty bag into application equipment. Then dispose of empty bag in a sanitary landfill or by incineration, or if allowed by local authorities, by burning. If burned, stay out of smoke.\\\\n## HOMEOWNER USE\\\\nPesticide Storage: Keep in original container. Store in a cool, dry place away from direct sunlight, feed, or food. stuffs. Keep container tightly sealed when not is use. In an unopened bag, WRC-AP-1 will retain its biological ac- tivity for up to one year at room temperature (70\xc2\xb0F). Long-term exposure to air and higher temperatures (75\xc2\xb0F to 100F) may accelerate loss of bioactivity. Exposure to temperatures above 100\xc2\xb0F for extended periods can be detri- mental to WRC-AP-1.\\\\n## Pesticide and Container Disposal\\\\nIf empty: Do not reuse this container. Place in trash or offer for recycling if availableIf partly filled: Call your local solid",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "by pathogenic fungi. Do not apply WRC-AP-1 to fumigated soil until fumigants have dissipated to levels safe for planting the crop: Do not apply WRC-AP-1 to stearmn-sterilized soil or other planting media until it has cooled to a temperature of 100\xc2\xb0F or lower.Do not combine WRC-AP-1 with other pesticides, surfactants, or fertilizers unless prior experience has shown the combination to be physically compatible, effective, and non-injurious under the conditions of use. WRC-AP-1 has not been fully evaluated for compatibility with all adjuvants or surfactants. If a mixture with adjuvants or surfac- tants is planned, a compatibility test (\\\\\\"jar test\\\\\\") should first be conducted by mixing proportional quantities of WRC-AP-1 and these products in a small volume of water.\\\\n## FOR INCORPORATION INTO GROWING MEDIA\\\\n(Ornamentals and Food Crop Plants Grown Indoors and Outdoors)  \\\\nCommercial Use  \\\\nFor incorporation into potting medium in greenhouse flats, plug trays, or pots:\\\\n* 0 Mix 1 to 1 1/2 pound of WRC-AP-1 biological fungicide per cubic yard of potting soil or other plant-growing medium. Granules must be distributed uniformly throughout the medium.\\\\n* .If the potting medium has been heat sterilized, allow it to cool to 110\xc2\xb0F or lower before adding WRC-AP-1\\\\n* Allow at least 24 hours after incorporation of WRC-AP-1 before planting seeds, cuttings, or other non- rooted plant material into the treated medium. Plants with established roots can be transplanted into treated soil immediately after",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "adding WRC-AP-1\\\\n* Allow at least 24 hours after incorporation of WRC-AP-1 before planting seeds, cuttings, or other non- rooted plant material into the treated medium. Plants with established roots can be transplanted into treated soil immediately after mixing with WRC-AP-1.\\\\n* Avoid using WRC-AP-1 in media totally devoid of organic matter (such as sand). G. virens requires or- ganic matter to grow and work. If the only available organic substrate is the seed, bulb, or other plant mate- rial, G. virens may cause injury to it.\\\\n  \\\\nFor incorporation into seedling and planting beds (indoors and outdoors):\\\\n* . Thoroughly till the soil in the planting bed prior to addition of WRC-AP-1.\\\\n* Incorporate WRC-AP-1 granules uniformly within the plant root zone at the rate of 1 to 1 1/2 pounds per cubic yard of soil. The table below can be used to determine how much WRC-AP-1 to use depending on\\\\n  \\\\nplanting or rooting depth and area to be treated.\\\\n* WRC-AP-1 is unlikely to completely eliminate disease from soil already severely infested with pathogenic fungi. For best results, use WRC-AP-1 in the greenhouse at the time of planting, so that it has already colo- nized the root ball of the transplant.\\\\n\\\\n|Planting depth (inches)|Pounds per 100 square feet|Square feet per pound|\\\\n| :---: | :---: | :---: |\\\\n|2|2/3 - 1|108 - 162|\\\\n|4|11/4 - 2|54 - 81|\\\\n|6|2 - 2 3/4|36- 54|\\\\n|8|2 1/2 - 3 3/4|27-41|\\\\n|10|3 - 4 2/3|22- 32|\\\\n|12|3 3/4 - 5 1/2|18 - 27|\\\\n\\\\n## FOR DRENCH OR SPRAY APPLICATION TO SOIL\\\\nMix",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "the mixture to stand overnight or for prolonged peri- ods. When using large pressurized systems, injection should occur after the system has been fully charged with wa- ter and over sufficient time (typically 30 -- 60 minutes, depending on the system) to allow uniform distribution of the product. After application, flush the system with water for an additional 10 -- 20 minutes to avoid fouling of irriga- tion lines due to fungal growth.\\\\n## FOR ROOT DIP APPLICATION OR ROOT COATING\\\\nWRC-AP-1 can be applied as a dip or coating for bare-root plantings of crops such as horseradish, straw- berries or caneberries, ornamental shrubs, fruit trees, or to.rooted cuttings of poin\xc5\xa1ettias.and other ornamen- tal plants. Dip or immerse roots in a suspension containing 1 - 2 pounds of WRC-AP-1 per gallon of water immediately before planting. Roots or planting sets can also be coated with WRC-AP-1 by shaking them in a sealed plastic bag containing the suspension of WRC-AP-1 in water, or by moistening them with water and shaking in a sealed plastic bag containing dry granules. Do not apply WRC-AP-1 directly to fresh (non-rooted) cuttings.\\\\n## HOMEOWNER USE\\\\nFor Incorporation Into Growing Media(Ornamentals and Food Crop Plants Grown Indoors and OutdoorsDirections for 0.07 oz. package: Thoroughly blend WRC-AP-1 with growing media. One 0.07 oz. packet (2 grams) will treat one 8-inch pot. To apply WRC-AP-1, fill a clean 8-inch pot 3/4 full with potting soil. Spread the contents of the WRC-AP-1.packet onto",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "for 0.07 oz. package: Thoroughly blend WRC-AP-1 with growing media. One 0.07 oz. packet (2 grams) will treat one 8-inch pot. To apply WRC-AP-1, fill a clean 8-inch pot 3/4 full with potting soil. Spread the contents of the WRC-AP-1.packet onto the soil and mix thoroughly with a small spade. It is important that WRC- AP-1 be uniformly mixed into the media to provide the best performance possible. Transplants, or plants for repot- ting can then be placed into the pot immediately. Wait \xc3\xa1t least 24-hours before planting seeds, bulbs or cuttings without roots. Moisten the media with water and keep moist (but not wet) for the next three days. The protective fungus will spread throughout the root system of the plant protecting it from disease organisms. Directions for 0.54 oz. package: Thoroughly blend WRC-AP-1 with growing media. One 0.54 oz. packet (15 grams) will treat /2 cubic foot bag of media, enough to fill 9 six-inch pots. To apply WRC-AP-1, empty a 20 lb. bagof potting soil into a clean 5-gallon bucket. Spread WRC-AP-1 onto the soil in the bucket and mix thoroughly with a spade or shovel. Alternatively, a corner can be cut from the potting soil bag and WRC-AP-1 can be incorporated by shaking, stirring, or kneading the bag. It is important that WRC-AP-1 be uniformly mixed into the media to pro- vide the best performance possible. Soil can then be placed in pots. Moisten the media with water and keep moist . (but not wet) for the next three days.. Transplants or plants for repotting can",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf",\n    "PRODUCTNAME" : "WRC-AP-1"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "(less than 60\xc2\xb0F at 4 inch depth), as a preventative against heavy disease pressure, or as a curative for low to moderate disease pressure early in the grow- ing season. The soil or growing medium should be moist but not wet at the time of application; the application wa- ter may be of sufficient volume to provide the necessary moisture uniess the soil is extremely dry or difficult to wet. Do not apply WRC-AP-1 to very dry, compacted, frozen, or water-logged soils, and do not over-water or allow soil to become saturated for extended periods (>3 hours) after application.\\\\n## COMPATIBILITY WITH PESTICIDES, FERTLIZERS, AND ADJUVANTS\\\\nChemical fungicides should not be mixed with or applied to soil or plant media at the same time as WRC-AP-1. In most cases, additional soil-applied fungicides should not be required to control seedling diseases after proper appli- cation of WRC-AP-1. If additional fungicide applications are desired, wait a minimum of 2 weeks after applying WRC-AP-1. The effectiveness of WRC-AP-1 may be decreased if soil fungicides are applied to the same area be- fore it has become fully established in the root zone.WRC-AP-1 can be applied after soil fumigation, solarization, or steam sterilization to prevent or delay reinfestation by pathogenic fungi. Do not apply WRC-AP-1 to fumigated soil until fumigants have dissipated to levels safe for planting the crop: Do not apply WRC-AP-1 to stearmn-sterilized soil or other planting media until it has cooled to a temperature of 100\xc2\xb0F",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "rates and use instructions for different applicationsApplication rates and additional instructions for drench or spray application of WRC-AP-1 to soil or other plant media.\\\\n|Transplanted crops (such as fruiting|Before trans- planting|/z -2 pounds per 100 gallons of water|Apply4 l. oz. of finished drench per plant in flats (unit trays or pots within 1 week before transplanting into the fieid (during the hardening-off phase). For densely seeded trays or flats, apply 100 gallons of finished drench per 800 square feet. WRC-AP-1can also be appied in furrow imimediately before transplanting as described for seed furrows in the next section.|\\\\n| :---: | :---: | :---: | :---: |\\\\n|and leafy vegeta- bles, melons, strawberries, field grown ornamental plants, and non-|At trans- planting|% -2 pounds per 100 gallons of water|Apply 4 - 8 fi. oz. of finished drench (depending on the size of the root ball) in each transplant hole using a water wheel/shank injector, watering can, r low pressure sprayer with flood/drench nozzles.|\\\\n|bearing fruit/nut .trees and vines)|After trans- planting|2-10 pounds per acre|Repeat (maintenance) applications can be made as needed through directed spray or drench at the base of each plant, or through the irrigation system (see \\\\\\"For Application Through Irriga- tion Systems\\\\\\" below).|\\\\n|Seed furrows or planting (such as potatoes and tubers, bulbs, and crops)|beds other direct-seeded|2-10 pounds per acre|Apply in 50 -- 100 gallons of water per acre as banded drench",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf",\n    "PRODUCTNAME" : "WRC-AP-1"\n  } ],\n  "request_id" : "c3b52f0d-f39e-4274-941c-e9fae05bc3b3"\n}'
2025-01-18 18:33:30,939 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:33:30,940 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:33:31,457 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:33:49,938 - DEBUG - executing SQL/command
2025-01-18 18:33:49,938 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/WRC-A...]
2025-01-18 18:33:49,938 - DEBUG - sequence counter: 19
2025-01-18 18:33:49,938 - DEBUG - Request id: 78915538-5ea8-472f-bce3-231489abea37
2025-01-18 18:33:49,939 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/WRC-A...]
2025-01-18 18:33:49,939 - DEBUG - is_file_transfer: True
2025-01-18 18:33:49,939 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:33:49,939 - DEBUG - _cmd_query
2025-01-18 18:33:49,939 - DEBUG - serialize_to_dict() called
2025-01-18 18:33:49,939 - DEBUG - Cache Entry: (0, 1737246803731839, 0)
2025-01-18 18:33:49,939 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246803731839, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:33:49,939 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/WRC-A...], sequence_id=[19], is_file_transfer=[False]
2025-01-18 18:33:49,940 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:33:49,940 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:33:49,941 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:33:49,941 - DEBUG - Request guid: a287ed1f-b5af-4c33-9005-e13ddaf7bb13
2025-01-18 18:33:49,941 - DEBUG - socket timeout: 60
2025-01-18 18:33:50,132 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=78915538-5ea8-472f-bce3-231489abea37&request_guid=a287ed1f-b5af-4c33-9005-e13ddaf7bb13 HTTP/1.1" 200 3453
2025-01-18 18:33:50,134 - DEBUG - SUCCESS
2025-01-18 18:33:50,134 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:33:50,134 - DEBUG - ret[code] = None, after post request
2025-01-18 18:33:50,134 - DEBUG - Query id: 01b9ce01-0002-4c78-0007-08ea002010de
2025-01-18 18:33:50,134 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246825525916, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:33:50,135 - DEBUG - Cache Entry: (0, 1737246803731839, 0)
2025-01-18 18:33:50,135 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246825525916, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:33:50,135 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:33:50,135 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:33:50,135 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:33:50,135 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:33:50,135 - DEBUG - Cache Entry: (0, 1737246825525916, 0)
2025-01-18 18:33:50,135 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:33:50,135 - DEBUG - sfqid: 01b9ce01-0002-4c78-0007-08ea002010de
2025-01-18 18:33:50,135 - DEBUG - query execution done
2025-01-18 18:33:50,135 - DEBUG - SUCCESS
2025-01-18 18:33:50,135 - DEBUG - PUT OR GET: False
2025-01-18 18:33:50,135 - DEBUG - Query result format: arrow
2025-01-18 18:33:50,135 - INFO - Number of results in first chunk: 54
2025-01-18 18:33:50,136 - DEBUG - Execute query [queryID: 01b9ce01-0002-4c78-0007-08ea002010de] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:33:50,136 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:33:50,136 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:33:50,136 - DEBUG - Batches read: 1
2025-01-18 18:33:50,136 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:33:58,077 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:33:58,077 - INFO - Querying the server for client info
2025-01-18 18:33:58,078 - DEBUG - cursor
2025-01-18 18:33:58,078 - DEBUG - executing SQL/command
2025-01-18 18:33:58,078 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:33:58,078 - DEBUG - sequence counter: 20
2025-01-18 18:33:58,078 - DEBUG - Request id: 019c28ac-2d1c-46c0-8e39-e00c1e955473
2025-01-18 18:33:58,078 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:33:58,078 - DEBUG - is_file_transfer: True
2025-01-18 18:33:58,078 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:33:58,078 - DEBUG - _cmd_query
2025-01-18 18:33:58,078 - DEBUG - serialize_to_dict() called
2025-01-18 18:33:58,078 - DEBUG - Cache Entry: (0, 1737246825525916, 0)
2025-01-18 18:33:58,078 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246825525916, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:33:58,078 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[20], is_file_transfer=[False]
2025-01-18 18:33:58,079 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:33:58,080 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:33:58,080 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:33:58,080 - DEBUG - Request guid: e48b01ad-c953-47c4-9991-f11e3173e55a
2025-01-18 18:33:58,080 - DEBUG - socket timeout: 60
2025-01-18 18:33:58,173 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=019c28ac-2d1c-46c0-8e39-e00c1e955473&request_guid=e48b01ad-c953-47c4-9991-f11e3173e55a HTTP/1.1" 200 2617
2025-01-18 18:33:58,174 - DEBUG - SUCCESS
2025-01-18 18:33:58,175 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:33:58,175 - DEBUG - ret[code] = None, after post request
2025-01-18 18:33:58,175 - DEBUG - Query id: 01b9ce01-0002-4c78-0007-08ea002010e2
2025-01-18 18:33:58,175 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246833569646, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:33:58,175 - DEBUG - Cache Entry: (0, 1737246825525916, 0)
2025-01-18 18:33:58,175 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246833569646, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:33:58,175 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:33:58,175 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:33:58,175 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:33:58,175 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:33:58,175 - DEBUG - Cache Entry: (0, 1737246833569646, 0)
2025-01-18 18:33:58,175 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:33:58,175 - DEBUG - sfqid: 01b9ce01-0002-4c78-0007-08ea002010e2
2025-01-18 18:33:58,175 - DEBUG - query execution done
2025-01-18 18:33:58,175 - DEBUG - SUCCESS
2025-01-18 18:33:58,176 - DEBUG - PUT OR GET: False
2025-01-18 18:33:58,176 - DEBUG - Query result format: arrow
2025-01-18 18:33:58,176 - INFO - Number of results in first chunk: 1
2025-01-18 18:33:58,176 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:33:58,176 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:33:58,176 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:33:58,176 - DEBUG - Batches read: 0
2025-01-18 18:33:58,176 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:33:58,176 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:33:58,176 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:33:58,176 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:33:58,176 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:33:58,176 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:33:58,177 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:33:58,179 - DEBUG - cursor
2025-01-18 18:33:58,179 - DEBUG - executing SQL/command
2025-01-18 18:33:58,179 - DEBUG - query: [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:33:58,180 - DEBUG - sequence counter: 21
2025-01-18 18:33:58,180 - DEBUG - Request id: 4ccf332e-e649-4311-8436-6cfe3f39c68b
2025-01-18 18:33:58,180 - DEBUG - running query [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:33:58,180 - DEBUG - is_file_transfer: True
2025-01-18 18:33:58,180 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:33:58,180 - DEBUG - _cmd_query
2025-01-18 18:33:58,180 - DEBUG - serialize_to_dict() called
2025-01-18 18:33:58,180 - DEBUG - Cache Entry: (0, 1737246833569646, 0)
2025-01-18 18:33:58,180 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246833569646, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:33:58,180 - DEBUG - sql=[SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...], sequence_id=[21], is_file_transfer=[False]
2025-01-18 18:33:58,181 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:33:58,181 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:33:58,181 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:33:58,181 - DEBUG - Request guid: c3c8077f-a5be-4ce0-9395-b30915369d8a
2025-01-18 18:33:58,181 - DEBUG - socket timeout: 60
2025-01-18 18:34:00,245 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=4ccf332e-e649-4311-8436-6cfe3f39c68b&request_guid=c3c8077f-a5be-4ce0-9395-b30915369d8a HTTP/1.1" 200 5638
2025-01-18 18:34:00,246 - DEBUG - SUCCESS
2025-01-18 18:34:00,246 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:00,246 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:00,246 - DEBUG - Query id: 01b9ce01-0002-4c76-0007-08ea001fbe26
2025-01-18 18:34:00,246 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246835639780, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:34:00,246 - DEBUG - Cache Entry: (0, 1737246833569646, 0)
2025-01-18 18:34:00,246 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246835639780, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:34:00,246 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:00,246 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:00,246 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:00,246 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:00,246 - DEBUG - Cache Entry: (0, 1737246835639780, 0)
2025-01-18 18:34:00,246 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:00,247 - DEBUG - sfqid: 01b9ce01-0002-4c76-0007-08ea001fbe26
2025-01-18 18:34:00,247 - DEBUG - query execution done
2025-01-18 18:34:00,247 - DEBUG - SUCCESS
2025-01-18 18:34:00,247 - DEBUG - PUT OR GET: False
2025-01-18 18:34:00,247 - DEBUG - Query result format: arrow
2025-01-18 18:34:00,247 - INFO - Number of results in first chunk: 200
2025-01-18 18:34:00,247 - DEBUG - Execute query [queryID: 01b9ce01-0002-4c76-0007-08ea001fbe26] 
        SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE 
        FROM DEV_DP_APP.MODELED.US_ADDRESS_LIST 
        WHERE CONTAINS(LOWER(LOCATION), LOWER('Saint Paul, MN 55101'))
        LIMIT 200
        
2025-01-18 18:34:00,247 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:34:00,247 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:34:00,247 - DEBUG - Batches read: 1
2025-01-18 18:34:00,248 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:34:00,252 - DEBUG - executing SQL/command
2025-01-18 18:34:00,252 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:34:00,252 - DEBUG - sequence counter: 22
2025-01-18 18:34:00,252 - DEBUG - Request id: aec1f083-9210-48c6-b4ca-82c1c0420404
2025-01-18 18:34:00,252 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:34:00,252 - DEBUG - is_file_transfer: True
2025-01-18 18:34:00,252 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:00,252 - DEBUG - _cmd_query
2025-01-18 18:34:00,252 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:00,252 - DEBUG - Cache Entry: (0, 1737246835639780, 0)
2025-01-18 18:34:00,252 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246835639780, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:34:00,253 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[22], is_file_transfer=[False]
2025-01-18 18:34:00,253 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:00,253 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:00,253 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:00,253 - DEBUG - Request guid: bf6c1f5b-2817-4b42-8525-44f9b5f4ea7f
2025-01-18 18:34:00,253 - DEBUG - socket timeout: 60
2025-01-18 18:34:00,326 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=aec1f083-9210-48c6-b4ca-82c1c0420404&request_guid=bf6c1f5b-2817-4b42-8525-44f9b5f4ea7f HTTP/1.1" 200 1502
2025-01-18 18:34:00,327 - DEBUG - SUCCESS
2025-01-18 18:34:00,327 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:00,327 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:00,327 - DEBUG - Query id: 01b9ce01-0002-4c77-0007-08ea001fdd46
2025-01-18 18:34:00,327 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246835720819, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:34:00,327 - DEBUG - Cache Entry: (0, 1737246835639780, 0)
2025-01-18 18:34:00,327 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246835720819, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:34:00,327 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:00,327 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:00,327 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:00,327 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:00,327 - DEBUG - Cache Entry: (0, 1737246835720819, 0)
2025-01-18 18:34:00,327 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:00,327 - DEBUG - sfqid: 01b9ce01-0002-4c77-0007-08ea001fdd46
2025-01-18 18:34:00,327 - DEBUG - query execution done
2025-01-18 18:34:00,327 - DEBUG - SUCCESS
2025-01-18 18:34:00,328 - DEBUG - PUT OR GET: False
2025-01-18 18:34:00,328 - DEBUG - Query result format: arrow
2025-01-18 18:34:00,328 - INFO - Number of results in first chunk: 0
2025-01-18 18:34:00,329 - DEBUG - executing SQL/command
2025-01-18 18:34:00,329 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:34:00,329 - DEBUG - sequence counter: 23
2025-01-18 18:34:00,329 - DEBUG - Request id: ee8d0d3d-e409-4953-80a6-f925ee24c9d3
2025-01-18 18:34:00,329 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:34:00,329 - DEBUG - is_file_transfer: True
2025-01-18 18:34:00,329 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:00,329 - DEBUG - _cmd_query
2025-01-18 18:34:00,329 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:00,329 - DEBUG - Cache Entry: (0, 1737246835720819, 0)
2025-01-18 18:34:00,329 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246835720819, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:34:00,329 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[23], is_file_transfer=[False]
2025-01-18 18:34:00,330 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:00,330 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:00,330 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:00,330 - DEBUG - Request guid: c55a1dd7-40c7-47d6-80f9-6fcd5ec7eb44
2025-01-18 18:34:00,330 - DEBUG - socket timeout: 60
2025-01-18 18:34:00,408 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=ee8d0d3d-e409-4953-80a6-f925ee24c9d3&request_guid=c55a1dd7-40c7-47d6-80f9-6fcd5ec7eb44 HTTP/1.1" 200 1374
2025-01-18 18:34:00,409 - DEBUG - SUCCESS
2025-01-18 18:34:00,409 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:00,409 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:00,409 - DEBUG - Query id: 01b9ce01-0002-4c7a-0007-08ea001ff65a
2025-01-18 18:34:00,409 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246835803278, 'priority': 0, 'context': 'COrjJA=='}]}
2025-01-18 18:34:00,409 - DEBUG - Cache Entry: (0, 1737246835720819, 0)
2025-01-18 18:34:00,409 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246835803278, 'priority': 0, 'context': 'COrjJA=='}
2025-01-18 18:34:00,409 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:00,409 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:00,409 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:00,409 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:00,409 - DEBUG - Cache Entry: (0, 1737246835803278, 0)
2025-01-18 18:34:00,409 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:00,410 - DEBUG - sfqid: 01b9ce01-0002-4c7a-0007-08ea001ff65a
2025-01-18 18:34:00,410 - DEBUG - query execution done
2025-01-18 18:34:00,410 - DEBUG - SUCCESS
2025-01-18 18:34:00,410 - DEBUG - PUT OR GET: False
2025-01-18 18:34:00,410 - DEBUG - Query result format: arrow
2025-01-18 18:34:00,410 - INFO - Number of results in first chunk: 0
2025-01-18 18:34:00,410 - DEBUG - executing SQL/command
2025-01-18 18:34:00,411 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:34:00,411 - DEBUG - sequence counter: 24
2025-01-18 18:34:00,411 - DEBUG - Request id: a0840e8b-7fb6-4875-ba3a-359565bc3a90
2025-01-18 18:34:00,411 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:34:00,411 - DEBUG - is_file_transfer: True
2025-01-18 18:34:00,411 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:00,411 - DEBUG - _cmd_query
2025-01-18 18:34:00,411 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:00,411 - DEBUG - Cache Entry: (0, 1737246835803278, 0)
2025-01-18 18:34:00,411 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246835803278, 'priority': 0, 'context': {'base64Data': 'COrjJA=='}}]}
2025-01-18 18:34:00,411 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[24], is_file_transfer=[False]
2025-01-18 18:34:00,411 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:00,411 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:00,411 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:00,411 - DEBUG - Request guid: 42c99fc6-bb8c-44d4-b25c-5cf343662d77
2025-01-18 18:34:00,411 - DEBUG - socket timeout: 60
2025-01-18 18:34:00,480 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=a0840e8b-7fb6-4875-ba3a-359565bc3a90&request_guid=42c99fc6-bb8c-44d4-b25c-5cf343662d77 HTTP/1.1" 200 1372
2025-01-18 18:34:00,481 - DEBUG - SUCCESS
2025-01-18 18:34:00,481 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:00,481 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:00,481 - DEBUG - Query id: 01b9ce01-0002-4c72-0007-08ea00203022
2025-01-18 18:34:00,481 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246835879100, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:34:00,481 - DEBUG - Cache Entry: (0, 1737246835803278, 0)
2025-01-18 18:34:00,481 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246835879100, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:34:00,481 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:00,481 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:00,481 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:00,481 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:00,482 - DEBUG - Cache Entry: (0, 1737246835879100, 0)
2025-01-18 18:34:00,482 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:00,482 - DEBUG - sfqid: 01b9ce01-0002-4c72-0007-08ea00203022
2025-01-18 18:34:00,482 - DEBUG - query execution done
2025-01-18 18:34:00,482 - DEBUG - SUCCESS
2025-01-18 18:34:00,482 - DEBUG - PUT OR GET: False
2025-01-18 18:34:00,482 - DEBUG - Query result format: arrow
2025-01-18 18:34:00,482 - INFO - Number of results in first chunk: 0
2025-01-18 18:34:00,483 - DEBUG - executing SQL/command
2025-01-18 18:34:00,483 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:34:00,483 - DEBUG - sequence counter: 25
2025-01-18 18:34:00,483 - DEBUG - Request id: dd5a42d8-5ff3-476b-a3ef-da3354221757
2025-01-18 18:34:00,483 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:34:00,483 - DEBUG - is_file_transfer: True
2025-01-18 18:34:00,483 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:00,483 - DEBUG - _cmd_query
2025-01-18 18:34:00,483 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:00,483 - DEBUG - Cache Entry: (0, 1737246835879100, 0)
2025-01-18 18:34:00,483 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246835879100, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:34:00,484 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[25], is_file_transfer=[False]
2025-01-18 18:34:00,484 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:00,484 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:00,484 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:00,484 - DEBUG - Request guid: 4cccbe5b-3d4d-424f-a9d8-cf1a551736af
2025-01-18 18:34:00,484 - DEBUG - socket timeout: 60
2025-01-18 18:34:00,571 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=dd5a42d8-5ff3-476b-a3ef-da3354221757&request_guid=4cccbe5b-3d4d-424f-a9d8-cf1a551736af HTTP/1.1" 200 2615
2025-01-18 18:34:00,572 - DEBUG - SUCCESS
2025-01-18 18:34:00,572 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:00,572 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:00,572 - DEBUG - Query id: 01b9ce01-0002-4c71-0007-08ea0020209e
2025-01-18 18:34:00,572 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246835967913, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 18:34:00,572 - DEBUG - Cache Entry: (0, 1737246835879100, 0)
2025-01-18 18:34:00,572 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246835967913, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 18:34:00,572 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:00,572 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:00,572 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:00,573 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:00,573 - DEBUG - Cache Entry: (0, 1737246835967913, 0)
2025-01-18 18:34:00,573 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:00,573 - DEBUG - sfqid: 01b9ce01-0002-4c71-0007-08ea0020209e
2025-01-18 18:34:00,573 - DEBUG - query execution done
2025-01-18 18:34:00,573 - DEBUG - SUCCESS
2025-01-18 18:34:00,573 - DEBUG - PUT OR GET: False
2025-01-18 18:34:00,573 - DEBUG - Query result format: arrow
2025-01-18 18:34:00,573 - INFO - Number of results in first chunk: 54
2025-01-18 18:34:00,573 - DEBUG - Execute query [queryID: 01b9ce01-0002-4c71-0007-08ea0020209e]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:34:00,573 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:34:00,573 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:34:00,573 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:34:00,573 - DEBUG - Batches read: 0
2025-01-18 18:34:00,573 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:34:00,573 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:34:09,694 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:34:09,694 - INFO - Querying the server for client info
2025-01-18 18:34:09,694 - DEBUG - cursor
2025-01-18 18:34:09,694 - DEBUG - executing SQL/command
2025-01-18 18:34:09,694 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:34:09,694 - DEBUG - sequence counter: 26
2025-01-18 18:34:09,694 - DEBUG - Request id: fdbcf05a-0c42-4b3e-8713-dc4044fcacf0
2025-01-18 18:34:09,694 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:34:09,694 - DEBUG - is_file_transfer: True
2025-01-18 18:34:09,694 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:09,695 - DEBUG - _cmd_query
2025-01-18 18:34:09,695 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:09,695 - DEBUG - Cache Entry: (0, 1737246835967913, 0)
2025-01-18 18:34:09,695 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246835967913, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 18:34:09,695 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[26], is_file_transfer=[False]
2025-01-18 18:34:09,696 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:09,697 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:09,697 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:09,697 - DEBUG - Request guid: a16cfa20-c26c-4783-b8b7-53ce3859ff22
2025-01-18 18:34:09,697 - DEBUG - socket timeout: 60
2025-01-18 18:34:09,899 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=fdbcf05a-0c42-4b3e-8713-dc4044fcacf0&request_guid=a16cfa20-c26c-4783-b8b7-53ce3859ff22 HTTP/1.1" 200 2617
2025-01-18 18:34:09,899 - DEBUG - SUCCESS
2025-01-18 18:34:09,899 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:09,900 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:09,900 - DEBUG - Query id: 01b9ce02-0002-4c79-0007-08ea002001aa
2025-01-18 18:34:09,900 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246845275220, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:34:09,900 - DEBUG - Cache Entry: (0, 1737246835967913, 0)
2025-01-18 18:34:09,900 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246845275220, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:34:09,900 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:09,900 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:09,900 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:09,900 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:09,900 - DEBUG - Cache Entry: (0, 1737246845275220, 0)
2025-01-18 18:34:09,900 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:09,901 - DEBUG - sfqid: 01b9ce02-0002-4c79-0007-08ea002001aa
2025-01-18 18:34:09,901 - DEBUG - query execution done
2025-01-18 18:34:09,901 - DEBUG - SUCCESS
2025-01-18 18:34:09,901 - DEBUG - PUT OR GET: False
2025-01-18 18:34:09,901 - DEBUG - Query result format: arrow
2025-01-18 18:34:09,901 - INFO - Number of results in first chunk: 1
2025-01-18 18:34:09,901 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:34:09,901 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:34:09,901 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:34:09,901 - DEBUG - Batches read: 0
2025-01-18 18:34:09,901 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:34:09,901 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:34:09,901 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:34:09,902 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:34:09,902 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:34:09,902 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:34:09,902 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:34:09,905 - DEBUG - cursor
2025-01-18 18:34:09,905 - DEBUG - executing SQL/command
2025-01-18 18:34:09,905 - DEBUG - query: [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:34:09,905 - DEBUG - sequence counter: 27
2025-01-18 18:34:09,906 - DEBUG - Request id: 1c9970f7-91fb-40c6-9529-8bb7a1976226
2025-01-18 18:34:09,906 - DEBUG - running query [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:34:09,906 - DEBUG - is_file_transfer: True
2025-01-18 18:34:09,906 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:09,906 - DEBUG - _cmd_query
2025-01-18 18:34:09,906 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:09,906 - DEBUG - Cache Entry: (0, 1737246845275220, 0)
2025-01-18 18:34:09,906 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246845275220, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:34:09,906 - DEBUG - sql=[SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...], sequence_id=[27], is_file_transfer=[False]
2025-01-18 18:34:09,907 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:09,907 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:09,907 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:09,907 - DEBUG - Request guid: 2ec0a2d1-77e2-4520-8b9d-677b00369f5a
2025-01-18 18:34:09,907 - DEBUG - socket timeout: 60
2025-01-18 18:34:11,002 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=1c9970f7-91fb-40c6-9529-8bb7a1976226&request_guid=2ec0a2d1-77e2-4520-8b9d-677b00369f5a HTTP/1.1" 200 6056
2025-01-18 18:34:11,003 - DEBUG - SUCCESS
2025-01-18 18:34:11,003 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:11,003 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:11,003 - DEBUG - Query id: 01b9ce02-0002-4c76-0007-08ea001fbe2a
2025-01-18 18:34:11,003 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246846387451, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:34:11,003 - DEBUG - Cache Entry: (0, 1737246845275220, 0)
2025-01-18 18:34:11,003 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246846387451, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:34:11,003 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:11,003 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:11,004 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:11,004 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:11,004 - DEBUG - Cache Entry: (0, 1737246846387451, 0)
2025-01-18 18:34:11,004 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:11,004 - DEBUG - sfqid: 01b9ce02-0002-4c76-0007-08ea001fbe2a
2025-01-18 18:34:11,004 - DEBUG - query execution done
2025-01-18 18:34:11,004 - DEBUG - SUCCESS
2025-01-18 18:34:11,004 - DEBUG - PUT OR GET: False
2025-01-18 18:34:11,004 - DEBUG - Query result format: arrow
2025-01-18 18:34:11,004 - INFO - Number of results in first chunk: 200
2025-01-18 18:34:11,004 - DEBUG - Execute query [queryID: 01b9ce02-0002-4c76-0007-08ea001fbe2a] 
        SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE 
        FROM DEV_DP_APP.MODELED.US_ADDRESS_LIST 
        WHERE CONTAINS(LOWER(LOCATION), LOWER('orlan'))
        LIMIT 200
        
2025-01-18 18:34:11,004 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:34:11,004 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:34:11,004 - DEBUG - Batches read: 1
2025-01-18 18:34:11,005 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:34:11,009 - DEBUG - executing SQL/command
2025-01-18 18:34:11,009 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:34:11,010 - DEBUG - sequence counter: 28
2025-01-18 18:34:11,010 - DEBUG - Request id: 2a7cdf72-9738-4f94-b2f7-239ea05ee94e
2025-01-18 18:34:11,010 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:34:11,010 - DEBUG - is_file_transfer: True
2025-01-18 18:34:11,010 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:11,010 - DEBUG - _cmd_query
2025-01-18 18:34:11,010 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:11,010 - DEBUG - Cache Entry: (0, 1737246846387451, 0)
2025-01-18 18:34:11,010 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246846387451, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:34:11,010 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[28], is_file_transfer=[False]
2025-01-18 18:34:11,011 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:11,011 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:11,011 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:11,011 - DEBUG - Request guid: dfab9469-192c-4633-87d7-8d69fb2e7806
2025-01-18 18:34:11,011 - DEBUG - socket timeout: 60
2025-01-18 18:34:11,106 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=2a7cdf72-9738-4f94-b2f7-239ea05ee94e&request_guid=dfab9469-192c-4633-87d7-8d69fb2e7806 HTTP/1.1" 200 1504
2025-01-18 18:34:11,107 - DEBUG - SUCCESS
2025-01-18 18:34:11,107 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:11,107 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:11,108 - DEBUG - Query id: 01b9ce02-0002-4c5d-0007-08ea001fcce6
2025-01-18 18:34:11,108 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246846504205, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:34:11,108 - DEBUG - Cache Entry: (0, 1737246846387451, 0)
2025-01-18 18:34:11,108 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246846504205, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:34:11,108 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:11,108 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:11,108 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:11,108 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:11,108 - DEBUG - Cache Entry: (0, 1737246846504205, 0)
2025-01-18 18:34:11,108 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:11,108 - DEBUG - sfqid: 01b9ce02-0002-4c5d-0007-08ea001fcce6
2025-01-18 18:34:11,108 - DEBUG - query execution done
2025-01-18 18:34:11,108 - DEBUG - SUCCESS
2025-01-18 18:34:11,108 - DEBUG - PUT OR GET: False
2025-01-18 18:34:11,108 - DEBUG - Query result format: arrow
2025-01-18 18:34:11,108 - INFO - Number of results in first chunk: 0
2025-01-18 18:34:11,109 - DEBUG - executing SQL/command
2025-01-18 18:34:11,109 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:34:11,109 - DEBUG - sequence counter: 29
2025-01-18 18:34:11,109 - DEBUG - Request id: 33ce63c2-150e-4572-84f9-22bbb9f5d70c
2025-01-18 18:34:11,109 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:34:11,109 - DEBUG - is_file_transfer: True
2025-01-18 18:34:11,109 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:11,109 - DEBUG - _cmd_query
2025-01-18 18:34:11,109 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:11,109 - DEBUG - Cache Entry: (0, 1737246846504205, 0)
2025-01-18 18:34:11,109 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246846504205, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:34:11,109 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[29], is_file_transfer=[False]
2025-01-18 18:34:11,110 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:11,110 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:11,110 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:11,110 - DEBUG - Request guid: f4a734f8-9aca-417d-86ce-c53ef5140bb0
2025-01-18 18:34:11,110 - DEBUG - socket timeout: 60
2025-01-18 18:34:11,189 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=33ce63c2-150e-4572-84f9-22bbb9f5d70c&request_guid=f4a734f8-9aca-417d-86ce-c53ef5140bb0 HTTP/1.1" 200 None
2025-01-18 18:34:11,190 - DEBUG - SUCCESS
2025-01-18 18:34:11,190 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:11,190 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:11,190 - DEBUG - Query id: 01b9ce02-0002-4c70-0007-08ea001f9f16
2025-01-18 18:34:11,190 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246846583160, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:34:11,190 - DEBUG - Cache Entry: (0, 1737246846504205, 0)
2025-01-18 18:34:11,190 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246846583160, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:34:11,190 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:11,190 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:11,190 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:11,190 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:11,190 - DEBUG - Cache Entry: (0, 1737246846583160, 0)
2025-01-18 18:34:11,190 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:11,190 - DEBUG - sfqid: 01b9ce02-0002-4c70-0007-08ea001f9f16
2025-01-18 18:34:11,190 - DEBUG - query execution done
2025-01-18 18:34:11,191 - DEBUG - SUCCESS
2025-01-18 18:34:11,191 - DEBUG - PUT OR GET: False
2025-01-18 18:34:11,191 - DEBUG - Query result format: arrow
2025-01-18 18:34:11,191 - INFO - Number of results in first chunk: 0
2025-01-18 18:34:11,191 - DEBUG - executing SQL/command
2025-01-18 18:34:11,191 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:34:11,191 - DEBUG - sequence counter: 30
2025-01-18 18:34:11,191 - DEBUG - Request id: 5721da5d-88e4-43a3-b486-8a34da3c4128
2025-01-18 18:34:11,191 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:34:11,191 - DEBUG - is_file_transfer: True
2025-01-18 18:34:11,191 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:11,191 - DEBUG - _cmd_query
2025-01-18 18:34:11,191 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:11,191 - DEBUG - Cache Entry: (0, 1737246846583160, 0)
2025-01-18 18:34:11,191 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246846583160, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:34:11,191 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[30], is_file_transfer=[False]
2025-01-18 18:34:11,193 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:11,193 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:11,193 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:11,193 - DEBUG - Request guid: 906e1c14-e821-44d4-bb0e-304f0f78eae9
2025-01-18 18:34:11,193 - DEBUG - socket timeout: 60
2025-01-18 18:34:11,258 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=5721da5d-88e4-43a3-b486-8a34da3c4128&request_guid=906e1c14-e821-44d4-bb0e-304f0f78eae9 HTTP/1.1" 200 1374
2025-01-18 18:34:11,258 - DEBUG - SUCCESS
2025-01-18 18:34:11,258 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:11,258 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:11,258 - DEBUG - Query id: 01b9ce02-0002-4c79-0007-08ea002001ae
2025-01-18 18:34:11,258 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246846655565, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:34:11,258 - DEBUG - Cache Entry: (0, 1737246846583160, 0)
2025-01-18 18:34:11,258 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246846655565, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:34:11,258 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:11,259 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:11,259 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:11,259 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:11,259 - DEBUG - Cache Entry: (0, 1737246846655565, 0)
2025-01-18 18:34:11,259 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:11,259 - DEBUG - sfqid: 01b9ce02-0002-4c79-0007-08ea002001ae
2025-01-18 18:34:11,259 - DEBUG - query execution done
2025-01-18 18:34:11,259 - DEBUG - SUCCESS
2025-01-18 18:34:11,259 - DEBUG - PUT OR GET: False
2025-01-18 18:34:11,259 - DEBUG - Query result format: arrow
2025-01-18 18:34:11,259 - INFO - Number of results in first chunk: 0
2025-01-18 18:34:11,260 - DEBUG - executing SQL/command
2025-01-18 18:34:11,260 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:34:11,260 - DEBUG - sequence counter: 31
2025-01-18 18:34:11,260 - DEBUG - Request id: be2145da-e5f4-4b00-85e5-b5112f330ce3
2025-01-18 18:34:11,260 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:34:11,260 - DEBUG - is_file_transfer: True
2025-01-18 18:34:11,260 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:11,260 - DEBUG - _cmd_query
2025-01-18 18:34:11,260 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:11,260 - DEBUG - Cache Entry: (0, 1737246846655565, 0)
2025-01-18 18:34:11,260 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246846655565, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:34:11,260 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[31], is_file_transfer=[False]
2025-01-18 18:34:11,261 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:11,261 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:11,261 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:11,261 - DEBUG - Request guid: eba6f6d1-09be-49b4-bf8f-b12dda034acc
2025-01-18 18:34:11,261 - DEBUG - socket timeout: 60
2025-01-18 18:34:11,345 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=be2145da-e5f4-4b00-85e5-b5112f330ce3&request_guid=eba6f6d1-09be-49b4-bf8f-b12dda034acc HTTP/1.1" 200 2619
2025-01-18 18:34:11,345 - DEBUG - SUCCESS
2025-01-18 18:34:11,346 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:11,346 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:11,346 - DEBUG - Query id: 01b9ce02-0002-4d87-0007-08ea001fe606
2025-01-18 18:34:11,346 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246846744667, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:34:11,346 - DEBUG - Cache Entry: (0, 1737246846655565, 0)
2025-01-18 18:34:11,346 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246846744667, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:34:11,346 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:11,346 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:11,346 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:11,346 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:11,346 - DEBUG - Cache Entry: (0, 1737246846744667, 0)
2025-01-18 18:34:11,346 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:11,346 - DEBUG - sfqid: 01b9ce02-0002-4d87-0007-08ea001fe606
2025-01-18 18:34:11,346 - DEBUG - query execution done
2025-01-18 18:34:11,346 - DEBUG - SUCCESS
2025-01-18 18:34:11,346 - DEBUG - PUT OR GET: False
2025-01-18 18:34:11,346 - DEBUG - Query result format: arrow
2025-01-18 18:34:11,346 - INFO - Number of results in first chunk: 54
2025-01-18 18:34:11,346 - DEBUG - Execute query [queryID: 01b9ce02-0002-4d87-0007-08ea001fe606]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:34:11,346 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:34:11,346 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:34:11,347 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:34:11,347 - DEBUG - Batches read: 0
2025-01-18 18:34:11,347 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:34:11,347 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:34:18,744 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:34:18,744 - INFO - Querying the server for client info
2025-01-18 18:34:18,744 - DEBUG - cursor
2025-01-18 18:34:18,744 - DEBUG - executing SQL/command
2025-01-18 18:34:18,744 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:34:18,744 - DEBUG - sequence counter: 32
2025-01-18 18:34:18,744 - DEBUG - Request id: 885c188a-efc2-4dd3-a674-7fc4e7f751bc
2025-01-18 18:34:18,744 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:34:18,744 - DEBUG - is_file_transfer: True
2025-01-18 18:34:18,744 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:18,744 - DEBUG - _cmd_query
2025-01-18 18:34:18,744 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:18,745 - DEBUG - Cache Entry: (0, 1737246846744667, 0)
2025-01-18 18:34:18,745 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246846744667, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:34:18,745 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[32], is_file_transfer=[False]
2025-01-18 18:34:18,746 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:18,746 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:18,746 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:18,747 - DEBUG - Request guid: e88ec196-fb34-46af-a218-5e28fbd269fe
2025-01-18 18:34:18,747 - DEBUG - socket timeout: 60
2025-01-18 18:34:18,905 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=885c188a-efc2-4dd3-a674-7fc4e7f751bc&request_guid=e88ec196-fb34-46af-a218-5e28fbd269fe HTTP/1.1" 200 2620
2025-01-18 18:34:18,906 - DEBUG - SUCCESS
2025-01-18 18:34:18,906 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:18,906 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:18,906 - DEBUG - Query id: 01b9ce02-0002-4c77-0007-08ea001fdd4a
2025-01-18 18:34:18,906 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246854288898, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:34:18,906 - DEBUG - Cache Entry: (0, 1737246846744667, 0)
2025-01-18 18:34:18,906 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246854288898, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:34:18,906 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:18,906 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:18,906 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:18,906 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:18,906 - DEBUG - Cache Entry: (0, 1737246854288898, 0)
2025-01-18 18:34:18,906 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:18,907 - DEBUG - sfqid: 01b9ce02-0002-4c77-0007-08ea001fdd4a
2025-01-18 18:34:18,907 - DEBUG - query execution done
2025-01-18 18:34:18,907 - DEBUG - SUCCESS
2025-01-18 18:34:18,907 - DEBUG - PUT OR GET: False
2025-01-18 18:34:18,907 - DEBUG - Query result format: arrow
2025-01-18 18:34:18,907 - INFO - Number of results in first chunk: 1
2025-01-18 18:34:18,907 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:34:18,907 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:34:18,907 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:34:18,907 - DEBUG - Batches read: 0
2025-01-18 18:34:18,907 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:34:18,907 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:34:18,907 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:34:18,907 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:34:18,908 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:34:18,908 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:34:18,908 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:34:18,910 - DEBUG - cursor
2025-01-18 18:34:18,910 - DEBUG - executing SQL/command
2025-01-18 18:34:18,910 - DEBUG - query: [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:34:18,910 - DEBUG - sequence counter: 33
2025-01-18 18:34:18,910 - DEBUG - Request id: 86f98c55-a98c-4c75-8ebd-78b8326d0b68
2025-01-18 18:34:18,910 - DEBUG - running query [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:34:18,910 - DEBUG - is_file_transfer: True
2025-01-18 18:34:18,910 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:18,910 - DEBUG - _cmd_query
2025-01-18 18:34:18,910 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:18,910 - DEBUG - Cache Entry: (0, 1737246854288898, 0)
2025-01-18 18:34:18,910 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246854288898, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:34:18,910 - DEBUG - sql=[SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...], sequence_id=[33], is_file_transfer=[False]
2025-01-18 18:34:18,911 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:18,912 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:18,912 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:18,912 - DEBUG - Request guid: 13a86104-d463-4c4e-b8bb-6ae21d9d46ad
2025-01-18 18:34:18,912 - DEBUG - socket timeout: 60
2025-01-18 18:34:20,541 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=86f98c55-a98c-4c75-8ebd-78b8326d0b68&request_guid=13a86104-d463-4c4e-b8bb-6ae21d9d46ad HTTP/1.1" 200 6042
2025-01-18 18:34:20,542 - DEBUG - SUCCESS
2025-01-18 18:34:20,542 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:20,542 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:20,543 - DEBUG - Query id: 01b9ce02-0002-4c71-0007-08ea002020a2
2025-01-18 18:34:20,543 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246855918254, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 18:34:20,543 - DEBUG - Cache Entry: (0, 1737246854288898, 0)
2025-01-18 18:34:20,543 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246855918254, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 18:34:20,543 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:20,543 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:20,543 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:20,543 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:20,543 - DEBUG - Cache Entry: (0, 1737246855918254, 0)
2025-01-18 18:34:20,543 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:20,543 - DEBUG - sfqid: 01b9ce02-0002-4c71-0007-08ea002020a2
2025-01-18 18:34:20,543 - DEBUG - query execution done
2025-01-18 18:34:20,543 - DEBUG - SUCCESS
2025-01-18 18:34:20,543 - DEBUG - PUT OR GET: False
2025-01-18 18:34:20,543 - DEBUG - Query result format: arrow
2025-01-18 18:34:20,543 - INFO - Number of results in first chunk: 200
2025-01-18 18:34:20,544 - DEBUG - Execute query [queryID: 01b9ce02-0002-4c71-0007-08ea002020a2] 
        SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE 
        FROM DEV_DP_APP.MODELED.US_ADDRESS_LIST 
        WHERE CONTAINS(LOWER(LOCATION), LOWER('orlando'))
        LIMIT 200
        
2025-01-18 18:34:20,544 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:34:20,544 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:34:20,544 - DEBUG - Batches read: 1
2025-01-18 18:34:20,544 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:34:20,549 - DEBUG - executing SQL/command
2025-01-18 18:34:20,549 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:34:20,549 - DEBUG - sequence counter: 34
2025-01-18 18:34:20,549 - DEBUG - Request id: 2b61d8ae-bdfc-4d9a-a1f8-c451e85d4e7e
2025-01-18 18:34:20,549 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:34:20,549 - DEBUG - is_file_transfer: True
2025-01-18 18:34:20,549 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:20,550 - DEBUG - _cmd_query
2025-01-18 18:34:20,550 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:20,550 - DEBUG - Cache Entry: (0, 1737246855918254, 0)
2025-01-18 18:34:20,550 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246855918254, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 18:34:20,550 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[34], is_file_transfer=[False]
2025-01-18 18:34:20,550 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:20,551 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:20,551 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:20,551 - DEBUG - Request guid: 9f15f8c1-1472-401c-91f8-c6bf705df74c
2025-01-18 18:34:20,551 - DEBUG - socket timeout: 60
2025-01-18 18:34:20,620 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=2b61d8ae-bdfc-4d9a-a1f8-c451e85d4e7e&request_guid=9f15f8c1-1472-401c-91f8-c6bf705df74c HTTP/1.1" 200 1500
2025-01-18 18:34:20,620 - DEBUG - SUCCESS
2025-01-18 18:34:20,621 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:20,621 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:20,621 - DEBUG - Query id: 01b9ce02-0002-4c72-0007-08ea00203026
2025-01-18 18:34:20,621 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246856008664, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:34:20,621 - DEBUG - Cache Entry: (0, 1737246855918254, 0)
2025-01-18 18:34:20,621 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246856008664, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:34:20,621 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:20,621 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:20,621 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:20,621 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:20,621 - DEBUG - Cache Entry: (0, 1737246856008664, 0)
2025-01-18 18:34:20,621 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:20,621 - DEBUG - sfqid: 01b9ce02-0002-4c72-0007-08ea00203026
2025-01-18 18:34:20,621 - DEBUG - query execution done
2025-01-18 18:34:20,621 - DEBUG - SUCCESS
2025-01-18 18:34:20,621 - DEBUG - PUT OR GET: False
2025-01-18 18:34:20,621 - DEBUG - Query result format: arrow
2025-01-18 18:34:20,621 - INFO - Number of results in first chunk: 0
2025-01-18 18:34:20,623 - DEBUG - executing SQL/command
2025-01-18 18:34:20,623 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:34:20,623 - DEBUG - sequence counter: 35
2025-01-18 18:34:20,623 - DEBUG - Request id: 8226b8f3-3109-4d11-9074-f07e16b7e7c1
2025-01-18 18:34:20,623 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:34:20,623 - DEBUG - is_file_transfer: True
2025-01-18 18:34:20,623 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:20,623 - DEBUG - _cmd_query
2025-01-18 18:34:20,623 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:20,623 - DEBUG - Cache Entry: (0, 1737246856008664, 0)
2025-01-18 18:34:20,623 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246856008664, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:34:20,623 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[35], is_file_transfer=[False]
2025-01-18 18:34:20,624 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:20,624 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:20,624 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:20,624 - DEBUG - Request guid: eb9bc634-dca3-4330-b206-a651dfc98d58
2025-01-18 18:34:20,624 - DEBUG - socket timeout: 60
2025-01-18 18:34:20,682 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=8226b8f3-3109-4d11-9074-f07e16b7e7c1&request_guid=eb9bc634-dca3-4330-b206-a651dfc98d58 HTTP/1.1" 200 1374
2025-01-18 18:34:20,683 - DEBUG - SUCCESS
2025-01-18 18:34:20,684 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:20,684 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:20,684 - DEBUG - Query id: 01b9ce02-0002-4c7a-0007-08ea001ff65e
2025-01-18 18:34:20,684 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246856085526, 'priority': 0, 'context': 'COrjJA=='}]}
2025-01-18 18:34:20,684 - DEBUG - Cache Entry: (0, 1737246856008664, 0)
2025-01-18 18:34:20,684 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246856085526, 'priority': 0, 'context': 'COrjJA=='}
2025-01-18 18:34:20,684 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:20,684 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:20,684 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:20,684 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:20,684 - DEBUG - Cache Entry: (0, 1737246856085526, 0)
2025-01-18 18:34:20,684 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:20,684 - DEBUG - sfqid: 01b9ce02-0002-4c7a-0007-08ea001ff65e
2025-01-18 18:34:20,684 - DEBUG - query execution done
2025-01-18 18:34:20,684 - DEBUG - SUCCESS
2025-01-18 18:34:20,684 - DEBUG - PUT OR GET: False
2025-01-18 18:34:20,684 - DEBUG - Query result format: arrow
2025-01-18 18:34:20,685 - INFO - Number of results in first chunk: 0
2025-01-18 18:34:20,685 - DEBUG - executing SQL/command
2025-01-18 18:34:20,685 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:34:20,685 - DEBUG - sequence counter: 36
2025-01-18 18:34:20,685 - DEBUG - Request id: 3b1dbb71-2da7-4e1f-85a4-3d65e866f4c0
2025-01-18 18:34:20,685 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:34:20,685 - DEBUG - is_file_transfer: True
2025-01-18 18:34:20,685 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:20,686 - DEBUG - _cmd_query
2025-01-18 18:34:20,686 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:20,686 - DEBUG - Cache Entry: (0, 1737246856085526, 0)
2025-01-18 18:34:20,686 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246856085526, 'priority': 0, 'context': {'base64Data': 'COrjJA=='}}]}
2025-01-18 18:34:20,686 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[36], is_file_transfer=[False]
2025-01-18 18:34:20,686 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:20,686 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:20,686 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:20,687 - DEBUG - Request guid: e2829b22-36dd-432f-bcfc-131c69c6c06b
2025-01-18 18:34:20,687 - DEBUG - socket timeout: 60
2025-01-18 18:34:20,740 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=3b1dbb71-2da7-4e1f-85a4-3d65e866f4c0&request_guid=e2829b22-36dd-432f-bcfc-131c69c6c06b HTTP/1.1" 200 1374
2025-01-18 18:34:20,741 - DEBUG - SUCCESS
2025-01-18 18:34:20,741 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:20,741 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:20,741 - DEBUG - Query id: 01b9ce02-0002-4c76-0007-08ea001fbe2e
2025-01-18 18:34:20,741 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246856141425, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:34:20,741 - DEBUG - Cache Entry: (0, 1737246856085526, 0)
2025-01-18 18:34:20,741 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246856141425, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:34:20,741 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:20,741 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:20,741 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:20,741 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:20,741 - DEBUG - Cache Entry: (0, 1737246856141425, 0)
2025-01-18 18:34:20,741 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:20,741 - DEBUG - sfqid: 01b9ce02-0002-4c76-0007-08ea001fbe2e
2025-01-18 18:34:20,741 - DEBUG - query execution done
2025-01-18 18:34:20,741 - DEBUG - SUCCESS
2025-01-18 18:34:20,741 - DEBUG - PUT OR GET: False
2025-01-18 18:34:20,741 - DEBUG - Query result format: arrow
2025-01-18 18:34:20,742 - INFO - Number of results in first chunk: 0
2025-01-18 18:34:20,742 - DEBUG - executing SQL/command
2025-01-18 18:34:20,742 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:34:20,742 - DEBUG - sequence counter: 37
2025-01-18 18:34:20,742 - DEBUG - Request id: e6759a1a-8494-4fbb-a75b-0baa497fd1b3
2025-01-18 18:34:20,742 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:34:20,742 - DEBUG - is_file_transfer: True
2025-01-18 18:34:20,742 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:20,743 - DEBUG - _cmd_query
2025-01-18 18:34:20,743 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:20,743 - DEBUG - Cache Entry: (0, 1737246856141425, 0)
2025-01-18 18:34:20,743 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246856141425, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:34:20,743 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[37], is_file_transfer=[False]
2025-01-18 18:34:20,743 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:20,744 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:20,744 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:20,744 - DEBUG - Request guid: 4bb782d8-b336-46a7-91ba-f10dc600c70a
2025-01-18 18:34:20,744 - DEBUG - socket timeout: 60
2025-01-18 18:34:20,846 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=e6759a1a-8494-4fbb-a75b-0baa497fd1b3&request_guid=4bb782d8-b336-46a7-91ba-f10dc600c70a HTTP/1.1" 200 2614
2025-01-18 18:34:20,846 - DEBUG - SUCCESS
2025-01-18 18:34:20,846 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:20,846 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:20,846 - DEBUG - Query id: 01b9ce02-0002-4c79-0007-08ea002001b2
2025-01-18 18:34:20,846 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246856244930, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:34:20,846 - DEBUG - Cache Entry: (0, 1737246856141425, 0)
2025-01-18 18:34:20,846 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246856244930, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:34:20,847 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:20,847 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:20,847 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:20,847 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:20,847 - DEBUG - Cache Entry: (0, 1737246856244930, 0)
2025-01-18 18:34:20,847 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:20,847 - DEBUG - sfqid: 01b9ce02-0002-4c79-0007-08ea002001b2
2025-01-18 18:34:20,847 - DEBUG - query execution done
2025-01-18 18:34:20,855 - DEBUG - Sending 1 logs to telemetry. Data is {'logs': [{'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_imported_packages', 'value': "{'sys', 'packaging', 'secrets', 'traceback', 'collections', 'configparser', 'pythoncom', 'locale', 'glob', 'uuid', 'enum', 'cython_runtime', 'bz2', 'annotated_types', 'queue', 'sortedcontainers', 'pydantic', 'email', 'pydoc', 'asyncio', 'copy', 'shlex', 'difflib', 'uu', 'absl', 'msvcrt', 'string', 'webbrowser', 'operator', 'ssl', 'mimetypes', 'win32api', 'timeit', 'importlib', 'errno', 'multiprocessing', 'json', 'idna', 'anyio', 'types', 'csv', 'jwt', 'threading', 'mmap', 'yaml', 'site', 'time', 'win32com', 'sre_constants', 'stringprep', 'nt', 'gitdb', 'google', 'argparse', 'fractions', 'PIL', 'numpy', 'selectors', 'zipimport', 'contextvars', 'tempfile', 'hmac', 'statistics', 'linecache', 'click', 'reprlib', 'builtins', 'sysconfig', 'pprint', 'cmath', 'xml', 'calendar', 'pandas', 'attr', 'blinker', 'tarfile', 'requests', 'distro', 'genericpath', 'select', 'keyword', 'runpy', 'decimal', 'encodings', 'six', 'winreg', 'streamlit', 'pygments', 'copyreg', 'urllib', 'token', 'pkgutil', 'gzip', 'tokenize', 'textwrap', 'zoneinfo', 'itertools', 'codecs', 'functools', 'lzma', 'opcode', 'jiter', 'shutil', 'certifi', 'snowflake', 'public', 'quopri', 'dataclasses', 'heapq', 'OpenSSL', 'base64', 'urllib3', 'watchdog', 'pywintypes', 'cloudpickle', 'pathlib', 'platform', 'gc', 'typing', 'pyarrow', 're', 'array', 'math', 'dateutil', 'plistlib', 'hashlib', 'pickle', 'marshal', 'concurrent', 'colorama', 'cryptography', 'httpx', 'filelock', 'dis', 'unittest', 'sre_compile', 'sniffio', 'inspect', 'plotly', 'zlib', 'ntpath', 'numbers', 'subprocess', 'socket', 'tzlocal', 'binascii', 'colorsys', 'tomlkit', 'bisect', 'charset_normalizer', 'atexit', 'datetime', 'pydantic_core', 'cachetools', 'posixpath', 'nturl2path', 'abc', 'getopt', 'weakref', 'rich', 'gettext', 'http', 'html', 'git', 'pywin32_bootstrap', 'pywin32_system32', 'os', 'getpass', 'pytz', 'ipaddress', 'asn1crypto', 'struct', 'tornado', 'contextlib', 'logging', 'platformdirs', 'smmap', 'fnmatch', 'io', 'toml', 'pyexpat', 'ast', 'pkg_resources', 'unicodedata', 'warnings', 'stat', 'sre_parse', 'random', 'signal', 'typing_extensions', 'openai', 'zipfile', 'ctypes'}"}, 'timestamp': '1737246751912'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_session_created', 'data': {'start_time': 1737246751912, 'created_by_snowpark': 0}}, 'timestamp': '1737246751912'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 24664}}, 'timestamp': '1737246751913'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce00-0002-4c79-0007-08ea00200166', 'value': 4591}, 'timestamp': '1737246752008'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce00-0002-4c79-0007-08ea0020016a', 'value': 4592}, 'timestamp': '1737246752102'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce00-0002-4c79-0007-08ea0020016a', 'value': 1}, 'timestamp': '1737246752103'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '355f87a4-0542-42d2-b930-c91b0edd3c55', 'query_plan_complexity': {'column': 1}, 'thread_ident': 24664}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce00-0002-4c79-0007-08ea0020016a']}}, 'timestamp': '1737246752103'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce00-0002-4c72-0007-08ea001fafe2', 'value': 4591}, 'timestamp': '1737246752199'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.09192967414855957, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246752200'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce00-0002-4c70-0007-08ea001f9f06', 'value': 4593}, 'timestamp': '1737246752284'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.08282637596130371, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246752284'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce00-0002-4c70-0007-08ea001f9f0a', 'value': 4595}, 'timestamp': '1737246752344'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.0584874153137207, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246752344'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce00-0002-4c79-0007-08ea0020016e', 'value': 4591}, 'timestamp': '1737246752524'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce00-0002-4c79-0007-08ea0020016e', 'value': 1}, 'timestamp': '1737246752525'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '8626514c-32bc-4313-aadc-55d4fe0ca3c0', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 24664}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce00-0002-4c79-0007-08ea0020016e']}}, 'timestamp': '1737246752525'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce00-0002-4d87-0007-08ea001fe5f2', 'value': 4592}, 'timestamp': '1737246756544'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 22308}}, 'timestamp': '1737246756549'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce00-0002-4c70-0007-08ea001f9f0e', 'value': 4593}, 'timestamp': '1737246756615'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.06588268280029297, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246756615'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce00-0002-4c78-0007-08ea002010d6', 'value': 4592}, 'timestamp': '1737246756730'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.11481595039367676, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246756731'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce00-0002-4d87-0007-08ea001fe5f6', 'value': 4592}, 'timestamp': '1737246756795'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.06473970413208008, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246756795'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce00-0002-4c5d-0007-08ea001fccda', 'value': 4595}, 'timestamp': '1737246756905'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce00-0002-4c5d-0007-08ea001fccda', 'value': 1}, 'timestamp': '1737246756906'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'e4a36093-58a7-449e-a8d2-e4d4891d1f78', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 22308}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce00-0002-4c5d-0007-08ea001fccda']}}, 'timestamp': '1737246756906'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737246757519'}, {'message': {'source': 'snowflake.core', 'version': '1.0.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'python_api', 'data': {'class_name': 'CortexSearchServiceResource', 'func_name': 'search'}}, 'timestamp': '1737246757523'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737246773031'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce00-0002-4c79-0007-08ea00200172', 'value': 4607}, 'timestamp': '1737246773217'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce00-0002-4c79-0007-08ea00200172', 'value': 1}, 'timestamp': '1737246773217'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce00-0002-4c79-0007-08ea00200172', 'value': 4}, 'timestamp': '1737246773221'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'bd6f118e-4a64-4ff8-b845-585bb499ed90', 'query_plan_complexity': {'column': 1}, 'thread_ident': 22308}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce00-0002-4c79-0007-08ea00200172']}}, 'timestamp': '1737246773221'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce00-0002-4c72-0007-08ea001fafe6', 'value': 4597}, 'timestamp': '1737246773569'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce00-0002-4c72-0007-08ea001fafe6', 'value': 1}, 'timestamp': '1737246773569'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce00-0002-4c72-0007-08ea001fafe6', 'value': 1}, 'timestamp': '1737246773570'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '3894cedb-8dcb-49f1-9a2b-b1f3ff21fd96', 'query_plan_complexity': {'column': 1}, 'thread_ident': 22308}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce00-0002-4c72-0007-08ea001fafe6']}}, 'timestamp': '1737246773570'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce01-0002-4c76-0007-08ea001fbe12', 'value': 4593}, 'timestamp': '1737246807983'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 19868}}, 'timestamp': '1737246807994'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce01-0002-4c77-0007-08ea001fdd3e', 'value': 4593}, 'timestamp': '1737246808076'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.08304452896118164, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246808076'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce01-0002-4c71-0007-08ea00202096', 'value': 4594}, 'timestamp': '1737246808160'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.08224749565124512, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246808161'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce01-0002-4c76-0007-08ea001fbe16', 'value': 4591}, 'timestamp': '1737246808238'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.0773007869720459, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246808239'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce01-0002-4c76-0007-08ea001fbe1a', 'value': 4592}, 'timestamp': '1737246808328'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce01-0002-4c76-0007-08ea001fbe1a', 'value': 1}, 'timestamp': '1737246808329'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '1b9b6e32-9137-4acc-b6cd-53c875bd33aa', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 19868}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce01-0002-4c76-0007-08ea001fbe1a']}}, 'timestamp': '1737246808329'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737246809013'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737246810608'}, {'message': {'source': 'snowflake.core', 'version': '1.0.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'python_api', 'data': {'class_name': 'CortexSearchServiceResource', 'func_name': 'search'}}, 'timestamp': '1737246810609'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737246829937'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce01-0002-4c78-0007-08ea002010de', 'value': 4594}, 'timestamp': '1737246830135'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce01-0002-4c78-0007-08ea002010de', 'value': 1}, 'timestamp': '1737246830136'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce01-0002-4c78-0007-08ea002010de', 'value': 1}, 'timestamp': '1737246830136'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'faa88bf2-1802-4035-b671-a58b3eae4664', 'query_plan_complexity': {'column': 1}, 'thread_ident': 19868}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce01-0002-4c78-0007-08ea002010de']}}, 'timestamp': '1737246830137'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce01-0002-4c78-0007-08ea002010e2', 'value': 4591}, 'timestamp': '1737246838175'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 27920}}, 'timestamp': '1737246838179'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce01-0002-4c76-0007-08ea001fbe26', 'value': 4595}, 'timestamp': '1737246840247'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce01-0002-4c76-0007-08ea001fbe26', 'value': 1}, 'timestamp': '1737246840247'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce01-0002-4c76-0007-08ea001fbe26', 'value': 1}, 'timestamp': '1737246840248'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'd9a12968-8fcb-4ac2-913f-2713c4a57643', 'query_plan_complexity': {'column': 1}, 'thread_ident': 27920}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce01-0002-4c76-0007-08ea001fbe26']}}, 'timestamp': '1737246840248'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce01-0002-4c77-0007-08ea001fdd46', 'value': 4591}, 'timestamp': '1737246840327'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.07540750503540039, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246840328'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce01-0002-4c7a-0007-08ea001ff65a', 'value': 4593}, 'timestamp': '1737246840410'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.08121895790100098, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246840410'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce01-0002-4c72-0007-08ea00203022', 'value': 4593}, 'timestamp': '1737246840482'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.07219862937927246, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246840482'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce01-0002-4c71-0007-08ea0020209e', 'value': 4592}, 'timestamp': '1737246840573'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce01-0002-4c71-0007-08ea0020209e', 'value': 0}, 'timestamp': '1737246840573'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '7ecbcbd1-7e2d-4e91-a928-c14f1d1aa295', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 27920}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce01-0002-4c71-0007-08ea0020209e']}}, 'timestamp': '1737246840574'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c79-0007-08ea002001aa', 'value': 4593}, 'timestamp': '1737246849901'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 4060}}, 'timestamp': '1737246849905'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c76-0007-08ea001fbe2a', 'value': 4594}, 'timestamp': '1737246851004'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce02-0002-4c76-0007-08ea001fbe2a', 'value': 1}, 'timestamp': '1737246851004'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce02-0002-4c76-0007-08ea001fbe2a', 'value': 1}, 'timestamp': '1737246851005'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '77a17dfe-23d2-40fc-bcac-59363325a702', 'query_plan_complexity': {'column': 1}, 'thread_ident': 4060}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce02-0002-4c76-0007-08ea001fbe2a']}}, 'timestamp': '1737246851006'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c5d-0007-08ea001fcce6', 'value': 4592}, 'timestamp': '1737246851108'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.0983891487121582, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246851108'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c70-0007-08ea001f9f16', 'value': 4593}, 'timestamp': '1737246851190'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.08179450035095215, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246851191'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c79-0007-08ea002001ae', 'value': 4593}, 'timestamp': '1737246851259'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.06746745109558105, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246851259'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4d87-0007-08ea001fe606', 'value': 4591}, 'timestamp': '1737246851346'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce02-0002-4d87-0007-08ea001fe606', 'value': 1}, 'timestamp': '1737246851347'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'a4d1301a-b2cb-4c14-bbf5-dc68cabbe892', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 4060}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce02-0002-4d87-0007-08ea001fe606']}}, 'timestamp': '1737246851347'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c77-0007-08ea001fdd4a', 'value': 4592}, 'timestamp': '1737246858907'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 31740}}, 'timestamp': '1737246858910'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c71-0007-08ea002020a2', 'value': 4592}, 'timestamp': '1737246860543'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce02-0002-4c71-0007-08ea002020a2', 'value': 1}, 'timestamp': '1737246860544'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce02-0002-4c71-0007-08ea002020a2', 'value': 1}, 'timestamp': '1737246860544'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '0a66cd51-104d-4f28-8cc5-afe5045e3a68', 'query_plan_complexity': {'column': 1}, 'thread_ident': 31740}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce02-0002-4c71-0007-08ea002020a2']}}, 'timestamp': '1737246860545'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c72-0007-08ea00203026', 'value': 4594}, 'timestamp': '1737246860621'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.07260465621948242, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246860621'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c7a-0007-08ea001ff65e', 'value': 4593}, 'timestamp': '1737246860684'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.062441349029541016, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246860685'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c76-0007-08ea001fbe2e', 'value': 4591}, 'timestamp': '1737246860741'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.05720186233520508, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246860742'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c79-0007-08ea002001b2', 'value': 4591}, 'timestamp': '1737246860847'}]}.
2025-01-18 18:34:20,856 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:20,857 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:20,857 - DEBUG - remaining request timeout: 5000 ms, retry cnt: 1
2025-01-18 18:34:20,857 - DEBUG - Request guid: 57c40fc5-552a-43a2-ace1-33d014943bfc
2025-01-18 18:34:20,857 - DEBUG - socket timeout: 60
2025-01-18 18:34:20,908 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /telemetry/send?request_guid=57c40fc5-552a-43a2-ace1-33d014943bfc HTTP/1.1" 200 86
2025-01-18 18:34:20,908 - DEBUG - SUCCESS
2025-01-18 18:34:20,908 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:20,908 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:20,908 - DEBUG - Successfully uploading metrics to telemetry.
2025-01-18 18:34:20,909 - DEBUG - SUCCESS
2025-01-18 18:34:20,909 - DEBUG - PUT OR GET: False
2025-01-18 18:34:20,909 - DEBUG - Query result format: arrow
2025-01-18 18:34:20,909 - INFO - Number of results in first chunk: 54
2025-01-18 18:34:20,909 - DEBUG - Execute query [queryID: 01b9ce02-0002-4c79-0007-08ea002001b2]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:34:20,909 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:34:20,909 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:34:20,909 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:34:20,909 - DEBUG - Batches read: 0
2025-01-18 18:34:20,909 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:34:20,909 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:34:24,364 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:34:24,364 - INFO - Querying the server for client info
2025-01-18 18:34:24,364 - DEBUG - cursor
2025-01-18 18:34:24,364 - DEBUG - executing SQL/command
2025-01-18 18:34:24,364 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:34:24,364 - DEBUG - sequence counter: 38
2025-01-18 18:34:24,364 - DEBUG - Request id: a06a035a-b45c-47d9-9f3b-896921174e1c
2025-01-18 18:34:24,364 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:34:24,364 - DEBUG - is_file_transfer: True
2025-01-18 18:34:24,364 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:24,364 - DEBUG - _cmd_query
2025-01-18 18:34:24,364 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:24,364 - DEBUG - Cache Entry: (0, 1737246856244930, 0)
2025-01-18 18:34:24,364 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246856244930, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:34:24,365 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[38], is_file_transfer=[False]
2025-01-18 18:34:24,366 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:24,366 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:24,366 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:24,366 - DEBUG - Request guid: ab3967d2-3b1a-4001-b00d-f43b10a078ed
2025-01-18 18:34:24,366 - DEBUG - socket timeout: 60
2025-01-18 18:34:24,487 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=a06a035a-b45c-47d9-9f3b-896921174e1c&request_guid=ab3967d2-3b1a-4001-b00d-f43b10a078ed HTTP/1.1" 200 2618
2025-01-18 18:34:24,487 - DEBUG - SUCCESS
2025-01-18 18:34:24,487 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:24,487 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:24,487 - DEBUG - Query id: 01b9ce02-0002-4c76-0007-08ea001fbe32
2025-01-18 18:34:24,487 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246859861166, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:34:24,487 - DEBUG - Cache Entry: (0, 1737246856244930, 0)
2025-01-18 18:34:24,487 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246859861166, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:34:24,487 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:24,487 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:24,487 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:24,487 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:24,487 - DEBUG - Cache Entry: (0, 1737246859861166, 0)
2025-01-18 18:34:24,487 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:24,488 - DEBUG - sfqid: 01b9ce02-0002-4c76-0007-08ea001fbe32
2025-01-18 18:34:24,488 - DEBUG - query execution done
2025-01-18 18:34:24,488 - DEBUG - SUCCESS
2025-01-18 18:34:24,488 - DEBUG - PUT OR GET: False
2025-01-18 18:34:24,488 - DEBUG - Query result format: arrow
2025-01-18 18:34:24,488 - INFO - Number of results in first chunk: 1
2025-01-18 18:34:24,488 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:34:24,488 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:34:24,488 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:34:24,488 - DEBUG - Batches read: 0
2025-01-18 18:34:24,488 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:34:24,488 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:34:24,488 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:34:24,488 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:34:24,488 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:34:24,489 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:34:24,489 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:34:24,491 - DEBUG - cursor
2025-01-18 18:34:24,491 - DEBUG - executing SQL/command
2025-01-18 18:34:24,491 - DEBUG - query: [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:34:24,491 - DEBUG - sequence counter: 39
2025-01-18 18:34:24,491 - DEBUG - Request id: 0947df95-c275-43b7-afcd-ed652348918f
2025-01-18 18:34:24,491 - DEBUG - running query [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:34:24,491 - DEBUG - is_file_transfer: True
2025-01-18 18:34:24,491 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:24,491 - DEBUG - _cmd_query
2025-01-18 18:34:24,492 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:24,492 - DEBUG - Cache Entry: (0, 1737246859861166, 0)
2025-01-18 18:34:24,492 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246859861166, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:34:24,492 - DEBUG - sql=[SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...], sequence_id=[39], is_file_transfer=[False]
2025-01-18 18:34:24,494 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:24,494 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:24,494 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:24,495 - DEBUG - Request guid: 347d6771-b376-4f4a-bbc8-47462dd0ed56
2025-01-18 18:34:24,495 - DEBUG - socket timeout: 60
2025-01-18 18:34:25,918 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=0947df95-c275-43b7-afcd-ed652348918f&request_guid=347d6771-b376-4f4a-bbc8-47462dd0ed56 HTTP/1.1" 200 6147
2025-01-18 18:34:25,918 - DEBUG - SUCCESS
2025-01-18 18:34:25,918 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:25,918 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:25,918 - DEBUG - Query id: 01b9ce02-0002-4c72-0007-08ea0020302a
2025-01-18 18:34:25,919 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246861317066, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:34:25,919 - DEBUG - Cache Entry: (0, 1737246859861166, 0)
2025-01-18 18:34:25,919 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246861317066, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:34:25,919 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:25,919 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:25,919 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:25,919 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:25,919 - DEBUG - Cache Entry: (0, 1737246861317066, 0)
2025-01-18 18:34:25,919 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:25,919 - DEBUG - sfqid: 01b9ce02-0002-4c72-0007-08ea0020302a
2025-01-18 18:34:25,919 - DEBUG - query execution done
2025-01-18 18:34:25,919 - DEBUG - SUCCESS
2025-01-18 18:34:25,919 - DEBUG - PUT OR GET: False
2025-01-18 18:34:25,919 - DEBUG - Query result format: arrow
2025-01-18 18:34:25,919 - INFO - Number of results in first chunk: 200
2025-01-18 18:34:25,919 - DEBUG - Execute query [queryID: 01b9ce02-0002-4c72-0007-08ea0020302a] 
        SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE 
        FROM DEV_DP_APP.MODELED.US_ADDRESS_LIST 
        WHERE CONTAINS(LOWER(LOCATION), LOWER('college station'))
        LIMIT 200
        
2025-01-18 18:34:25,919 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:34:25,919 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:34:25,920 - DEBUG - Batches read: 1
2025-01-18 18:34:25,920 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:34:25,925 - DEBUG - executing SQL/command
2025-01-18 18:34:25,926 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:34:25,926 - DEBUG - sequence counter: 40
2025-01-18 18:34:25,926 - DEBUG - Request id: 07800b1d-c87a-4ea0-96a8-211a84cc7329
2025-01-18 18:34:25,926 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:34:25,926 - DEBUG - is_file_transfer: True
2025-01-18 18:34:25,926 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:25,926 - DEBUG - _cmd_query
2025-01-18 18:34:25,926 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:25,926 - DEBUG - Cache Entry: (0, 1737246861317066, 0)
2025-01-18 18:34:25,926 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246861317066, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:34:25,926 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[40], is_file_transfer=[False]
2025-01-18 18:34:25,927 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:25,927 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:25,927 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:25,927 - DEBUG - Request guid: 0ce57d17-998d-4526-9229-3aa349bf7fab
2025-01-18 18:34:25,927 - DEBUG - socket timeout: 60
2025-01-18 18:34:25,981 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=07800b1d-c87a-4ea0-96a8-211a84cc7329&request_guid=0ce57d17-998d-4526-9229-3aa349bf7fab HTTP/1.1" 200 1502
2025-01-18 18:34:25,982 - DEBUG - SUCCESS
2025-01-18 18:34:25,982 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:25,982 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:25,982 - DEBUG - Query id: 01b9ce02-0002-4d87-0007-08ea001fe60a
2025-01-18 18:34:25,982 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246861383705, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:34:25,982 - DEBUG - Cache Entry: (0, 1737246861317066, 0)
2025-01-18 18:34:25,982 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246861383705, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:34:25,982 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:25,982 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:25,983 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:25,983 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:25,983 - DEBUG - Cache Entry: (0, 1737246861383705, 0)
2025-01-18 18:34:25,983 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:25,983 - DEBUG - sfqid: 01b9ce02-0002-4d87-0007-08ea001fe60a
2025-01-18 18:34:25,983 - DEBUG - query execution done
2025-01-18 18:34:25,983 - DEBUG - SUCCESS
2025-01-18 18:34:25,983 - DEBUG - PUT OR GET: False
2025-01-18 18:34:25,983 - DEBUG - Query result format: arrow
2025-01-18 18:34:25,983 - INFO - Number of results in first chunk: 0
2025-01-18 18:34:25,984 - DEBUG - executing SQL/command
2025-01-18 18:34:25,984 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:34:25,984 - DEBUG - sequence counter: 41
2025-01-18 18:34:25,984 - DEBUG - Request id: ccfd9f61-0cdf-43d6-99d2-a54e3a47b563
2025-01-18 18:34:25,984 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:34:25,984 - DEBUG - is_file_transfer: True
2025-01-18 18:34:25,984 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:25,984 - DEBUG - _cmd_query
2025-01-18 18:34:25,984 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:25,984 - DEBUG - Cache Entry: (0, 1737246861383705, 0)
2025-01-18 18:34:25,984 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246861383705, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:34:25,984 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[41], is_file_transfer=[False]
2025-01-18 18:34:25,985 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:25,985 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:25,985 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:25,985 - DEBUG - Request guid: 1fbedab6-148c-4b9b-84e8-6737eef2aef0
2025-01-18 18:34:25,985 - DEBUG - socket timeout: 60
2025-01-18 18:34:26,051 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=ccfd9f61-0cdf-43d6-99d2-a54e3a47b563&request_guid=1fbedab6-148c-4b9b-84e8-6737eef2aef0 HTTP/1.1" 200 1373
2025-01-18 18:34:26,052 - DEBUG - SUCCESS
2025-01-18 18:34:26,052 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:26,052 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:26,052 - DEBUG - Query id: 01b9ce02-0002-4c72-0007-08ea0020302e
2025-01-18 18:34:26,052 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246861444984, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:34:26,052 - DEBUG - Cache Entry: (0, 1737246861383705, 0)
2025-01-18 18:34:26,052 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246861444984, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:34:26,052 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:26,052 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:26,052 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:26,052 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:26,052 - DEBUG - Cache Entry: (0, 1737246861444984, 0)
2025-01-18 18:34:26,052 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:26,052 - DEBUG - sfqid: 01b9ce02-0002-4c72-0007-08ea0020302e
2025-01-18 18:34:26,052 - DEBUG - query execution done
2025-01-18 18:34:26,052 - DEBUG - SUCCESS
2025-01-18 18:34:26,052 - DEBUG - PUT OR GET: False
2025-01-18 18:34:26,053 - DEBUG - Query result format: arrow
2025-01-18 18:34:26,053 - INFO - Number of results in first chunk: 0
2025-01-18 18:34:26,053 - DEBUG - executing SQL/command
2025-01-18 18:34:26,053 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:34:26,053 - DEBUG - sequence counter: 42
2025-01-18 18:34:26,053 - DEBUG - Request id: df24401d-f5d3-41e5-af74-203544ee4920
2025-01-18 18:34:26,053 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:34:26,053 - DEBUG - is_file_transfer: True
2025-01-18 18:34:26,054 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:26,054 - DEBUG - _cmd_query
2025-01-18 18:34:26,054 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:26,054 - DEBUG - Cache Entry: (0, 1737246861444984, 0)
2025-01-18 18:34:26,054 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246861444984, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:34:26,054 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[42], is_file_transfer=[False]
2025-01-18 18:34:26,055 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:26,055 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:26,055 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:26,055 - DEBUG - Request guid: d1951f9a-3490-4edd-8c1a-d769075beb1d
2025-01-18 18:34:26,055 - DEBUG - socket timeout: 60
2025-01-18 18:34:26,115 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=df24401d-f5d3-41e5-af74-203544ee4920&request_guid=d1951f9a-3490-4edd-8c1a-d769075beb1d HTTP/1.1" 200 1374
2025-01-18 18:34:26,115 - DEBUG - SUCCESS
2025-01-18 18:34:26,116 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:26,116 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:26,116 - DEBUG - Query id: 01b9ce02-0002-4c79-0007-08ea002001b6
2025-01-18 18:34:26,116 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246861507517, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:34:26,116 - DEBUG - Cache Entry: (0, 1737246861444984, 0)
2025-01-18 18:34:26,116 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246861507517, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:34:26,116 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:26,116 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:26,116 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:26,116 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:26,116 - DEBUG - Cache Entry: (0, 1737246861507517, 0)
2025-01-18 18:34:26,116 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:26,116 - DEBUG - sfqid: 01b9ce02-0002-4c79-0007-08ea002001b6
2025-01-18 18:34:26,116 - DEBUG - query execution done
2025-01-18 18:34:26,116 - DEBUG - SUCCESS
2025-01-18 18:34:26,116 - DEBUG - PUT OR GET: False
2025-01-18 18:34:26,116 - DEBUG - Query result format: arrow
2025-01-18 18:34:26,116 - INFO - Number of results in first chunk: 0
2025-01-18 18:34:26,117 - DEBUG - executing SQL/command
2025-01-18 18:34:26,117 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:34:26,118 - DEBUG - sequence counter: 43
2025-01-18 18:34:26,118 - DEBUG - Request id: b95e3540-c794-41b4-8379-92261f052b50
2025-01-18 18:34:26,118 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:34:26,118 - DEBUG - is_file_transfer: True
2025-01-18 18:34:26,118 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:26,118 - DEBUG - _cmd_query
2025-01-18 18:34:26,118 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:26,118 - DEBUG - Cache Entry: (0, 1737246861507517, 0)
2025-01-18 18:34:26,118 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246861507517, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:34:26,118 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[43], is_file_transfer=[False]
2025-01-18 18:34:26,118 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:26,119 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:26,119 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:26,119 - DEBUG - Request guid: 73606e85-9933-4448-9df9-3a586c647b7c
2025-01-18 18:34:26,119 - DEBUG - socket timeout: 60
2025-01-18 18:34:26,213 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=b95e3540-c794-41b4-8379-92261f052b50&request_guid=73606e85-9933-4448-9df9-3a586c647b7c HTTP/1.1" 200 2616
2025-01-18 18:34:26,213 - DEBUG - SUCCESS
2025-01-18 18:34:26,213 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:26,213 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:26,213 - DEBUG - Query id: 01b9ce02-0002-4c78-0007-08ea002010e6
2025-01-18 18:34:26,213 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246861614613, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:34:26,213 - DEBUG - Cache Entry: (0, 1737246861507517, 0)
2025-01-18 18:34:26,213 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246861614613, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:34:26,213 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:26,214 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:26,214 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:26,214 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:26,214 - DEBUG - Cache Entry: (0, 1737246861614613, 0)
2025-01-18 18:34:26,214 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:26,214 - DEBUG - sfqid: 01b9ce02-0002-4c78-0007-08ea002010e6
2025-01-18 18:34:26,214 - DEBUG - query execution done
2025-01-18 18:34:26,214 - DEBUG - SUCCESS
2025-01-18 18:34:26,214 - DEBUG - PUT OR GET: False
2025-01-18 18:34:26,214 - DEBUG - Query result format: arrow
2025-01-18 18:34:26,214 - INFO - Number of results in first chunk: 54
2025-01-18 18:34:26,214 - DEBUG - Execute query [queryID: 01b9ce02-0002-4c78-0007-08ea002010e6]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:34:26,214 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:34:26,214 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:34:26,214 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:34:26,214 - DEBUG - Batches read: 0
2025-01-18 18:34:26,214 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:34:26,214 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:34:29,621 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:34:29,621 - INFO - Querying the server for client info
2025-01-18 18:34:29,621 - DEBUG - cursor
2025-01-18 18:34:29,621 - DEBUG - executing SQL/command
2025-01-18 18:34:29,621 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:34:29,621 - DEBUG - sequence counter: 44
2025-01-18 18:34:29,621 - DEBUG - Request id: 1a9cdd61-c6a6-4433-9694-e3e769afae84
2025-01-18 18:34:29,621 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:34:29,621 - DEBUG - is_file_transfer: True
2025-01-18 18:34:29,621 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:29,621 - DEBUG - _cmd_query
2025-01-18 18:34:29,621 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:29,621 - DEBUG - Cache Entry: (0, 1737246861614613, 0)
2025-01-18 18:34:29,621 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246861614613, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:34:29,622 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[44], is_file_transfer=[False]
2025-01-18 18:34:29,622 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:29,623 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:29,623 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:29,623 - DEBUG - Request guid: 532e956a-59f4-4969-a795-94d9bcd56267
2025-01-18 18:34:29,623 - DEBUG - socket timeout: 60
2025-01-18 18:34:29,729 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=1a9cdd61-c6a6-4433-9694-e3e769afae84&request_guid=532e956a-59f4-4969-a795-94d9bcd56267 HTTP/1.1" 200 2620
2025-01-18 18:34:29,730 - DEBUG - SUCCESS
2025-01-18 18:34:29,730 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:29,730 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:29,730 - DEBUG - Query id: 01b9ce02-0002-4c7a-0007-08ea001ff662
2025-01-18 18:34:29,730 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246865120705, 'priority': 0, 'context': 'COrjJA=='}]}
2025-01-18 18:34:29,730 - DEBUG - Cache Entry: (0, 1737246861614613, 0)
2025-01-18 18:34:29,730 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246865120705, 'priority': 0, 'context': 'COrjJA=='}
2025-01-18 18:34:29,730 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:29,730 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:29,730 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:29,730 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:29,731 - DEBUG - Cache Entry: (0, 1737246865120705, 0)
2025-01-18 18:34:29,731 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:29,731 - DEBUG - sfqid: 01b9ce02-0002-4c7a-0007-08ea001ff662
2025-01-18 18:34:29,731 - DEBUG - query execution done
2025-01-18 18:34:29,731 - DEBUG - SUCCESS
2025-01-18 18:34:29,731 - DEBUG - PUT OR GET: False
2025-01-18 18:34:29,731 - DEBUG - Query result format: arrow
2025-01-18 18:34:29,731 - INFO - Number of results in first chunk: 1
2025-01-18 18:34:29,731 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:34:29,731 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:34:29,731 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:34:29,731 - DEBUG - Batches read: 0
2025-01-18 18:34:29,732 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:34:29,732 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:34:29,732 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:34:29,733 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:34:29,733 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:34:29,733 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:34:29,733 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:34:29,738 - DEBUG - cursor
2025-01-18 18:34:29,738 - DEBUG - executing SQL/command
2025-01-18 18:34:29,738 - DEBUG - query: [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:34:29,739 - DEBUG - sequence counter: 45
2025-01-18 18:34:29,739 - DEBUG - Request id: 5503a89c-2451-4f60-881b-3f3194ad48c4
2025-01-18 18:34:29,739 - DEBUG - running query [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:34:29,739 - DEBUG - is_file_transfer: True
2025-01-18 18:34:29,739 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:29,739 - DEBUG - _cmd_query
2025-01-18 18:34:29,739 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:29,739 - DEBUG - Cache Entry: (0, 1737246865120705, 0)
2025-01-18 18:34:29,739 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246865120705, 'priority': 0, 'context': {'base64Data': 'COrjJA=='}}]}
2025-01-18 18:34:29,739 - DEBUG - sql=[SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...], sequence_id=[45], is_file_transfer=[False]
2025-01-18 18:34:29,740 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:29,741 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:29,741 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:29,741 - DEBUG - Request guid: 34bf8b17-f8f9-4ec7-b6e5-a505f82fffc9
2025-01-18 18:34:29,741 - DEBUG - socket timeout: 60
2025-01-18 18:34:29,855 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=5503a89c-2451-4f60-881b-3f3194ad48c4&request_guid=34bf8b17-f8f9-4ec7-b6e5-a505f82fffc9 HTTP/1.1" 200 6147
2025-01-18 18:34:29,856 - DEBUG - SUCCESS
2025-01-18 18:34:29,856 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:29,856 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:29,856 - DEBUG - Query id: 01b9ce02-0002-4c70-0007-08ea001f9f1a
2025-01-18 18:34:29,856 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246865250346, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:34:29,856 - DEBUG - Cache Entry: (0, 1737246865120705, 0)
2025-01-18 18:34:29,856 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246865250346, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:34:29,856 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:29,856 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:29,856 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:29,856 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:29,856 - DEBUG - Cache Entry: (0, 1737246865250346, 0)
2025-01-18 18:34:29,856 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:29,856 - DEBUG - sfqid: 01b9ce02-0002-4c70-0007-08ea001f9f1a
2025-01-18 18:34:29,856 - DEBUG - query execution done
2025-01-18 18:34:29,857 - DEBUG - SUCCESS
2025-01-18 18:34:29,857 - DEBUG - PUT OR GET: False
2025-01-18 18:34:29,857 - DEBUG - Query result format: arrow
2025-01-18 18:34:29,857 - INFO - Number of results in first chunk: 200
2025-01-18 18:34:29,857 - DEBUG - Execute query [queryID: 01b9ce02-0002-4c70-0007-08ea001f9f1a] 
        SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE 
        FROM DEV_DP_APP.MODELED.US_ADDRESS_LIST 
        WHERE CONTAINS(LOWER(LOCATION), LOWER('college station'))
        LIMIT 200
        
2025-01-18 18:34:29,857 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:34:29,857 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:34:29,857 - DEBUG - Batches read: 1
2025-01-18 18:34:29,858 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:34:29,862 - DEBUG - executing SQL/command
2025-01-18 18:34:29,862 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:34:29,862 - DEBUG - sequence counter: 46
2025-01-18 18:34:29,862 - DEBUG - Request id: f8f1cc7f-2cd2-43eb-9313-1d882eaf0565
2025-01-18 18:34:29,862 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:34:29,862 - DEBUG - is_file_transfer: True
2025-01-18 18:34:29,862 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:29,862 - DEBUG - _cmd_query
2025-01-18 18:34:29,862 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:29,862 - DEBUG - Cache Entry: (0, 1737246865250346, 0)
2025-01-18 18:34:29,862 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246865250346, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:34:29,862 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[46], is_file_transfer=[False]
2025-01-18 18:34:29,863 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:29,863 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:29,863 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:29,863 - DEBUG - Request guid: ee495606-9d69-4b3b-a5f6-1a18e61d8d50
2025-01-18 18:34:29,863 - DEBUG - socket timeout: 60
2025-01-18 18:34:29,934 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=f8f1cc7f-2cd2-43eb-9313-1d882eaf0565&request_guid=ee495606-9d69-4b3b-a5f6-1a18e61d8d50 HTTP/1.1" 200 1501
2025-01-18 18:34:29,935 - DEBUG - SUCCESS
2025-01-18 18:34:29,935 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:29,935 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:29,935 - DEBUG - Query id: 01b9ce02-0002-4c70-0007-08ea001f9f1e
2025-01-18 18:34:29,935 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246865327136, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:34:29,935 - DEBUG - Cache Entry: (0, 1737246865250346, 0)
2025-01-18 18:34:29,935 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246865327136, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:34:29,935 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:29,935 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:29,935 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:29,935 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:29,935 - DEBUG - Cache Entry: (0, 1737246865327136, 0)
2025-01-18 18:34:29,935 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:29,935 - DEBUG - sfqid: 01b9ce02-0002-4c70-0007-08ea001f9f1e
2025-01-18 18:34:29,935 - DEBUG - query execution done
2025-01-18 18:34:29,936 - DEBUG - SUCCESS
2025-01-18 18:34:29,936 - DEBUG - PUT OR GET: False
2025-01-18 18:34:29,936 - DEBUG - Query result format: arrow
2025-01-18 18:34:29,936 - INFO - Number of results in first chunk: 0
2025-01-18 18:34:29,936 - DEBUG - executing SQL/command
2025-01-18 18:34:29,937 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:34:29,937 - DEBUG - sequence counter: 47
2025-01-18 18:34:29,937 - DEBUG - Request id: 34217b85-0d9e-4701-a150-4f1fbeb642d3
2025-01-18 18:34:29,937 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:34:29,937 - DEBUG - is_file_transfer: True
2025-01-18 18:34:29,937 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:29,937 - DEBUG - _cmd_query
2025-01-18 18:34:29,937 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:29,937 - DEBUG - Cache Entry: (0, 1737246865327136, 0)
2025-01-18 18:34:29,937 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246865327136, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:34:29,937 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[47], is_file_transfer=[False]
2025-01-18 18:34:29,938 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:29,938 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:29,938 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:29,938 - DEBUG - Request guid: 6feef8be-3667-4a00-9d38-abd5e05d4819
2025-01-18 18:34:29,938 - DEBUG - socket timeout: 60
2025-01-18 18:34:30,000 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=34217b85-0d9e-4701-a150-4f1fbeb642d3&request_guid=6feef8be-3667-4a00-9d38-abd5e05d4819 HTTP/1.1" 200 1374
2025-01-18 18:34:30,001 - DEBUG - SUCCESS
2025-01-18 18:34:30,001 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:30,001 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:30,001 - DEBUG - Query id: 01b9ce02-0002-4c77-0007-08ea001fdd4e
2025-01-18 18:34:30,001 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246865376267, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:34:30,001 - DEBUG - Cache Entry: (0, 1737246865327136, 0)
2025-01-18 18:34:30,001 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246865376267, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:34:30,001 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:30,001 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:30,001 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:30,001 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:30,001 - DEBUG - Cache Entry: (0, 1737246865376267, 0)
2025-01-18 18:34:30,001 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:30,001 - DEBUG - sfqid: 01b9ce02-0002-4c77-0007-08ea001fdd4e
2025-01-18 18:34:30,001 - DEBUG - query execution done
2025-01-18 18:34:30,001 - DEBUG - SUCCESS
2025-01-18 18:34:30,001 - DEBUG - PUT OR GET: False
2025-01-18 18:34:30,001 - DEBUG - Query result format: arrow
2025-01-18 18:34:30,001 - INFO - Number of results in first chunk: 0
2025-01-18 18:34:30,002 - DEBUG - executing SQL/command
2025-01-18 18:34:30,002 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:34:30,002 - DEBUG - sequence counter: 48
2025-01-18 18:34:30,002 - DEBUG - Request id: cb18a81a-bdef-4864-b7f5-1b357d849df6
2025-01-18 18:34:30,002 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:34:30,002 - DEBUG - is_file_transfer: True
2025-01-18 18:34:30,002 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:30,002 - DEBUG - _cmd_query
2025-01-18 18:34:30,002 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:30,002 - DEBUG - Cache Entry: (0, 1737246865376267, 0)
2025-01-18 18:34:30,002 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246865376267, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:34:30,002 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[48], is_file_transfer=[False]
2025-01-18 18:34:30,003 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:30,003 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:30,003 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:30,003 - DEBUG - Request guid: d4959bc9-5b1a-454e-924c-06513fed1cf3
2025-01-18 18:34:30,003 - DEBUG - socket timeout: 60
2025-01-18 18:34:30,062 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=cb18a81a-bdef-4864-b7f5-1b357d849df6&request_guid=d4959bc9-5b1a-454e-924c-06513fed1cf3 HTTP/1.1" 200 1372
2025-01-18 18:34:30,063 - DEBUG - SUCCESS
2025-01-18 18:34:30,063 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/1 active sessions
2025-01-18 18:34:30,063 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:30,063 - DEBUG - Query id: 01b9ce02-0002-4c5d-0007-08ea001fccea
2025-01-18 18:34:30,063 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246865447474, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:34:30,063 - DEBUG - Cache Entry: (0, 1737246865376267, 0)
2025-01-18 18:34:30,063 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246865447474, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:34:30,063 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:30,063 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:30,063 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:30,063 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:30,063 - DEBUG - Cache Entry: (0, 1737246865447474, 0)
2025-01-18 18:34:30,063 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:30,063 - DEBUG - sfqid: 01b9ce02-0002-4c5d-0007-08ea001fccea
2025-01-18 18:34:30,063 - DEBUG - query execution done
2025-01-18 18:34:30,063 - DEBUG - SUCCESS
2025-01-18 18:34:30,063 - DEBUG - PUT OR GET: False
2025-01-18 18:34:30,063 - DEBUG - Query result format: arrow
2025-01-18 18:34:30,063 - INFO - Number of results in first chunk: 0
2025-01-18 18:34:30,064 - DEBUG - executing SQL/command
2025-01-18 18:34:30,064 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:34:30,064 - DEBUG - sequence counter: 49
2025-01-18 18:34:30,064 - DEBUG - Request id: 9312a689-4081-4394-9f3c-955183f67145
2025-01-18 18:34:30,064 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:34:30,064 - DEBUG - is_file_transfer: True
2025-01-18 18:34:30,064 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:30,064 - DEBUG - _cmd_query
2025-01-18 18:34:30,064 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:30,065 - DEBUG - Cache Entry: (0, 1737246865447474, 0)
2025-01-18 18:34:30,065 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246865447474, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:34:30,065 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[49], is_file_transfer=[False]
2025-01-18 18:34:30,065 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:30,065 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/1 active sessions
2025-01-18 18:34:30,065 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:30,065 - DEBUG - Request guid: ddc114f8-9e21-4e43-b5be-0af8a256d8fc
2025-01-18 18:34:30,065 - DEBUG - socket timeout: 60
2025-01-18 18:34:30,121 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:34:30,121 - INFO - Querying the server for client info
2025-01-18 18:34:30,121 - DEBUG - cursor
2025-01-18 18:34:30,121 - DEBUG - executing SQL/command
2025-01-18 18:34:30,121 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:34:30,121 - DEBUG - sequence counter: 50
2025-01-18 18:34:30,121 - DEBUG - Request id: d572875c-52ea-4572-8dd6-f2ade8a39468
2025-01-18 18:34:30,121 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:34:30,121 - DEBUG - is_file_transfer: True
2025-01-18 18:34:30,121 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:30,121 - DEBUG - _cmd_query
2025-01-18 18:34:30,121 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:30,121 - DEBUG - Cache Entry: (0, 1737246865447474, 0)
2025-01-18 18:34:30,121 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246865447474, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:34:30,121 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[50], is_file_transfer=[False]
2025-01-18 18:34:30,122 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:30,122 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 18:34:30,122 - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)
2025-01-18 18:34:30,124 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 2/2 active sessions
2025-01-18 18:34:30,124 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:30,124 - DEBUG - Request guid: 194a5d9c-69af-46dd-b300-1657f9e305b6
2025-01-18 18:34:30,124 - DEBUG - socket timeout: 60
2025-01-18 18:34:30,125 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:34:30,151 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=9312a689-4081-4394-9f3c-955183f67145&request_guid=ddc114f8-9e21-4e43-b5be-0af8a256d8fc HTTP/1.1" 200 2618
2025-01-18 18:34:30,151 - DEBUG - SUCCESS
2025-01-18 18:34:30,151 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:34:30,151 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:30,151 - DEBUG - Query id: 01b9ce02-0002-4c5d-0007-08ea001fccee
2025-01-18 18:34:30,151 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246865548008, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:34:30,151 - DEBUG - Cache Entry: (0, 1737246865447474, 0)
2025-01-18 18:34:30,151 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246865548008, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:34:30,151 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:30,151 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:30,152 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:30,152 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:30,152 - DEBUG - Cache Entry: (0, 1737246865548008, 0)
2025-01-18 18:34:30,152 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:30,152 - DEBUG - sfqid: 01b9ce02-0002-4c5d-0007-08ea001fccee
2025-01-18 18:34:30,152 - DEBUG - query execution done
2025-01-18 18:34:30,152 - DEBUG - SUCCESS
2025-01-18 18:34:30,152 - DEBUG - PUT OR GET: False
2025-01-18 18:34:30,152 - DEBUG - Query result format: arrow
2025-01-18 18:34:30,152 - INFO - Number of results in first chunk: 54
2025-01-18 18:34:30,152 - DEBUG - Execute query [queryID: 01b9ce02-0002-4c5d-0007-08ea001fccee]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:34:30,152 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:34:30,152 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:34:30,152 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:34:30,152 - DEBUG - Batches read: 0
2025-01-18 18:34:30,152 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:34:30,152 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:34:30,553 - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None
2025-01-18 18:34:30,553 - DEBUG - ocsp_response_cache_uri: file://C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 18:34:30,553 - DEBUG - OCSP_VALIDATION_CACHE size: 310
2025-01-18 18:34:30,553 - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 18:34:30,554 - DEBUG - OCSP dynamic cache server RETRY URL: None
2025-01-18 18:34:30,554 - DEBUG - validating certificate: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:34:30,554 - DEBUG - # of certificates: 4
2025-01-18 18:34:30,554 - DEBUG - subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:34:30,554 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:34:30,555 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:34:30,555 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:34:30,557 - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:34:30,558 - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])
2025-01-18 18:34:30,559 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:34:30,559 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:34:30,561 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:34:30,562 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:34:30,563 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 18:34:30,563 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:34:30,565 - DEBUG - ok
2025-01-18 18:34:30,680 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=d572875c-52ea-4572-8dd6-f2ade8a39468&request_guid=194a5d9c-69af-46dd-b300-1657f9e305b6 HTTP/1.1" 200 2617
2025-01-18 18:34:30,681 - DEBUG - SUCCESS
2025-01-18 18:34:30,681 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:34:30,681 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:30,681 - DEBUG - Query id: 01b9ce02-0002-4d87-0007-08ea001fe60e
2025-01-18 18:34:30,681 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246866078790, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:34:30,682 - DEBUG - Cache Entry: (0, 1737246865548008, 0)
2025-01-18 18:34:30,682 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246866078790, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:34:30,682 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:30,682 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:30,682 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:30,682 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:30,682 - DEBUG - Cache Entry: (0, 1737246866078790, 0)
2025-01-18 18:34:30,682 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:30,682 - DEBUG - sfqid: 01b9ce02-0002-4d87-0007-08ea001fe60e
2025-01-18 18:34:30,683 - DEBUG - query execution done
2025-01-18 18:34:30,683 - DEBUG - SUCCESS
2025-01-18 18:34:30,683 - DEBUG - PUT OR GET: False
2025-01-18 18:34:30,683 - DEBUG - Query result format: arrow
2025-01-18 18:34:30,683 - INFO - Number of results in first chunk: 1
2025-01-18 18:34:30,683 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:34:30,683 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:34:30,683 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:34:30,683 - DEBUG - Batches read: 0
2025-01-18 18:34:30,683 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:34:30,683 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:34:30,684 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:34:30,684 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:34:30,684 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:34:30,684 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:34:30,684 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:34:30,687 - DEBUG - cursor
2025-01-18 18:34:30,688 - DEBUG - executing SQL/command
2025-01-18 18:34:30,688 - DEBUG - query: [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:34:30,688 - DEBUG - sequence counter: 51
2025-01-18 18:34:30,688 - DEBUG - Request id: 41d7a8a1-01a7-4f20-b3bc-d3fe47bf5515
2025-01-18 18:34:30,688 - DEBUG - running query [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:34:30,688 - DEBUG - is_file_transfer: True
2025-01-18 18:34:30,688 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:30,688 - DEBUG - _cmd_query
2025-01-18 18:34:30,688 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:30,688 - DEBUG - Cache Entry: (0, 1737246866078790, 0)
2025-01-18 18:34:30,688 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246866078790, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:34:30,688 - DEBUG - sql=[SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...], sequence_id=[51], is_file_transfer=[False]
2025-01-18 18:34:30,689 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:30,689 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:34:30,689 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:30,690 - DEBUG - Request guid: b09a2cda-7025-44f5-b0df-c3a09ee93207
2025-01-18 18:34:30,690 - DEBUG - socket timeout: 60
2025-01-18 18:34:30,785 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=41d7a8a1-01a7-4f20-b3bc-d3fe47bf5515&request_guid=b09a2cda-7025-44f5-b0df-c3a09ee93207 HTTP/1.1" 200 6148
2025-01-18 18:34:30,785 - DEBUG - SUCCESS
2025-01-18 18:34:30,785 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:34:30,785 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:30,785 - DEBUG - Query id: 01b9ce02-0002-4d87-0007-08ea001fe612
2025-01-18 18:34:30,786 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246866190052, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:34:30,786 - DEBUG - Cache Entry: (0, 1737246866078790, 0)
2025-01-18 18:34:30,786 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246866190052, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:34:30,786 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:30,786 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:30,786 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:30,786 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:30,786 - DEBUG - Cache Entry: (0, 1737246866190052, 0)
2025-01-18 18:34:30,786 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:30,786 - DEBUG - sfqid: 01b9ce02-0002-4d87-0007-08ea001fe612
2025-01-18 18:34:30,786 - DEBUG - query execution done
2025-01-18 18:34:30,786 - DEBUG - SUCCESS
2025-01-18 18:34:30,786 - DEBUG - PUT OR GET: False
2025-01-18 18:34:30,786 - DEBUG - Query result format: arrow
2025-01-18 18:34:30,786 - INFO - Number of results in first chunk: 200
2025-01-18 18:34:30,786 - DEBUG - Execute query [queryID: 01b9ce02-0002-4d87-0007-08ea001fe612] 
        SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE 
        FROM DEV_DP_APP.MODELED.US_ADDRESS_LIST 
        WHERE CONTAINS(LOWER(LOCATION), LOWER('college station'))
        LIMIT 200
        
2025-01-18 18:34:30,787 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:34:30,787 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:34:30,787 - DEBUG - Batches read: 1
2025-01-18 18:34:30,787 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:34:30,795 - DEBUG - executing SQL/command
2025-01-18 18:34:30,796 - DEBUG - query: [MERGE INTO DEV_DP_APP.APP_ASSETS.USER_SETTINGS AS target USING (SELECT 'default_...]
2025-01-18 18:34:30,796 - DEBUG - sequence counter: 52
2025-01-18 18:34:30,796 - DEBUG - Request id: 20c69647-ecc6-40fd-a96b-37ab39f83800
2025-01-18 18:34:30,796 - DEBUG - running query [MERGE INTO DEV_DP_APP.APP_ASSETS.USER_SETTINGS AS target USING (SELECT 'default_...]
2025-01-18 18:34:30,796 - DEBUG - is_file_transfer: True
2025-01-18 18:34:30,796 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:30,796 - DEBUG - _cmd_query
2025-01-18 18:34:30,797 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:30,797 - DEBUG - Cache Entry: (0, 1737246866190052, 0)
2025-01-18 18:34:30,797 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246866190052, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:34:30,797 - DEBUG - sql=[MERGE INTO DEV_DP_APP.APP_ASSETS.USER_SETTINGS AS target USING (SELECT 'default_...], sequence_id=[52], is_file_transfer=[False]
2025-01-18 18:34:30,798 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:30,798 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:34:30,798 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:30,798 - DEBUG - Request guid: b06b4af5-78e1-4412-9a29-8445e6c3bb1f
2025-01-18 18:34:30,798 - DEBUG - socket timeout: 60
2025-01-18 18:34:31,309 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=20c69647-ecc6-40fd-a96b-37ab39f83800&request_guid=b06b4af5-78e1-4412-9a29-8445e6c3bb1f HTTP/1.1" 200 1432
2025-01-18 18:34:31,309 - DEBUG - SUCCESS
2025-01-18 18:34:31,310 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:34:31,310 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:31,310 - DEBUG - Query id: 01b9ce02-0002-4c78-0007-08ea002010ea
2025-01-18 18:34:31,310 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246866711187, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:34:31,310 - DEBUG - Cache Entry: (0, 1737246866190052, 0)
2025-01-18 18:34:31,310 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246866711187, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:34:31,310 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:31,310 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:31,310 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:31,310 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:31,310 - DEBUG - Cache Entry: (0, 1737246866711187, 0)
2025-01-18 18:34:31,310 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:31,310 - DEBUG - sfqid: 01b9ce02-0002-4c78-0007-08ea002010ea
2025-01-18 18:34:31,310 - DEBUG - query execution done
2025-01-18 18:34:31,310 - DEBUG - SUCCESS
2025-01-18 18:34:31,311 - DEBUG - PUT OR GET: False
2025-01-18 18:34:31,311 - DEBUG - Query result format: json
2025-01-18 18:34:31,311 - DEBUG - parsing for result batch id: 1
2025-01-18 18:34:31,311 - DEBUG - Execute query [queryID: 01b9ce02-0002-4c78-0007-08ea002010ea] 
                    MERGE INTO DEV_DP_APP.APP_ASSETS.USER_SETTINGS AS target
                    USING (SELECT 'default_user' AS USER_ID, 'College Station, TX 77840' AS LOCATION, '30.636566' AS LATITUDE, '-96.3165997' AS LONGITUDE) AS source
                    ON target.USER_ID = source.USER_ID
                    WHEN MATCHED THEN
                        UPDATE SET LOCATION = source.LOCATION, LATITUDE = source.LATITUDE, LONGITUDE = source.LONGITUDE, LAST_UPDATED = CURRENT_TIMESTAMP()
                    WHEN NOT MATCHED THEN
                        INSERT (USER_ID, LOCATION, LATITUDE, LONGITUDE, LAST_UPDATED) VALUES (source.USER_ID, source.LOCATION, source.LATITUDE, source.LONGITUDE, CURRENT_TIMESTAMP())
                    
2025-01-18 18:34:31,311 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:34:31,314 - DEBUG - executing SQL/command
2025-01-18 18:34:31,314 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:34:31,314 - DEBUG - sequence counter: 53
2025-01-18 18:34:31,314 - DEBUG - Request id: a0263616-e1ba-4d62-be1d-a0b1ed903426
2025-01-18 18:34:31,314 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:34:31,314 - DEBUG - is_file_transfer: True
2025-01-18 18:34:31,314 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:31,314 - DEBUG - _cmd_query
2025-01-18 18:34:31,314 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:31,314 - DEBUG - Cache Entry: (0, 1737246866711187, 0)
2025-01-18 18:34:31,314 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246866711187, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:34:31,314 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[53], is_file_transfer=[False]
2025-01-18 18:34:31,315 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:31,315 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:34:31,315 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:31,316 - DEBUG - Request guid: 34bb1495-d47c-4d5a-92ab-4e4d06abc959
2025-01-18 18:34:31,316 - DEBUG - socket timeout: 60
2025-01-18 18:34:31,382 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=a0263616-e1ba-4d62-be1d-a0b1ed903426&request_guid=34bb1495-d47c-4d5a-92ab-4e4d06abc959 HTTP/1.1" 200 1501
2025-01-18 18:34:31,383 - DEBUG - SUCCESS
2025-01-18 18:34:31,383 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:34:31,383 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:31,383 - DEBUG - Query id: 01b9ce02-0002-4c78-0007-08ea002010ee
2025-01-18 18:34:31,383 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246866753512, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:34:31,384 - DEBUG - Cache Entry: (0, 1737246866711187, 0)
2025-01-18 18:34:31,384 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246866753512, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:34:31,384 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:31,384 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:31,384 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:31,384 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:31,384 - DEBUG - Cache Entry: (0, 1737246866753512, 0)
2025-01-18 18:34:31,384 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:31,384 - DEBUG - sfqid: 01b9ce02-0002-4c78-0007-08ea002010ee
2025-01-18 18:34:31,384 - DEBUG - query execution done
2025-01-18 18:34:31,384 - DEBUG - SUCCESS
2025-01-18 18:34:31,384 - DEBUG - PUT OR GET: False
2025-01-18 18:34:31,384 - DEBUG - Query result format: arrow
2025-01-18 18:34:31,384 - INFO - Number of results in first chunk: 0
2025-01-18 18:34:31,385 - DEBUG - executing SQL/command
2025-01-18 18:34:31,385 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:34:31,385 - DEBUG - sequence counter: 54
2025-01-18 18:34:31,385 - DEBUG - Request id: 91936530-443a-49e9-84da-1e9b21f2d62b
2025-01-18 18:34:31,385 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:34:31,385 - DEBUG - is_file_transfer: True
2025-01-18 18:34:31,385 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:31,385 - DEBUG - _cmd_query
2025-01-18 18:34:31,385 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:31,386 - DEBUG - Cache Entry: (0, 1737246866753512, 0)
2025-01-18 18:34:31,386 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246866753512, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:34:31,386 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[54], is_file_transfer=[False]
2025-01-18 18:34:31,386 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:31,386 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:34:31,386 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:31,387 - DEBUG - Request guid: ed6f3ae0-c8e6-41cb-ac42-7b0cb7e5bd65
2025-01-18 18:34:31,387 - DEBUG - socket timeout: 60
2025-01-18 18:34:31,448 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=91936530-443a-49e9-84da-1e9b21f2d62b&request_guid=ed6f3ae0-c8e6-41cb-ac42-7b0cb7e5bd65 HTTP/1.1" 200 1375
2025-01-18 18:34:31,448 - DEBUG - SUCCESS
2025-01-18 18:34:31,448 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:34:31,448 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:31,449 - DEBUG - Query id: 01b9ce02-0002-4c76-0007-08ea001fbe36
2025-01-18 18:34:31,449 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246866843088, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:34:31,449 - DEBUG - Cache Entry: (0, 1737246866753512, 0)
2025-01-18 18:34:31,449 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246866843088, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:34:31,449 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:31,449 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:31,449 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:31,449 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:31,449 - DEBUG - Cache Entry: (0, 1737246866843088, 0)
2025-01-18 18:34:31,449 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:31,449 - DEBUG - sfqid: 01b9ce02-0002-4c76-0007-08ea001fbe36
2025-01-18 18:34:31,449 - DEBUG - query execution done
2025-01-18 18:34:31,449 - DEBUG - SUCCESS
2025-01-18 18:34:31,449 - DEBUG - PUT OR GET: False
2025-01-18 18:34:31,449 - DEBUG - Query result format: arrow
2025-01-18 18:34:31,449 - INFO - Number of results in first chunk: 0
2025-01-18 18:34:31,450 - DEBUG - executing SQL/command
2025-01-18 18:34:31,450 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:34:31,450 - DEBUG - sequence counter: 55
2025-01-18 18:34:31,450 - DEBUG - Request id: d0182464-f57a-4a6e-ad55-1a8608c202c0
2025-01-18 18:34:31,450 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:34:31,450 - DEBUG - is_file_transfer: True
2025-01-18 18:34:31,450 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:31,450 - DEBUG - _cmd_query
2025-01-18 18:34:31,450 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:31,451 - DEBUG - Cache Entry: (0, 1737246866843088, 0)
2025-01-18 18:34:31,451 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246866843088, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:34:31,451 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[55], is_file_transfer=[False]
2025-01-18 18:34:31,451 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:31,451 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:34:31,451 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:31,451 - DEBUG - Request guid: a542cdf8-02b7-4596-a0d6-bc5affeec7c5
2025-01-18 18:34:31,452 - DEBUG - socket timeout: 60
2025-01-18 18:34:31,518 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=d0182464-f57a-4a6e-ad55-1a8608c202c0&request_guid=a542cdf8-02b7-4596-a0d6-bc5affeec7c5 HTTP/1.1" 200 1375
2025-01-18 18:34:31,519 - DEBUG - SUCCESS
2025-01-18 18:34:31,519 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:34:31,519 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:31,519 - DEBUG - Query id: 01b9ce02-0002-4c7a-0007-08ea001ff666
2025-01-18 18:34:31,519 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246866909524, 'priority': 0, 'context': 'COrjJA=='}]}
2025-01-18 18:34:31,519 - DEBUG - Cache Entry: (0, 1737246866843088, 0)
2025-01-18 18:34:31,519 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246866909524, 'priority': 0, 'context': 'COrjJA=='}
2025-01-18 18:34:31,519 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:31,519 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:31,519 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:31,519 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:31,519 - DEBUG - Cache Entry: (0, 1737246866909524, 0)
2025-01-18 18:34:31,519 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:31,519 - DEBUG - sfqid: 01b9ce02-0002-4c7a-0007-08ea001ff666
2025-01-18 18:34:31,519 - DEBUG - query execution done
2025-01-18 18:34:31,519 - DEBUG - SUCCESS
2025-01-18 18:34:31,519 - DEBUG - PUT OR GET: False
2025-01-18 18:34:31,519 - DEBUG - Query result format: arrow
2025-01-18 18:34:31,519 - INFO - Number of results in first chunk: 0
2025-01-18 18:34:31,520 - DEBUG - executing SQL/command
2025-01-18 18:34:31,520 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:34:31,520 - DEBUG - sequence counter: 56
2025-01-18 18:34:31,520 - DEBUG - Request id: 6c32814d-82d1-4903-98f8-39353aa2e945
2025-01-18 18:34:31,520 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:34:31,520 - DEBUG - is_file_transfer: True
2025-01-18 18:34:31,520 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:31,520 - DEBUG - _cmd_query
2025-01-18 18:34:31,520 - DEBUG - serialize_to_dict() called
2025-01-18 18:34:31,520 - DEBUG - Cache Entry: (0, 1737246866909524, 0)
2025-01-18 18:34:31,520 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246866909524, 'priority': 0, 'context': {'base64Data': 'COrjJA=='}}]}
2025-01-18 18:34:31,521 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[56], is_file_transfer=[False]
2025-01-18 18:34:31,521 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:34:31,521 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:34:31,521 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:34:31,521 - DEBUG - Request guid: bc2ce1fc-b5c5-4f61-a836-f15720677bdd
2025-01-18 18:34:31,522 - DEBUG - socket timeout: 60
2025-01-18 18:34:31,641 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=6c32814d-82d1-4903-98f8-39353aa2e945&request_guid=bc2ce1fc-b5c5-4f61-a836-f15720677bdd HTTP/1.1" 200 2615
2025-01-18 18:34:31,641 - DEBUG - SUCCESS
2025-01-18 18:34:31,641 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:34:31,641 - DEBUG - ret[code] = None, after post request
2025-01-18 18:34:31,641 - DEBUG - Query id: 01b9ce02-0002-4c72-0007-08ea00203032
2025-01-18 18:34:31,641 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246867035655, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:34:31,641 - DEBUG - Cache Entry: (0, 1737246866909524, 0)
2025-01-18 18:34:31,641 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246867035655, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:34:31,641 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:34:31,641 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:31,641 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:34:31,641 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:34:31,641 - DEBUG - Cache Entry: (0, 1737246867035655, 0)
2025-01-18 18:34:31,641 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:34:31,641 - DEBUG - sfqid: 01b9ce02-0002-4c72-0007-08ea00203032
2025-01-18 18:34:31,641 - DEBUG - query execution done
2025-01-18 18:34:31,641 - DEBUG - SUCCESS
2025-01-18 18:34:31,642 - DEBUG - PUT OR GET: False
2025-01-18 18:34:31,642 - DEBUG - Query result format: arrow
2025-01-18 18:34:31,642 - INFO - Number of results in first chunk: 54
2025-01-18 18:34:31,642 - DEBUG - Execute query [queryID: 01b9ce02-0002-4c72-0007-08ea00203032]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:34:31,642 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:34:31,642 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:34:31,642 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:34:31,642 - DEBUG - Batches read: 0
2025-01-18 18:34:31,642 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:34:31,642 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:35:05,378 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:35:05,379 - INFO - Querying the server for client info
2025-01-18 18:35:05,379 - DEBUG - cursor
2025-01-18 18:35:05,379 - DEBUG - executing SQL/command
2025-01-18 18:35:05,380 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:35:05,380 - DEBUG - sequence counter: 57
2025-01-18 18:35:05,380 - DEBUG - Request id: 9b5d1b67-f6d4-4482-bbbe-5431030caba0
2025-01-18 18:35:05,380 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:35:05,380 - DEBUG - is_file_transfer: True
2025-01-18 18:35:05,380 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:35:05,380 - DEBUG - _cmd_query
2025-01-18 18:35:05,380 - DEBUG - serialize_to_dict() called
2025-01-18 18:35:05,380 - DEBUG - Cache Entry: (0, 1737246867035655, 0)
2025-01-18 18:35:05,380 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246867035655, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:35:05,380 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[57], is_file_transfer=[False]
2025-01-18 18:35:05,381 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:35:05,381 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:35:05,381 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:35:05,381 - DEBUG - Request guid: da82f9d3-b9bf-4c2c-aa47-6800eb647d5a
2025-01-18 18:35:05,381 - DEBUG - socket timeout: 60
2025-01-18 18:35:05,719 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=9b5d1b67-f6d4-4482-bbbe-5431030caba0&request_guid=da82f9d3-b9bf-4c2c-aa47-6800eb647d5a HTTP/1.1" 200 2616
2025-01-18 18:35:05,720 - DEBUG - SUCCESS
2025-01-18 18:35:05,721 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:35:05,721 - DEBUG - ret[code] = None, after post request
2025-01-18 18:35:05,721 - DEBUG - Query id: 01b9ce03-0002-4c78-0007-08ea002010fa
2025-01-18 18:35:05,721 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246901122652, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:35:05,721 - DEBUG - Cache Entry: (0, 1737246867035655, 0)
2025-01-18 18:35:05,721 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246901122652, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:35:05,721 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:35:05,721 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:35:05,721 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:35:05,721 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:35:05,721 - DEBUG - Cache Entry: (0, 1737246901122652, 0)
2025-01-18 18:35:05,721 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:35:05,721 - DEBUG - sfqid: 01b9ce03-0002-4c78-0007-08ea002010fa
2025-01-18 18:35:05,721 - DEBUG - query execution done
2025-01-18 18:35:05,721 - DEBUG - SUCCESS
2025-01-18 18:35:05,721 - DEBUG - PUT OR GET: False
2025-01-18 18:35:05,721 - DEBUG - Query result format: arrow
2025-01-18 18:35:05,722 - INFO - Number of results in first chunk: 1
2025-01-18 18:35:05,722 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:35:05,722 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:35:05,722 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:35:05,722 - DEBUG - Batches read: 0
2025-01-18 18:35:05,722 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:35:05,722 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:35:05,723 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:35:05,723 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:35:05,723 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:35:05,723 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:35:05,723 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:35:05,728 - DEBUG - cursor
2025-01-18 18:35:05,728 - DEBUG - executing SQL/command
2025-01-18 18:35:05,728 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:35:05,728 - DEBUG - sequence counter: 58
2025-01-18 18:35:05,729 - DEBUG - Request id: 3842e17e-d13f-45af-b889-650207518f83
2025-01-18 18:35:05,729 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:35:05,729 - DEBUG - is_file_transfer: True
2025-01-18 18:35:05,729 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:35:05,729 - DEBUG - _cmd_query
2025-01-18 18:35:05,729 - DEBUG - serialize_to_dict() called
2025-01-18 18:35:05,729 - DEBUG - Cache Entry: (0, 1737246901122652, 0)
2025-01-18 18:35:05,729 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246901122652, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:35:05,729 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[58], is_file_transfer=[False]
2025-01-18 18:35:05,730 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:35:05,730 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:35:05,730 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:35:05,730 - DEBUG - Request guid: 25a094a7-1b42-49a8-8df0-7708f742eecf
2025-01-18 18:35:05,730 - DEBUG - socket timeout: 60
2025-01-18 18:35:05,784 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=3842e17e-d13f-45af-b889-650207518f83&request_guid=25a094a7-1b42-49a8-8df0-7708f742eecf HTTP/1.1" 200 1502
2025-01-18 18:35:05,784 - DEBUG - SUCCESS
2025-01-18 18:35:05,785 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:35:05,785 - DEBUG - ret[code] = None, after post request
2025-01-18 18:35:05,785 - DEBUG - Query id: 01b9ce03-0002-4d87-0007-08ea001fe61e
2025-01-18 18:35:05,785 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246901185708, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:35:05,785 - DEBUG - Cache Entry: (0, 1737246901122652, 0)
2025-01-18 18:35:05,785 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246901185708, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:35:05,785 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:35:05,785 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:35:05,785 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:35:05,785 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:35:05,785 - DEBUG - Cache Entry: (0, 1737246901185708, 0)
2025-01-18 18:35:05,785 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:35:05,785 - DEBUG - sfqid: 01b9ce03-0002-4d87-0007-08ea001fe61e
2025-01-18 18:35:05,785 - DEBUG - query execution done
2025-01-18 18:35:05,785 - DEBUG - SUCCESS
2025-01-18 18:35:05,785 - DEBUG - PUT OR GET: False
2025-01-18 18:35:05,785 - DEBUG - Query result format: arrow
2025-01-18 18:35:05,786 - INFO - Number of results in first chunk: 0
2025-01-18 18:35:05,787 - DEBUG - executing SQL/command
2025-01-18 18:35:05,787 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:35:05,787 - DEBUG - sequence counter: 59
2025-01-18 18:35:05,787 - DEBUG - Request id: 10fd114f-376d-4439-b159-6bb50e7d11d8
2025-01-18 18:35:05,787 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:35:05,787 - DEBUG - is_file_transfer: True
2025-01-18 18:35:05,787 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:35:05,787 - DEBUG - _cmd_query
2025-01-18 18:35:05,787 - DEBUG - serialize_to_dict() called
2025-01-18 18:35:05,787 - DEBUG - Cache Entry: (0, 1737246901185708, 0)
2025-01-18 18:35:05,787 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246901185708, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:35:05,787 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[59], is_file_transfer=[False]
2025-01-18 18:35:05,788 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:35:05,788 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:35:05,788 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:35:05,788 - DEBUG - Request guid: 19904a39-2dc1-4cea-8473-eb173bf3c5a6
2025-01-18 18:35:05,788 - DEBUG - socket timeout: 60
2025-01-18 18:35:05,844 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=10fd114f-376d-4439-b159-6bb50e7d11d8&request_guid=19904a39-2dc1-4cea-8473-eb173bf3c5a6 HTTP/1.1" 200 1375
2025-01-18 18:35:05,844 - DEBUG - SUCCESS
2025-01-18 18:35:05,845 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:35:05,845 - DEBUG - ret[code] = None, after post request
2025-01-18 18:35:05,845 - DEBUG - Query id: 01b9ce03-0002-4c7a-0007-08ea001ff66a
2025-01-18 18:35:05,845 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246901236533, 'priority': 0, 'context': 'COrjJA=='}]}
2025-01-18 18:35:05,845 - DEBUG - Cache Entry: (0, 1737246901185708, 0)
2025-01-18 18:35:05,845 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246901236533, 'priority': 0, 'context': 'COrjJA=='}
2025-01-18 18:35:05,845 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:35:05,845 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:35:05,845 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:35:05,845 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:35:05,845 - DEBUG - Cache Entry: (0, 1737246901236533, 0)
2025-01-18 18:35:05,845 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:35:05,845 - DEBUG - sfqid: 01b9ce03-0002-4c7a-0007-08ea001ff66a
2025-01-18 18:35:05,845 - DEBUG - query execution done
2025-01-18 18:35:05,846 - DEBUG - SUCCESS
2025-01-18 18:35:05,846 - DEBUG - PUT OR GET: False
2025-01-18 18:35:05,846 - DEBUG - Query result format: arrow
2025-01-18 18:35:05,846 - INFO - Number of results in first chunk: 0
2025-01-18 18:35:05,847 - DEBUG - executing SQL/command
2025-01-18 18:35:05,847 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:35:05,847 - DEBUG - sequence counter: 60
2025-01-18 18:35:05,847 - DEBUG - Request id: 05acfc53-a8c7-4a91-8ef1-7c90b7c980fd
2025-01-18 18:35:05,847 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:35:05,847 - DEBUG - is_file_transfer: True
2025-01-18 18:35:05,847 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:35:05,847 - DEBUG - _cmd_query
2025-01-18 18:35:05,847 - DEBUG - serialize_to_dict() called
2025-01-18 18:35:05,847 - DEBUG - Cache Entry: (0, 1737246901236533, 0)
2025-01-18 18:35:05,847 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246901236533, 'priority': 0, 'context': {'base64Data': 'COrjJA=='}}]}
2025-01-18 18:35:05,847 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[60], is_file_transfer=[False]
2025-01-18 18:35:05,848 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:35:05,848 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:35:05,848 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:35:05,848 - DEBUG - Request guid: 3f5ab9d5-bbed-4c4f-84f9-6bc3250f0e3d
2025-01-18 18:35:05,848 - DEBUG - socket timeout: 60
2025-01-18 18:35:05,901 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=05acfc53-a8c7-4a91-8ef1-7c90b7c980fd&request_guid=3f5ab9d5-bbed-4c4f-84f9-6bc3250f0e3d HTTP/1.1" 200 1373
2025-01-18 18:35:05,902 - DEBUG - SUCCESS
2025-01-18 18:35:05,902 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:35:05,903 - DEBUG - ret[code] = None, after post request
2025-01-18 18:35:05,903 - DEBUG - Query id: 01b9ce03-0002-4c78-0007-08ea002010fe
2025-01-18 18:35:05,903 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246901295652, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:35:05,903 - DEBUG - Cache Entry: (0, 1737246901236533, 0)
2025-01-18 18:35:05,903 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246901295652, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:35:05,903 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:35:05,903 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:35:05,903 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:35:05,903 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:35:05,903 - DEBUG - Cache Entry: (0, 1737246901295652, 0)
2025-01-18 18:35:05,903 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:35:05,903 - DEBUG - sfqid: 01b9ce03-0002-4c78-0007-08ea002010fe
2025-01-18 18:35:05,903 - DEBUG - query execution done
2025-01-18 18:35:05,903 - DEBUG - SUCCESS
2025-01-18 18:35:05,903 - DEBUG - PUT OR GET: False
2025-01-18 18:35:05,903 - DEBUG - Query result format: arrow
2025-01-18 18:35:05,903 - INFO - Number of results in first chunk: 0
2025-01-18 18:35:05,904 - DEBUG - executing SQL/command
2025-01-18 18:35:05,904 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:35:05,904 - DEBUG - sequence counter: 61
2025-01-18 18:35:05,904 - DEBUG - Request id: 89dd7b64-34b8-4e50-84f9-a3a2dd4b0757
2025-01-18 18:35:05,904 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:35:05,904 - DEBUG - is_file_transfer: True
2025-01-18 18:35:05,904 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:35:05,904 - DEBUG - _cmd_query
2025-01-18 18:35:05,904 - DEBUG - serialize_to_dict() called
2025-01-18 18:35:05,904 - DEBUG - Cache Entry: (0, 1737246901295652, 0)
2025-01-18 18:35:05,904 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246901295652, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:35:05,904 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[61], is_file_transfer=[False]
2025-01-18 18:35:05,905 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:35:05,905 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:35:05,905 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:35:05,905 - DEBUG - Request guid: 490a2aa0-090d-4fed-8937-bb37a9745689
2025-01-18 18:35:05,905 - DEBUG - socket timeout: 60
2025-01-18 18:35:06,031 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=89dd7b64-34b8-4e50-84f9-a3a2dd4b0757&request_guid=490a2aa0-090d-4fed-8937-bb37a9745689 HTTP/1.1" 200 2619
2025-01-18 18:35:06,032 - DEBUG - SUCCESS
2025-01-18 18:35:06,032 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:35:06,032 - DEBUG - ret[code] = None, after post request
2025-01-18 18:35:06,032 - DEBUG - Query id: 01b9ce03-0002-4c77-0007-08ea001fdd66
2025-01-18 18:35:06,032 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246901383142, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:35:06,033 - DEBUG - Cache Entry: (0, 1737246901295652, 0)
2025-01-18 18:35:06,033 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246901383142, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:35:06,033 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:35:06,033 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:35:06,033 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:35:06,033 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:35:06,033 - DEBUG - Cache Entry: (0, 1737246901383142, 0)
2025-01-18 18:35:06,033 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:35:06,033 - DEBUG - sfqid: 01b9ce03-0002-4c77-0007-08ea001fdd66
2025-01-18 18:35:06,033 - DEBUG - query execution done
2025-01-18 18:35:06,033 - DEBUG - SUCCESS
2025-01-18 18:35:06,033 - DEBUG - PUT OR GET: False
2025-01-18 18:35:06,033 - DEBUG - Query result format: arrow
2025-01-18 18:35:06,033 - INFO - Number of results in first chunk: 54
2025-01-18 18:35:06,033 - DEBUG - Execute query [queryID: 01b9ce03-0002-4c77-0007-08ea001fdd66]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:35:06,033 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:35:06,033 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:35:06,033 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:35:06,033 - DEBUG - Batches read: 0
2025-01-18 18:35:06,033 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:35:06,033 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:35:06,042 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:35:06,043 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:35:06,496 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:35:06,527 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:35:06,528 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:35:06,897 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:35:06,922 - DEBUG - Starting new HTTP connection (1): api.openweathermap.org:80
2025-01-18 18:35:07,729 - DEBUG - http://api.openweathermap.org:80 "GET /data/3.0/onecall?lat=30.636566&lon=-96.3165997&appid=cda556004c6679cd7773dfc27c7be9a7&exclude=current,minutely,hourly,alerts&units=imperial HTTP/1.1" 200 4534
2025-01-18 18:35:07,730 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:35:07,732 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:35:08,130 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:35:08,489 - DEBUG - calling method search on class CortexSearchServiceResource after submitting telemetry if enabled
2025-01-18 18:35:08,489 - INFO - performing a HTTP POST call to /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query
2025-01-18 18:35:08,489 - DEBUG - request has path params: {'database': 'DEV_SRC_INGEST', 'schema': 'EPA_PROCESSED', 'service_name': 'CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST'}, query_params: [], header params: {'Accept': 'application/json', 'Content-Type': 'application/json'} and body: QueryRequest(query=' May I use WRC-AP-1 tomorrow?', columns=['chunk', 'relative_path', 'PRODUCTNAME', 'COMPANYNAME', 'CATEGORY_EPA_TYPE', 'SIGNAL_WORD'], filter=None, limit=10, experimental=None)
2025-01-18 18:35:08,489 - DEBUG - making an http POST call to 'https://gmcpdcz-mt01740.snowflakecomputing.com:443/api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query'
2025-01-18 18:35:08,788 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query HTTP/1.1" 200 None
2025-01-18 18:35:08,789 - DEBUG - created a RESTResponse with status 200 and length of 17912
2025-01-18 18:35:08,789 - DEBUG - response body: b'{\n  "results" : [ {\n    "SIGNAL_WORD" : "Caution",\n    "chunk" : "that WRC-AP-1 be uniformly mixed into the media to pro- vide the best performance possible. Soil can then be placed in pots. Moisten the media with water and keep moist . (but not wet) for the next three days.. Transplants or plants for repotting can be placed into pots immediately, but wait at least 24 hours to plant seeds, bulbs or non-rooted cuttings. The protective fungus will spread throughout the root system of the plant protecting it from disease organisms.\\\\n## For Incorporation Into Garden Rows\\\\nWRC-AP-1 can be used to control soil-borne pathogens including Rhizoctonia, Pythium, and Sclerotinia that might attack crops grown outside in the home garden. Disease can be prevented by applying WRC-AP-1 in the garden when plants are seeded or transpiants are moved into the outside home garden. Disease prevention will exist for up to two months after application, depending on the disease pressure present.\\\\n## STORAGE AND DISPOSAL\\\\nDo not contaminate water, food, or feed by storage and disposal.\\\\n## COMMERCIAL USE\\\\nPesticide Storage: WRC-AP-1 is packaged in an airtight, foil-lined, resealable bag designed to protect the fungus from exposure to moisture and oxygen, which can impact storage life. For best results store in a cool, dry place (preferably refrigerated). In an unopened bag, WRC-AP-1 will retain its biological activity for up to one year at room temperature (70\xc2\xb0F). Long-term exposure to air and higher temperatures (75\xc2\xb0F to 100\xc2\xb0F) may accelerat\xc3\xa9 loss of bioactivity. Exposure to",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "adding WRC-AP-1\\\\n* Allow at least 24 hours after incorporation of WRC-AP-1 before planting seeds, cuttings, or other non- rooted plant material into the treated medium. Plants with established roots can be transplanted into treated soil immediately after mixing with WRC-AP-1.\\\\n* Avoid using WRC-AP-1 in media totally devoid of organic matter (such as sand). G. virens requires or- ganic matter to grow and work. If the only available organic substrate is the seed, bulb, or other plant mate- rial, G. virens may cause injury to it.\\\\n  \\\\nFor incorporation into seedling and planting beds (indoors and outdoors):\\\\n* . Thoroughly till the soil in the planting bed prior to addition of WRC-AP-1.\\\\n* Incorporate WRC-AP-1 granules uniformly within the plant root zone at the rate of 1 to 1 1/2 pounds per cubic yard of soil. The table below can be used to determine how much WRC-AP-1 to use depending on\\\\n  \\\\nplanting or rooting depth and area to be treated.\\\\n* WRC-AP-1 is unlikely to completely eliminate disease from soil already severely infested with pathogenic fungi. For best results, use WRC-AP-1 in the greenhouse at the time of planting, so that it has already colo- nized the root ball of the transplant.\\\\n\\\\n|Planting depth (inches)|Pounds per 100 square feet|Square feet per pound|\\\\n| :---: | :---: | :---: |\\\\n|2|2/3 - 1|108 - 162|\\\\n|4|11/4 - 2|54 - 81|\\\\n|6|2 - 2 3/4|36- 54|\\\\n|8|2 1/2 - 3 3/4|27-41|\\\\n|10|3 - 4 2/3|22- 32|\\\\n|12|3 3/4 - 5 1/2|18 - 27|\\\\n\\\\n## FOR DRENCH OR SPRAY APPLICATION TO SOIL\\\\nMix",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "chunk" : "plant pathogenic fungi such as Pythium and Rhizoctonia, thereby aiding in control of these damping off\\\\\\" and root rot pathogens. WRC-AP-1 is a granular formulation containing a high concentration of G. virens spores suitable for incorporation into soil or soilless media. WRC-AP-1 acts as a preventative and will protect non-infected plants. It may not, however, cure aiready diseased plants. Where possible, allow the treated soil or media to incubate for 1 day prior to planting to achieve best results. Do not use other soil fungicides with WRC-AP-1 at time of incorpora- tion. Later, addition of fungicides are acceptable but usually unnecessary. Best results are achieved if the contents of an open package are used within three months. Be careful to seal out moisture from the unused material by closingthe inner bag tightly.WRC-AP-1 can be mixed with water for application as a soil drench, as aroot dip, or through irrigation systems. The dry granules can also be mixed directly into soil or growing media. Use lower rates in sandy soils, warm soils (60\\\\\\"F or higher temperature at 4-inch depth), and as a preventative against low to moderate disease pressure. Use higher rates in heavy soils (high clay and/or organic matter), low temperatures (less than 60\xc2\xb0F at 4 inch depth), as a preventative against heavy disease pressure, or as a curative for low to moderate disease pressure early in the grow- ing season. The soil or growing medium should be moist but not wet at the time of application; the",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "(preferably refrigerated). In an unopened bag, WRC-AP-1 will retain its biological activity for up to one year at room temperature (70\xc2\xb0F). Long-term exposure to air and higher temperatures (75\xc2\xb0F to 100\xc2\xb0F) may accelerat\xc3\xa9 loss of bioactivity. Exposure to temperatures above 100\xc2\xb0F for extended periods can be detrimental to WRC-AP-1. An open bag of WRC-AP-1 can be kept for up to 3 months if the bag is tightly resealed and refrigerated (40\xc2\xb0F to 45\xc2\xb0F). Squeeze excess air from the bag before resealingPesticide Disposal: Wastes resulting from the use of this product may be disposed of onsite or at an approved waste disposal facility.Container Disposal: Completely empty bag into application equipment. Then dispose of empty bag in a sanitary landfill or by incineration, or if allowed by local authorities, by burning. If burned, stay out of smoke.\\\\n## HOMEOWNER USE\\\\nPesticide Storage: Keep in original container. Store in a cool, dry place away from direct sunlight, feed, or food. stuffs. Keep container tightly sealed when not is use. In an unopened bag, WRC-AP-1 will retain its biological ac- tivity for up to one year at room temperature (70\xc2\xb0F). Long-term exposure to air and higher temperatures (75\xc2\xb0F to 100F) may accelerate loss of bioactivity. Exposure to temperatures above 100\xc2\xb0F for extended periods can be detri- mental to WRC-AP-1.\\\\n## Pesticide and Container Disposal\\\\nIf empty: Do not reuse this container. Place in trash or offer for recycling if availableIf partly filled: Call your local solid",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "for 0.07 oz. package: Thoroughly blend WRC-AP-1 with growing media. One 0.07 oz. packet (2 grams) will treat one 8-inch pot. To apply WRC-AP-1, fill a clean 8-inch pot 3/4 full with potting soil. Spread the contents of the WRC-AP-1.packet onto the soil and mix thoroughly with a small spade. It is important that WRC- AP-1 be uniformly mixed into the media to provide the best performance possible. Transplants, or plants for repot- ting can then be placed into the pot immediately. Wait \xc3\xa1t least 24-hours before planting seeds, bulbs or cuttings without roots. Moisten the media with water and keep moist (but not wet) for the next three days. The protective fungus will spread throughout the root system of the plant protecting it from disease organisms. Directions for 0.54 oz. package: Thoroughly blend WRC-AP-1 with growing media. One 0.54 oz. packet (15 grams) will treat /2 cubic foot bag of media, enough to fill 9 six-inch pots. To apply WRC-AP-1, empty a 20 lb. bagof potting soil into a clean 5-gallon bucket. Spread WRC-AP-1 onto the soil in the bucket and mix thoroughly with a spade or shovel. Alternatively, a corner can be cut from the potting soil bag and WRC-AP-1 can be incorporated by shaking, stirring, or kneading the bag. It is important that WRC-AP-1 be uniformly mixed into the media to pro- vide the best performance possible. Soil can then be placed in pots. Moisten the media with water and keep moist . (but not wet) for the next three days.. Transplants or plants for repotting can",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "by pathogenic fungi. Do not apply WRC-AP-1 to fumigated soil until fumigants have dissipated to levels safe for planting the crop: Do not apply WRC-AP-1 to stearmn-sterilized soil or other planting media until it has cooled to a temperature of 100\xc2\xb0F or lower.Do not combine WRC-AP-1 with other pesticides, surfactants, or fertilizers unless prior experience has shown the combination to be physically compatible, effective, and non-injurious under the conditions of use. WRC-AP-1 has not been fully evaluated for compatibility with all adjuvants or surfactants. If a mixture with adjuvants or surfac- tants is planned, a compatibility test (\\\\\\"jar test\\\\\\") should first be conducted by mixing proportional quantities of WRC-AP-1 and these products in a small volume of water.\\\\n## FOR INCORPORATION INTO GROWING MEDIA\\\\n(Ornamentals and Food Crop Plants Grown Indoors and Outdoors)  \\\\nCommercial Use  \\\\nFor incorporation into potting medium in greenhouse flats, plug trays, or pots:\\\\n* 0 Mix 1 to 1 1/2 pound of WRC-AP-1 biological fungicide per cubic yard of potting soil or other plant-growing medium. Granules must be distributed uniformly throughout the medium.\\\\n* .If the potting medium has been heat sterilized, allow it to cool to 110\xc2\xb0F or lower before adding WRC-AP-1\\\\n* Allow at least 24 hours after incorporation of WRC-AP-1 before planting seeds, cuttings, or other non- rooted plant material into the treated medium. Plants with established roots can be transplanted into treated soil immediately after",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf",\n    "PRODUCTNAME" : "WRC-AP-1"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "the mixture to stand overnight or for prolonged peri- ods. When using large pressurized systems, injection should occur after the system has been fully charged with wa- ter and over sufficient time (typically 30 -- 60 minutes, depending on the system) to allow uniform distribution of the product. After application, flush the system with water for an additional 10 -- 20 minutes to avoid fouling of irriga- tion lines due to fungal growth.\\\\n## FOR ROOT DIP APPLICATION OR ROOT COATING\\\\nWRC-AP-1 can be applied as a dip or coating for bare-root plantings of crops such as horseradish, straw- berries or caneberries, ornamental shrubs, fruit trees, or to.rooted cuttings of poin\xc5\xa1ettias.and other ornamen- tal plants. Dip or immerse roots in a suspension containing 1 - 2 pounds of WRC-AP-1 per gallon of water immediately before planting. Roots or planting sets can also be coated with WRC-AP-1 by shaking them in a sealed plastic bag containing the suspension of WRC-AP-1 in water, or by moistening them with water and shaking in a sealed plastic bag containing dry granules. Do not apply WRC-AP-1 directly to fresh (non-rooted) cuttings.\\\\n## HOMEOWNER USE\\\\nFor Incorporation Into Growing Media(Ornamentals and Food Crop Plants Grown Indoors and OutdoorsDirections for 0.07 oz. package: Thoroughly blend WRC-AP-1 with growing media. One 0.07 oz. packet (2 grams) will treat one 8-inch pot. To apply WRC-AP-1, fill a clean 8-inch pot 3/4 full with potting soil. Spread the contents of the WRC-AP-1.packet onto",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "(less than 60\xc2\xb0F at 4 inch depth), as a preventative against heavy disease pressure, or as a curative for low to moderate disease pressure early in the grow- ing season. The soil or growing medium should be moist but not wet at the time of application; the application wa- ter may be of sufficient volume to provide the necessary moisture uniess the soil is extremely dry or difficult to wet. Do not apply WRC-AP-1 to very dry, compacted, frozen, or water-logged soils, and do not over-water or allow soil to become saturated for extended periods (>3 hours) after application.\\\\n## COMPATIBILITY WITH PESTICIDES, FERTLIZERS, AND ADJUVANTS\\\\nChemical fungicides should not be mixed with or applied to soil or plant media at the same time as WRC-AP-1. In most cases, additional soil-applied fungicides should not be required to control seedling diseases after proper appli- cation of WRC-AP-1. If additional fungicide applications are desired, wait a minimum of 2 weeks after applying WRC-AP-1. The effectiveness of WRC-AP-1 may be decreased if soil fungicides are applied to the same area be- fore it has become fully established in the root zone.WRC-AP-1 can be applied after soil fumigation, solarization, or steam sterilization to prevent or delay reinfestation by pathogenic fungi. Do not apply WRC-AP-1 to fumigated soil until fumigants have dissipated to levels safe for planting the crop: Do not apply WRC-AP-1 to stearmn-sterilized soil or other planting media until it has cooled to a temperature of 100\xc2\xb0F",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "at a rate of 4 fl. oz. per pot for shallow.pots (up to 4 inclhes deep) or plants up to 6 inches tall. For deeper pots and/or plants, apply 8 to 16 fl. oz. per pot. May be repeated every 1 - 4 weeks as needed.|\\\\n\\\\n## FOR APPLICATION THROUGH IRRIGATION SYSTEMS\\\\nApply WRC-AP-1 through irrigation systems up.to 1 week before or immediately after planting or transplanting. Apply at 2 - 10 pounds per acre (0.75 - 3.67 ounces per 1,000 square feet). Refer to the Chemigation Bulletin be- low for additional use instructions for application through irrigation systems. Do not apply WRC-AP-1 through any irrigation system unless allowed in the Chemigation Bulletin. Application can be repeated every 1 - 4 weeks if nec- essary due to disease pressure.Mix WRC-AP-1 into a large volume (50 gallons or more) of water under continuous agitation and inject through a filter or screen (50 mesh) into the irrigation lines. Alternatively, first suspend the product in a smaller volume of water (a minimum of 2 gallons per pound of WRC-AP-1) with thorough mixing, and then pour this suspension through a filter or screen (50 mesh) into the final volume of water for injection into the irrigation system. Apply WRC-AP-1 immediately after mixing with water; do not allow the mixture to stand overnight or for prolonged peri- ods. When using large pressurized systems, injection should occur after the system has been fully charged with wa- ter and over sufficient time (typically 30 -- 60 minutes, depending on the system) to",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "chunk" : "in a way that will contact workers or other persons, either directly or through drift. Only protected handlers may be in the area during application. For any requirements specific to your State or Tribe, con- sult the agency responsible for pesticide regulation.\\\\n||AGRICULTURAL USE REQUIREMENTS|\\\\n| :---: | :---: |\\\\n|Use|product only in accordance with its labeling and with the Worker Protection Standard, 40 CFR Part 170.|\\\\n|This|contains requirements for the protection of agricultural workers on farms, forests, nurseries, and|\\\\n|greenhouses,|and handlers of agricultural pesticides. It contains requirements for training, decontamination, notifica-|\\\\n|tion,|emergency assistance. It also contains specific instructions and exceptions pertaining to the statements on|\\\\n|this|about personal protective equipment (PPE), and restricted entry interval. The requirements in this box only|\\\\n|apply|uses of this product that are covered by the Worker Protection Standard. Do not enter or allow worker entry|\\\\n|into|areas without footwear until sprays have dried. A Restricted Entry Interval (REl) is not required.|\\\\n\\\\n## GENERAL INFORMATION\\\\nGliocladium virens, the active component in WRC-AP-1, is a naturally occurring soil fungus which is antagonistic to plant pathogenic fungi such as Pythium and Rhizoctonia, thereby aiding in control of these damping off\\\\\\" and root rot pathogens. WRC-AP-1 is a granular formulation containing a high concentration of G. virens spores suitable for incorporation into soil or",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  } ],\n  "request_id" : "782ab5ea-2690-44ea-b94a-3b24aaa8dfbd"\n}'
2025-01-18 18:35:08,791 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:35:08,793 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:35:09,287 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:35:15,932 - DEBUG - executing SQL/command
2025-01-18 18:35:15,932 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/WRC-A...]
2025-01-18 18:35:15,932 - DEBUG - sequence counter: 62
2025-01-18 18:35:15,932 - DEBUG - Request id: de5a2651-2d77-4ce3-b6c0-8212229a6a67
2025-01-18 18:35:15,932 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/WRC-A...]
2025-01-18 18:35:15,932 - DEBUG - is_file_transfer: True
2025-01-18 18:35:15,932 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:35:15,933 - DEBUG - _cmd_query
2025-01-18 18:35:15,933 - DEBUG - serialize_to_dict() called
2025-01-18 18:35:15,933 - DEBUG - Cache Entry: (0, 1737246901383142, 0)
2025-01-18 18:35:15,933 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246901383142, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:35:15,933 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/WRC-A...], sequence_id=[62], is_file_transfer=[False]
2025-01-18 18:35:15,933 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:35:15,934 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:35:15,934 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:35:15,934 - DEBUG - Request guid: 7bb2d8a8-1288-4dd4-a2d4-74a9586eb1e4
2025-01-18 18:35:15,934 - DEBUG - socket timeout: 60
2025-01-18 18:35:16,104 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=de5a2651-2d77-4ce3-b6c0-8212229a6a67&request_guid=7bb2d8a8-1288-4dd4-a2d4-74a9586eb1e4 HTTP/1.1" 200 3453
2025-01-18 18:35:16,104 - DEBUG - SUCCESS
2025-01-18 18:35:16,105 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:35:16,105 - DEBUG - ret[code] = None, after post request
2025-01-18 18:35:16,105 - DEBUG - Query id: 01b9ce03-0002-4c72-0007-08ea00203036
2025-01-18 18:35:16,105 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737246911478915, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:35:16,105 - DEBUG - Cache Entry: (0, 1737246901383142, 0)
2025-01-18 18:35:16,105 - DEBUG - deserialize {'id': 0, 'timestamp': 1737246911478915, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:35:16,105 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:35:16,105 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:35:16,105 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:35:16,105 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:35:16,106 - DEBUG - Cache Entry: (0, 1737246911478915, 0)
2025-01-18 18:35:16,106 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:35:16,106 - DEBUG - sfqid: 01b9ce03-0002-4c72-0007-08ea00203036
2025-01-18 18:35:16,106 - DEBUG - query execution done
2025-01-18 18:35:16,106 - DEBUG - SUCCESS
2025-01-18 18:35:16,106 - DEBUG - PUT OR GET: False
2025-01-18 18:35:16,106 - DEBUG - Query result format: arrow
2025-01-18 18:35:16,106 - INFO - Number of results in first chunk: 54
2025-01-18 18:35:16,106 - DEBUG - Execute query [queryID: 01b9ce03-0002-4c72-0007-08ea00203036] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:35:16,106 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:35:16,106 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:35:16,106 - DEBUG - Batches read: 1
2025-01-18 18:35:16,107 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:40:49,393 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:40:49,394 - INFO - Querying the server for client info
2025-01-18 18:40:49,394 - DEBUG - cursor
2025-01-18 18:40:49,394 - DEBUG - executing SQL/command
2025-01-18 18:40:49,395 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:40:49,395 - DEBUG - sequence counter: 63
2025-01-18 18:40:49,395 - DEBUG - Request id: 61c7e6b6-fc8a-42ef-b82c-004e5e9702a7
2025-01-18 18:40:49,395 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:40:49,395 - DEBUG - is_file_transfer: True
2025-01-18 18:40:49,395 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:40:49,395 - DEBUG - _cmd_query
2025-01-18 18:40:49,395 - DEBUG - serialize_to_dict() called
2025-01-18 18:40:49,395 - DEBUG - Cache Entry: (0, 1737246911478915, 0)
2025-01-18 18:40:49,395 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737246911478915, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:40:49,395 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[63], is_file_transfer=[False]
2025-01-18 18:40:49,396 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:40:49,397 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:40:49,397 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:40:49,397 - DEBUG - Request guid: 13762e56-176a-4cb1-8c5e-d8d6e38fd940
2025-01-18 18:40:49,397 - DEBUG - socket timeout: 60
2025-01-18 18:40:49,398 - DEBUG - Resetting dropped connection: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:40:49,968 - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None
2025-01-18 18:40:49,968 - DEBUG - ocsp_response_cache_uri: file://C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 18:40:49,968 - DEBUG - OCSP_VALIDATION_CACHE size: 310
2025-01-18 18:40:49,968 - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 18:40:49,968 - DEBUG - OCSP dynamic cache server RETRY URL: None
2025-01-18 18:40:49,968 - DEBUG - validating certificate: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:40:49,968 - DEBUG - # of certificates: 4
2025-01-18 18:40:49,969 - DEBUG - subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:40:49,969 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:40:49,969 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:40:49,969 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:40:49,972 - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:40:49,973 - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])
2025-01-18 18:40:49,974 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:40:49,975 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:40:49,976 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:40:49,976 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:40:49,977 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 18:40:49,977 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:40:49,979 - DEBUG - ok
2025-01-18 18:40:50,088 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=61c7e6b6-fc8a-42ef-b82c-004e5e9702a7&request_guid=13762e56-176a-4cb1-8c5e-d8d6e38fd940 HTTP/1.1" 200 2616
2025-01-18 18:40:50,089 - DEBUG - SUCCESS
2025-01-18 18:40:50,089 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:40:50,089 - DEBUG - ret[code] = None, after post request
2025-01-18 18:40:50,089 - DEBUG - Query id: 01b9ce08-0002-4c71-0007-08ea002020b6
2025-01-18 18:40:50,089 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247245477963, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 18:40:50,089 - DEBUG - Cache Entry: (0, 1737246911478915, 0)
2025-01-18 18:40:50,089 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247245477963, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 18:40:50,089 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:40:50,089 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:40:50,090 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:40:50,090 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:40:50,090 - DEBUG - Cache Entry: (0, 1737247245477963, 0)
2025-01-18 18:40:50,090 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:40:50,090 - DEBUG - sfqid: 01b9ce08-0002-4c71-0007-08ea002020b6
2025-01-18 18:40:50,090 - DEBUG - query execution done
2025-01-18 18:40:50,090 - DEBUG - SUCCESS
2025-01-18 18:40:50,090 - DEBUG - PUT OR GET: False
2025-01-18 18:40:50,090 - DEBUG - Query result format: arrow
2025-01-18 18:40:50,090 - INFO - Number of results in first chunk: 1
2025-01-18 18:40:50,090 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:40:50,091 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:40:50,091 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:40:50,091 - DEBUG - Batches read: 0
2025-01-18 18:40:50,091 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:40:50,091 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:40:50,091 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:40:50,091 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:40:50,091 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:40:50,091 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:40:50,091 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:40:50,096 - DEBUG - cursor
2025-01-18 18:40:50,096 - DEBUG - executing SQL/command
2025-01-18 18:40:50,096 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:40:50,096 - DEBUG - sequence counter: 64
2025-01-18 18:40:50,096 - DEBUG - Request id: 0a39be3d-bb00-4e69-8a7f-a2496a569a22
2025-01-18 18:40:50,096 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:40:50,096 - DEBUG - is_file_transfer: True
2025-01-18 18:40:50,096 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:40:50,096 - DEBUG - _cmd_query
2025-01-18 18:40:50,096 - DEBUG - serialize_to_dict() called
2025-01-18 18:40:50,096 - DEBUG - Cache Entry: (0, 1737247245477963, 0)
2025-01-18 18:40:50,096 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247245477963, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 18:40:50,096 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[64], is_file_transfer=[False]
2025-01-18 18:40:50,097 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:40:50,097 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:40:50,097 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:40:50,097 - DEBUG - Request guid: fcd70cb2-2100-4f2b-b7c4-56ebd6ae99ea
2025-01-18 18:40:50,097 - DEBUG - socket timeout: 60
2025-01-18 18:40:50,162 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=0a39be3d-bb00-4e69-8a7f-a2496a569a22&request_guid=fcd70cb2-2100-4f2b-b7c4-56ebd6ae99ea HTTP/1.1" 200 1500
2025-01-18 18:40:50,162 - DEBUG - SUCCESS
2025-01-18 18:40:50,162 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:40:50,163 - DEBUG - ret[code] = None, after post request
2025-01-18 18:40:50,163 - DEBUG - Query id: 01b9ce08-0002-4c70-0007-08ea001f9fb6
2025-01-18 18:40:50,163 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247245558571, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:40:50,163 - DEBUG - Cache Entry: (0, 1737247245477963, 0)
2025-01-18 18:40:50,163 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247245558571, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:40:50,163 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:40:50,163 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:40:50,163 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:40:50,163 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:40:50,163 - DEBUG - Cache Entry: (0, 1737247245558571, 0)
2025-01-18 18:40:50,163 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:40:50,163 - DEBUG - sfqid: 01b9ce08-0002-4c70-0007-08ea001f9fb6
2025-01-18 18:40:50,163 - DEBUG - query execution done
2025-01-18 18:40:50,163 - DEBUG - SUCCESS
2025-01-18 18:40:50,163 - DEBUG - PUT OR GET: False
2025-01-18 18:40:50,163 - DEBUG - Query result format: arrow
2025-01-18 18:40:50,163 - INFO - Number of results in first chunk: 0
2025-01-18 18:40:50,164 - DEBUG - executing SQL/command
2025-01-18 18:40:50,164 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:40:50,164 - DEBUG - sequence counter: 65
2025-01-18 18:40:50,164 - DEBUG - Request id: 9e5d19d5-e749-4564-9c96-d651b97b6f68
2025-01-18 18:40:50,164 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:40:50,164 - DEBUG - is_file_transfer: True
2025-01-18 18:40:50,164 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:40:50,165 - DEBUG - _cmd_query
2025-01-18 18:40:50,165 - DEBUG - serialize_to_dict() called
2025-01-18 18:40:50,165 - DEBUG - Cache Entry: (0, 1737247245558571, 0)
2025-01-18 18:40:50,165 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247245558571, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:40:50,165 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[65], is_file_transfer=[False]
2025-01-18 18:40:50,165 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:40:50,165 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:40:50,165 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:40:50,166 - DEBUG - Request guid: be864a0c-96a3-4853-be9a-1b254b27f8ab
2025-01-18 18:40:50,166 - DEBUG - socket timeout: 60
2025-01-18 18:40:50,230 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=9e5d19d5-e749-4564-9c96-d651b97b6f68&request_guid=be864a0c-96a3-4853-be9a-1b254b27f8ab HTTP/1.1" 200 1374
2025-01-18 18:40:50,231 - DEBUG - SUCCESS
2025-01-18 18:40:50,231 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:40:50,231 - DEBUG - ret[code] = None, after post request
2025-01-18 18:40:50,231 - DEBUG - Query id: 01b9ce08-0002-4c76-0007-08ea001fbebe
2025-01-18 18:40:50,231 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247245609168, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:40:50,231 - DEBUG - Cache Entry: (0, 1737247245558571, 0)
2025-01-18 18:40:50,231 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247245609168, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:40:50,231 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:40:50,231 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:40:50,231 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:40:50,231 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:40:50,231 - DEBUG - Cache Entry: (0, 1737247245609168, 0)
2025-01-18 18:40:50,231 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:40:50,231 - DEBUG - sfqid: 01b9ce08-0002-4c76-0007-08ea001fbebe
2025-01-18 18:40:50,231 - DEBUG - query execution done
2025-01-18 18:40:50,231 - DEBUG - SUCCESS
2025-01-18 18:40:50,231 - DEBUG - PUT OR GET: False
2025-01-18 18:40:50,231 - DEBUG - Query result format: arrow
2025-01-18 18:40:50,231 - INFO - Number of results in first chunk: 0
2025-01-18 18:40:50,232 - DEBUG - executing SQL/command
2025-01-18 18:40:50,232 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:40:50,232 - DEBUG - sequence counter: 66
2025-01-18 18:40:50,232 - DEBUG - Request id: 828eebd6-bd2e-4da1-9762-c6a63e4f5e06
2025-01-18 18:40:50,232 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:40:50,232 - DEBUG - is_file_transfer: True
2025-01-18 18:40:50,232 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:40:50,232 - DEBUG - _cmd_query
2025-01-18 18:40:50,232 - DEBUG - serialize_to_dict() called
2025-01-18 18:40:50,232 - DEBUG - Cache Entry: (0, 1737247245609168, 0)
2025-01-18 18:40:50,232 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247245609168, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:40:50,233 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[66], is_file_transfer=[False]
2025-01-18 18:40:50,233 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:40:50,233 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:40:50,233 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:40:50,233 - DEBUG - Request guid: c3d08fae-ae6a-4ee7-868a-b7636756af57
2025-01-18 18:40:50,233 - DEBUG - socket timeout: 60
2025-01-18 18:40:50,304 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=828eebd6-bd2e-4da1-9762-c6a63e4f5e06&request_guid=c3d08fae-ae6a-4ee7-868a-b7636756af57 HTTP/1.1" 200 1374
2025-01-18 18:40:50,304 - DEBUG - SUCCESS
2025-01-18 18:40:50,305 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:40:50,305 - DEBUG - ret[code] = None, after post request
2025-01-18 18:40:50,305 - DEBUG - Query id: 01b9ce08-0002-4c5d-0007-08ea001fcd8a
2025-01-18 18:40:50,305 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247245687158, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:40:50,305 - DEBUG - Cache Entry: (0, 1737247245609168, 0)
2025-01-18 18:40:50,305 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247245687158, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:40:50,305 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:40:50,305 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:40:50,305 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:40:50,305 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:40:50,305 - DEBUG - Cache Entry: (0, 1737247245687158, 0)
2025-01-18 18:40:50,305 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:40:50,305 - DEBUG - sfqid: 01b9ce08-0002-4c5d-0007-08ea001fcd8a
2025-01-18 18:40:50,305 - DEBUG - query execution done
2025-01-18 18:40:50,305 - DEBUG - SUCCESS
2025-01-18 18:40:50,305 - DEBUG - PUT OR GET: False
2025-01-18 18:40:50,305 - DEBUG - Query result format: arrow
2025-01-18 18:40:50,305 - INFO - Number of results in first chunk: 0
2025-01-18 18:40:50,306 - DEBUG - executing SQL/command
2025-01-18 18:40:50,306 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:40:50,306 - DEBUG - sequence counter: 67
2025-01-18 18:40:50,306 - DEBUG - Request id: f292218a-af3a-49ad-a8c4-fb611edcc186
2025-01-18 18:40:50,306 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:40:50,306 - DEBUG - is_file_transfer: True
2025-01-18 18:40:50,306 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:40:50,306 - DEBUG - _cmd_query
2025-01-18 18:40:50,306 - DEBUG - serialize_to_dict() called
2025-01-18 18:40:50,306 - DEBUG - Cache Entry: (0, 1737247245687158, 0)
2025-01-18 18:40:50,306 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247245687158, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:40:50,306 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[67], is_file_transfer=[False]
2025-01-18 18:40:50,307 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:40:50,307 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:40:50,308 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:40:50,308 - DEBUG - Request guid: a342e594-1627-4228-bfcd-fcdf0a834af9
2025-01-18 18:40:50,308 - DEBUG - socket timeout: 60
2025-01-18 18:40:50,434 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=f292218a-af3a-49ad-a8c4-fb611edcc186&request_guid=a342e594-1627-4228-bfcd-fcdf0a834af9 HTTP/1.1" 200 2615
2025-01-18 18:40:50,434 - DEBUG - SUCCESS
2025-01-18 18:40:50,435 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:40:50,435 - DEBUG - ret[code] = None, after post request
2025-01-18 18:40:50,435 - DEBUG - Query id: 01b9ce08-0002-4c72-0007-08ea0020305e
2025-01-18 18:40:50,435 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247245831117, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:40:50,435 - DEBUG - Cache Entry: (0, 1737247245687158, 0)
2025-01-18 18:40:50,435 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247245831117, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:40:50,435 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:40:50,435 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:40:50,435 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:40:50,435 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:40:50,435 - DEBUG - Cache Entry: (0, 1737247245831117, 0)
2025-01-18 18:40:50,435 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:40:50,435 - DEBUG - sfqid: 01b9ce08-0002-4c72-0007-08ea0020305e
2025-01-18 18:40:50,435 - DEBUG - query execution done
2025-01-18 18:40:50,435 - DEBUG - SUCCESS
2025-01-18 18:40:50,435 - DEBUG - PUT OR GET: False
2025-01-18 18:40:50,435 - DEBUG - Query result format: arrow
2025-01-18 18:40:50,435 - INFO - Number of results in first chunk: 54
2025-01-18 18:40:50,436 - DEBUG - Execute query [queryID: 01b9ce08-0002-4c72-0007-08ea0020305e]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:40:50,436 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:40:50,436 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:40:50,436 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:40:50,436 - DEBUG - Batches read: 0
2025-01-18 18:40:50,436 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:40:50,436 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:40:50,446 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:40:50,447 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:40:50,823 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:40:50,850 - DEBUG - Sending 1 logs to telemetry. Data is {'logs': [{'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce02-0002-4c79-0007-08ea002001b2', 'value': 62}, 'timestamp': '1737246860909'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '364379e5-a40c-4f30-9f94-f77ac2ac2c0a', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 31740}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce02-0002-4c79-0007-08ea002001b2']}}, 'timestamp': '1737246860910'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c76-0007-08ea001fbe32', 'value': 4591}, 'timestamp': '1737246864488'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 25748}}, 'timestamp': '1737246864491'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c72-0007-08ea0020302a', 'value': 4594}, 'timestamp': '1737246865919'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce02-0002-4c72-0007-08ea0020302a', 'value': 1}, 'timestamp': '1737246865919'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce02-0002-4c72-0007-08ea0020302a', 'value': 1}, 'timestamp': '1737246865920'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '22de2ca6-1a76-4104-8a96-e38a252b0d27', 'query_plan_complexity': {'column': 1}, 'thread_ident': 25748}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce02-0002-4c72-0007-08ea0020302a']}}, 'timestamp': '1737246865921'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4d87-0007-08ea001fe60a', 'value': 4591}, 'timestamp': '1737246865983'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.05888009071350098, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246865983'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c72-0007-08ea0020302e', 'value': 4593}, 'timestamp': '1737246866052'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.06899046897888184, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246866053'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c79-0007-08ea002001b6', 'value': 4592}, 'timestamp': '1737246866116'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.06285762786865234, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246866116'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c78-0007-08ea002010e6', 'value': 4590}, 'timestamp': '1737246866214'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce02-0002-4c78-0007-08ea002010e6', 'value': 0}, 'timestamp': '1737246866214'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '37777669-2e4a-483f-a61f-f997664d92c8', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 25748}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce02-0002-4c78-0007-08ea002010e6']}}, 'timestamp': '1737246866215'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c7a-0007-08ea001ff662', 'value': 4592}, 'timestamp': '1737246869731'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 25436}}, 'timestamp': '1737246869738'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c70-0007-08ea001f9f1a', 'value': 4599}, 'timestamp': '1737246869857'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce02-0002-4c70-0007-08ea001f9f1a', 'value': 1}, 'timestamp': '1737246869857'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce02-0002-4c70-0007-08ea001f9f1a', 'value': 1}, 'timestamp': '1737246869858'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '91790c81-6f3a-4039-8e73-bbf6f81ea984', 'query_plan_complexity': {'column': 1}, 'thread_ident': 25436}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce02-0002-4c70-0007-08ea001f9f1a']}}, 'timestamp': '1737246869858'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c70-0007-08ea001f9f1e', 'value': 4591}, 'timestamp': '1737246869935'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.07396340370178223, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246869936'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c77-0007-08ea001fdd4e', 'value': 4592}, 'timestamp': '1737246870001'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.06434059143066406, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246870001'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c5d-0007-08ea001fccea', 'value': 4593}, 'timestamp': '1737246870063'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.06192922592163086, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246870064'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c5d-0007-08ea001fccee', 'value': 4592}, 'timestamp': '1737246870152'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce02-0002-4c5d-0007-08ea001fccee', 'value': 0}, 'timestamp': '1737246870152'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'f223f9b8-3710-45f7-b2e7-690dca95ce55', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 25436}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce02-0002-4c5d-0007-08ea001fccee']}}, 'timestamp': '1737246870153'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4d87-0007-08ea001fe60e', 'value': 4596}, 'timestamp': '1737246870683'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 8656}}, 'timestamp': '1737246870688'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4d87-0007-08ea001fe612', 'value': 4592}, 'timestamp': '1737246870786'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce02-0002-4d87-0007-08ea001fe612', 'value': 1}, 'timestamp': '1737246870786'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce02-0002-4d87-0007-08ea001fe612', 'value': 1}, 'timestamp': '1737246870787'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '1bb9e929-021c-490d-82ca-2beb553e56ed', 'query_plan_complexity': {'column': 1}, 'thread_ident': 8656}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce02-0002-4d87-0007-08ea001fe612']}}, 'timestamp': '1737246870788'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c78-0007-08ea002010ea', 'value': 4592}, 'timestamp': '1737246871310'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce02-0002-4c78-0007-08ea002010ea', 'value': 1}, 'timestamp': '1737246871311'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'ee4c5676-36c5-4c2c-a599-5060fdc53d2b', 'query_plan_complexity': {'column': 1}, 'thread_ident': 8656}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce02-0002-4c78-0007-08ea002010ea']}}, 'timestamp': '1737246871311'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c78-0007-08ea002010ee', 'value': 4595}, 'timestamp': '1737246871384'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.06987786293029785, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246871384'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c76-0007-08ea001fbe36', 'value': 4595}, 'timestamp': '1737246871449'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.06419706344604492, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246871449'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c7a-0007-08ea001ff666', 'value': 4596}, 'timestamp': '1737246871519'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.06889820098876953, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246871519'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce02-0002-4c72-0007-08ea00203032', 'value': 4591}, 'timestamp': '1737246871641'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce02-0002-4c72-0007-08ea00203032', 'value': 2}, 'timestamp': '1737246871643'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '1221b62d-47f2-4eb5-aa40-3278e19bdd40', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 8656}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce02-0002-4c72-0007-08ea00203032']}}, 'timestamp': '1737246871643'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce03-0002-4c78-0007-08ea002010fa', 'value': 4592}, 'timestamp': '1737246905721'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 25924}}, 'timestamp': '1737246905728'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce03-0002-4d87-0007-08ea001fe61e', 'value': 4592}, 'timestamp': '1737246905785'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.05811023712158203, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246905786'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce03-0002-4c7a-0007-08ea001ff66a', 'value': 4596}, 'timestamp': '1737246905845'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.05934858322143555, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246905846'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce03-0002-4c78-0007-08ea002010fe', 'value': 4593}, 'timestamp': '1737246905903'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.055550336837768555, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737246905903'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce03-0002-4c77-0007-08ea001fdd66', 'value': 4592}, 'timestamp': '1737246906033'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce03-0002-4c77-0007-08ea001fdd66', 'value': 1}, 'timestamp': '1737246906034'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '896fdda7-023e-4e03-ba9b-2a1ac9532144', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 25924}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce03-0002-4c77-0007-08ea001fdd66']}}, 'timestamp': '1737246906034'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737246906524'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737246906920'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737246908488'}, {'message': {'source': 'snowflake.core', 'version': '1.0.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'python_api', 'data': {'class_name': 'CortexSearchServiceResource', 'func_name': 'search'}}, 'timestamp': '1737246908489'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737246915931'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce03-0002-4c72-0007-08ea00203036', 'value': 4595}, 'timestamp': '1737246916106'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce03-0002-4c72-0007-08ea00203036', 'value': 1}, 'timestamp': '1737246916106'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce03-0002-4c72-0007-08ea00203036', 'value': 1}, 'timestamp': '1737246916107'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '13314804-fbe6-47e6-aa87-0a05bb59e6ec', 'query_plan_complexity': {'column': 1}, 'thread_ident': 25924}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce03-0002-4c72-0007-08ea00203036']}}, 'timestamp': '1737246916107'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce08-0002-4c71-0007-08ea002020b6', 'value': 4592}, 'timestamp': '1737247250090'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 2460}}, 'timestamp': '1737247250096'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce08-0002-4c70-0007-08ea001f9fb6', 'value': 4594}, 'timestamp': '1737247250163'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.06675100326538086, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737247250163'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce08-0002-4c76-0007-08ea001fbebe', 'value': 4593}, 'timestamp': '1737247250231'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.06739234924316406, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737247250231'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce08-0002-4c5d-0007-08ea001fcd8a', 'value': 4594}, 'timestamp': '1737247250305'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.07279419898986816, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737247250305'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce08-0002-4c72-0007-08ea0020305e', 'value': 4594}, 'timestamp': '1737247250435'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce08-0002-4c72-0007-08ea0020305e', 'value': 1}, 'timestamp': '1737247250436'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '85cf2994-c3eb-4b25-b2a6-5e0db68837a6', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 2460}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce08-0002-4c72-0007-08ea0020305e']}}, 'timestamp': '1737247250436'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737247250844'}]}.
2025-01-18 18:40:50,851 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:40:50,852 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:40:50,852 - DEBUG - remaining request timeout: 5000 ms, retry cnt: 1
2025-01-18 18:40:50,852 - DEBUG - Request guid: c12f4f2d-314a-4eae-aed1-c991ad84e43a
2025-01-18 18:40:50,852 - DEBUG - socket timeout: 60
2025-01-18 18:40:50,905 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /telemetry/send?request_guid=c12f4f2d-314a-4eae-aed1-c991ad84e43a HTTP/1.1" 200 86
2025-01-18 18:40:50,905 - DEBUG - SUCCESS
2025-01-18 18:40:50,905 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:40:50,905 - DEBUG - ret[code] = None, after post request
2025-01-18 18:40:50,905 - DEBUG - Successfully uploading metrics to telemetry.
2025-01-18 18:40:50,907 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:40:50,908 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:40:51,435 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:40:52,021 - DEBUG - calling method search on class CortexSearchServiceResource after submitting telemetry if enabled
2025-01-18 18:40:52,021 - INFO - performing a HTTP POST call to /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query
2025-01-18 18:40:52,021 - DEBUG - request has path params: {'database': 'DEV_SRC_INGEST', 'schema': 'EPA_PROCESSED', 'service_name': 'CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST'}, query_params: [], header params: {'Accept': 'application/json', 'Content-Type': 'application/json'} and body: QueryRequest(query=' Can you explain more from the label about the directions of use for WRC-AP-1?', columns=['chunk', 'relative_path', 'PRODUCTNAME', 'COMPANYNAME', 'CATEGORY_EPA_TYPE', 'SIGNAL_WORD'], filter=None, limit=10, experimental=None)
2025-01-18 18:40:52,021 - DEBUG - making an http POST call to 'https://gmcpdcz-mt01740.snowflakecomputing.com:443/api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query'
2025-01-18 18:40:52,022 - DEBUG - Resetting dropped connection: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:40:52,570 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query HTTP/1.1" 200 None
2025-01-18 18:40:52,571 - DEBUG - created a RESTResponse with status 200 and length of 17915
2025-01-18 18:40:52,571 - DEBUG - response body: b'{\n  "results" : [ {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "for 0.07 oz. package: Thoroughly blend WRC-AP-1 with growing media. One 0.07 oz. packet (2 grams) will treat one 8-inch pot. To apply WRC-AP-1, fill a clean 8-inch pot 3/4 full with potting soil. Spread the contents of the WRC-AP-1.packet onto the soil and mix thoroughly with a small spade. It is important that WRC- AP-1 be uniformly mixed into the media to provide the best performance possible. Transplants, or plants for repot- ting can then be placed into the pot immediately. Wait \xc3\xa1t least 24-hours before planting seeds, bulbs or cuttings without roots. Moisten the media with water and keep moist (but not wet) for the next three days. The protective fungus will spread throughout the root system of the plant protecting it from disease organisms. Directions for 0.54 oz. package: Thoroughly blend WRC-AP-1 with growing media. One 0.54 oz. packet (15 grams) will treat /2 cubic foot bag of media, enough to fill 9 six-inch pots. To apply WRC-AP-1, empty a 20 lb. bagof potting soil into a clean 5-gallon bucket. Spread WRC-AP-1 onto the soil in the bucket and mix thoroughly with a spade or shovel. Alternatively, a corner can be cut from the potting soil bag and WRC-AP-1 can be incorporated by shaking, stirring, or kneading the bag. It is important that WRC-AP-1 be uniformly mixed into the media to pro- vide the best performance possible. Soil can then be placed in pots. Moisten the media with water and keep moist . (but not wet) for the next three days.. Transplants or plants for repotting can",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "plant pathogenic fungi such as Pythium and Rhizoctonia, thereby aiding in control of these damping off\\\\\\" and root rot pathogens. WRC-AP-1 is a granular formulation containing a high concentration of G. virens spores suitable for incorporation into soil or soilless media. WRC-AP-1 acts as a preventative and will protect non-infected plants. It may not, however, cure aiready diseased plants. Where possible, allow the treated soil or media to incubate for 1 day prior to planting to achieve best results. Do not use other soil fungicides with WRC-AP-1 at time of incorpora- tion. Later, addition of fungicides are acceptable but usually unnecessary. Best results are achieved if the contents of an open package are used within three months. Be careful to seal out moisture from the unused material by closingthe inner bag tightly.WRC-AP-1 can be mixed with water for application as a soil drench, as aroot dip, or through irrigation systems. The dry granules can also be mixed directly into soil or growing media. Use lower rates in sandy soils, warm soils (60\\\\\\"F or higher temperature at 4-inch depth), and as a preventative against low to moderate disease pressure. Use higher rates in heavy soils (high clay and/or organic matter), low temperatures (less than 60\xc2\xb0F at 4 inch depth), as a preventative against heavy disease pressure, or as a curative for low to moderate disease pressure early in the grow- ing season. The soil or growing medium should be moist but not wet at the time of application; the",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "(preferably refrigerated). In an unopened bag, WRC-AP-1 will retain its biological activity for up to one year at room temperature (70\xc2\xb0F). Long-term exposure to air and higher temperatures (75\xc2\xb0F to 100\xc2\xb0F) may accelerat\xc3\xa9 loss of bioactivity. Exposure to temperatures above 100\xc2\xb0F for extended periods can be detrimental to WRC-AP-1. An open bag of WRC-AP-1 can be kept for up to 3 months if the bag is tightly resealed and refrigerated (40\xc2\xb0F to 45\xc2\xb0F). Squeeze excess air from the bag before resealingPesticide Disposal: Wastes resulting from the use of this product may be disposed of onsite or at an approved waste disposal facility.Container Disposal: Completely empty bag into application equipment. Then dispose of empty bag in a sanitary landfill or by incineration, or if allowed by local authorities, by burning. If burned, stay out of smoke.\\\\n## HOMEOWNER USE\\\\nPesticide Storage: Keep in original container. Store in a cool, dry place away from direct sunlight, feed, or food. stuffs. Keep container tightly sealed when not is use. In an unopened bag, WRC-AP-1 will retain its biological ac- tivity for up to one year at room temperature (70\xc2\xb0F). Long-term exposure to air and higher temperatures (75\xc2\xb0F to 100F) may accelerate loss of bioactivity. Exposure to temperatures above 100\xc2\xb0F for extended periods can be detri- mental to WRC-AP-1.\\\\n## Pesticide and Container Disposal\\\\nIf empty: Do not reuse this container. Place in trash or offer for recycling if availableIf partly filled: Call your local solid",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf",\n    "PRODUCTNAME" : "WRC-AP-1"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "that WRC-AP-1 be uniformly mixed into the media to pro- vide the best performance possible. Soil can then be placed in pots. Moisten the media with water and keep moist . (but not wet) for the next three days.. Transplants or plants for repotting can be placed into pots immediately, but wait at least 24 hours to plant seeds, bulbs or non-rooted cuttings. The protective fungus will spread throughout the root system of the plant protecting it from disease organisms.\\\\n## For Incorporation Into Garden Rows\\\\nWRC-AP-1 can be used to control soil-borne pathogens including Rhizoctonia, Pythium, and Sclerotinia that might attack crops grown outside in the home garden. Disease can be prevented by applying WRC-AP-1 in the garden when plants are seeded or transpiants are moved into the outside home garden. Disease prevention will exist for up to two months after application, depending on the disease pressure present.\\\\n## STORAGE AND DISPOSAL\\\\nDo not contaminate water, food, or feed by storage and disposal.\\\\n## COMMERCIAL USE\\\\nPesticide Storage: WRC-AP-1 is packaged in an airtight, foil-lined, resealable bag designed to protect the fungus from exposure to moisture and oxygen, which can impact storage life. For best results store in a cool, dry place (preferably refrigerated). In an unopened bag, WRC-AP-1 will retain its biological activity for up to one year at room temperature (70\xc2\xb0F). Long-term exposure to air and higher temperatures (75\xc2\xb0F to 100\xc2\xb0F) may accelerat\xc3\xa9 loss of bioactivity. Exposure to",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "the mixture to stand overnight or for prolonged peri- ods. When using large pressurized systems, injection should occur after the system has been fully charged with wa- ter and over sufficient time (typically 30 -- 60 minutes, depending on the system) to allow uniform distribution of the product. After application, flush the system with water for an additional 10 -- 20 minutes to avoid fouling of irriga- tion lines due to fungal growth.\\\\n## FOR ROOT DIP APPLICATION OR ROOT COATING\\\\nWRC-AP-1 can be applied as a dip or coating for bare-root plantings of crops such as horseradish, straw- berries or caneberries, ornamental shrubs, fruit trees, or to.rooted cuttings of poin\xc5\xa1ettias.and other ornamen- tal plants. Dip or immerse roots in a suspension containing 1 - 2 pounds of WRC-AP-1 per gallon of water immediately before planting. Roots or planting sets can also be coated with WRC-AP-1 by shaking them in a sealed plastic bag containing the suspension of WRC-AP-1 in water, or by moistening them with water and shaking in a sealed plastic bag containing dry granules. Do not apply WRC-AP-1 directly to fresh (non-rooted) cuttings.\\\\n## HOMEOWNER USE\\\\nFor Incorporation Into Growing Media(Ornamentals and Food Crop Plants Grown Indoors and OutdoorsDirections for 0.07 oz. package: Thoroughly blend WRC-AP-1 with growing media. One 0.07 oz. packet (2 grams) will treat one 8-inch pot. To apply WRC-AP-1, fill a clean 8-inch pot 3/4 full with potting soil. Spread the contents of the WRC-AP-1.packet onto",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf",\n    "PRODUCTNAME" : "WRC-AP-1"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "by pathogenic fungi. Do not apply WRC-AP-1 to fumigated soil until fumigants have dissipated to levels safe for planting the crop: Do not apply WRC-AP-1 to stearmn-sterilized soil or other planting media until it has cooled to a temperature of 100\xc2\xb0F or lower.Do not combine WRC-AP-1 with other pesticides, surfactants, or fertilizers unless prior experience has shown the combination to be physically compatible, effective, and non-injurious under the conditions of use. WRC-AP-1 has not been fully evaluated for compatibility with all adjuvants or surfactants. If a mixture with adjuvants or surfac- tants is planned, a compatibility test (\\\\\\"jar test\\\\\\") should first be conducted by mixing proportional quantities of WRC-AP-1 and these products in a small volume of water.\\\\n## FOR INCORPORATION INTO GROWING MEDIA\\\\n(Ornamentals and Food Crop Plants Grown Indoors and Outdoors)  \\\\nCommercial Use  \\\\nFor incorporation into potting medium in greenhouse flats, plug trays, or pots:\\\\n* 0 Mix 1 to 1 1/2 pound of WRC-AP-1 biological fungicide per cubic yard of potting soil or other plant-growing medium. Granules must be distributed uniformly throughout the medium.\\\\n* .If the potting medium has been heat sterilized, allow it to cool to 110\xc2\xb0F or lower before adding WRC-AP-1\\\\n* Allow at least 24 hours after incorporation of WRC-AP-1 before planting seeds, cuttings, or other non- rooted plant material into the treated medium. Plants with established roots can be transplanted into treated soil immediately after",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "to temperatures above 100\xc2\xb0F for extended periods can be detri- mental to WRC-AP-1.\\\\n## Pesticide and Container Disposal\\\\nIf empty: Do not reuse this container. Place in trash or offer for recycling if availableIf partly filled: Call your local solid waste agency or 1-800-CLEANUP for disposal instructions. Never place un- used product down any indoor or outdoor drain.\\\\n## WARRANTY\\\\nCertis USA, L.L.C. warrants that the material contained herein conforms to the description on the label and is rea- sonably fit for the purposes referred to in the directions for use. Timing and method of application, weather, water- ing practices, nature of soil, the disease problem, condition of the crop, incompatibility with other influencing fac- tors in the use of this product are beyond the control of the seller. Buyer assumes all risks of use, storage, or han- dling of this material not in strict accordance with directions given herein. NO OTHER EXPRESS OR IMPLIED WARRANTY OF THE FITNESS OR MERCHANTABILITY IS MADE.\\\\n# Chemigation Bulletin\\\\n\\\\n## GENERAL INFORMATION:\\\\nApply this product through pressurized irigation systems such as drip (trickle) irrigation (including micro- irrigation through spaghetti tubes or individual tubes) or sprinkler irrigation (impact or microsprinklers, overhead boom, solid set, lateral move, end tow, side-roll, center pivot, or hand move, including mist-type systems); through gravity flow systems such as flood, furrow, or border irrigation; or with hand-held cali- brated",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "(less than 60\xc2\xb0F at 4 inch depth), as a preventative against heavy disease pressure, or as a curative for low to moderate disease pressure early in the grow- ing season. The soil or growing medium should be moist but not wet at the time of application; the application wa- ter may be of sufficient volume to provide the necessary moisture uniess the soil is extremely dry or difficult to wet. Do not apply WRC-AP-1 to very dry, compacted, frozen, or water-logged soils, and do not over-water or allow soil to become saturated for extended periods (>3 hours) after application.\\\\n## COMPATIBILITY WITH PESTICIDES, FERTLIZERS, AND ADJUVANTS\\\\nChemical fungicides should not be mixed with or applied to soil or plant media at the same time as WRC-AP-1. In most cases, additional soil-applied fungicides should not be required to control seedling diseases after proper appli- cation of WRC-AP-1. If additional fungicide applications are desired, wait a minimum of 2 weeks after applying WRC-AP-1. The effectiveness of WRC-AP-1 may be decreased if soil fungicides are applied to the same area be- fore it has become fully established in the root zone.WRC-AP-1 can be applied after soil fumigation, solarization, or steam sterilization to prevent or delay reinfestation by pathogenic fungi. Do not apply WRC-AP-1 to fumigated soil until fumigants have dissipated to levels safe for planting the crop: Do not apply WRC-AP-1 to stearmn-sterilized soil or other planting media until it has cooled to a temperature of 100\xc2\xb0F",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "in a way that will contact workers or other persons, either directly or through drift. Only protected handlers may be in the area during application. For any requirements specific to your State or Tribe, con- sult the agency responsible for pesticide regulation.\\\\n||AGRICULTURAL USE REQUIREMENTS|\\\\n| :---: | :---: |\\\\n|Use|product only in accordance with its labeling and with the Worker Protection Standard, 40 CFR Part 170.|\\\\n|This|contains requirements for the protection of agricultural workers on farms, forests, nurseries, and|\\\\n|greenhouses,|and handlers of agricultural pesticides. It contains requirements for training, decontamination, notifica-|\\\\n|tion,|emergency assistance. It also contains specific instructions and exceptions pertaining to the statements on|\\\\n|this|about personal protective equipment (PPE), and restricted entry interval. The requirements in this box only|\\\\n|apply|uses of this product that are covered by the Worker Protection Standard. Do not enter or allow worker entry|\\\\n|into|areas without footwear until sprays have dried. A Restricted Entry Interval (REl) is not required.|\\\\n\\\\n## GENERAL INFORMATION\\\\nGliocladium virens, the active component in WRC-AP-1, is a naturally occurring soil fungus which is antagonistic to plant pathogenic fungi such as Pythium and Rhizoctonia, thereby aiding in control of these damping off\\\\\\" and root rot pathogens. WRC-AP-1 is a granular formulation containing a high concentration of G. virens spores suitable for incorporation into soil or",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"FUNGICIDE\\",\\n  \\"MICROBIAL PESTICIDE\\"\\n]",\n    "chunk" : "adding WRC-AP-1\\\\n* Allow at least 24 hours after incorporation of WRC-AP-1 before planting seeds, cuttings, or other non- rooted plant material into the treated medium. Plants with established roots can be transplanted into treated soil immediately after mixing with WRC-AP-1.\\\\n* Avoid using WRC-AP-1 in media totally devoid of organic matter (such as sand). G. virens requires or- ganic matter to grow and work. If the only available organic substrate is the seed, bulb, or other plant mate- rial, G. virens may cause injury to it.\\\\n  \\\\nFor incorporation into seedling and planting beds (indoors and outdoors):\\\\n* . Thoroughly till the soil in the planting bed prior to addition of WRC-AP-1.\\\\n* Incorporate WRC-AP-1 granules uniformly within the plant root zone at the rate of 1 to 1 1/2 pounds per cubic yard of soil. The table below can be used to determine how much WRC-AP-1 to use depending on\\\\n  \\\\nplanting or rooting depth and area to be treated.\\\\n* WRC-AP-1 is unlikely to completely eliminate disease from soil already severely infested with pathogenic fungi. For best results, use WRC-AP-1 in the greenhouse at the time of planting, so that it has already colo- nized the root ball of the transplant.\\\\n\\\\n|Planting depth (inches)|Pounds per 100 square feet|Square feet per pound|\\\\n| :---: | :---: | :---: |\\\\n|2|2/3 - 1|108 - 162|\\\\n|4|11/4 - 2|54 - 81|\\\\n|6|2 - 2 3/4|36- 54|\\\\n|8|2 1/2 - 3 3/4|27-41|\\\\n|10|3 - 4 2/3|22- 32|\\\\n|12|3 3/4 - 5 1/2|18 - 27|\\\\n\\\\n## FOR DRENCH OR SPRAY APPLICATION TO SOIL\\\\nMix",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "WRC-AP-1",\n    "relative_path" : "EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf"\n  } ],\n  "request_id" : "f72a33cc-86fc-4e4c-9d8d-af99fae7d3e8"\n}'
2025-01-18 18:40:52,574 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:40:52,575 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:40:53,072 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:41:25,177 - DEBUG - executing SQL/command
2025-01-18 18:41:25,177 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/WRC-A...]
2025-01-18 18:41:25,177 - DEBUG - sequence counter: 68
2025-01-18 18:41:25,177 - DEBUG - Request id: ad59c2aa-b6f3-4422-a9f9-d56c63da0666
2025-01-18 18:41:25,177 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/WRC-A...]
2025-01-18 18:41:25,177 - DEBUG - is_file_transfer: True
2025-01-18 18:41:25,177 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:41:25,177 - DEBUG - _cmd_query
2025-01-18 18:41:25,177 - DEBUG - serialize_to_dict() called
2025-01-18 18:41:25,177 - DEBUG - Cache Entry: (0, 1737247245831117, 0)
2025-01-18 18:41:25,177 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247245831117, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:41:25,177 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/WRC-A...], sequence_id=[68], is_file_transfer=[False]
2025-01-18 18:41:25,178 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:41:25,178 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:41:25,178 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:41:25,178 - DEBUG - Request guid: 6620079b-4c33-4846-baaf-963475631bb8
2025-01-18 18:41:25,178 - DEBUG - socket timeout: 60
2025-01-18 18:41:25,813 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=ad59c2aa-b6f3-4422-a9f9-d56c63da0666&request_guid=6620079b-4c33-4846-baaf-963475631bb8 HTTP/1.1" 200 3451
2025-01-18 18:41:25,814 - DEBUG - SUCCESS
2025-01-18 18:41:25,814 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:41:25,814 - DEBUG - ret[code] = None, after post request
2025-01-18 18:41:25,814 - DEBUG - Query id: 01b9ce09-0002-4c70-0007-08ea001f9fc6
2025-01-18 18:41:25,814 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247281214694, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:41:25,814 - DEBUG - Cache Entry: (0, 1737247245831117, 0)
2025-01-18 18:41:25,814 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247281214694, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:41:25,814 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:41:25,814 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:41:25,814 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:41:25,814 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:41:25,814 - DEBUG - Cache Entry: (0, 1737247281214694, 0)
2025-01-18 18:41:25,814 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:41:25,814 - DEBUG - sfqid: 01b9ce09-0002-4c70-0007-08ea001f9fc6
2025-01-18 18:41:25,814 - DEBUG - query execution done
2025-01-18 18:41:25,814 - DEBUG - SUCCESS
2025-01-18 18:41:25,815 - DEBUG - PUT OR GET: False
2025-01-18 18:41:25,815 - DEBUG - Query result format: arrow
2025-01-18 18:41:25,815 - INFO - Number of results in first chunk: 54
2025-01-18 18:41:25,815 - DEBUG - Execute query [queryID: 01b9ce09-0002-4c70-0007-08ea001f9fc6] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/WRC-AP-1_70051-3.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:41:25,815 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:41:25,815 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:41:25,815 - DEBUG - Batches read: 1
2025-01-18 18:41:25,816 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:47:09,461 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:47:09,461 - INFO - Querying the server for client info
2025-01-18 18:47:09,461 - DEBUG - cursor
2025-01-18 18:47:09,461 - DEBUG - executing SQL/command
2025-01-18 18:47:09,461 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:47:09,461 - DEBUG - sequence counter: 69
2025-01-18 18:47:09,462 - DEBUG - Request id: 14f465af-e342-4103-87ec-c641cd9457e0
2025-01-18 18:47:09,462 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:47:09,462 - DEBUG - is_file_transfer: True
2025-01-18 18:47:09,462 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:47:09,462 - DEBUG - _cmd_query
2025-01-18 18:47:09,462 - DEBUG - serialize_to_dict() called
2025-01-18 18:47:09,462 - DEBUG - Cache Entry: (0, 1737247281214694, 0)
2025-01-18 18:47:09,462 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247281214694, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:47:09,462 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[69], is_file_transfer=[False]
2025-01-18 18:47:09,463 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:47:09,463 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:47:09,463 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:47:09,464 - DEBUG - Request guid: 690a0e32-6380-4234-90f6-13ec61a89d99
2025-01-18 18:47:09,464 - DEBUG - socket timeout: 60
2025-01-18 18:47:09,465 - DEBUG - Resetting dropped connection: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:47:09,889 - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None
2025-01-18 18:47:09,889 - DEBUG - ocsp_response_cache_uri: file://C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 18:47:09,889 - DEBUG - OCSP_VALIDATION_CACHE size: 310
2025-01-18 18:47:09,889 - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 18:47:09,889 - DEBUG - OCSP dynamic cache server RETRY URL: None
2025-01-18 18:47:09,889 - DEBUG - validating certificate: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:47:09,890 - DEBUG - # of certificates: 4
2025-01-18 18:47:09,890 - DEBUG - subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:47:09,890 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:47:09,891 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:47:09,891 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:47:09,893 - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:47:09,893 - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])
2025-01-18 18:47:09,895 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:47:09,895 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:47:09,897 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:47:09,897 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:47:09,898 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 18:47:09,898 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:47:09,900 - DEBUG - ok
2025-01-18 18:47:10,037 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=14f465af-e342-4103-87ec-c641cd9457e0&request_guid=690a0e32-6380-4234-90f6-13ec61a89d99 HTTP/1.1" 200 2617
2025-01-18 18:47:10,038 - DEBUG - SUCCESS
2025-01-18 18:47:10,038 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:47:10,038 - DEBUG - ret[code] = None, after post request
2025-01-18 18:47:10,038 - DEBUG - Query id: 01b9ce0f-0002-4c78-0007-08ea0020115a
2025-01-18 18:47:10,038 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247625430104, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:47:10,038 - DEBUG - Cache Entry: (0, 1737247281214694, 0)
2025-01-18 18:47:10,038 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247625430104, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:47:10,038 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:47:10,038 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:47:10,038 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:47:10,038 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:47:10,038 - DEBUG - Cache Entry: (0, 1737247625430104, 0)
2025-01-18 18:47:10,038 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:47:10,039 - DEBUG - sfqid: 01b9ce0f-0002-4c78-0007-08ea0020115a
2025-01-18 18:47:10,039 - DEBUG - query execution done
2025-01-18 18:47:10,039 - DEBUG - SUCCESS
2025-01-18 18:47:10,039 - DEBUG - PUT OR GET: False
2025-01-18 18:47:10,039 - DEBUG - Query result format: arrow
2025-01-18 18:47:10,039 - INFO - Number of results in first chunk: 1
2025-01-18 18:47:10,039 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:47:10,039 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:47:10,039 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:47:10,039 - DEBUG - Batches read: 0
2025-01-18 18:47:10,039 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:47:10,039 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:47:10,040 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:47:10,040 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:47:10,040 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:47:10,040 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:47:10,040 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:47:10,042 - DEBUG - cursor
2025-01-18 18:47:10,043 - DEBUG - executing SQL/command
2025-01-18 18:47:10,043 - DEBUG - query: [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:47:10,043 - DEBUG - sequence counter: 70
2025-01-18 18:47:10,043 - DEBUG - Request id: e317cdcf-15d3-4f50-93d1-0a3fae175beb
2025-01-18 18:47:10,043 - DEBUG - running query [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:47:10,043 - DEBUG - is_file_transfer: True
2025-01-18 18:47:10,043 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:47:10,043 - DEBUG - _cmd_query
2025-01-18 18:47:10,043 - DEBUG - serialize_to_dict() called
2025-01-18 18:47:10,043 - DEBUG - Cache Entry: (0, 1737247625430104, 0)
2025-01-18 18:47:10,043 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247625430104, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:47:10,043 - DEBUG - sql=[SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...], sequence_id=[70], is_file_transfer=[False]
2025-01-18 18:47:10,044 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:47:10,044 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:47:10,044 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:47:10,044 - DEBUG - Request guid: bcc42a60-23df-4c27-a432-1c31723cd236
2025-01-18 18:47:10,044 - DEBUG - socket timeout: 60
2025-01-18 18:47:10,600 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=e317cdcf-15d3-4f50-93d1-0a3fae175beb&request_guid=bcc42a60-23df-4c27-a432-1c31723cd236 HTTP/1.1" 200 2123
2025-01-18 18:47:10,600 - DEBUG - SUCCESS
2025-01-18 18:47:10,600 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:47:10,600 - DEBUG - ret[code] = None, after post request
2025-01-18 18:47:10,600 - DEBUG - Query id: 01b9ce0f-0002-4c77-0007-08ea001fddf2
2025-01-18 18:47:10,600 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247625992798, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:47:10,600 - DEBUG - Cache Entry: (0, 1737247625430104, 0)
2025-01-18 18:47:10,601 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247625992798, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:47:10,601 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:47:10,601 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:47:10,601 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:47:10,601 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:47:10,601 - DEBUG - Cache Entry: (0, 1737247625992798, 0)
2025-01-18 18:47:10,601 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:47:10,601 - DEBUG - sfqid: 01b9ce0f-0002-4c77-0007-08ea001fddf2
2025-01-18 18:47:10,601 - DEBUG - query execution done
2025-01-18 18:47:10,601 - DEBUG - SUCCESS
2025-01-18 18:47:10,601 - DEBUG - PUT OR GET: False
2025-01-18 18:47:10,601 - DEBUG - Query result format: arrow
2025-01-18 18:47:10,601 - INFO - Number of results in first chunk: 1
2025-01-18 18:47:10,601 - DEBUG - Execute query [queryID: 01b9ce0f-0002-4c77-0007-08ea001fddf2] 
        SELECT LOCATION, LATITUDE, LONGITUDE
        FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS 
        WHERE USER_ID = 'default_user'
        
2025-01-18 18:47:10,601 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:47:10,601 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:47:10,601 - DEBUG - Arrow chunk info: batchCount 1, columnCount 3, use_numpy: 0
2025-01-18 18:47:10,601 - DEBUG - Batches read: 0
2025-01-18 18:47:10,601 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:47:10,601 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:47:10,605 - DEBUG - executing SQL/command
2025-01-18 18:47:10,605 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:47:10,605 - DEBUG - sequence counter: 71
2025-01-18 18:47:10,605 - DEBUG - Request id: 6535c815-53aa-42a3-9e06-a9692cf0df76
2025-01-18 18:47:10,605 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:47:10,605 - DEBUG - is_file_transfer: True
2025-01-18 18:47:10,605 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:47:10,605 - DEBUG - _cmd_query
2025-01-18 18:47:10,605 - DEBUG - serialize_to_dict() called
2025-01-18 18:47:10,605 - DEBUG - Cache Entry: (0, 1737247625992798, 0)
2025-01-18 18:47:10,605 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247625992798, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:47:10,605 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[71], is_file_transfer=[False]
2025-01-18 18:47:10,606 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:47:10,606 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:47:10,606 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:47:10,606 - DEBUG - Request guid: 9931e1a0-7f85-43da-8dd7-989036b58a76
2025-01-18 18:47:10,606 - DEBUG - socket timeout: 60
2025-01-18 18:47:10,672 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=6535c815-53aa-42a3-9e06-a9692cf0df76&request_guid=9931e1a0-7f85-43da-8dd7-989036b58a76 HTTP/1.1" 200 1504
2025-01-18 18:47:10,672 - DEBUG - SUCCESS
2025-01-18 18:47:10,673 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:47:10,673 - DEBUG - ret[code] = None, after post request
2025-01-18 18:47:10,673 - DEBUG - Query id: 01b9ce0f-0002-4c5d-0007-08ea001fce12
2025-01-18 18:47:10,673 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247626071494, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:47:10,673 - DEBUG - Cache Entry: (0, 1737247625992798, 0)
2025-01-18 18:47:10,673 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247626071494, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:47:10,673 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:47:10,673 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:47:10,673 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:47:10,673 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:47:10,673 - DEBUG - Cache Entry: (0, 1737247626071494, 0)
2025-01-18 18:47:10,673 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:47:10,673 - DEBUG - sfqid: 01b9ce0f-0002-4c5d-0007-08ea001fce12
2025-01-18 18:47:10,673 - DEBUG - query execution done
2025-01-18 18:47:10,673 - DEBUG - SUCCESS
2025-01-18 18:47:10,673 - DEBUG - PUT OR GET: False
2025-01-18 18:47:10,673 - DEBUG - Query result format: arrow
2025-01-18 18:47:10,673 - INFO - Number of results in first chunk: 0
2025-01-18 18:47:10,674 - DEBUG - executing SQL/command
2025-01-18 18:47:10,674 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:47:10,674 - DEBUG - sequence counter: 72
2025-01-18 18:47:10,674 - DEBUG - Request id: 0ff8df25-9659-4877-bf20-44c147b3c34f
2025-01-18 18:47:10,674 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:47:10,675 - DEBUG - is_file_transfer: True
2025-01-18 18:47:10,675 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:47:10,675 - DEBUG - _cmd_query
2025-01-18 18:47:10,675 - DEBUG - serialize_to_dict() called
2025-01-18 18:47:10,675 - DEBUG - Cache Entry: (0, 1737247626071494, 0)
2025-01-18 18:47:10,675 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247626071494, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:47:10,675 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[72], is_file_transfer=[False]
2025-01-18 18:47:10,675 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:47:10,676 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:47:10,676 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:47:10,676 - DEBUG - Request guid: 8013e0b1-09af-4911-adc8-7a8b313169ff
2025-01-18 18:47:10,676 - DEBUG - socket timeout: 60
2025-01-18 18:47:10,752 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=0ff8df25-9659-4877-bf20-44c147b3c34f&request_guid=8013e0b1-09af-4911-adc8-7a8b313169ff HTTP/1.1" 200 1374
2025-01-18 18:47:10,752 - DEBUG - SUCCESS
2025-01-18 18:47:10,752 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:47:10,752 - DEBUG - ret[code] = None, after post request
2025-01-18 18:47:10,752 - DEBUG - Query id: 01b9ce0f-0002-4c7a-0007-08ea001ff6de
2025-01-18 18:47:10,752 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247626122761, 'priority': 0, 'context': 'COrjJA=='}]}
2025-01-18 18:47:10,752 - DEBUG - Cache Entry: (0, 1737247626071494, 0)
2025-01-18 18:47:10,753 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247626122761, 'priority': 0, 'context': 'COrjJA=='}
2025-01-18 18:47:10,753 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:47:10,753 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:47:10,753 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:47:10,753 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:47:10,753 - DEBUG - Cache Entry: (0, 1737247626122761, 0)
2025-01-18 18:47:10,753 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:47:10,753 - DEBUG - sfqid: 01b9ce0f-0002-4c7a-0007-08ea001ff6de
2025-01-18 18:47:10,753 - DEBUG - query execution done
2025-01-18 18:47:10,753 - DEBUG - SUCCESS
2025-01-18 18:47:10,753 - DEBUG - PUT OR GET: False
2025-01-18 18:47:10,753 - DEBUG - Query result format: arrow
2025-01-18 18:47:10,753 - INFO - Number of results in first chunk: 0
2025-01-18 18:47:10,754 - DEBUG - executing SQL/command
2025-01-18 18:47:10,754 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:47:10,754 - DEBUG - sequence counter: 73
2025-01-18 18:47:10,754 - DEBUG - Request id: 5b1883a8-4c53-4a7c-81f6-64894aeec69e
2025-01-18 18:47:10,754 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:47:10,754 - DEBUG - is_file_transfer: True
2025-01-18 18:47:10,754 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:47:10,754 - DEBUG - _cmd_query
2025-01-18 18:47:10,754 - DEBUG - serialize_to_dict() called
2025-01-18 18:47:10,754 - DEBUG - Cache Entry: (0, 1737247626122761, 0)
2025-01-18 18:47:10,754 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247626122761, 'priority': 0, 'context': {'base64Data': 'COrjJA=='}}]}
2025-01-18 18:47:10,754 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[73], is_file_transfer=[False]
2025-01-18 18:47:10,755 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:47:10,755 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:47:10,755 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:47:10,755 - DEBUG - Request guid: be711d21-568b-4f2d-8fb7-598b3bf2c2dc
2025-01-18 18:47:10,755 - DEBUG - socket timeout: 60
2025-01-18 18:47:10,821 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=5b1883a8-4c53-4a7c-81f6-64894aeec69e&request_guid=be711d21-568b-4f2d-8fb7-598b3bf2c2dc HTTP/1.1" 200 1373
2025-01-18 18:47:10,821 - DEBUG - SUCCESS
2025-01-18 18:47:10,822 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:47:10,822 - DEBUG - ret[code] = None, after post request
2025-01-18 18:47:10,822 - DEBUG - Query id: 01b9ce0f-0002-4c71-0007-08ea00202132
2025-01-18 18:47:10,822 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247626221904, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 18:47:10,822 - DEBUG - Cache Entry: (0, 1737247626122761, 0)
2025-01-18 18:47:10,822 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247626221904, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 18:47:10,822 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:47:10,822 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:47:10,822 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:47:10,822 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:47:10,822 - DEBUG - Cache Entry: (0, 1737247626221904, 0)
2025-01-18 18:47:10,822 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:47:10,822 - DEBUG - sfqid: 01b9ce0f-0002-4c71-0007-08ea00202132
2025-01-18 18:47:10,822 - DEBUG - query execution done
2025-01-18 18:47:10,822 - DEBUG - SUCCESS
2025-01-18 18:47:10,822 - DEBUG - PUT OR GET: False
2025-01-18 18:47:10,822 - DEBUG - Query result format: arrow
2025-01-18 18:47:10,822 - INFO - Number of results in first chunk: 0
2025-01-18 18:47:10,823 - DEBUG - executing SQL/command
2025-01-18 18:47:10,823 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:47:10,823 - DEBUG - sequence counter: 74
2025-01-18 18:47:10,823 - DEBUG - Request id: 90535db3-aab9-4e50-af05-600eb6f7fcb0
2025-01-18 18:47:10,823 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:47:10,823 - DEBUG - is_file_transfer: True
2025-01-18 18:47:10,824 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:47:10,824 - DEBUG - _cmd_query
2025-01-18 18:47:10,824 - DEBUG - serialize_to_dict() called
2025-01-18 18:47:10,824 - DEBUG - Cache Entry: (0, 1737247626221904, 0)
2025-01-18 18:47:10,824 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247626221904, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 18:47:10,824 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[74], is_file_transfer=[False]
2025-01-18 18:47:10,824 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:47:10,825 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:47:10,825 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:47:10,825 - DEBUG - Request guid: 5318a18f-e040-47bc-8faf-39e3f37224db
2025-01-18 18:47:10,825 - DEBUG - socket timeout: 60
2025-01-18 18:47:10,926 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=90535db3-aab9-4e50-af05-600eb6f7fcb0&request_guid=5318a18f-e040-47bc-8faf-39e3f37224db HTTP/1.1" 200 2618
2025-01-18 18:47:10,927 - DEBUG - SUCCESS
2025-01-18 18:47:10,927 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:47:10,927 - DEBUG - ret[code] = None, after post request
2025-01-18 18:47:10,927 - DEBUG - Query id: 01b9ce0f-0002-4d87-0007-08ea001fe6b6
2025-01-18 18:47:10,928 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247626315552, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:47:10,928 - DEBUG - Cache Entry: (0, 1737247626221904, 0)
2025-01-18 18:47:10,928 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247626315552, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:47:10,928 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:47:10,928 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:47:10,928 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:47:10,928 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:47:10,928 - DEBUG - Cache Entry: (0, 1737247626315552, 0)
2025-01-18 18:47:10,928 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:47:10,928 - DEBUG - sfqid: 01b9ce0f-0002-4d87-0007-08ea001fe6b6
2025-01-18 18:47:10,928 - DEBUG - query execution done
2025-01-18 18:47:10,928 - DEBUG - SUCCESS
2025-01-18 18:47:10,928 - DEBUG - PUT OR GET: False
2025-01-18 18:47:10,928 - DEBUG - Query result format: arrow
2025-01-18 18:47:10,928 - INFO - Number of results in first chunk: 54
2025-01-18 18:47:10,928 - DEBUG - Execute query [queryID: 01b9ce0f-0002-4d87-0007-08ea001fe6b6]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:47:10,928 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:47:10,928 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:47:10,928 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:47:10,928 - DEBUG - Batches read: 0
2025-01-18 18:47:10,928 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:47:10,929 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:47:16,054 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:47:16,055 - INFO - Querying the server for client info
2025-01-18 18:47:16,055 - DEBUG - cursor
2025-01-18 18:47:16,055 - DEBUG - executing SQL/command
2025-01-18 18:47:16,055 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:47:16,055 - DEBUG - sequence counter: 75
2025-01-18 18:47:16,055 - DEBUG - Request id: df1ca7aa-fb44-48df-a24e-444b25ed226c
2025-01-18 18:47:16,055 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:47:16,055 - DEBUG - is_file_transfer: True
2025-01-18 18:47:16,055 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:47:16,055 - DEBUG - _cmd_query
2025-01-18 18:47:16,055 - DEBUG - serialize_to_dict() called
2025-01-18 18:47:16,055 - DEBUG - Cache Entry: (0, 1737247626315552, 0)
2025-01-18 18:47:16,055 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247626315552, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:47:16,055 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[75], is_file_transfer=[False]
2025-01-18 18:47:16,056 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:47:16,056 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:47:16,056 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:47:16,057 - DEBUG - Request guid: 95abdd71-f3a2-4d57-bf6a-6f728803953e
2025-01-18 18:47:16,057 - DEBUG - socket timeout: 60
2025-01-18 18:47:16,173 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=df1ca7aa-fb44-48df-a24e-444b25ed226c&request_guid=95abdd71-f3a2-4d57-bf6a-6f728803953e HTTP/1.1" 200 2617
2025-01-18 18:47:16,174 - DEBUG - SUCCESS
2025-01-18 18:47:16,174 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:47:16,174 - DEBUG - ret[code] = None, after post request
2025-01-18 18:47:16,174 - DEBUG - Query id: 01b9ce0f-0002-4c78-0007-08ea0020115e
2025-01-18 18:47:16,174 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247631554729, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:47:16,175 - DEBUG - Cache Entry: (0, 1737247626315552, 0)
2025-01-18 18:47:16,175 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247631554729, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:47:16,175 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:47:16,175 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:47:16,175 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:47:16,175 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:47:16,175 - DEBUG - Cache Entry: (0, 1737247631554729, 0)
2025-01-18 18:47:16,175 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:47:16,175 - DEBUG - sfqid: 01b9ce0f-0002-4c78-0007-08ea0020115e
2025-01-18 18:47:16,175 - DEBUG - query execution done
2025-01-18 18:47:16,175 - DEBUG - SUCCESS
2025-01-18 18:47:16,175 - DEBUG - PUT OR GET: False
2025-01-18 18:47:16,175 - DEBUG - Query result format: arrow
2025-01-18 18:47:16,175 - INFO - Number of results in first chunk: 1
2025-01-18 18:47:16,175 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:47:16,175 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:47:16,175 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:47:16,176 - DEBUG - Batches read: 0
2025-01-18 18:47:16,176 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:47:16,176 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:47:16,176 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:47:16,177 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:47:16,177 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:47:16,177 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:47:16,177 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:47:16,179 - DEBUG - cursor
2025-01-18 18:47:16,180 - DEBUG - executing SQL/command
2025-01-18 18:47:16,180 - DEBUG - query: [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:47:16,180 - DEBUG - sequence counter: 76
2025-01-18 18:47:16,180 - DEBUG - Request id: 93fa5448-e164-43ee-bfd2-6672dbc72fd1
2025-01-18 18:47:16,180 - DEBUG - running query [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:47:16,180 - DEBUG - is_file_transfer: True
2025-01-18 18:47:16,180 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:47:16,180 - DEBUG - _cmd_query
2025-01-18 18:47:16,180 - DEBUG - serialize_to_dict() called
2025-01-18 18:47:16,180 - DEBUG - Cache Entry: (0, 1737247631554729, 0)
2025-01-18 18:47:16,180 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247631554729, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:47:16,180 - DEBUG - sql=[SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...], sequence_id=[76], is_file_transfer=[False]
2025-01-18 18:47:16,181 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:47:16,182 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:47:16,182 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:47:16,182 - DEBUG - Request guid: 25c7d38e-9ad1-45c1-9595-7e651cd24987
2025-01-18 18:47:16,182 - DEBUG - socket timeout: 60
2025-01-18 18:47:18,129 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=93fa5448-e164-43ee-bfd2-6672dbc72fd1&request_guid=25c7d38e-9ad1-45c1-9595-7e651cd24987 HTTP/1.1" 200 5857
2025-01-18 18:47:18,131 - DEBUG - SUCCESS
2025-01-18 18:47:18,131 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:47:18,131 - DEBUG - ret[code] = None, after post request
2025-01-18 18:47:18,131 - DEBUG - Query id: 01b9ce0f-0002-4c71-0007-08ea00202136
2025-01-18 18:47:18,131 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247633504522, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 18:47:18,131 - DEBUG - Cache Entry: (0, 1737247631554729, 0)
2025-01-18 18:47:18,131 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247633504522, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 18:47:18,131 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:47:18,131 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:47:18,131 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:47:18,131 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:47:18,131 - DEBUG - Cache Entry: (0, 1737247633504522, 0)
2025-01-18 18:47:18,131 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:47:18,132 - DEBUG - sfqid: 01b9ce0f-0002-4c71-0007-08ea00202136
2025-01-18 18:47:18,132 - DEBUG - query execution done
2025-01-18 18:47:18,132 - DEBUG - SUCCESS
2025-01-18 18:47:18,132 - DEBUG - PUT OR GET: False
2025-01-18 18:47:18,132 - DEBUG - Query result format: arrow
2025-01-18 18:47:18,132 - INFO - Number of results in first chunk: 200
2025-01-18 18:47:18,132 - DEBUG - Execute query [queryID: 01b9ce0f-0002-4c71-0007-08ea00202136] 
        SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE 
        FROM DEV_DP_APP.MODELED.US_ADDRESS_LIST 
        WHERE CONTAINS(LOWER(LOCATION), LOWER('College Station, TX 77840'))
        LIMIT 200
        
2025-01-18 18:47:18,132 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:47:18,132 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:47:18,132 - DEBUG - Batches read: 1
2025-01-18 18:47:18,133 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:50:16,392 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:50:16,393 - INFO - Querying the server for client info
2025-01-18 18:50:16,393 - DEBUG - cursor
2025-01-18 18:50:16,393 - DEBUG - executing SQL/command
2025-01-18 18:50:16,393 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:50:16,393 - DEBUG - sequence counter: 77
2025-01-18 18:50:16,393 - DEBUG - Request id: 9fb4a661-3807-4c77-817b-528e19038a67
2025-01-18 18:50:16,393 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:50:16,393 - DEBUG - is_file_transfer: True
2025-01-18 18:50:16,393 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:50:16,393 - DEBUG - _cmd_query
2025-01-18 18:50:16,393 - DEBUG - serialize_to_dict() called
2025-01-18 18:50:16,394 - DEBUG - Cache Entry: (0, 1737247633504522, 0)
2025-01-18 18:50:16,394 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247633504522, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 18:50:16,394 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[77], is_file_transfer=[False]
2025-01-18 18:50:16,395 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:50:16,395 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:50:16,395 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:50:16,395 - DEBUG - Request guid: 8bb7a432-5672-4e90-b857-be7906ba48a4
2025-01-18 18:50:16,395 - DEBUG - socket timeout: 60
2025-01-18 18:50:16,396 - DEBUG - Resetting dropped connection: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:50:16,818 - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None
2025-01-18 18:50:16,819 - DEBUG - ocsp_response_cache_uri: file://C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 18:50:16,819 - DEBUG - OCSP_VALIDATION_CACHE size: 310
2025-01-18 18:50:16,819 - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 18:50:16,819 - DEBUG - OCSP dynamic cache server RETRY URL: None
2025-01-18 18:50:16,819 - DEBUG - validating certificate: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:50:16,819 - DEBUG - # of certificates: 4
2025-01-18 18:50:16,820 - DEBUG - subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:50:16,821 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:50:16,821 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:50:16,821 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:50:16,823 - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:50:16,824 - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])
2025-01-18 18:50:16,825 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:50:16,825 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:50:16,826 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:50:16,826 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:50:16,828 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 18:50:16,828 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:50:16,829 - DEBUG - ok
2025-01-18 18:50:16,940 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=9fb4a661-3807-4c77-817b-528e19038a67&request_guid=8bb7a432-5672-4e90-b857-be7906ba48a4 HTTP/1.1" 200 2618
2025-01-18 18:50:16,941 - DEBUG - SUCCESS
2025-01-18 18:50:16,941 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:50:16,941 - DEBUG - ret[code] = None, after post request
2025-01-18 18:50:16,941 - DEBUG - Query id: 01b9ce12-0002-4c79-0007-08ea00200242
2025-01-18 18:50:16,941 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247812330762, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:50:16,941 - DEBUG - Cache Entry: (0, 1737247633504522, 0)
2025-01-18 18:50:16,941 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247812330762, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:50:16,941 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:50:16,942 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:50:16,942 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:50:16,942 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:50:16,942 - DEBUG - Cache Entry: (0, 1737247812330762, 0)
2025-01-18 18:50:16,942 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:50:16,942 - DEBUG - sfqid: 01b9ce12-0002-4c79-0007-08ea00200242
2025-01-18 18:50:16,942 - DEBUG - query execution done
2025-01-18 18:50:16,942 - DEBUG - SUCCESS
2025-01-18 18:50:16,942 - DEBUG - PUT OR GET: False
2025-01-18 18:50:16,942 - DEBUG - Query result format: arrow
2025-01-18 18:50:16,942 - INFO - Number of results in first chunk: 1
2025-01-18 18:50:16,942 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:50:16,942 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:50:16,942 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:50:16,942 - DEBUG - Batches read: 0
2025-01-18 18:50:16,942 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:50:16,942 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:50:16,943 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:50:16,943 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:50:16,943 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:50:16,943 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:50:16,943 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:50:16,945 - DEBUG - cursor
2025-01-18 18:50:16,946 - DEBUG - executing SQL/command
2025-01-18 18:50:16,946 - DEBUG - query: [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:50:16,946 - DEBUG - sequence counter: 78
2025-01-18 18:50:16,946 - DEBUG - Request id: c213295f-f6c5-4301-a4be-d380cb42d24f
2025-01-18 18:50:16,946 - DEBUG - running query [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:50:16,946 - DEBUG - is_file_transfer: True
2025-01-18 18:50:16,946 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:50:16,946 - DEBUG - _cmd_query
2025-01-18 18:50:16,946 - DEBUG - serialize_to_dict() called
2025-01-18 18:50:16,946 - DEBUG - Cache Entry: (0, 1737247812330762, 0)
2025-01-18 18:50:16,946 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247812330762, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:50:16,946 - DEBUG - sql=[SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...], sequence_id=[78], is_file_transfer=[False]
2025-01-18 18:50:16,948 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:50:16,948 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:50:16,949 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:50:16,949 - DEBUG - Request guid: 07cf3ae1-fcb9-4d6c-a983-7b92cee76b8e
2025-01-18 18:50:16,949 - DEBUG - socket timeout: 60
2025-01-18 18:50:17,696 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=c213295f-f6c5-4301-a4be-d380cb42d24f&request_guid=07cf3ae1-fcb9-4d6c-a983-7b92cee76b8e HTTP/1.1" 200 6252
2025-01-18 18:50:17,697 - DEBUG - SUCCESS
2025-01-18 18:50:17,697 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:50:17,697 - DEBUG - ret[code] = None, after post request
2025-01-18 18:50:17,697 - DEBUG - Query id: 01b9ce12-0002-4d87-0007-08ea001fe6d6
2025-01-18 18:50:17,697 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247813037053, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:50:17,697 - DEBUG - Cache Entry: (0, 1737247812330762, 0)
2025-01-18 18:50:17,697 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247813037053, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:50:17,697 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:50:17,697 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:50:17,697 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:50:17,697 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:50:17,697 - DEBUG - Cache Entry: (0, 1737247813037053, 0)
2025-01-18 18:50:17,697 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:50:17,697 - DEBUG - sfqid: 01b9ce12-0002-4d87-0007-08ea001fe6d6
2025-01-18 18:50:17,698 - DEBUG - query execution done
2025-01-18 18:50:17,698 - DEBUG - SUCCESS
2025-01-18 18:50:17,698 - DEBUG - PUT OR GET: False
2025-01-18 18:50:17,698 - DEBUG - Query result format: arrow
2025-01-18 18:50:17,698 - INFO - Number of results in first chunk: 200
2025-01-18 18:50:17,698 - DEBUG - Execute query [queryID: 01b9ce12-0002-4d87-0007-08ea001fe6d6] 
        SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE 
        FROM DEV_DP_APP.MODELED.US_ADDRESS_LIST 
        WHERE CONTAINS(LOWER(LOCATION), LOWER('saint'))
        LIMIT 200
        
2025-01-18 18:50:17,698 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:50:17,698 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:50:17,698 - DEBUG - Batches read: 1
2025-01-18 18:50:17,699 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:51:03,891 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:51:03,891 - INFO - Querying the server for client info
2025-01-18 18:51:03,891 - DEBUG - cursor
2025-01-18 18:51:03,891 - DEBUG - executing SQL/command
2025-01-18 18:51:03,892 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:51:03,892 - DEBUG - sequence counter: 79
2025-01-18 18:51:03,892 - DEBUG - Request id: 7ee0f0c9-0ec4-4573-9e92-d57e01793e08
2025-01-18 18:51:03,892 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:51:03,892 - DEBUG - is_file_transfer: True
2025-01-18 18:51:03,892 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:03,892 - DEBUG - _cmd_query
2025-01-18 18:51:03,892 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:03,892 - DEBUG - Cache Entry: (0, 1737247813037053, 0)
2025-01-18 18:51:03,892 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247813037053, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:51:03,892 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[79], is_file_transfer=[False]
2025-01-18 18:51:03,893 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:03,893 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:03,893 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:03,893 - DEBUG - Request guid: 1f5312c7-1a18-47b9-ad5d-9f64f25baca6
2025-01-18 18:51:03,893 - DEBUG - socket timeout: 60
2025-01-18 18:51:04,020 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=7ee0f0c9-0ec4-4573-9e92-d57e01793e08&request_guid=1f5312c7-1a18-47b9-ad5d-9f64f25baca6 HTTP/1.1" 200 2618
2025-01-18 18:51:04,020 - DEBUG - SUCCESS
2025-01-18 18:51:04,020 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:04,021 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:04,021 - DEBUG - Query id: 01b9ce12-0002-4c71-0007-08ea0020214e
2025-01-18 18:51:04,021 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247859385813, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 18:51:04,021 - DEBUG - Cache Entry: (0, 1737247813037053, 0)
2025-01-18 18:51:04,021 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247859385813, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 18:51:04,021 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:04,021 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:04,021 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:04,021 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:04,021 - DEBUG - Cache Entry: (0, 1737247859385813, 0)
2025-01-18 18:51:04,021 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:04,021 - DEBUG - sfqid: 01b9ce12-0002-4c71-0007-08ea0020214e
2025-01-18 18:51:04,021 - DEBUG - query execution done
2025-01-18 18:51:04,021 - DEBUG - SUCCESS
2025-01-18 18:51:04,021 - DEBUG - PUT OR GET: False
2025-01-18 18:51:04,021 - DEBUG - Query result format: arrow
2025-01-18 18:51:04,021 - INFO - Number of results in first chunk: 1
2025-01-18 18:51:04,021 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:51:04,022 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:51:04,022 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:51:04,022 - DEBUG - Batches read: 0
2025-01-18 18:51:04,022 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:51:04,022 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:51:04,022 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:51:04,022 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:51:04,022 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:51:04,022 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:51:04,022 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:51:04,025 - DEBUG - cursor
2025-01-18 18:51:04,025 - DEBUG - executing SQL/command
2025-01-18 18:51:04,025 - DEBUG - query: [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:51:04,025 - DEBUG - sequence counter: 80
2025-01-18 18:51:04,026 - DEBUG - Request id: 2c110439-0534-435b-a8fc-2aa1ca7fa4dd
2025-01-18 18:51:04,026 - DEBUG - running query [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:51:04,026 - DEBUG - is_file_transfer: True
2025-01-18 18:51:04,026 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:04,026 - DEBUG - _cmd_query
2025-01-18 18:51:04,026 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:04,026 - DEBUG - Cache Entry: (0, 1737247859385813, 0)
2025-01-18 18:51:04,026 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247859385813, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 18:51:04,026 - DEBUG - sql=[SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...], sequence_id=[80], is_file_transfer=[False]
2025-01-18 18:51:04,027 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:04,027 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:04,027 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:04,027 - DEBUG - Request guid: 510cc6de-6f3b-4359-b802-5363edbe9904
2025-01-18 18:51:04,027 - DEBUG - socket timeout: 60
2025-01-18 18:51:04,176 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=2c110439-0534-435b-a8fc-2aa1ca7fa4dd&request_guid=510cc6de-6f3b-4359-b802-5363edbe9904 HTTP/1.1" 200 2122
2025-01-18 18:51:04,176 - DEBUG - SUCCESS
2025-01-18 18:51:04,177 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:04,177 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:04,177 - DEBUG - Query id: 01b9ce12-0002-4c78-0007-08ea00201182
2025-01-18 18:51:04,177 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247859551172, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:51:04,177 - DEBUG - Cache Entry: (0, 1737247859385813, 0)
2025-01-18 18:51:04,177 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247859551172, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:51:04,177 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:04,177 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:04,178 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:04,178 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:04,178 - DEBUG - Cache Entry: (0, 1737247859551172, 0)
2025-01-18 18:51:04,178 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:04,178 - DEBUG - sfqid: 01b9ce12-0002-4c78-0007-08ea00201182
2025-01-18 18:51:04,178 - DEBUG - query execution done
2025-01-18 18:51:04,178 - DEBUG - SUCCESS
2025-01-18 18:51:04,178 - DEBUG - PUT OR GET: False
2025-01-18 18:51:04,178 - DEBUG - Query result format: arrow
2025-01-18 18:51:04,178 - INFO - Number of results in first chunk: 1
2025-01-18 18:51:04,178 - DEBUG - Execute query [queryID: 01b9ce12-0002-4c78-0007-08ea00201182] 
        SELECT LOCATION, LATITUDE, LONGITUDE
        FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS 
        WHERE USER_ID = 'default_user'
        
2025-01-18 18:51:04,179 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:51:04,179 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:51:04,179 - DEBUG - Arrow chunk info: batchCount 1, columnCount 3, use_numpy: 0
2025-01-18 18:51:04,179 - DEBUG - Batches read: 0
2025-01-18 18:51:04,179 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:51:04,179 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:51:04,185 - DEBUG - executing SQL/command
2025-01-18 18:51:04,186 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:51:04,186 - DEBUG - sequence counter: 81
2025-01-18 18:51:04,186 - DEBUG - Request id: 7df291fd-9aa2-4060-8d2e-7d3566f2ea51
2025-01-18 18:51:04,186 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:51:04,186 - DEBUG - is_file_transfer: True
2025-01-18 18:51:04,186 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:04,186 - DEBUG - _cmd_query
2025-01-18 18:51:04,186 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:04,186 - DEBUG - Cache Entry: (0, 1737247859551172, 0)
2025-01-18 18:51:04,186 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247859551172, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:51:04,186 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[81], is_file_transfer=[False]
2025-01-18 18:51:04,188 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:04,188 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:04,188 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:04,188 - DEBUG - Request guid: c54dc325-e462-47a5-9492-ec16e40eee3b
2025-01-18 18:51:04,188 - DEBUG - socket timeout: 60
2025-01-18 18:51:04,243 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=7df291fd-9aa2-4060-8d2e-7d3566f2ea51&request_guid=c54dc325-e462-47a5-9492-ec16e40eee3b HTTP/1.1" 200 1502
2025-01-18 18:51:04,244 - DEBUG - SUCCESS
2025-01-18 18:51:04,244 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:04,244 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:04,244 - DEBUG - Query id: 01b9ce12-0002-4d87-0007-08ea001fe712
2025-01-18 18:51:04,245 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247859640757, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:51:04,245 - DEBUG - Cache Entry: (0, 1737247859551172, 0)
2025-01-18 18:51:04,245 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247859640757, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:51:04,245 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:04,245 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:04,245 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:04,245 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:04,245 - DEBUG - Cache Entry: (0, 1737247859640757, 0)
2025-01-18 18:51:04,245 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:04,245 - DEBUG - sfqid: 01b9ce12-0002-4d87-0007-08ea001fe712
2025-01-18 18:51:04,245 - DEBUG - query execution done
2025-01-18 18:51:04,245 - DEBUG - SUCCESS
2025-01-18 18:51:04,245 - DEBUG - PUT OR GET: False
2025-01-18 18:51:04,245 - DEBUG - Query result format: arrow
2025-01-18 18:51:04,246 - INFO - Number of results in first chunk: 0
2025-01-18 18:51:04,247 - DEBUG - executing SQL/command
2025-01-18 18:51:04,247 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:51:04,247 - DEBUG - sequence counter: 82
2025-01-18 18:51:04,247 - DEBUG - Request id: 354cd15f-e082-44c9-a17a-9f2ec0b65002
2025-01-18 18:51:04,247 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:51:04,247 - DEBUG - is_file_transfer: True
2025-01-18 18:51:04,247 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:04,247 - DEBUG - _cmd_query
2025-01-18 18:51:04,247 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:04,247 - DEBUG - Cache Entry: (0, 1737247859640757, 0)
2025-01-18 18:51:04,247 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247859640757, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:51:04,247 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[82], is_file_transfer=[False]
2025-01-18 18:51:04,249 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:04,250 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:04,250 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:04,250 - DEBUG - Request guid: f916154a-6cf1-478f-9eba-0f0f365b29c1
2025-01-18 18:51:04,250 - DEBUG - socket timeout: 60
2025-01-18 18:51:04,316 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=354cd15f-e082-44c9-a17a-9f2ec0b65002&request_guid=f916154a-6cf1-478f-9eba-0f0f365b29c1 HTTP/1.1" 200 1375
2025-01-18 18:51:04,316 - DEBUG - SUCCESS
2025-01-18 18:51:04,316 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:04,316 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:04,316 - DEBUG - Query id: 01b9ce12-0002-4c76-0007-08ea001fbf06
2025-01-18 18:51:04,317 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247859712891, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:51:04,317 - DEBUG - Cache Entry: (0, 1737247859640757, 0)
2025-01-18 18:51:04,317 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247859712891, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:51:04,317 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:04,317 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:04,317 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:04,317 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:04,317 - DEBUG - Cache Entry: (0, 1737247859712891, 0)
2025-01-18 18:51:04,317 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:04,317 - DEBUG - sfqid: 01b9ce12-0002-4c76-0007-08ea001fbf06
2025-01-18 18:51:04,317 - DEBUG - query execution done
2025-01-18 18:51:04,317 - DEBUG - SUCCESS
2025-01-18 18:51:04,317 - DEBUG - PUT OR GET: False
2025-01-18 18:51:04,317 - DEBUG - Query result format: arrow
2025-01-18 18:51:04,317 - INFO - Number of results in first chunk: 0
2025-01-18 18:51:04,318 - DEBUG - executing SQL/command
2025-01-18 18:51:04,318 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:51:04,318 - DEBUG - sequence counter: 83
2025-01-18 18:51:04,318 - DEBUG - Request id: 201da68c-7daa-417f-91fd-71230a7a680d
2025-01-18 18:51:04,318 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:51:04,318 - DEBUG - is_file_transfer: True
2025-01-18 18:51:04,318 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:04,318 - DEBUG - _cmd_query
2025-01-18 18:51:04,318 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:04,318 - DEBUG - Cache Entry: (0, 1737247859712891, 0)
2025-01-18 18:51:04,318 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247859712891, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:51:04,318 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[83], is_file_transfer=[False]
2025-01-18 18:51:04,319 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:04,319 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:04,319 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:04,319 - DEBUG - Request guid: 71968977-9e64-40af-85c2-61421265e2c9
2025-01-18 18:51:04,319 - DEBUG - socket timeout: 60
2025-01-18 18:51:04,380 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=201da68c-7daa-417f-91fd-71230a7a680d&request_guid=71968977-9e64-40af-85c2-61421265e2c9 HTTP/1.1" 200 1374
2025-01-18 18:51:04,381 - DEBUG - SUCCESS
2025-01-18 18:51:04,381 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:04,381 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:04,381 - DEBUG - Query id: 01b9ce12-0002-4c7a-0007-08ea001ff766
2025-01-18 18:51:04,381 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247859777911, 'priority': 0, 'context': 'COrjJA=='}]}
2025-01-18 18:51:04,381 - DEBUG - Cache Entry: (0, 1737247859712891, 0)
2025-01-18 18:51:04,381 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247859777911, 'priority': 0, 'context': 'COrjJA=='}
2025-01-18 18:51:04,381 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:04,381 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:04,381 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:04,381 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:04,381 - DEBUG - Cache Entry: (0, 1737247859777911, 0)
2025-01-18 18:51:04,381 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:04,381 - DEBUG - sfqid: 01b9ce12-0002-4c7a-0007-08ea001ff766
2025-01-18 18:51:04,382 - DEBUG - query execution done
2025-01-18 18:51:04,382 - DEBUG - SUCCESS
2025-01-18 18:51:04,382 - DEBUG - PUT OR GET: False
2025-01-18 18:51:04,382 - DEBUG - Query result format: arrow
2025-01-18 18:51:04,382 - INFO - Number of results in first chunk: 0
2025-01-18 18:51:04,382 - DEBUG - executing SQL/command
2025-01-18 18:51:04,382 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:51:04,383 - DEBUG - sequence counter: 84
2025-01-18 18:51:04,383 - DEBUG - Request id: 7ecec56d-31d7-4677-ba2f-0ddbe516636e
2025-01-18 18:51:04,383 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:51:04,383 - DEBUG - is_file_transfer: True
2025-01-18 18:51:04,383 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:04,383 - DEBUG - _cmd_query
2025-01-18 18:51:04,383 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:04,383 - DEBUG - Cache Entry: (0, 1737247859777911, 0)
2025-01-18 18:51:04,383 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247859777911, 'priority': 0, 'context': {'base64Data': 'COrjJA=='}}]}
2025-01-18 18:51:04,383 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[84], is_file_transfer=[False]
2025-01-18 18:51:04,384 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:04,384 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:04,384 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:04,384 - DEBUG - Request guid: 174790e1-75db-4fb6-8b92-5b1df976e478
2025-01-18 18:51:04,384 - DEBUG - socket timeout: 60
2025-01-18 18:51:04,491 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=7ecec56d-31d7-4677-ba2f-0ddbe516636e&request_guid=174790e1-75db-4fb6-8b92-5b1df976e478 HTTP/1.1" 200 2618
2025-01-18 18:51:04,492 - DEBUG - SUCCESS
2025-01-18 18:51:04,492 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:04,492 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:04,492 - DEBUG - Query id: 01b9ce12-0002-4c78-0007-08ea00201186
2025-01-18 18:51:04,492 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247859871905, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:51:04,493 - DEBUG - Cache Entry: (0, 1737247859777911, 0)
2025-01-18 18:51:04,493 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247859871905, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:51:04,493 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:04,493 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:04,493 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:04,493 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:04,493 - DEBUG - Cache Entry: (0, 1737247859871905, 0)
2025-01-18 18:51:04,493 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:04,493 - DEBUG - sfqid: 01b9ce12-0002-4c78-0007-08ea00201186
2025-01-18 18:51:04,493 - DEBUG - query execution done
2025-01-18 18:51:04,493 - DEBUG - SUCCESS
2025-01-18 18:51:04,493 - DEBUG - PUT OR GET: False
2025-01-18 18:51:04,493 - DEBUG - Query result format: arrow
2025-01-18 18:51:04,493 - INFO - Number of results in first chunk: 54
2025-01-18 18:51:04,493 - DEBUG - Execute query [queryID: 01b9ce12-0002-4c78-0007-08ea00201186]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:51:04,493 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:51:04,493 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:51:04,493 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:51:04,493 - DEBUG - Batches read: 0
2025-01-18 18:51:04,493 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:51:04,494 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:51:06,219 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:51:06,219 - INFO - Querying the server for client info
2025-01-18 18:51:06,220 - DEBUG - cursor
2025-01-18 18:51:06,220 - DEBUG - executing SQL/command
2025-01-18 18:51:06,220 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:51:06,220 - DEBUG - sequence counter: 85
2025-01-18 18:51:06,220 - DEBUG - Request id: 765b9d4c-aced-4bf1-a17c-5426aaef610a
2025-01-18 18:51:06,220 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:51:06,220 - DEBUG - is_file_transfer: True
2025-01-18 18:51:06,220 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:06,220 - DEBUG - _cmd_query
2025-01-18 18:51:06,220 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:06,220 - DEBUG - Cache Entry: (0, 1737247859871905, 0)
2025-01-18 18:51:06,220 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247859871905, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:51:06,220 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[85], is_file_transfer=[False]
2025-01-18 18:51:06,221 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:06,221 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:06,221 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:06,221 - DEBUG - Request guid: 49581063-4a87-4cd3-b776-407e776f48d9
2025-01-18 18:51:06,221 - DEBUG - socket timeout: 60
2025-01-18 18:51:06,345 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=765b9d4c-aced-4bf1-a17c-5426aaef610a&request_guid=49581063-4a87-4cd3-b776-407e776f48d9 HTTP/1.1" 200 2618
2025-01-18 18:51:06,345 - DEBUG - SUCCESS
2025-01-18 18:51:06,346 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:06,346 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:06,346 - DEBUG - Query id: 01b9ce13-0002-4c72-0007-08ea002030b6
2025-01-18 18:51:06,346 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247861743985, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:51:06,346 - DEBUG - Cache Entry: (0, 1737247859871905, 0)
2025-01-18 18:51:06,346 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247861743985, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:51:06,346 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:06,346 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:06,346 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:06,346 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:06,346 - DEBUG - Cache Entry: (0, 1737247861743985, 0)
2025-01-18 18:51:06,346 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:06,346 - DEBUG - sfqid: 01b9ce13-0002-4c72-0007-08ea002030b6
2025-01-18 18:51:06,346 - DEBUG - query execution done
2025-01-18 18:51:06,346 - DEBUG - SUCCESS
2025-01-18 18:51:06,346 - DEBUG - PUT OR GET: False
2025-01-18 18:51:06,346 - DEBUG - Query result format: arrow
2025-01-18 18:51:06,346 - INFO - Number of results in first chunk: 1
2025-01-18 18:51:06,346 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:51:06,346 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:51:06,347 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:51:06,347 - DEBUG - Batches read: 0
2025-01-18 18:51:06,347 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:51:06,347 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:51:06,347 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:51:06,347 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:51:06,347 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:51:06,347 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:51:06,347 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:51:06,350 - DEBUG - cursor
2025-01-18 18:51:06,350 - DEBUG - executing SQL/command
2025-01-18 18:51:06,350 - DEBUG - query: [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:51:06,351 - DEBUG - sequence counter: 86
2025-01-18 18:51:06,351 - DEBUG - Request id: d41dd891-cdf2-4f47-aa55-a63430236258
2025-01-18 18:51:06,351 - DEBUG - running query [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:51:06,351 - DEBUG - is_file_transfer: True
2025-01-18 18:51:06,351 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:06,351 - DEBUG - _cmd_query
2025-01-18 18:51:06,351 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:06,351 - DEBUG - Cache Entry: (0, 1737247861743985, 0)
2025-01-18 18:51:06,351 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247861743985, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:51:06,351 - DEBUG - sql=[SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...], sequence_id=[86], is_file_transfer=[False]
2025-01-18 18:51:06,353 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:06,354 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:06,354 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:06,354 - DEBUG - Request guid: a4d924d4-05b3-42c8-b5bd-15929d76fdc5
2025-01-18 18:51:06,354 - DEBUG - socket timeout: 60
2025-01-18 18:51:06,459 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=d41dd891-cdf2-4f47-aa55-a63430236258&request_guid=a4d924d4-05b3-42c8-b5bd-15929d76fdc5 HTTP/1.1" 200 5855
2025-01-18 18:51:06,459 - DEBUG - SUCCESS
2025-01-18 18:51:06,459 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:06,459 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:06,459 - DEBUG - Query id: 01b9ce13-0002-4c76-0007-08ea001fbf0a
2025-01-18 18:51:06,459 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247861818625, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:51:06,459 - DEBUG - Cache Entry: (0, 1737247861743985, 0)
2025-01-18 18:51:06,459 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247861818625, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:51:06,459 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:06,459 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:06,459 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:06,459 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:06,459 - DEBUG - Cache Entry: (0, 1737247861818625, 0)
2025-01-18 18:51:06,459 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:06,460 - DEBUG - sfqid: 01b9ce13-0002-4c76-0007-08ea001fbf0a
2025-01-18 18:51:06,460 - DEBUG - query execution done
2025-01-18 18:51:06,460 - DEBUG - SUCCESS
2025-01-18 18:51:06,460 - DEBUG - PUT OR GET: False
2025-01-18 18:51:06,460 - DEBUG - Query result format: arrow
2025-01-18 18:51:06,460 - INFO - Number of results in first chunk: 200
2025-01-18 18:51:06,460 - DEBUG - Execute query [queryID: 01b9ce13-0002-4c76-0007-08ea001fbf0a] 
        SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE 
        FROM DEV_DP_APP.MODELED.US_ADDRESS_LIST 
        WHERE CONTAINS(LOWER(LOCATION), LOWER('College Station, TX 77840'))
        LIMIT 200
        
2025-01-18 18:51:06,461 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:51:06,461 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:51:06,461 - DEBUG - Batches read: 1
2025-01-18 18:51:06,461 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:51:06,465 - DEBUG - executing SQL/command
2025-01-18 18:51:06,465 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:51:06,465 - DEBUG - sequence counter: 87
2025-01-18 18:51:06,465 - DEBUG - Request id: 5a92a8cc-a478-4242-bedc-d4ee60518833
2025-01-18 18:51:06,465 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:51:06,465 - DEBUG - is_file_transfer: True
2025-01-18 18:51:06,465 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:06,466 - DEBUG - _cmd_query
2025-01-18 18:51:06,466 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:06,466 - DEBUG - Cache Entry: (0, 1737247861818625, 0)
2025-01-18 18:51:06,466 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247861818625, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:51:06,466 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[87], is_file_transfer=[False]
2025-01-18 18:51:06,466 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:06,467 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:06,467 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:06,467 - DEBUG - Request guid: 275b7241-157e-4b79-bf4e-05ca8016cb84
2025-01-18 18:51:06,467 - DEBUG - socket timeout: 60
2025-01-18 18:51:06,540 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=5a92a8cc-a478-4242-bedc-d4ee60518833&request_guid=275b7241-157e-4b79-bf4e-05ca8016cb84 HTTP/1.1" 200 1501
2025-01-18 18:51:06,541 - DEBUG - SUCCESS
2025-01-18 18:51:06,541 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:06,541 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:06,541 - DEBUG - Query id: 01b9ce13-0002-4c70-0007-08ea00204056
2025-01-18 18:51:06,541 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247861916595, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:51:06,541 - DEBUG - Cache Entry: (0, 1737247861818625, 0)
2025-01-18 18:51:06,541 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247861916595, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:51:06,541 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:06,541 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:06,541 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:06,541 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:06,541 - DEBUG - Cache Entry: (0, 1737247861916595, 0)
2025-01-18 18:51:06,541 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:06,541 - DEBUG - sfqid: 01b9ce13-0002-4c70-0007-08ea00204056
2025-01-18 18:51:06,541 - DEBUG - query execution done
2025-01-18 18:51:06,541 - DEBUG - SUCCESS
2025-01-18 18:51:06,541 - DEBUG - PUT OR GET: False
2025-01-18 18:51:06,541 - DEBUG - Query result format: arrow
2025-01-18 18:51:06,542 - INFO - Number of results in first chunk: 0
2025-01-18 18:51:06,543 - DEBUG - executing SQL/command
2025-01-18 18:51:06,543 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:51:06,543 - DEBUG - sequence counter: 88
2025-01-18 18:51:06,543 - DEBUG - Request id: 30bc18ec-a389-45d8-aa6f-fda5b14f0eb4
2025-01-18 18:51:06,543 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:51:06,543 - DEBUG - is_file_transfer: True
2025-01-18 18:51:06,543 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:06,543 - DEBUG - _cmd_query
2025-01-18 18:51:06,543 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:06,543 - DEBUG - Cache Entry: (0, 1737247861916595, 0)
2025-01-18 18:51:06,543 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247861916595, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:51:06,543 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[88], is_file_transfer=[False]
2025-01-18 18:51:06,544 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:06,544 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:06,544 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:06,544 - DEBUG - Request guid: 2aa7fe87-672e-4542-af86-e057cc385e5f
2025-01-18 18:51:06,544 - DEBUG - socket timeout: 60
2025-01-18 18:51:06,609 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=30bc18ec-a389-45d8-aa6f-fda5b14f0eb4&request_guid=2aa7fe87-672e-4542-af86-e057cc385e5f HTTP/1.1" 200 1374
2025-01-18 18:51:06,609 - DEBUG - SUCCESS
2025-01-18 18:51:06,609 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:06,609 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:06,609 - DEBUG - Query id: 01b9ce13-0002-4c76-0007-08ea001fbf0e
2025-01-18 18:51:06,610 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247862010384, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:51:06,610 - DEBUG - Cache Entry: (0, 1737247861916595, 0)
2025-01-18 18:51:06,610 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247862010384, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:51:06,610 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:06,610 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:06,610 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:06,610 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:06,610 - DEBUG - Cache Entry: (0, 1737247862010384, 0)
2025-01-18 18:51:06,610 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:06,611 - DEBUG - sfqid: 01b9ce13-0002-4c76-0007-08ea001fbf0e
2025-01-18 18:51:06,611 - DEBUG - query execution done
2025-01-18 18:51:06,611 - DEBUG - SUCCESS
2025-01-18 18:51:06,611 - DEBUG - PUT OR GET: False
2025-01-18 18:51:06,611 - DEBUG - Query result format: arrow
2025-01-18 18:51:06,611 - INFO - Number of results in first chunk: 0
2025-01-18 18:51:06,611 - DEBUG - executing SQL/command
2025-01-18 18:51:06,611 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:51:06,611 - DEBUG - sequence counter: 89
2025-01-18 18:51:06,611 - DEBUG - Request id: 2a94591d-5edf-4beb-80b6-97ac1d64875f
2025-01-18 18:51:06,611 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:51:06,612 - DEBUG - is_file_transfer: True
2025-01-18 18:51:06,612 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:06,612 - DEBUG - _cmd_query
2025-01-18 18:51:06,612 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:06,612 - DEBUG - Cache Entry: (0, 1737247862010384, 0)
2025-01-18 18:51:06,612 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247862010384, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:51:06,612 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[89], is_file_transfer=[False]
2025-01-18 18:51:06,613 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:06,614 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:06,614 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:06,614 - DEBUG - Request guid: 9f8abdd6-098a-4529-ba8c-e5b6dcea360f
2025-01-18 18:51:06,614 - DEBUG - socket timeout: 60
2025-01-18 18:51:06,690 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=2a94591d-5edf-4beb-80b6-97ac1d64875f&request_guid=9f8abdd6-098a-4529-ba8c-e5b6dcea360f HTTP/1.1" 200 1374
2025-01-18 18:51:06,691 - DEBUG - SUCCESS
2025-01-18 18:51:06,691 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:06,691 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:06,691 - DEBUG - Query id: 01b9ce13-0002-4c5d-0007-08ea001fce32
2025-01-18 18:51:06,691 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247862087461, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:51:06,691 - DEBUG - Cache Entry: (0, 1737247862010384, 0)
2025-01-18 18:51:06,691 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247862087461, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:51:06,691 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:06,691 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:06,691 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:06,691 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:06,691 - DEBUG - Cache Entry: (0, 1737247862087461, 0)
2025-01-18 18:51:06,691 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:06,692 - DEBUG - sfqid: 01b9ce13-0002-4c5d-0007-08ea001fce32
2025-01-18 18:51:06,692 - DEBUG - query execution done
2025-01-18 18:51:06,692 - DEBUG - SUCCESS
2025-01-18 18:51:06,692 - DEBUG - PUT OR GET: False
2025-01-18 18:51:06,692 - DEBUG - Query result format: arrow
2025-01-18 18:51:06,692 - INFO - Number of results in first chunk: 0
2025-01-18 18:51:06,692 - DEBUG - executing SQL/command
2025-01-18 18:51:06,692 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:51:06,693 - DEBUG - sequence counter: 90
2025-01-18 18:51:06,693 - DEBUG - Request id: 29453838-6121-4cd9-ac3f-5a4ddd75e99b
2025-01-18 18:51:06,693 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:51:06,693 - DEBUG - is_file_transfer: True
2025-01-18 18:51:06,693 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:06,693 - DEBUG - _cmd_query
2025-01-18 18:51:06,693 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:06,693 - DEBUG - Cache Entry: (0, 1737247862087461, 0)
2025-01-18 18:51:06,693 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247862087461, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:51:06,693 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[90], is_file_transfer=[False]
2025-01-18 18:51:06,693 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:06,694 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:06,694 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:06,694 - DEBUG - Request guid: ccb0c90d-a8c2-41d9-9ff7-ea9f7e787ebe
2025-01-18 18:51:06,694 - DEBUG - socket timeout: 60
2025-01-18 18:51:06,812 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=29453838-6121-4cd9-ac3f-5a4ddd75e99b&request_guid=ccb0c90d-a8c2-41d9-9ff7-ea9f7e787ebe HTTP/1.1" 200 2618
2025-01-18 18:51:06,812 - DEBUG - SUCCESS
2025-01-18 18:51:06,812 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:06,812 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:06,812 - DEBUG - Query id: 01b9ce13-0002-4c72-0007-08ea002030ba
2025-01-18 18:51:06,812 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247862176719, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:51:06,812 - DEBUG - Cache Entry: (0, 1737247862087461, 0)
2025-01-18 18:51:06,812 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247862176719, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:51:06,812 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:06,812 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:06,812 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:06,812 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:06,812 - DEBUG - Cache Entry: (0, 1737247862176719, 0)
2025-01-18 18:51:06,813 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:06,813 - DEBUG - sfqid: 01b9ce13-0002-4c72-0007-08ea002030ba
2025-01-18 18:51:06,813 - DEBUG - query execution done
2025-01-18 18:51:06,813 - DEBUG - SUCCESS
2025-01-18 18:51:06,813 - DEBUG - PUT OR GET: False
2025-01-18 18:51:06,813 - DEBUG - Query result format: arrow
2025-01-18 18:51:06,813 - INFO - Number of results in first chunk: 54
2025-01-18 18:51:06,813 - DEBUG - Execute query [queryID: 01b9ce13-0002-4c72-0007-08ea002030ba]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:51:06,813 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:51:06,813 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:51:06,813 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:51:06,813 - DEBUG - Batches read: 0
2025-01-18 18:51:06,813 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:51:06,813 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:51:15,727 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:51:15,727 - INFO - Querying the server for client info
2025-01-18 18:51:15,727 - DEBUG - cursor
2025-01-18 18:51:15,727 - DEBUG - executing SQL/command
2025-01-18 18:51:15,728 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:51:15,728 - DEBUG - sequence counter: 91
2025-01-18 18:51:15,728 - DEBUG - Request id: 897066c7-d03d-4f36-85d6-3521209d9258
2025-01-18 18:51:15,728 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:51:15,728 - DEBUG - is_file_transfer: True
2025-01-18 18:51:15,728 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:15,728 - DEBUG - _cmd_query
2025-01-18 18:51:15,728 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:15,728 - DEBUG - Cache Entry: (0, 1737247862176719, 0)
2025-01-18 18:51:15,728 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247862176719, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:51:15,728 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[91], is_file_transfer=[False]
2025-01-18 18:51:15,729 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:15,730 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:15,730 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:15,730 - DEBUG - Request guid: 5ea0053a-5511-4e70-9425-f17060aaee03
2025-01-18 18:51:15,730 - DEBUG - socket timeout: 60
2025-01-18 18:51:15,834 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=897066c7-d03d-4f36-85d6-3521209d9258&request_guid=5ea0053a-5511-4e70-9425-f17060aaee03 HTTP/1.1" 200 2617
2025-01-18 18:51:15,835 - DEBUG - SUCCESS
2025-01-18 18:51:15,835 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:15,835 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:15,835 - DEBUG - Query id: 01b9ce13-0002-4c72-0007-08ea002030be
2025-01-18 18:51:15,835 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247871215294, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:51:15,835 - DEBUG - Cache Entry: (0, 1737247862176719, 0)
2025-01-18 18:51:15,835 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247871215294, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:51:15,835 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:15,835 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:15,835 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:15,835 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:15,835 - DEBUG - Cache Entry: (0, 1737247871215294, 0)
2025-01-18 18:51:15,835 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:15,835 - DEBUG - sfqid: 01b9ce13-0002-4c72-0007-08ea002030be
2025-01-18 18:51:15,835 - DEBUG - query execution done
2025-01-18 18:51:15,835 - DEBUG - SUCCESS
2025-01-18 18:51:15,835 - DEBUG - PUT OR GET: False
2025-01-18 18:51:15,836 - DEBUG - Query result format: arrow
2025-01-18 18:51:15,836 - INFO - Number of results in first chunk: 1
2025-01-18 18:51:15,836 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:51:15,836 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:51:15,836 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:51:15,836 - DEBUG - Batches read: 0
2025-01-18 18:51:15,836 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:51:15,836 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:51:15,836 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:51:15,836 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:51:15,836 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:51:15,836 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:51:15,836 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:51:15,840 - DEBUG - cursor
2025-01-18 18:51:15,841 - DEBUG - executing SQL/command
2025-01-18 18:51:15,841 - DEBUG - query: [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:51:15,841 - DEBUG - sequence counter: 92
2025-01-18 18:51:15,841 - DEBUG - Request id: 474da0d9-ccfb-46e2-a68e-9e2fa921074a
2025-01-18 18:51:15,841 - DEBUG - running query [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:51:15,841 - DEBUG - is_file_transfer: True
2025-01-18 18:51:15,841 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:15,841 - DEBUG - _cmd_query
2025-01-18 18:51:15,841 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:15,841 - DEBUG - Cache Entry: (0, 1737247871215294, 0)
2025-01-18 18:51:15,841 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247871215294, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:51:15,841 - DEBUG - sql=[SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...], sequence_id=[92], is_file_transfer=[False]
2025-01-18 18:51:15,843 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:15,843 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:15,843 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:15,843 - DEBUG - Request guid: c769a599-3f5d-4f93-a2f6-8cabced65ecc
2025-01-18 18:51:15,843 - DEBUG - socket timeout: 60
2025-01-18 18:51:17,459 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=474da0d9-ccfb-46e2-a68e-9e2fa921074a&request_guid=c769a599-3f5d-4f93-a2f6-8cabced65ecc HTTP/1.1" 200 5996
2025-01-18 18:51:17,460 - DEBUG - SUCCESS
2025-01-18 18:51:17,460 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:17,460 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:17,460 - DEBUG - Query id: 01b9ce13-0002-4c79-0007-08ea00200252
2025-01-18 18:51:17,460 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247872854286, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:51:17,460 - DEBUG - Cache Entry: (0, 1737247871215294, 0)
2025-01-18 18:51:17,460 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247872854286, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:51:17,460 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:17,460 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:17,460 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:17,460 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:17,460 - DEBUG - Cache Entry: (0, 1737247872854286, 0)
2025-01-18 18:51:17,460 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:17,460 - DEBUG - sfqid: 01b9ce13-0002-4c79-0007-08ea00200252
2025-01-18 18:51:17,460 - DEBUG - query execution done
2025-01-18 18:51:17,460 - DEBUG - SUCCESS
2025-01-18 18:51:17,460 - DEBUG - PUT OR GET: False
2025-01-18 18:51:17,461 - DEBUG - Query result format: arrow
2025-01-18 18:51:17,461 - INFO - Number of results in first chunk: 200
2025-01-18 18:51:17,461 - DEBUG - Execute query [queryID: 01b9ce13-0002-4c79-0007-08ea00200252] 
        SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE 
        FROM DEV_DP_APP.MODELED.US_ADDRESS_LIST 
        WHERE CONTAINS(LOWER(LOCATION), LOWER('saint paul'))
        LIMIT 200
        
2025-01-18 18:51:17,461 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:51:17,461 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:51:17,461 - DEBUG - Batches read: 1
2025-01-18 18:51:17,462 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:51:17,466 - DEBUG - executing SQL/command
2025-01-18 18:51:17,466 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:51:17,466 - DEBUG - sequence counter: 93
2025-01-18 18:51:17,466 - DEBUG - Request id: ca77a960-63c2-4fc8-8ad2-88bea567a6ad
2025-01-18 18:51:17,466 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:51:17,466 - DEBUG - is_file_transfer: True
2025-01-18 18:51:17,466 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:17,466 - DEBUG - _cmd_query
2025-01-18 18:51:17,466 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:17,466 - DEBUG - Cache Entry: (0, 1737247872854286, 0)
2025-01-18 18:51:17,466 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247872854286, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:51:17,466 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[93], is_file_transfer=[False]
2025-01-18 18:51:17,467 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:17,467 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:17,467 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:17,467 - DEBUG - Request guid: fcfd5501-e935-4790-8f42-8fa900f917f6
2025-01-18 18:51:17,467 - DEBUG - socket timeout: 60
2025-01-18 18:51:17,530 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=ca77a960-63c2-4fc8-8ad2-88bea567a6ad&request_guid=fcfd5501-e935-4790-8f42-8fa900f917f6 HTTP/1.1" 200 1504
2025-01-18 18:51:17,530 - DEBUG - SUCCESS
2025-01-18 18:51:17,531 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:17,531 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:17,531 - DEBUG - Query id: 01b9ce13-0002-4c5d-0007-08ea001fce36
2025-01-18 18:51:17,531 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247872930986, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:51:17,531 - DEBUG - Cache Entry: (0, 1737247872854286, 0)
2025-01-18 18:51:17,531 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247872930986, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:51:17,531 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:17,531 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:17,531 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:17,531 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:17,531 - DEBUG - Cache Entry: (0, 1737247872930986, 0)
2025-01-18 18:51:17,531 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:17,531 - DEBUG - sfqid: 01b9ce13-0002-4c5d-0007-08ea001fce36
2025-01-18 18:51:17,531 - DEBUG - query execution done
2025-01-18 18:51:17,531 - DEBUG - SUCCESS
2025-01-18 18:51:17,531 - DEBUG - PUT OR GET: False
2025-01-18 18:51:17,531 - DEBUG - Query result format: arrow
2025-01-18 18:51:17,531 - INFO - Number of results in first chunk: 0
2025-01-18 18:51:17,532 - DEBUG - executing SQL/command
2025-01-18 18:51:17,532 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:51:17,532 - DEBUG - sequence counter: 94
2025-01-18 18:51:17,532 - DEBUG - Request id: 1b4a67d2-1731-4131-80a0-337d4542c88c
2025-01-18 18:51:17,532 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:51:17,533 - DEBUG - is_file_transfer: True
2025-01-18 18:51:17,533 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:17,533 - DEBUG - _cmd_query
2025-01-18 18:51:17,533 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:17,533 - DEBUG - Cache Entry: (0, 1737247872930986, 0)
2025-01-18 18:51:17,533 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247872930986, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:51:17,533 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[94], is_file_transfer=[False]
2025-01-18 18:51:17,533 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:17,534 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:17,534 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:17,534 - DEBUG - Request guid: 14b6c563-a79a-498e-8517-c2476dc49755
2025-01-18 18:51:17,534 - DEBUG - socket timeout: 60
2025-01-18 18:51:17,604 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=1b4a67d2-1731-4131-80a0-337d4542c88c&request_guid=14b6c563-a79a-498e-8517-c2476dc49755 HTTP/1.1" 200 1374
2025-01-18 18:51:17,605 - DEBUG - SUCCESS
2025-01-18 18:51:17,605 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:17,605 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:17,605 - DEBUG - Query id: 01b9ce13-0002-4d87-0007-08ea001fe716
2025-01-18 18:51:17,605 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247872987426, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:51:17,605 - DEBUG - Cache Entry: (0, 1737247872930986, 0)
2025-01-18 18:51:17,605 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247872987426, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:51:17,605 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:17,605 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:17,605 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:17,605 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:17,605 - DEBUG - Cache Entry: (0, 1737247872987426, 0)
2025-01-18 18:51:17,605 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:17,605 - DEBUG - sfqid: 01b9ce13-0002-4d87-0007-08ea001fe716
2025-01-18 18:51:17,605 - DEBUG - query execution done
2025-01-18 18:51:17,606 - DEBUG - SUCCESS
2025-01-18 18:51:17,606 - DEBUG - PUT OR GET: False
2025-01-18 18:51:17,606 - DEBUG - Query result format: arrow
2025-01-18 18:51:17,606 - INFO - Number of results in first chunk: 0
2025-01-18 18:51:17,606 - DEBUG - executing SQL/command
2025-01-18 18:51:17,606 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:51:17,607 - DEBUG - sequence counter: 95
2025-01-18 18:51:17,607 - DEBUG - Request id: f6bd3746-b2e8-4f17-9add-b38fd811e177
2025-01-18 18:51:17,607 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:51:17,607 - DEBUG - is_file_transfer: True
2025-01-18 18:51:17,607 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:17,607 - DEBUG - _cmd_query
2025-01-18 18:51:17,607 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:17,607 - DEBUG - Cache Entry: (0, 1737247872987426, 0)
2025-01-18 18:51:17,607 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247872987426, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:51:17,607 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[95], is_file_transfer=[False]
2025-01-18 18:51:17,607 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:17,607 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:17,607 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:17,607 - DEBUG - Request guid: ceb25e09-b9ee-4428-80eb-b9aa7b860068
2025-01-18 18:51:17,607 - DEBUG - socket timeout: 60
2025-01-18 18:51:17,674 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=f6bd3746-b2e8-4f17-9add-b38fd811e177&request_guid=ceb25e09-b9ee-4428-80eb-b9aa7b860068 HTTP/1.1" 200 1373
2025-01-18 18:51:17,674 - DEBUG - SUCCESS
2025-01-18 18:51:17,674 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:17,674 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:17,674 - DEBUG - Query id: 01b9ce13-0002-4c70-0007-08ea0020405a
2025-01-18 18:51:17,674 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247873062351, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:51:17,674 - DEBUG - Cache Entry: (0, 1737247872987426, 0)
2025-01-18 18:51:17,674 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247873062351, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:51:17,674 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:17,674 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:17,675 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:17,675 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:17,675 - DEBUG - Cache Entry: (0, 1737247873062351, 0)
2025-01-18 18:51:17,675 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:17,675 - DEBUG - sfqid: 01b9ce13-0002-4c70-0007-08ea0020405a
2025-01-18 18:51:17,675 - DEBUG - query execution done
2025-01-18 18:51:17,675 - DEBUG - SUCCESS
2025-01-18 18:51:17,675 - DEBUG - PUT OR GET: False
2025-01-18 18:51:17,675 - DEBUG - Query result format: arrow
2025-01-18 18:51:17,675 - INFO - Number of results in first chunk: 0
2025-01-18 18:51:17,676 - DEBUG - executing SQL/command
2025-01-18 18:51:17,676 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:51:17,676 - DEBUG - sequence counter: 96
2025-01-18 18:51:17,676 - DEBUG - Request id: 82e6e5dd-4fdb-4202-9b65-6a1eb7054393
2025-01-18 18:51:17,676 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:51:17,676 - DEBUG - is_file_transfer: True
2025-01-18 18:51:17,676 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:17,676 - DEBUG - _cmd_query
2025-01-18 18:51:17,676 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:17,676 - DEBUG - Cache Entry: (0, 1737247873062351, 0)
2025-01-18 18:51:17,676 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247873062351, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:51:17,676 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[96], is_file_transfer=[False]
2025-01-18 18:51:17,677 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:17,677 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:17,677 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:17,677 - DEBUG - Request guid: 4483036a-9025-49bc-9046-a80aa86f03cc
2025-01-18 18:51:17,677 - DEBUG - socket timeout: 60
2025-01-18 18:51:17,754 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=82e6e5dd-4fdb-4202-9b65-6a1eb7054393&request_guid=4483036a-9025-49bc-9046-a80aa86f03cc HTTP/1.1" 200 2618
2025-01-18 18:51:17,754 - DEBUG - SUCCESS
2025-01-18 18:51:17,754 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:17,754 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:17,754 - DEBUG - Query id: 01b9ce13-0002-4d87-0007-08ea001fe71a
2025-01-18 18:51:17,755 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247873156972, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:51:17,755 - DEBUG - Cache Entry: (0, 1737247873062351, 0)
2025-01-18 18:51:17,755 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247873156972, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:51:17,755 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:17,755 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:17,755 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:17,755 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:17,755 - DEBUG - Cache Entry: (0, 1737247873156972, 0)
2025-01-18 18:51:17,755 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:17,755 - DEBUG - sfqid: 01b9ce13-0002-4d87-0007-08ea001fe71a
2025-01-18 18:51:17,755 - DEBUG - query execution done
2025-01-18 18:51:17,755 - DEBUG - SUCCESS
2025-01-18 18:51:17,755 - DEBUG - PUT OR GET: False
2025-01-18 18:51:17,755 - DEBUG - Query result format: arrow
2025-01-18 18:51:17,755 - INFO - Number of results in first chunk: 54
2025-01-18 18:51:17,756 - DEBUG - Execute query [queryID: 01b9ce13-0002-4d87-0007-08ea001fe71a]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:51:17,756 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:51:17,756 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:51:17,756 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:51:17,756 - DEBUG - Batches read: 0
2025-01-18 18:51:17,756 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:51:17,756 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:51:24,432 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:51:24,432 - INFO - Querying the server for client info
2025-01-18 18:51:24,433 - DEBUG - cursor
2025-01-18 18:51:24,433 - DEBUG - executing SQL/command
2025-01-18 18:51:24,433 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:51:24,433 - DEBUG - sequence counter: 97
2025-01-18 18:51:24,433 - DEBUG - Request id: 4414d3e7-003f-434c-925c-ef5829d448bf
2025-01-18 18:51:24,433 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:51:24,433 - DEBUG - is_file_transfer: True
2025-01-18 18:51:24,433 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:24,434 - DEBUG - _cmd_query
2025-01-18 18:51:24,434 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:24,434 - DEBUG - Cache Entry: (0, 1737247873156972, 0)
2025-01-18 18:51:24,434 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247873156972, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:51:24,434 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[97], is_file_transfer=[False]
2025-01-18 18:51:24,434 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:24,435 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:24,435 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:24,435 - DEBUG - Request guid: 24573e79-b974-4606-8a73-27b2d0914221
2025-01-18 18:51:24,435 - DEBUG - socket timeout: 60
2025-01-18 18:51:24,564 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=4414d3e7-003f-434c-925c-ef5829d448bf&request_guid=24573e79-b974-4606-8a73-27b2d0914221 HTTP/1.1" 200 2618
2025-01-18 18:51:24,565 - DEBUG - SUCCESS
2025-01-18 18:51:24,565 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:24,565 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:24,565 - DEBUG - Query id: 01b9ce13-0002-4c78-0007-08ea0020118e
2025-01-18 18:51:24,565 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247879933977, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:51:24,565 - DEBUG - Cache Entry: (0, 1737247873156972, 0)
2025-01-18 18:51:24,565 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247879933977, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:51:24,565 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:24,565 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:24,565 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:24,565 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:24,565 - DEBUG - Cache Entry: (0, 1737247879933977, 0)
2025-01-18 18:51:24,565 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:24,566 - DEBUG - sfqid: 01b9ce13-0002-4c78-0007-08ea0020118e
2025-01-18 18:51:24,566 - DEBUG - query execution done
2025-01-18 18:51:24,566 - DEBUG - SUCCESS
2025-01-18 18:51:24,566 - DEBUG - PUT OR GET: False
2025-01-18 18:51:24,566 - DEBUG - Query result format: arrow
2025-01-18 18:51:24,566 - INFO - Number of results in first chunk: 1
2025-01-18 18:51:24,566 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:51:24,566 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:51:24,566 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:51:24,566 - DEBUG - Batches read: 0
2025-01-18 18:51:24,566 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:51:24,566 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:51:24,566 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:51:24,567 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:51:24,567 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:51:24,567 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:51:24,567 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:51:24,570 - DEBUG - cursor
2025-01-18 18:51:24,570 - DEBUG - executing SQL/command
2025-01-18 18:51:24,570 - DEBUG - query: [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:51:24,570 - DEBUG - sequence counter: 98
2025-01-18 18:51:24,570 - DEBUG - Request id: 3effd58c-9b4c-4fca-97df-de33b885f774
2025-01-18 18:51:24,570 - DEBUG - running query [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:51:24,570 - DEBUG - is_file_transfer: True
2025-01-18 18:51:24,570 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:24,570 - DEBUG - _cmd_query
2025-01-18 18:51:24,570 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:24,570 - DEBUG - Cache Entry: (0, 1737247879933977, 0)
2025-01-18 18:51:24,570 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247879933977, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:51:24,570 - DEBUG - sql=[SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...], sequence_id=[98], is_file_transfer=[False]
2025-01-18 18:51:24,573 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:24,573 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:24,574 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:24,574 - DEBUG - Request guid: 157ebe27-d329-4ed9-ab01-2176f52272e1
2025-01-18 18:51:24,574 - DEBUG - socket timeout: 60
2025-01-18 18:51:24,673 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=3effd58c-9b4c-4fca-97df-de33b885f774&request_guid=157ebe27-d329-4ed9-ab01-2176f52272e1 HTTP/1.1" 200 5996
2025-01-18 18:51:24,674 - DEBUG - SUCCESS
2025-01-18 18:51:24,674 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:24,674 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:24,674 - DEBUG - Query id: 01b9ce13-0002-4c7a-0007-08ea001ff76a
2025-01-18 18:51:24,674 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247880070886, 'priority': 0, 'context': 'COrjJA=='}]}
2025-01-18 18:51:24,674 - DEBUG - Cache Entry: (0, 1737247879933977, 0)
2025-01-18 18:51:24,674 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247880070886, 'priority': 0, 'context': 'COrjJA=='}
2025-01-18 18:51:24,674 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:24,674 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:24,674 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:24,674 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:24,675 - DEBUG - Cache Entry: (0, 1737247880070886, 0)
2025-01-18 18:51:24,675 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:24,675 - DEBUG - sfqid: 01b9ce13-0002-4c7a-0007-08ea001ff76a
2025-01-18 18:51:24,675 - DEBUG - query execution done
2025-01-18 18:51:24,675 - DEBUG - SUCCESS
2025-01-18 18:51:24,675 - DEBUG - PUT OR GET: False
2025-01-18 18:51:24,675 - DEBUG - Query result format: arrow
2025-01-18 18:51:24,675 - INFO - Number of results in first chunk: 200
2025-01-18 18:51:24,675 - DEBUG - Execute query [queryID: 01b9ce13-0002-4c7a-0007-08ea001ff76a] 
        SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE 
        FROM DEV_DP_APP.MODELED.US_ADDRESS_LIST 
        WHERE CONTAINS(LOWER(LOCATION), LOWER('saint paul'))
        LIMIT 200
        
2025-01-18 18:51:24,675 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:51:24,675 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:51:24,676 - DEBUG - Batches read: 1
2025-01-18 18:51:24,676 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:51:24,681 - DEBUG - executing SQL/command
2025-01-18 18:51:24,681 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:51:24,681 - DEBUG - sequence counter: 99
2025-01-18 18:51:24,681 - DEBUG - Request id: 876720ef-c372-4054-867f-f80ee4dd2995
2025-01-18 18:51:24,681 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:51:24,681 - DEBUG - is_file_transfer: True
2025-01-18 18:51:24,681 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:24,681 - DEBUG - _cmd_query
2025-01-18 18:51:24,681 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:24,681 - DEBUG - Cache Entry: (0, 1737247880070886, 0)
2025-01-18 18:51:24,681 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247880070886, 'priority': 0, 'context': {'base64Data': 'COrjJA=='}}]}
2025-01-18 18:51:24,681 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[99], is_file_transfer=[False]
2025-01-18 18:51:24,682 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:24,682 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:24,682 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:24,683 - DEBUG - Request guid: 7162eb63-2eeb-4556-9732-4d9c3231b80d
2025-01-18 18:51:24,683 - DEBUG - socket timeout: 60
2025-01-18 18:51:24,743 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=876720ef-c372-4054-867f-f80ee4dd2995&request_guid=7162eb63-2eeb-4556-9732-4d9c3231b80d HTTP/1.1" 200 1503
2025-01-18 18:51:24,744 - DEBUG - SUCCESS
2025-01-18 18:51:24,744 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:24,744 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:24,745 - DEBUG - Query id: 01b9ce13-0002-4c7a-0007-08ea001ff76e
2025-01-18 18:51:24,745 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247880120581, 'priority': 0, 'context': 'COrjJA=='}]}
2025-01-18 18:51:24,745 - DEBUG - Cache Entry: (0, 1737247880070886, 0)
2025-01-18 18:51:24,745 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247880120581, 'priority': 0, 'context': 'COrjJA=='}
2025-01-18 18:51:24,745 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:24,745 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:24,745 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:24,745 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:24,745 - DEBUG - Cache Entry: (0, 1737247880120581, 0)
2025-01-18 18:51:24,745 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:24,745 - DEBUG - sfqid: 01b9ce13-0002-4c7a-0007-08ea001ff76e
2025-01-18 18:51:24,745 - DEBUG - query execution done
2025-01-18 18:51:24,745 - DEBUG - SUCCESS
2025-01-18 18:51:24,745 - DEBUG - PUT OR GET: False
2025-01-18 18:51:24,746 - DEBUG - Query result format: arrow
2025-01-18 18:51:24,746 - INFO - Number of results in first chunk: 0
2025-01-18 18:51:24,747 - DEBUG - executing SQL/command
2025-01-18 18:51:24,747 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:51:24,747 - DEBUG - sequence counter: 100
2025-01-18 18:51:24,747 - DEBUG - Request id: f6c4e86c-dc43-4590-93a0-a3e54493ade2
2025-01-18 18:51:24,747 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:51:24,747 - DEBUG - is_file_transfer: True
2025-01-18 18:51:24,747 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:24,747 - DEBUG - _cmd_query
2025-01-18 18:51:24,747 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:24,747 - DEBUG - Cache Entry: (0, 1737247880120581, 0)
2025-01-18 18:51:24,747 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247880120581, 'priority': 0, 'context': {'base64Data': 'COrjJA=='}}]}
2025-01-18 18:51:24,747 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[100], is_file_transfer=[False]
2025-01-18 18:51:24,747 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:24,747 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:24,747 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:24,747 - DEBUG - Request guid: 86069479-70e7-4b3d-b87d-cd89b5762aab
2025-01-18 18:51:24,747 - DEBUG - socket timeout: 60
2025-01-18 18:51:24,822 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=f6c4e86c-dc43-4590-93a0-a3e54493ade2&request_guid=86069479-70e7-4b3d-b87d-cd89b5762aab HTTP/1.1" 200 1374
2025-01-18 18:51:24,822 - DEBUG - SUCCESS
2025-01-18 18:51:24,823 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:24,823 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:24,823 - DEBUG - Query id: 01b9ce13-0002-4c77-0007-08ea001fde0a
2025-01-18 18:51:24,823 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247880218272, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:51:24,823 - DEBUG - Cache Entry: (0, 1737247880120581, 0)
2025-01-18 18:51:24,823 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247880218272, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:51:24,823 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:24,823 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:24,824 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:24,824 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:24,824 - DEBUG - Cache Entry: (0, 1737247880218272, 0)
2025-01-18 18:51:24,824 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:24,824 - DEBUG - sfqid: 01b9ce13-0002-4c77-0007-08ea001fde0a
2025-01-18 18:51:24,824 - DEBUG - query execution done
2025-01-18 18:51:24,824 - DEBUG - SUCCESS
2025-01-18 18:51:24,824 - DEBUG - PUT OR GET: False
2025-01-18 18:51:24,824 - DEBUG - Query result format: arrow
2025-01-18 18:51:24,824 - INFO - Number of results in first chunk: 0
2025-01-18 18:51:24,825 - DEBUG - executing SQL/command
2025-01-18 18:51:24,825 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:51:24,825 - DEBUG - sequence counter: 101
2025-01-18 18:51:24,825 - DEBUG - Request id: 7412d983-4047-4032-9fbc-63c24a06f7a2
2025-01-18 18:51:24,825 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:51:24,825 - DEBUG - is_file_transfer: True
2025-01-18 18:51:24,825 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:24,825 - DEBUG - _cmd_query
2025-01-18 18:51:24,825 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:24,825 - DEBUG - Cache Entry: (0, 1737247880218272, 0)
2025-01-18 18:51:24,825 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247880218272, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:51:24,825 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[101], is_file_transfer=[False]
2025-01-18 18:51:24,826 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:24,827 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:24,827 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:24,827 - DEBUG - Request guid: f044a760-e861-47c4-9c87-cbc0790e85cc
2025-01-18 18:51:24,827 - DEBUG - socket timeout: 60
2025-01-18 18:51:24,884 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=7412d983-4047-4032-9fbc-63c24a06f7a2&request_guid=f044a760-e861-47c4-9c87-cbc0790e85cc HTTP/1.1" 200 1372
2025-01-18 18:51:24,884 - DEBUG - SUCCESS
2025-01-18 18:51:24,885 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:24,885 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:24,885 - DEBUG - Query id: 01b9ce13-0002-4c77-0007-08ea001fde0e
2025-01-18 18:51:24,885 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247880278844, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:51:24,885 - DEBUG - Cache Entry: (0, 1737247880218272, 0)
2025-01-18 18:51:24,885 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247880278844, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:51:24,886 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:24,886 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:24,886 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:24,886 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:24,886 - DEBUG - Cache Entry: (0, 1737247880278844, 0)
2025-01-18 18:51:24,886 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:24,886 - DEBUG - sfqid: 01b9ce13-0002-4c77-0007-08ea001fde0e
2025-01-18 18:51:24,886 - DEBUG - query execution done
2025-01-18 18:51:24,886 - DEBUG - SUCCESS
2025-01-18 18:51:24,886 - DEBUG - PUT OR GET: False
2025-01-18 18:51:24,886 - DEBUG - Query result format: arrow
2025-01-18 18:51:24,886 - INFO - Number of results in first chunk: 0
2025-01-18 18:51:24,887 - DEBUG - executing SQL/command
2025-01-18 18:51:24,887 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:51:24,887 - DEBUG - sequence counter: 102
2025-01-18 18:51:24,887 - DEBUG - Request id: 4e3404e8-7e31-44c1-bd35-29a9cdc96091
2025-01-18 18:51:24,887 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:51:24,887 - DEBUG - is_file_transfer: True
2025-01-18 18:51:24,887 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:24,887 - DEBUG - _cmd_query
2025-01-18 18:51:24,887 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:24,887 - DEBUG - Cache Entry: (0, 1737247880278844, 0)
2025-01-18 18:51:24,887 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247880278844, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:51:24,887 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[102], is_file_transfer=[False]
2025-01-18 18:51:24,887 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:24,887 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:24,888 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:24,888 - DEBUG - Request guid: 97a0ee06-b9dd-4dd0-95af-ec5506687d0a
2025-01-18 18:51:24,888 - DEBUG - socket timeout: 60
2025-01-18 18:51:24,979 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=4e3404e8-7e31-44c1-bd35-29a9cdc96091&request_guid=97a0ee06-b9dd-4dd0-95af-ec5506687d0a HTTP/1.1" 200 2618
2025-01-18 18:51:24,980 - DEBUG - SUCCESS
2025-01-18 18:51:24,980 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:24,980 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:24,980 - DEBUG - Query id: 01b9ce13-0002-4c77-0007-08ea001fde12
2025-01-18 18:51:24,981 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247880377505, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:51:24,981 - DEBUG - Cache Entry: (0, 1737247880278844, 0)
2025-01-18 18:51:24,981 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247880377505, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:51:24,981 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:24,981 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:24,981 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:24,981 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:24,981 - DEBUG - Cache Entry: (0, 1737247880377505, 0)
2025-01-18 18:51:24,981 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:24,981 - DEBUG - sfqid: 01b9ce13-0002-4c77-0007-08ea001fde12
2025-01-18 18:51:24,981 - DEBUG - query execution done
2025-01-18 18:51:24,981 - DEBUG - SUCCESS
2025-01-18 18:51:24,981 - DEBUG - PUT OR GET: False
2025-01-18 18:51:24,981 - DEBUG - Query result format: arrow
2025-01-18 18:51:24,981 - INFO - Number of results in first chunk: 54
2025-01-18 18:51:24,981 - DEBUG - Execute query [queryID: 01b9ce13-0002-4c77-0007-08ea001fde12]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:51:24,981 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:51:24,981 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:51:24,981 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:51:24,981 - DEBUG - Batches read: 0
2025-01-18 18:51:24,981 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:51:24,982 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:51:25,241 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:51:25,242 - INFO - Querying the server for client info
2025-01-18 18:51:25,242 - DEBUG - cursor
2025-01-18 18:51:25,242 - DEBUG - executing SQL/command
2025-01-18 18:51:25,242 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:51:25,242 - DEBUG - sequence counter: 103
2025-01-18 18:51:25,242 - DEBUG - Request id: a373f644-bd18-4da2-8d69-d748bf78faf1
2025-01-18 18:51:25,242 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:51:25,242 - DEBUG - is_file_transfer: True
2025-01-18 18:51:25,242 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:25,243 - DEBUG - _cmd_query
2025-01-18 18:51:25,243 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:25,243 - DEBUG - Cache Entry: (0, 1737247880377505, 0)
2025-01-18 18:51:25,243 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247880377505, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:51:25,243 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[103], is_file_transfer=[False]
2025-01-18 18:51:25,244 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:25,244 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:25,244 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:25,244 - DEBUG - Request guid: 8cb76928-2236-40ae-9692-58efef8be311
2025-01-18 18:51:25,244 - DEBUG - socket timeout: 60
2025-01-18 18:51:25,351 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=a373f644-bd18-4da2-8d69-d748bf78faf1&request_guid=8cb76928-2236-40ae-9692-58efef8be311 HTTP/1.1" 200 2614
2025-01-18 18:51:25,351 - DEBUG - SUCCESS
2025-01-18 18:51:25,351 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:25,351 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:25,351 - DEBUG - Query id: 01b9ce13-0002-4c71-0007-08ea00202152
2025-01-18 18:51:25,351 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247880724910, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 18:51:25,352 - DEBUG - Cache Entry: (0, 1737247880377505, 0)
2025-01-18 18:51:25,352 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247880724910, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 18:51:25,352 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:25,352 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:25,352 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:25,352 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:25,352 - DEBUG - Cache Entry: (0, 1737247880724910, 0)
2025-01-18 18:51:25,352 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:25,352 - DEBUG - sfqid: 01b9ce13-0002-4c71-0007-08ea00202152
2025-01-18 18:51:25,352 - DEBUG - query execution done
2025-01-18 18:51:25,352 - DEBUG - SUCCESS
2025-01-18 18:51:25,353 - DEBUG - PUT OR GET: False
2025-01-18 18:51:25,353 - DEBUG - Query result format: arrow
2025-01-18 18:51:25,353 - INFO - Number of results in first chunk: 1
2025-01-18 18:51:25,353 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:51:25,353 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:51:25,353 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:51:25,353 - DEBUG - Batches read: 0
2025-01-18 18:51:25,353 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:51:25,353 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:51:25,354 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:51:25,354 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:51:25,354 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:51:25,354 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:51:25,354 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:51:25,357 - DEBUG - cursor
2025-01-18 18:51:25,357 - DEBUG - executing SQL/command
2025-01-18 18:51:25,357 - DEBUG - query: [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:51:25,357 - DEBUG - sequence counter: 104
2025-01-18 18:51:25,357 - DEBUG - Request id: cc015b5d-e455-428a-8178-db2e84f3ede1
2025-01-18 18:51:25,357 - DEBUG - running query [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:51:25,357 - DEBUG - is_file_transfer: True
2025-01-18 18:51:25,357 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:25,357 - DEBUG - _cmd_query
2025-01-18 18:51:25,357 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:25,357 - DEBUG - Cache Entry: (0, 1737247880724910, 0)
2025-01-18 18:51:25,357 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247880724910, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 18:51:25,357 - DEBUG - sql=[SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...], sequence_id=[104], is_file_transfer=[False]
2025-01-18 18:51:25,359 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:25,360 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:25,360 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:25,360 - DEBUG - Request guid: af454272-c760-4c32-9eb3-d2d1fcbab3b1
2025-01-18 18:51:25,360 - DEBUG - socket timeout: 60
2025-01-18 18:51:25,460 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=cc015b5d-e455-428a-8178-db2e84f3ede1&request_guid=af454272-c760-4c32-9eb3-d2d1fcbab3b1 HTTP/1.1" 200 5996
2025-01-18 18:51:25,460 - DEBUG - SUCCESS
2025-01-18 18:51:25,462 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:25,462 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:25,463 - DEBUG - Query id: 01b9ce13-0002-4c71-0007-08ea00202156
2025-01-18 18:51:25,463 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247880825705, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 18:51:25,463 - DEBUG - Cache Entry: (0, 1737247880724910, 0)
2025-01-18 18:51:25,463 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247880825705, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 18:51:25,463 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:25,463 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:25,463 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:25,463 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:25,463 - DEBUG - Cache Entry: (0, 1737247880825705, 0)
2025-01-18 18:51:25,463 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:25,463 - DEBUG - sfqid: 01b9ce13-0002-4c71-0007-08ea00202156
2025-01-18 18:51:25,463 - DEBUG - query execution done
2025-01-18 18:51:25,463 - DEBUG - SUCCESS
2025-01-18 18:51:25,463 - DEBUG - PUT OR GET: False
2025-01-18 18:51:25,463 - DEBUG - Query result format: arrow
2025-01-18 18:51:25,463 - INFO - Number of results in first chunk: 200
2025-01-18 18:51:25,463 - DEBUG - Execute query [queryID: 01b9ce13-0002-4c71-0007-08ea00202156] 
        SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE 
        FROM DEV_DP_APP.MODELED.US_ADDRESS_LIST 
        WHERE CONTAINS(LOWER(LOCATION), LOWER('saint paul'))
        LIMIT 200
        
2025-01-18 18:51:25,464 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:51:25,464 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:51:25,464 - DEBUG - Batches read: 1
2025-01-18 18:51:25,464 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:51:25,467 - DEBUG - executing SQL/command
2025-01-18 18:51:25,467 - DEBUG - query: [MERGE INTO DEV_DP_APP.APP_ASSETS.USER_SETTINGS AS target USING (SELECT 'default_...]
2025-01-18 18:51:25,467 - DEBUG - sequence counter: 105
2025-01-18 18:51:25,467 - DEBUG - Request id: 4639b798-d2ba-4f9d-ba68-d50a48c3adf1
2025-01-18 18:51:25,467 - DEBUG - running query [MERGE INTO DEV_DP_APP.APP_ASSETS.USER_SETTINGS AS target USING (SELECT 'default_...]
2025-01-18 18:51:25,467 - DEBUG - is_file_transfer: True
2025-01-18 18:51:25,467 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:25,467 - DEBUG - _cmd_query
2025-01-18 18:51:25,467 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:25,467 - DEBUG - Cache Entry: (0, 1737247880825705, 0)
2025-01-18 18:51:25,467 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247880825705, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 18:51:25,467 - DEBUG - sql=[MERGE INTO DEV_DP_APP.APP_ASSETS.USER_SETTINGS AS target USING (SELECT 'default_...], sequence_id=[105], is_file_transfer=[False]
2025-01-18 18:51:25,469 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:25,469 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:25,469 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:25,469 - DEBUG - Request guid: 18c675cc-0103-4679-a0e8-ad94a3c48d01
2025-01-18 18:51:25,469 - DEBUG - socket timeout: 60
2025-01-18 18:51:25,965 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=4639b798-d2ba-4f9d-ba68-d50a48c3adf1&request_guid=18c675cc-0103-4679-a0e8-ad94a3c48d01 HTTP/1.1" 200 1433
2025-01-18 18:51:25,965 - DEBUG - SUCCESS
2025-01-18 18:51:25,966 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:25,966 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:25,966 - DEBUG - Query id: 01b9ce13-0002-4c71-0007-08ea0020215a
2025-01-18 18:51:25,966 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247881357278, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 18:51:25,966 - DEBUG - Cache Entry: (0, 1737247880825705, 0)
2025-01-18 18:51:25,966 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247881357278, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 18:51:25,966 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:25,966 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:25,966 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:25,966 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:25,966 - DEBUG - Cache Entry: (0, 1737247881357278, 0)
2025-01-18 18:51:25,966 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:25,966 - DEBUG - sfqid: 01b9ce13-0002-4c71-0007-08ea0020215a
2025-01-18 18:51:25,966 - DEBUG - query execution done
2025-01-18 18:51:25,966 - DEBUG - SUCCESS
2025-01-18 18:51:25,966 - DEBUG - PUT OR GET: False
2025-01-18 18:51:25,966 - DEBUG - Query result format: json
2025-01-18 18:51:25,966 - DEBUG - parsing for result batch id: 1
2025-01-18 18:51:25,966 - DEBUG - Execute query [queryID: 01b9ce13-0002-4c71-0007-08ea0020215a] 
                    MERGE INTO DEV_DP_APP.APP_ASSETS.USER_SETTINGS AS target
                    USING (SELECT 'default_user' AS USER_ID, 'Saint Paul, MN 55101' AS LOCATION, '44.9452993' AS LATITUDE, '-93.0920953' AS LONGITUDE) AS source
                    ON target.USER_ID = source.USER_ID
                    WHEN MATCHED THEN
                        UPDATE SET LOCATION = source.LOCATION, LATITUDE = source.LATITUDE, LONGITUDE = source.LONGITUDE, LAST_UPDATED = CURRENT_TIMESTAMP()
                    WHEN NOT MATCHED THEN
                        INSERT (USER_ID, LOCATION, LATITUDE, LONGITUDE, LAST_UPDATED) VALUES (source.USER_ID, source.LOCATION, source.LATITUDE, source.LONGITUDE, CURRENT_TIMESTAMP())
                    
2025-01-18 18:51:25,966 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:51:25,974 - DEBUG - Sending 1 logs to telemetry. Data is {'logs': [{'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737247252019'}, {'message': {'source': 'snowflake.core', 'version': '1.0.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'python_api', 'data': {'class_name': 'CortexSearchServiceResource', 'func_name': 'search'}}, 'timestamp': '1737247252021'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737247285175'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce09-0002-4c70-0007-08ea001f9fc6', 'value': 4593}, 'timestamp': '1737247285814'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce09-0002-4c70-0007-08ea001f9fc6', 'value': 1}, 'timestamp': '1737247285815'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce09-0002-4c70-0007-08ea001f9fc6', 'value': 2}, 'timestamp': '1737247285816'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'db17b802-8b5a-4b2e-abf0-ac922c03d979', 'query_plan_complexity': {'column': 1}, 'thread_ident': 2460}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce09-0002-4c70-0007-08ea001f9fc6']}}, 'timestamp': '1737247285816'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce0f-0002-4c78-0007-08ea0020115a', 'value': 4599}, 'timestamp': '1737247630039'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 11608}}, 'timestamp': '1737247630043'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce0f-0002-4c77-0007-08ea001fddf2', 'value': 4595}, 'timestamp': '1737247630601'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce0f-0002-4c77-0007-08ea001fddf2', 'value': 0}, 'timestamp': '1737247630601'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '7b41c288-9e6f-48fe-8eb7-3ca63b4d3490', 'query_plan_complexity': {'column': 1}, 'thread_ident': 11608}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce0f-0002-4c77-0007-08ea001fddf2']}}, 'timestamp': '1737247630602'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce0f-0002-4c5d-0007-08ea001fce12', 'value': 4594}, 'timestamp': '1737247630673'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.0690159797668457, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737247630674'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce0f-0002-4c7a-0007-08ea001ff6de', 'value': 4597}, 'timestamp': '1737247630753'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.07932877540588379, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737247630753'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce0f-0002-4c71-0007-08ea00202132', 'value': 4593}, 'timestamp': '1737247630822'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.06835126876831055, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737247630823'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce0f-0002-4d87-0007-08ea001fe6b6', 'value': 4596}, 'timestamp': '1737247630928'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce0f-0002-4d87-0007-08ea001fe6b6', 'value': 1}, 'timestamp': '1737247630929'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '6991533b-57cf-4318-9815-96041727f379', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 11608}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce0f-0002-4d87-0007-08ea001fe6b6']}}, 'timestamp': '1737247630930'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce0f-0002-4c78-0007-08ea0020115e', 'value': 4595}, 'timestamp': '1737247636175'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 4328}}, 'timestamp': '1737247636180'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce0f-0002-4c71-0007-08ea00202136', 'value': 4595}, 'timestamp': '1737247638132'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce0f-0002-4c71-0007-08ea00202136', 'value': 1}, 'timestamp': '1737247638132'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce0f-0002-4c71-0007-08ea00202136', 'value': 1}, 'timestamp': '1737247638133'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '090000c7-a2f6-405e-9194-171dcb0f165b', 'query_plan_complexity': {'column': 1}, 'thread_ident': 4328}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce0f-0002-4c71-0007-08ea00202136']}}, 'timestamp': '1737247638133'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce12-0002-4c79-0007-08ea00200242', 'value': 4595}, 'timestamp': '1737247816942'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 13844}}, 'timestamp': '1737247816946'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce12-0002-4d87-0007-08ea001fe6d6', 'value': 4601}, 'timestamp': '1737247817698'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce12-0002-4d87-0007-08ea001fe6d6', 'value': 1}, 'timestamp': '1737247817698'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce12-0002-4d87-0007-08ea001fe6d6', 'value': 1}, 'timestamp': '1737247817699'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '49b1db09-549e-4c35-84d7-f3455bb60e69', 'query_plan_complexity': {'column': 1}, 'thread_ident': 13844}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce12-0002-4d87-0007-08ea001fe6d6']}}, 'timestamp': '1737247817699'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce12-0002-4c71-0007-08ea0020214e', 'value': 4599}, 'timestamp': '1737247864021'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 400}}, 'timestamp': '1737247864025'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce12-0002-4c78-0007-08ea00201182', 'value': 4599}, 'timestamp': '1737247864178'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce12-0002-4c78-0007-08ea00201182', 'value': 1}, 'timestamp': '1737247864179'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '764d1be3-3ef3-4b6d-b84d-3d45e45d7844', 'query_plan_complexity': {'column': 1}, 'thread_ident': 400}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce12-0002-4c78-0007-08ea00201182']}}, 'timestamp': '1737247864179'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce12-0002-4d87-0007-08ea001fe712', 'value': 4596}, 'timestamp': '1737247864245'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.0601961612701416, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737247864246'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce12-0002-4c76-0007-08ea001fbf06', 'value': 4595}, 'timestamp': '1737247864317'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.07004904747009277, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737247864317'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce12-0002-4c7a-0007-08ea001ff766', 'value': 4595}, 'timestamp': '1737247864382'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.06373834609985352, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737247864382'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce12-0002-4c78-0007-08ea00201186', 'value': 4596}, 'timestamp': '1737247864493'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce12-0002-4c78-0007-08ea00201186', 'value': 1}, 'timestamp': '1737247864494'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'f691e2b4-bd0d-444e-baf6-0b883b960d14', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 400}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce12-0002-4c78-0007-08ea00201186']}}, 'timestamp': '1737247864494'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c72-0007-08ea002030b6', 'value': 4593}, 'timestamp': '1737247866346'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 32260}}, 'timestamp': '1737247866350'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c76-0007-08ea001fbf0a', 'value': 4596}, 'timestamp': '1737247866460'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce13-0002-4c76-0007-08ea001fbf0a', 'value': 1}, 'timestamp': '1737247866460'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce13-0002-4c76-0007-08ea001fbf0a', 'value': 1}, 'timestamp': '1737247866461'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'af6b2d8f-41b2-42e6-86f4-31af357c78bb', 'query_plan_complexity': {'column': 1}, 'thread_ident': 32260}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce13-0002-4c76-0007-08ea001fbf0a']}}, 'timestamp': '1737247866461'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c70-0007-08ea00204056', 'value': 4595}, 'timestamp': '1737247866541'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.07643365859985352, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737247866542'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c76-0007-08ea001fbf0e', 'value': 4595}, 'timestamp': '1737247866611'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.06795907020568848, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737247866611'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c5d-0007-08ea001fce32', 'value': 4595}, 'timestamp': '1737247866692'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.08177375793457031, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737247866692'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c72-0007-08ea002030ba', 'value': 4597}, 'timestamp': '1737247866813'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce13-0002-4c72-0007-08ea002030ba', 'value': 0}, 'timestamp': '1737247866813'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'db05350f-c0e2-4015-9baf-40d0ec69a84f', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 32260}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce13-0002-4c72-0007-08ea002030ba']}}, 'timestamp': '1737247866814'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c72-0007-08ea002030be', 'value': 4593}, 'timestamp': '1737247875835'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 25332}}, 'timestamp': '1737247875841'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c79-0007-08ea00200252', 'value': 4595}, 'timestamp': '1737247877460'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce13-0002-4c79-0007-08ea00200252', 'value': 1}, 'timestamp': '1737247877461'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce13-0002-4c79-0007-08ea00200252', 'value': 2}, 'timestamp': '1737247877462'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'de6781c2-9377-40e6-b5fd-d62417ae4538', 'query_plan_complexity': {'column': 1}, 'thread_ident': 25332}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce13-0002-4c79-0007-08ea00200252']}}, 'timestamp': '1737247877462'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c5d-0007-08ea001fce36', 'value': 4594}, 'timestamp': '1737247877531'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.06549239158630371, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737247877531'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4d87-0007-08ea001fe716', 'value': 4596}, 'timestamp': '1737247877606'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.07334232330322266, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737247877606'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c70-0007-08ea0020405a', 'value': 4597}, 'timestamp': '1737247877675'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.06978392601013184, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737247877675'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4d87-0007-08ea001fe71a', 'value': 4594}, 'timestamp': '1737247877755'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce13-0002-4d87-0007-08ea001fe71a', 'value': 1}, 'timestamp': '1737247877756'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '8ada2c1c-dcee-46de-bc4e-96621243d9da', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 25332}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce13-0002-4d87-0007-08ea001fe71a']}}, 'timestamp': '1737247877757'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c78-0007-08ea0020118e', 'value': 4594}, 'timestamp': '1737247884566'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 28284}}, 'timestamp': '1737247884570'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c7a-0007-08ea001ff76a', 'value': 4595}, 'timestamp': '1737247884675'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce13-0002-4c7a-0007-08ea001ff76a', 'value': 1}, 'timestamp': '1737247884675'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce13-0002-4c7a-0007-08ea001ff76a', 'value': 1}, 'timestamp': '1737247884676'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '560dd1a1-ef97-42e5-9ffe-21fdcd158259', 'query_plan_complexity': {'column': 1}, 'thread_ident': 28284}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce13-0002-4c7a-0007-08ea001ff76a']}}, 'timestamp': '1737247884676'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c7a-0007-08ea001ff76e', 'value': 4598}, 'timestamp': '1737247884745'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.06466984748840332, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737247884746'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c77-0007-08ea001fde0a', 'value': 4596}, 'timestamp': '1737247884824'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.0778646469116211, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737247884824'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c77-0007-08ea001fde0e', 'value': 4596}, 'timestamp': '1737247884886'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.061130523681640625, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737247884886'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c77-0007-08ea001fde12', 'value': 4595}, 'timestamp': '1737247884981'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce13-0002-4c77-0007-08ea001fde12', 'value': 1}, 'timestamp': '1737247884982'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '8f1b53dd-acc3-4107-976b-befa9c2f56a3', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 28284}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce13-0002-4c77-0007-08ea001fde12']}}, 'timestamp': '1737247884982'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c71-0007-08ea00202152', 'value': 4594}, 'timestamp': '1737247885352'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 20720}}, 'timestamp': '1737247885357'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c71-0007-08ea00202156', 'value': 4597}, 'timestamp': '1737247885463'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce13-0002-4c71-0007-08ea00202156', 'value': 1}, 'timestamp': '1737247885463'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce13-0002-4c71-0007-08ea00202156', 'value': 1}, 'timestamp': '1737247885464'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '40f3381e-b557-4b09-8dad-27758579510d', 'query_plan_complexity': {'column': 1}, 'thread_ident': 20720}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce13-0002-4c71-0007-08ea00202156']}}, 'timestamp': '1737247885465'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c71-0007-08ea0020215a', 'value': 4597}, 'timestamp': '1737247885966'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce13-0002-4c71-0007-08ea0020215a', 'value': 0}, 'timestamp': '1737247885966'}]}.
2025-01-18 18:51:25,975 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:25,976 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:25,976 - DEBUG - remaining request timeout: 5000 ms, retry cnt: 1
2025-01-18 18:51:25,976 - DEBUG - Request guid: e10fef6f-03e8-4efc-88e5-c5f8e9edbde8
2025-01-18 18:51:25,976 - DEBUG - socket timeout: 60
2025-01-18 18:51:26,037 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /telemetry/send?request_guid=e10fef6f-03e8-4efc-88e5-c5f8e9edbde8 HTTP/1.1" 200 86
2025-01-18 18:51:26,037 - DEBUG - SUCCESS
2025-01-18 18:51:26,037 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:26,037 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:26,037 - DEBUG - Successfully uploading metrics to telemetry.
2025-01-18 18:51:26,040 - DEBUG - executing SQL/command
2025-01-18 18:51:26,040 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:51:26,040 - DEBUG - sequence counter: 106
2025-01-18 18:51:26,040 - DEBUG - Request id: 33620879-c9b6-48a9-a48b-d1a3ad88e1af
2025-01-18 18:51:26,040 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:51:26,040 - DEBUG - is_file_transfer: True
2025-01-18 18:51:26,040 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:26,040 - DEBUG - _cmd_query
2025-01-18 18:51:26,040 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:26,040 - DEBUG - Cache Entry: (0, 1737247881357278, 0)
2025-01-18 18:51:26,040 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247881357278, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 18:51:26,040 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[106], is_file_transfer=[False]
2025-01-18 18:51:26,041 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:26,041 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:26,041 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:26,041 - DEBUG - Request guid: 56e82c61-a72b-4c70-8331-6fd17e437272
2025-01-18 18:51:26,041 - DEBUG - socket timeout: 60
2025-01-18 18:51:26,103 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=33620879-c9b6-48a9-a48b-d1a3ad88e1af&request_guid=56e82c61-a72b-4c70-8331-6fd17e437272 HTTP/1.1" 200 1498
2025-01-18 18:51:26,104 - DEBUG - SUCCESS
2025-01-18 18:51:26,104 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:26,104 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:26,104 - DEBUG - Query id: 01b9ce13-0002-4c72-0007-08ea002030c6
2025-01-18 18:51:26,104 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247881470480, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:51:26,104 - DEBUG - Cache Entry: (0, 1737247881357278, 0)
2025-01-18 18:51:26,104 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247881470480, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:51:26,104 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:26,105 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:26,105 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:26,105 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:26,105 - DEBUG - Cache Entry: (0, 1737247881470480, 0)
2025-01-18 18:51:26,105 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:26,105 - DEBUG - sfqid: 01b9ce13-0002-4c72-0007-08ea002030c6
2025-01-18 18:51:26,105 - DEBUG - query execution done
2025-01-18 18:51:26,105 - DEBUG - SUCCESS
2025-01-18 18:51:26,105 - DEBUG - PUT OR GET: False
2025-01-18 18:51:26,105 - DEBUG - Query result format: arrow
2025-01-18 18:51:26,105 - INFO - Number of results in first chunk: 0
2025-01-18 18:51:26,106 - DEBUG - executing SQL/command
2025-01-18 18:51:26,106 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:51:26,106 - DEBUG - sequence counter: 107
2025-01-18 18:51:26,106 - DEBUG - Request id: 002c0fb1-5aa8-49b8-bef9-314b5f350c90
2025-01-18 18:51:26,106 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:51:26,106 - DEBUG - is_file_transfer: True
2025-01-18 18:51:26,106 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:26,106 - DEBUG - _cmd_query
2025-01-18 18:51:26,107 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:26,107 - DEBUG - Cache Entry: (0, 1737247881470480, 0)
2025-01-18 18:51:26,107 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247881470480, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:51:26,107 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[107], is_file_transfer=[False]
2025-01-18 18:51:26,107 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:26,107 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:26,107 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:26,107 - DEBUG - Request guid: 705850b9-911f-4081-a9e0-d706b3595c83
2025-01-18 18:51:26,107 - DEBUG - socket timeout: 60
2025-01-18 18:51:26,166 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=002c0fb1-5aa8-49b8-bef9-314b5f350c90&request_guid=705850b9-911f-4081-a9e0-d706b3595c83 HTTP/1.1" 200 1373
2025-01-18 18:51:26,166 - DEBUG - SUCCESS
2025-01-18 18:51:26,166 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:26,166 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:26,166 - DEBUG - Query id: 01b9ce13-0002-4c76-0007-08ea001fbf16
2025-01-18 18:51:26,166 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247881533390, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:51:26,166 - DEBUG - Cache Entry: (0, 1737247881470480, 0)
2025-01-18 18:51:26,166 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247881533390, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:51:26,166 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:26,166 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:26,166 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:26,166 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:26,168 - DEBUG - Cache Entry: (0, 1737247881533390, 0)
2025-01-18 18:51:26,168 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:26,168 - DEBUG - sfqid: 01b9ce13-0002-4c76-0007-08ea001fbf16
2025-01-18 18:51:26,168 - DEBUG - query execution done
2025-01-18 18:51:26,168 - DEBUG - SUCCESS
2025-01-18 18:51:26,168 - DEBUG - PUT OR GET: False
2025-01-18 18:51:26,168 - DEBUG - Query result format: arrow
2025-01-18 18:51:26,168 - INFO - Number of results in first chunk: 0
2025-01-18 18:51:26,169 - DEBUG - executing SQL/command
2025-01-18 18:51:26,169 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:51:26,169 - DEBUG - sequence counter: 108
2025-01-18 18:51:26,169 - DEBUG - Request id: fb59bb0d-9aa3-4f79-9534-c51113447d74
2025-01-18 18:51:26,169 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:51:26,169 - DEBUG - is_file_transfer: True
2025-01-18 18:51:26,169 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:26,169 - DEBUG - _cmd_query
2025-01-18 18:51:26,169 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:26,169 - DEBUG - Cache Entry: (0, 1737247881533390, 0)
2025-01-18 18:51:26,169 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247881533390, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:51:26,169 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[108], is_file_transfer=[False]
2025-01-18 18:51:26,170 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:26,170 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:26,170 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:26,170 - DEBUG - Request guid: d6777a6a-de33-4625-a909-9bb869193945
2025-01-18 18:51:26,170 - DEBUG - socket timeout: 60
2025-01-18 18:51:26,223 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=fb59bb0d-9aa3-4f79-9534-c51113447d74&request_guid=d6777a6a-de33-4625-a909-9bb869193945 HTTP/1.1" 200 1375
2025-01-18 18:51:26,224 - DEBUG - SUCCESS
2025-01-18 18:51:26,224 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:26,224 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:26,224 - DEBUG - Query id: 01b9ce13-0002-4c72-0007-08ea002030ca
2025-01-18 18:51:26,224 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247881595125, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:51:26,224 - DEBUG - Cache Entry: (0, 1737247881533390, 0)
2025-01-18 18:51:26,224 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247881595125, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:51:26,224 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:26,224 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:26,224 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:26,224 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:26,224 - DEBUG - Cache Entry: (0, 1737247881595125, 0)
2025-01-18 18:51:26,224 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:26,224 - DEBUG - sfqid: 01b9ce13-0002-4c72-0007-08ea002030ca
2025-01-18 18:51:26,225 - DEBUG - query execution done
2025-01-18 18:51:26,225 - DEBUG - SUCCESS
2025-01-18 18:51:26,225 - DEBUG - PUT OR GET: False
2025-01-18 18:51:26,225 - DEBUG - Query result format: arrow
2025-01-18 18:51:26,225 - INFO - Number of results in first chunk: 0
2025-01-18 18:51:26,225 - DEBUG - executing SQL/command
2025-01-18 18:51:26,225 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:51:26,225 - DEBUG - sequence counter: 109
2025-01-18 18:51:26,226 - DEBUG - Request id: c6d15305-563d-4f70-a2d4-eba7f476774e
2025-01-18 18:51:26,226 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:51:26,226 - DEBUG - is_file_transfer: True
2025-01-18 18:51:26,226 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:26,226 - DEBUG - _cmd_query
2025-01-18 18:51:26,226 - DEBUG - serialize_to_dict() called
2025-01-18 18:51:26,226 - DEBUG - Cache Entry: (0, 1737247881595125, 0)
2025-01-18 18:51:26,226 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247881595125, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:51:26,226 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[109], is_file_transfer=[False]
2025-01-18 18:51:26,226 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:51:26,227 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:51:26,227 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:51:26,227 - DEBUG - Request guid: f7ef680c-6267-45b5-a7dd-38a72623aa41
2025-01-18 18:51:26,227 - DEBUG - socket timeout: 60
2025-01-18 18:51:26,299 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=c6d15305-563d-4f70-a2d4-eba7f476774e&request_guid=f7ef680c-6267-45b5-a7dd-38a72623aa41 HTTP/1.1" 200 2616
2025-01-18 18:51:26,300 - DEBUG - SUCCESS
2025-01-18 18:51:26,300 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:51:26,300 - DEBUG - ret[code] = None, after post request
2025-01-18 18:51:26,300 - DEBUG - Query id: 01b9ce13-0002-4c79-0007-08ea0020025a
2025-01-18 18:51:26,300 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737247881701051, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:51:26,300 - DEBUG - Cache Entry: (0, 1737247881595125, 0)
2025-01-18 18:51:26,300 - DEBUG - deserialize {'id': 0, 'timestamp': 1737247881701051, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:51:26,301 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:51:26,301 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:26,301 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:51:26,301 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:51:26,301 - DEBUG - Cache Entry: (0, 1737247881701051, 0)
2025-01-18 18:51:26,301 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:51:26,301 - DEBUG - sfqid: 01b9ce13-0002-4c79-0007-08ea0020025a
2025-01-18 18:51:26,301 - DEBUG - query execution done
2025-01-18 18:51:26,301 - DEBUG - SUCCESS
2025-01-18 18:51:26,301 - DEBUG - PUT OR GET: False
2025-01-18 18:51:26,301 - DEBUG - Query result format: arrow
2025-01-18 18:51:26,301 - INFO - Number of results in first chunk: 54
2025-01-18 18:51:26,301 - DEBUG - Execute query [queryID: 01b9ce13-0002-4c79-0007-08ea0020025a]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:51:26,301 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:51:26,301 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:51:26,301 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:51:26,302 - DEBUG - Batches read: 0
2025-01-18 18:51:26,302 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:51:26,302 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:53:53,561 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:53:53,562 - INFO - Querying the server for client info
2025-01-18 18:53:53,562 - DEBUG - cursor
2025-01-18 18:53:53,562 - DEBUG - executing SQL/command
2025-01-18 18:53:53,563 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:53:53,563 - DEBUG - sequence counter: 110
2025-01-18 18:53:53,563 - DEBUG - Request id: c456f5c5-3161-4a5c-87be-5f11caf34eb2
2025-01-18 18:53:53,563 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:53:53,563 - DEBUG - is_file_transfer: True
2025-01-18 18:53:53,563 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:53,563 - DEBUG - _cmd_query
2025-01-18 18:53:53,564 - DEBUG - serialize_to_dict() called
2025-01-18 18:53:53,564 - DEBUG - Cache Entry: (0, 1737247881701051, 0)
2025-01-18 18:53:53,564 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737247881701051, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:53:53,564 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[110], is_file_transfer=[False]
2025-01-18 18:53:53,565 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:53:53,565 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:53:53,565 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:53:53,565 - DEBUG - Request guid: a509f45a-6f8b-49a1-91a7-0d04be9544a1
2025-01-18 18:53:53,565 - DEBUG - socket timeout: 60
2025-01-18 18:53:53,719 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=c456f5c5-3161-4a5c-87be-5f11caf34eb2&request_guid=a509f45a-6f8b-49a1-91a7-0d04be9544a1 HTTP/1.1" 200 2616
2025-01-18 18:53:53,719 - DEBUG - SUCCESS
2025-01-18 18:53:53,719 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:53:53,719 - DEBUG - ret[code] = None, after post request
2025-01-18 18:53:53,719 - DEBUG - Query id: 01b9ce15-0002-4c78-0007-08ea002011fe
2025-01-18 18:53:53,719 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248029114609, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:53:53,719 - DEBUG - Cache Entry: (0, 1737247881701051, 0)
2025-01-18 18:53:53,720 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248029114609, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:53:53,720 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:53:53,720 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:53,720 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:53,720 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:53:53,720 - DEBUG - Cache Entry: (0, 1737248029114609, 0)
2025-01-18 18:53:53,720 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:53,720 - DEBUG - sfqid: 01b9ce15-0002-4c78-0007-08ea002011fe
2025-01-18 18:53:53,720 - DEBUG - query execution done
2025-01-18 18:53:53,720 - DEBUG - SUCCESS
2025-01-18 18:53:53,720 - DEBUG - PUT OR GET: False
2025-01-18 18:53:53,720 - DEBUG - Query result format: arrow
2025-01-18 18:53:53,720 - INFO - Number of results in first chunk: 1
2025-01-18 18:53:53,720 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:53:53,720 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:53:53,720 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:53:53,720 - DEBUG - Batches read: 0
2025-01-18 18:53:53,720 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:53:53,721 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:53:53,721 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:53:53,721 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:53:53,721 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:53:53,721 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:53:53,721 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:53:53,723 - DEBUG - cursor
2025-01-18 18:53:53,723 - DEBUG - executing SQL/command
2025-01-18 18:53:53,723 - DEBUG - query: [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:53:53,723 - DEBUG - sequence counter: 111
2025-01-18 18:53:53,723 - DEBUG - Request id: 3f6222dd-126d-46dc-86b8-2bcc509785d8
2025-01-18 18:53:53,723 - DEBUG - running query [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:53:53,723 - DEBUG - is_file_transfer: True
2025-01-18 18:53:53,724 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:53,724 - DEBUG - _cmd_query
2025-01-18 18:53:53,724 - DEBUG - serialize_to_dict() called
2025-01-18 18:53:53,724 - DEBUG - Cache Entry: (0, 1737248029114609, 0)
2025-01-18 18:53:53,724 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248029114609, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:53:53,724 - DEBUG - sql=[SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...], sequence_id=[111], is_file_transfer=[False]
2025-01-18 18:53:53,725 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:53:53,725 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:53:53,725 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:53:53,725 - DEBUG - Request guid: 14bed5d1-c6d5-4acd-8973-6431224f37fe
2025-01-18 18:53:53,725 - DEBUG - socket timeout: 60
2025-01-18 18:53:53,871 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=3f6222dd-126d-46dc-86b8-2bcc509785d8&request_guid=14bed5d1-c6d5-4acd-8973-6431224f37fe HTTP/1.1" 200 2114
2025-01-18 18:53:53,871 - DEBUG - SUCCESS
2025-01-18 18:53:53,871 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:53:53,871 - DEBUG - ret[code] = None, after post request
2025-01-18 18:53:53,871 - DEBUG - Query id: 01b9ce15-0002-4c77-0007-08ea001fde1a
2025-01-18 18:53:53,871 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248029251656, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:53:53,871 - DEBUG - Cache Entry: (0, 1737248029114609, 0)
2025-01-18 18:53:53,871 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248029251656, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:53:53,872 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:53:53,872 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:53,872 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:53,872 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:53:53,872 - DEBUG - Cache Entry: (0, 1737248029251656, 0)
2025-01-18 18:53:53,872 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:53,872 - DEBUG - sfqid: 01b9ce15-0002-4c77-0007-08ea001fde1a
2025-01-18 18:53:53,872 - DEBUG - query execution done
2025-01-18 18:53:53,872 - DEBUG - SUCCESS
2025-01-18 18:53:53,872 - DEBUG - PUT OR GET: False
2025-01-18 18:53:53,872 - DEBUG - Query result format: arrow
2025-01-18 18:53:53,872 - INFO - Number of results in first chunk: 1
2025-01-18 18:53:53,872 - DEBUG - Execute query [queryID: 01b9ce15-0002-4c77-0007-08ea001fde1a] 
        SELECT LOCATION, LATITUDE, LONGITUDE
        FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS 
        WHERE USER_ID = 'default_user'
        
2025-01-18 18:53:53,872 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:53:53,872 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:53:53,872 - DEBUG - Arrow chunk info: batchCount 1, columnCount 3, use_numpy: 0
2025-01-18 18:53:53,872 - DEBUG - Batches read: 0
2025-01-18 18:53:53,872 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:53:53,872 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:53:53,877 - DEBUG - executing SQL/command
2025-01-18 18:53:53,877 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:53:53,877 - DEBUG - sequence counter: 112
2025-01-18 18:53:53,877 - DEBUG - Request id: 8a9fbbce-0d4d-494a-a47f-f690c45261ab
2025-01-18 18:53:53,877 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:53:53,877 - DEBUG - is_file_transfer: True
2025-01-18 18:53:53,877 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:53,878 - DEBUG - _cmd_query
2025-01-18 18:53:53,878 - DEBUG - serialize_to_dict() called
2025-01-18 18:53:53,878 - DEBUG - Cache Entry: (0, 1737248029251656, 0)
2025-01-18 18:53:53,878 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248029251656, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:53:53,878 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[112], is_file_transfer=[False]
2025-01-18 18:53:53,879 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:53:53,879 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:53:53,879 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:53:53,879 - DEBUG - Request guid: b975822e-f180-4a8b-8bf6-a628b49ff797
2025-01-18 18:53:53,879 - DEBUG - socket timeout: 60
2025-01-18 18:53:53,951 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=8a9fbbce-0d4d-494a-a47f-f690c45261ab&request_guid=b975822e-f180-4a8b-8bf6-a628b49ff797 HTTP/1.1" 200 1502
2025-01-18 18:53:53,952 - DEBUG - SUCCESS
2025-01-18 18:53:53,952 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:53:53,952 - DEBUG - ret[code] = None, after post request
2025-01-18 18:53:53,953 - DEBUG - Query id: 01b9ce15-0002-4c71-0007-08ea0020219e
2025-01-18 18:53:53,953 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248029345324, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 18:53:53,953 - DEBUG - Cache Entry: (0, 1737248029251656, 0)
2025-01-18 18:53:53,953 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248029345324, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 18:53:53,953 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:53:53,953 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:53,953 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:53,953 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:53:53,953 - DEBUG - Cache Entry: (0, 1737248029345324, 0)
2025-01-18 18:53:53,953 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:53,953 - DEBUG - sfqid: 01b9ce15-0002-4c71-0007-08ea0020219e
2025-01-18 18:53:53,953 - DEBUG - query execution done
2025-01-18 18:53:53,953 - DEBUG - SUCCESS
2025-01-18 18:53:53,953 - DEBUG - PUT OR GET: False
2025-01-18 18:53:53,953 - DEBUG - Query result format: arrow
2025-01-18 18:53:53,954 - INFO - Number of results in first chunk: 0
2025-01-18 18:53:53,955 - DEBUG - executing SQL/command
2025-01-18 18:53:53,955 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:53:53,955 - DEBUG - sequence counter: 113
2025-01-18 18:53:53,955 - DEBUG - Request id: 4da47a2c-fc93-4fa4-a7ad-1478a716c670
2025-01-18 18:53:53,955 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:53:53,955 - DEBUG - is_file_transfer: True
2025-01-18 18:53:53,955 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:53,955 - DEBUG - _cmd_query
2025-01-18 18:53:53,955 - DEBUG - serialize_to_dict() called
2025-01-18 18:53:53,955 - DEBUG - Cache Entry: (0, 1737248029345324, 0)
2025-01-18 18:53:53,955 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248029345324, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 18:53:53,955 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[113], is_file_transfer=[False]
2025-01-18 18:53:53,956 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:53:53,956 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:53:53,956 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:53:53,956 - DEBUG - Request guid: f7f2f8a5-cb87-4a94-ba15-d59cba70434c
2025-01-18 18:53:53,956 - DEBUG - socket timeout: 60
2025-01-18 18:53:54,027 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=4da47a2c-fc93-4fa4-a7ad-1478a716c670&request_guid=f7f2f8a5-cb87-4a94-ba15-d59cba70434c HTTP/1.1" 200 1373
2025-01-18 18:53:54,028 - DEBUG - SUCCESS
2025-01-18 18:53:54,028 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:53:54,028 - DEBUG - ret[code] = None, after post request
2025-01-18 18:53:54,028 - DEBUG - Query id: 01b9ce15-0002-4c72-0007-08ea002030e6
2025-01-18 18:53:54,028 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248029425094, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:53:54,028 - DEBUG - Cache Entry: (0, 1737248029345324, 0)
2025-01-18 18:53:54,028 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248029425094, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:53:54,028 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:53:54,028 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:54,028 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:54,028 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:53:54,028 - DEBUG - Cache Entry: (0, 1737248029425094, 0)
2025-01-18 18:53:54,028 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:54,028 - DEBUG - sfqid: 01b9ce15-0002-4c72-0007-08ea002030e6
2025-01-18 18:53:54,028 - DEBUG - query execution done
2025-01-18 18:53:54,028 - DEBUG - SUCCESS
2025-01-18 18:53:54,028 - DEBUG - PUT OR GET: False
2025-01-18 18:53:54,029 - DEBUG - Query result format: arrow
2025-01-18 18:53:54,029 - INFO - Number of results in first chunk: 0
2025-01-18 18:53:54,029 - DEBUG - executing SQL/command
2025-01-18 18:53:54,029 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:53:54,029 - DEBUG - sequence counter: 114
2025-01-18 18:53:54,029 - DEBUG - Request id: b0e023f5-eb1e-4456-8af9-adf7e834c53c
2025-01-18 18:53:54,029 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:53:54,030 - DEBUG - is_file_transfer: True
2025-01-18 18:53:54,030 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:54,030 - DEBUG - _cmd_query
2025-01-18 18:53:54,030 - DEBUG - serialize_to_dict() called
2025-01-18 18:53:54,030 - DEBUG - Cache Entry: (0, 1737248029425094, 0)
2025-01-18 18:53:54,030 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248029425094, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:53:54,030 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[114], is_file_transfer=[False]
2025-01-18 18:53:54,030 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:53:54,031 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:53:54,031 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:53:54,031 - DEBUG - Request guid: 35981163-834b-4a83-ab45-1760e066ee59
2025-01-18 18:53:54,031 - DEBUG - socket timeout: 60
2025-01-18 18:53:54,084 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=b0e023f5-eb1e-4456-8af9-adf7e834c53c&request_guid=35981163-834b-4a83-ab45-1760e066ee59 HTTP/1.1" 200 1374
2025-01-18 18:53:54,085 - DEBUG - SUCCESS
2025-01-18 18:53:54,085 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:53:54,085 - DEBUG - ret[code] = None, after post request
2025-01-18 18:53:54,085 - DEBUG - Query id: 01b9ce15-0002-4c79-0007-08ea00200276
2025-01-18 18:53:54,086 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248029480185, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:53:54,086 - DEBUG - Cache Entry: (0, 1737248029425094, 0)
2025-01-18 18:53:54,086 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248029480185, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:53:54,086 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:53:54,086 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:54,086 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:54,086 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:53:54,086 - DEBUG - Cache Entry: (0, 1737248029480185, 0)
2025-01-18 18:53:54,086 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:54,086 - DEBUG - sfqid: 01b9ce15-0002-4c79-0007-08ea00200276
2025-01-18 18:53:54,086 - DEBUG - query execution done
2025-01-18 18:53:54,086 - DEBUG - SUCCESS
2025-01-18 18:53:54,086 - DEBUG - PUT OR GET: False
2025-01-18 18:53:54,086 - DEBUG - Query result format: arrow
2025-01-18 18:53:54,086 - INFO - Number of results in first chunk: 0
2025-01-18 18:53:54,087 - DEBUG - executing SQL/command
2025-01-18 18:53:54,087 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:53:54,087 - DEBUG - sequence counter: 115
2025-01-18 18:53:54,087 - DEBUG - Request id: aaca88e6-f986-49da-b99b-410a45187d14
2025-01-18 18:53:54,087 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:53:54,087 - DEBUG - is_file_transfer: True
2025-01-18 18:53:54,087 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:54,087 - DEBUG - _cmd_query
2025-01-18 18:53:54,087 - DEBUG - serialize_to_dict() called
2025-01-18 18:53:54,087 - DEBUG - Cache Entry: (0, 1737248029480185, 0)
2025-01-18 18:53:54,087 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248029480185, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:53:54,087 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[115], is_file_transfer=[False]
2025-01-18 18:53:54,088 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:53:54,088 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:53:54,088 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:53:54,088 - DEBUG - Request guid: 6d6b054c-428a-46f9-81b3-6f540fab15fd
2025-01-18 18:53:54,088 - DEBUG - socket timeout: 60
2025-01-18 18:53:54,183 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=aaca88e6-f986-49da-b99b-410a45187d14&request_guid=6d6b054c-428a-46f9-81b3-6f540fab15fd HTTP/1.1" 200 2617
2025-01-18 18:53:54,184 - DEBUG - SUCCESS
2025-01-18 18:53:54,184 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:53:54,184 - DEBUG - ret[code] = None, after post request
2025-01-18 18:53:54,184 - DEBUG - Query id: 01b9ce15-0002-4c70-0007-08ea0020406e
2025-01-18 18:53:54,185 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248029568448, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:53:54,185 - DEBUG - Cache Entry: (0, 1737248029480185, 0)
2025-01-18 18:53:54,185 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248029568448, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:53:54,185 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:53:54,185 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:54,185 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:54,185 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:53:54,185 - DEBUG - Cache Entry: (0, 1737248029568448, 0)
2025-01-18 18:53:54,185 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:54,185 - DEBUG - sfqid: 01b9ce15-0002-4c70-0007-08ea0020406e
2025-01-18 18:53:54,185 - DEBUG - query execution done
2025-01-18 18:53:54,185 - DEBUG - SUCCESS
2025-01-18 18:53:54,185 - DEBUG - PUT OR GET: False
2025-01-18 18:53:54,185 - DEBUG - Query result format: arrow
2025-01-18 18:53:54,185 - INFO - Number of results in first chunk: 54
2025-01-18 18:53:54,185 - DEBUG - Execute query [queryID: 01b9ce15-0002-4c70-0007-08ea0020406e]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:53:54,185 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:53:54,185 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:53:54,185 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:53:54,185 - DEBUG - Batches read: 0
2025-01-18 18:53:54,186 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:53:54,186 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:53:55,869 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:53:55,869 - INFO - Querying the server for client info
2025-01-18 18:53:55,869 - DEBUG - cursor
2025-01-18 18:53:55,869 - DEBUG - executing SQL/command
2025-01-18 18:53:55,869 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:53:55,869 - DEBUG - sequence counter: 116
2025-01-18 18:53:55,869 - DEBUG - Request id: 2cb99d7c-0b44-4376-9a46-84895625a6e1
2025-01-18 18:53:55,869 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:53:55,869 - DEBUG - is_file_transfer: True
2025-01-18 18:53:55,869 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:55,869 - DEBUG - _cmd_query
2025-01-18 18:53:55,869 - DEBUG - serialize_to_dict() called
2025-01-18 18:53:55,870 - DEBUG - Cache Entry: (0, 1737248029568448, 0)
2025-01-18 18:53:55,870 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248029568448, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:53:55,870 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[116], is_file_transfer=[False]
2025-01-18 18:53:55,870 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:53:55,871 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:53:55,871 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:53:55,871 - DEBUG - Request guid: c8f262b6-4c62-415e-bc6c-3959ce3c89c7
2025-01-18 18:53:55,871 - DEBUG - socket timeout: 60
2025-01-18 18:53:55,982 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=2cb99d7c-0b44-4376-9a46-84895625a6e1&request_guid=c8f262b6-4c62-415e-bc6c-3959ce3c89c7 HTTP/1.1" 200 2617
2025-01-18 18:53:55,983 - DEBUG - SUCCESS
2025-01-18 18:53:55,983 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:53:55,983 - DEBUG - ret[code] = None, after post request
2025-01-18 18:53:55,983 - DEBUG - Query id: 01b9ce15-0002-4c78-0007-08ea00201206
2025-01-18 18:53:55,983 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248031351433, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:53:55,983 - DEBUG - Cache Entry: (0, 1737248029568448, 0)
2025-01-18 18:53:55,983 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248031351433, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:53:55,983 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:53:55,984 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:55,984 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:55,984 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:53:55,984 - DEBUG - Cache Entry: (0, 1737248031351433, 0)
2025-01-18 18:53:55,984 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:55,984 - DEBUG - sfqid: 01b9ce15-0002-4c78-0007-08ea00201206
2025-01-18 18:53:55,984 - DEBUG - query execution done
2025-01-18 18:53:55,984 - DEBUG - SUCCESS
2025-01-18 18:53:55,984 - DEBUG - PUT OR GET: False
2025-01-18 18:53:55,984 - DEBUG - Query result format: arrow
2025-01-18 18:53:55,984 - INFO - Number of results in first chunk: 1
2025-01-18 18:53:55,984 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:53:55,984 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:53:55,984 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:53:55,984 - DEBUG - Batches read: 0
2025-01-18 18:53:55,984 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:53:55,984 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:53:55,985 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:53:55,986 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:53:55,986 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:53:55,986 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:53:55,986 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:53:55,991 - DEBUG - cursor
2025-01-18 18:53:55,992 - DEBUG - executing SQL/command
2025-01-18 18:53:55,992 - DEBUG - query: [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:53:55,992 - DEBUG - sequence counter: 117
2025-01-18 18:53:55,992 - DEBUG - Request id: b2651914-22e5-453b-9f65-ebe98feb52a1
2025-01-18 18:53:55,992 - DEBUG - running query [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:53:55,992 - DEBUG - is_file_transfer: True
2025-01-18 18:53:55,992 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:55,993 - DEBUG - _cmd_query
2025-01-18 18:53:55,993 - DEBUG - serialize_to_dict() called
2025-01-18 18:53:55,993 - DEBUG - Cache Entry: (0, 1737248031351433, 0)
2025-01-18 18:53:55,994 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248031351433, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:53:55,994 - DEBUG - sql=[SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...], sequence_id=[117], is_file_transfer=[False]
2025-01-18 18:53:55,995 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:53:55,995 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:53:55,995 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:53:55,995 - DEBUG - Request guid: 9d0280f5-c810-4041-a75a-242b1d2aebcc
2025-01-18 18:53:55,995 - DEBUG - socket timeout: 60
2025-01-18 18:53:56,093 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=b2651914-22e5-453b-9f65-ebe98feb52a1&request_guid=9d0280f5-c810-4041-a75a-242b1d2aebcc HTTP/1.1" 200 5637
2025-01-18 18:53:56,094 - DEBUG - SUCCESS
2025-01-18 18:53:56,094 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:53:56,094 - DEBUG - ret[code] = None, after post request
2025-01-18 18:53:56,094 - DEBUG - Query id: 01b9ce15-0002-4c77-0007-08ea001fde1e
2025-01-18 18:53:56,094 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248031487390, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:53:56,094 - DEBUG - Cache Entry: (0, 1737248031351433, 0)
2025-01-18 18:53:56,094 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248031487390, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:53:56,094 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:53:56,095 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:56,095 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:56,095 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:53:56,095 - DEBUG - Cache Entry: (0, 1737248031487390, 0)
2025-01-18 18:53:56,095 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:56,095 - DEBUG - sfqid: 01b9ce15-0002-4c77-0007-08ea001fde1e
2025-01-18 18:53:56,095 - DEBUG - query execution done
2025-01-18 18:53:56,095 - DEBUG - SUCCESS
2025-01-18 18:53:56,095 - DEBUG - PUT OR GET: False
2025-01-18 18:53:56,095 - DEBUG - Query result format: arrow
2025-01-18 18:53:56,095 - INFO - Number of results in first chunk: 200
2025-01-18 18:53:56,095 - DEBUG - Execute query [queryID: 01b9ce15-0002-4c77-0007-08ea001fde1e] 
        SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE 
        FROM DEV_DP_APP.MODELED.US_ADDRESS_LIST 
        WHERE CONTAINS(LOWER(LOCATION), LOWER('Saint Paul, MN 55101'))
        LIMIT 200
        
2025-01-18 18:53:56,095 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:53:56,095 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:53:56,095 - DEBUG - Batches read: 1
2025-01-18 18:53:56,096 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:53:56,101 - DEBUG - executing SQL/command
2025-01-18 18:53:56,101 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:53:56,101 - DEBUG - sequence counter: 118
2025-01-18 18:53:56,101 - DEBUG - Request id: 9ec6b843-197d-4c56-b001-130e102c89bc
2025-01-18 18:53:56,101 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:53:56,102 - DEBUG - is_file_transfer: True
2025-01-18 18:53:56,102 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:56,102 - DEBUG - _cmd_query
2025-01-18 18:53:56,102 - DEBUG - serialize_to_dict() called
2025-01-18 18:53:56,102 - DEBUG - Cache Entry: (0, 1737248031487390, 0)
2025-01-18 18:53:56,102 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248031487390, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:53:56,102 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[118], is_file_transfer=[False]
2025-01-18 18:53:56,103 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:53:56,103 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:53:56,103 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:53:56,103 - DEBUG - Request guid: 29682068-1356-4c75-84c5-2839c8dd067e
2025-01-18 18:53:56,103 - DEBUG - socket timeout: 60
2025-01-18 18:53:56,165 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=9ec6b843-197d-4c56-b001-130e102c89bc&request_guid=29682068-1356-4c75-84c5-2839c8dd067e HTTP/1.1" 200 1504
2025-01-18 18:53:56,166 - DEBUG - SUCCESS
2025-01-18 18:53:56,166 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:53:56,166 - DEBUG - ret[code] = None, after post request
2025-01-18 18:53:56,167 - DEBUG - Query id: 01b9ce15-0002-4c7a-0007-08ea001ff782
2025-01-18 18:53:56,167 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248031540774, 'priority': 0, 'context': 'COrjJA=='}]}
2025-01-18 18:53:56,167 - DEBUG - Cache Entry: (0, 1737248031487390, 0)
2025-01-18 18:53:56,167 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248031540774, 'priority': 0, 'context': 'COrjJA=='}
2025-01-18 18:53:56,167 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:53:56,167 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:56,167 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:56,167 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:53:56,167 - DEBUG - Cache Entry: (0, 1737248031540774, 0)
2025-01-18 18:53:56,167 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:56,167 - DEBUG - sfqid: 01b9ce15-0002-4c7a-0007-08ea001ff782
2025-01-18 18:53:56,167 - DEBUG - query execution done
2025-01-18 18:53:56,167 - DEBUG - SUCCESS
2025-01-18 18:53:56,167 - DEBUG - PUT OR GET: False
2025-01-18 18:53:56,167 - DEBUG - Query result format: arrow
2025-01-18 18:53:56,167 - INFO - Number of results in first chunk: 0
2025-01-18 18:53:56,168 - DEBUG - executing SQL/command
2025-01-18 18:53:56,169 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:53:56,169 - DEBUG - sequence counter: 119
2025-01-18 18:53:56,169 - DEBUG - Request id: d41243fa-321f-4ce1-8460-a72f01ca4d5b
2025-01-18 18:53:56,169 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:53:56,169 - DEBUG - is_file_transfer: True
2025-01-18 18:53:56,169 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:56,169 - DEBUG - _cmd_query
2025-01-18 18:53:56,169 - DEBUG - serialize_to_dict() called
2025-01-18 18:53:56,169 - DEBUG - Cache Entry: (0, 1737248031540774, 0)
2025-01-18 18:53:56,169 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248031540774, 'priority': 0, 'context': {'base64Data': 'COrjJA=='}}]}
2025-01-18 18:53:56,169 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[119], is_file_transfer=[False]
2025-01-18 18:53:56,170 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:53:56,170 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:53:56,170 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:53:56,170 - DEBUG - Request guid: 9843d98b-5db3-41a5-99f9-aa5b27643f2c
2025-01-18 18:53:56,170 - DEBUG - socket timeout: 60
2025-01-18 18:53:56,225 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=d41243fa-321f-4ce1-8460-a72f01ca4d5b&request_guid=9843d98b-5db3-41a5-99f9-aa5b27643f2c HTTP/1.1" 200 1373
2025-01-18 18:53:56,225 - DEBUG - SUCCESS
2025-01-18 18:53:56,226 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:53:56,226 - DEBUG - ret[code] = None, after post request
2025-01-18 18:53:56,226 - DEBUG - Query id: 01b9ce15-0002-4c71-0007-08ea002021a2
2025-01-18 18:53:56,226 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248031615555, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 18:53:56,226 - DEBUG - Cache Entry: (0, 1737248031540774, 0)
2025-01-18 18:53:56,226 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248031615555, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 18:53:56,226 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:53:56,226 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:56,226 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:56,226 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:53:56,226 - DEBUG - Cache Entry: (0, 1737248031615555, 0)
2025-01-18 18:53:56,226 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:56,226 - DEBUG - sfqid: 01b9ce15-0002-4c71-0007-08ea002021a2
2025-01-18 18:53:56,226 - DEBUG - query execution done
2025-01-18 18:53:56,226 - DEBUG - SUCCESS
2025-01-18 18:53:56,226 - DEBUG - PUT OR GET: False
2025-01-18 18:53:56,226 - DEBUG - Query result format: arrow
2025-01-18 18:53:56,226 - INFO - Number of results in first chunk: 0
2025-01-18 18:53:56,227 - DEBUG - executing SQL/command
2025-01-18 18:53:56,227 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:53:56,227 - DEBUG - sequence counter: 120
2025-01-18 18:53:56,227 - DEBUG - Request id: ef665761-dd0c-4f33-8c59-e80cec607400
2025-01-18 18:53:56,227 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:53:56,227 - DEBUG - is_file_transfer: True
2025-01-18 18:53:56,227 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:56,227 - DEBUG - _cmd_query
2025-01-18 18:53:56,227 - DEBUG - serialize_to_dict() called
2025-01-18 18:53:56,227 - DEBUG - Cache Entry: (0, 1737248031615555, 0)
2025-01-18 18:53:56,227 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248031615555, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 18:53:56,228 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[120], is_file_transfer=[False]
2025-01-18 18:53:56,228 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:53:56,228 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:53:56,228 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:53:56,228 - DEBUG - Request guid: 4211a8fe-ed92-48ec-b007-f0c6c3a54351
2025-01-18 18:53:56,228 - DEBUG - socket timeout: 60
2025-01-18 18:53:56,291 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=ef665761-dd0c-4f33-8c59-e80cec607400&request_guid=4211a8fe-ed92-48ec-b007-f0c6c3a54351 HTTP/1.1" 200 1369
2025-01-18 18:53:56,291 - DEBUG - SUCCESS
2025-01-18 18:53:56,292 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:53:56,292 - DEBUG - ret[code] = None, after post request
2025-01-18 18:53:56,292 - DEBUG - Query id: 01b9ce15-0002-4c77-0007-08ea001fde22
2025-01-18 18:53:56,292 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248031663600, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:53:56,292 - DEBUG - Cache Entry: (0, 1737248031615555, 0)
2025-01-18 18:53:56,292 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248031663600, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:53:56,292 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:53:56,292 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:56,292 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:56,292 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:53:56,292 - DEBUG - Cache Entry: (0, 1737248031663600, 0)
2025-01-18 18:53:56,292 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:56,292 - DEBUG - sfqid: 01b9ce15-0002-4c77-0007-08ea001fde22
2025-01-18 18:53:56,292 - DEBUG - query execution done
2025-01-18 18:53:56,292 - DEBUG - SUCCESS
2025-01-18 18:53:56,292 - DEBUG - PUT OR GET: False
2025-01-18 18:53:56,292 - DEBUG - Query result format: arrow
2025-01-18 18:53:56,292 - INFO - Number of results in first chunk: 0
2025-01-18 18:53:56,293 - DEBUG - executing SQL/command
2025-01-18 18:53:56,293 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:53:56,293 - DEBUG - sequence counter: 121
2025-01-18 18:53:56,293 - DEBUG - Request id: c9f74025-e398-4c4a-bb32-78b2919b9315
2025-01-18 18:53:56,293 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:53:56,293 - DEBUG - is_file_transfer: True
2025-01-18 18:53:56,293 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:56,293 - DEBUG - _cmd_query
2025-01-18 18:53:56,293 - DEBUG - serialize_to_dict() called
2025-01-18 18:53:56,294 - DEBUG - Cache Entry: (0, 1737248031663600, 0)
2025-01-18 18:53:56,294 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248031663600, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:53:56,294 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[121], is_file_transfer=[False]
2025-01-18 18:53:56,294 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:53:56,294 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:53:56,294 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:53:56,294 - DEBUG - Request guid: 99560ba5-8a27-4d8d-9a8f-30e3bb6ac13e
2025-01-18 18:53:56,295 - DEBUG - socket timeout: 60
2025-01-18 18:53:56,407 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=c9f74025-e398-4c4a-bb32-78b2919b9315&request_guid=99560ba5-8a27-4d8d-9a8f-30e3bb6ac13e HTTP/1.1" 200 2614
2025-01-18 18:53:56,407 - DEBUG - SUCCESS
2025-01-18 18:53:56,408 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:53:56,408 - DEBUG - ret[code] = None, after post request
2025-01-18 18:53:56,408 - DEBUG - Query id: 01b9ce15-0002-4c76-0007-08ea001fbf2a
2025-01-18 18:53:56,408 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248031809610, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:53:56,408 - DEBUG - Cache Entry: (0, 1737248031663600, 0)
2025-01-18 18:53:56,408 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248031809610, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:53:56,408 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:53:56,408 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:56,408 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:53:56,408 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:53:56,408 - DEBUG - Cache Entry: (0, 1737248031809610, 0)
2025-01-18 18:53:56,408 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:53:56,408 - DEBUG - sfqid: 01b9ce15-0002-4c76-0007-08ea001fbf2a
2025-01-18 18:53:56,408 - DEBUG - query execution done
2025-01-18 18:53:56,408 - DEBUG - SUCCESS
2025-01-18 18:53:56,408 - DEBUG - PUT OR GET: False
2025-01-18 18:53:56,408 - DEBUG - Query result format: arrow
2025-01-18 18:53:56,408 - INFO - Number of results in first chunk: 54
2025-01-18 18:53:56,408 - DEBUG - Execute query [queryID: 01b9ce15-0002-4c76-0007-08ea001fbf2a]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:53:56,408 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:53:56,408 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:53:56,408 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:53:56,409 - DEBUG - Batches read: 0
2025-01-18 18:53:56,409 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:53:56,409 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:54:08,045 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:54:08,045 - INFO - Querying the server for client info
2025-01-18 18:54:08,046 - DEBUG - cursor
2025-01-18 18:54:08,046 - DEBUG - executing SQL/command
2025-01-18 18:54:08,046 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:54:08,047 - DEBUG - sequence counter: 122
2025-01-18 18:54:08,047 - DEBUG - Request id: 18facfe5-cc7f-4fc2-af90-8a2b1dbf43ec
2025-01-18 18:54:08,047 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:54:08,047 - DEBUG - is_file_transfer: True
2025-01-18 18:54:08,047 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:08,047 - DEBUG - _cmd_query
2025-01-18 18:54:08,047 - DEBUG - serialize_to_dict() called
2025-01-18 18:54:08,047 - DEBUG - Cache Entry: (0, 1737248031809610, 0)
2025-01-18 18:54:08,047 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248031809610, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:54:08,047 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[122], is_file_transfer=[False]
2025-01-18 18:54:08,048 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:54:08,048 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:54:08,048 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:54:08,049 - DEBUG - Request guid: c7f84c6d-5a97-437a-bece-10bc72fe04cf
2025-01-18 18:54:08,049 - DEBUG - socket timeout: 60
2025-01-18 18:54:08,149 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=18facfe5-cc7f-4fc2-af90-8a2b1dbf43ec&request_guid=c7f84c6d-5a97-437a-bece-10bc72fe04cf HTTP/1.1" 200 2618
2025-01-18 18:54:08,150 - DEBUG - SUCCESS
2025-01-18 18:54:08,150 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:54:08,150 - DEBUG - ret[code] = None, after post request
2025-01-18 18:54:08,150 - DEBUG - Query id: 01b9ce16-0002-4c5d-0007-08ea001fce4a
2025-01-18 18:54:08,150 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248043550121, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:54:08,150 - DEBUG - Cache Entry: (0, 1737248031809610, 0)
2025-01-18 18:54:08,150 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248043550121, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:54:08,151 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:54:08,151 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:08,151 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:08,151 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:54:08,151 - DEBUG - Cache Entry: (0, 1737248043550121, 0)
2025-01-18 18:54:08,151 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:08,151 - DEBUG - sfqid: 01b9ce16-0002-4c5d-0007-08ea001fce4a
2025-01-18 18:54:08,151 - DEBUG - query execution done
2025-01-18 18:54:08,151 - DEBUG - SUCCESS
2025-01-18 18:54:08,151 - DEBUG - PUT OR GET: False
2025-01-18 18:54:08,151 - DEBUG - Query result format: arrow
2025-01-18 18:54:08,151 - INFO - Number of results in first chunk: 1
2025-01-18 18:54:08,151 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:54:08,151 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:54:08,151 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:54:08,151 - DEBUG - Batches read: 0
2025-01-18 18:54:08,151 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:54:08,151 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:54:08,152 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:54:08,152 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:54:08,152 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:54:08,152 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:54:08,152 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:54:08,154 - DEBUG - cursor
2025-01-18 18:54:08,154 - DEBUG - executing SQL/command
2025-01-18 18:54:08,154 - DEBUG - query: [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:54:08,155 - DEBUG - sequence counter: 123
2025-01-18 18:54:08,155 - DEBUG - Request id: 87f8451f-d870-4605-ad0e-ef6f3354148b
2025-01-18 18:54:08,155 - DEBUG - running query [SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...]
2025-01-18 18:54:08,155 - DEBUG - is_file_transfer: True
2025-01-18 18:54:08,155 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:08,155 - DEBUG - _cmd_query
2025-01-18 18:54:08,155 - DEBUG - serialize_to_dict() called
2025-01-18 18:54:08,155 - DEBUG - Cache Entry: (0, 1737248043550121, 0)
2025-01-18 18:54:08,155 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248043550121, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:54:08,155 - DEBUG - sql=[SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.MODELED.US_ADDRESS...], sequence_id=[123], is_file_transfer=[False]
2025-01-18 18:54:08,156 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:54:08,157 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:54:08,157 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:54:08,157 - DEBUG - Request guid: a112388d-7845-4018-ba63-c9a641b0f9c7
2025-01-18 18:54:08,157 - DEBUG - socket timeout: 60
2025-01-18 18:54:08,224 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=87f8451f-d870-4605-ad0e-ef6f3354148b&request_guid=a112388d-7845-4018-ba63-c9a641b0f9c7 HTTP/1.1" 200 5638
2025-01-18 18:54:08,225 - DEBUG - SUCCESS
2025-01-18 18:54:08,226 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:54:08,226 - DEBUG - ret[code] = None, after post request
2025-01-18 18:54:08,226 - DEBUG - Query id: 01b9ce16-0002-4c77-0007-08ea001fde26
2025-01-18 18:54:08,226 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248043618780, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:54:08,226 - DEBUG - Cache Entry: (0, 1737248043550121, 0)
2025-01-18 18:54:08,226 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248043618780, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:54:08,226 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:54:08,226 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:08,226 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:08,226 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:54:08,226 - DEBUG - Cache Entry: (0, 1737248043618780, 0)
2025-01-18 18:54:08,226 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:08,226 - DEBUG - sfqid: 01b9ce16-0002-4c77-0007-08ea001fde26
2025-01-18 18:54:08,226 - DEBUG - query execution done
2025-01-18 18:54:08,226 - DEBUG - SUCCESS
2025-01-18 18:54:08,226 - DEBUG - PUT OR GET: False
2025-01-18 18:54:08,226 - DEBUG - Query result format: arrow
2025-01-18 18:54:08,226 - INFO - Number of results in first chunk: 200
2025-01-18 18:54:08,227 - DEBUG - Execute query [queryID: 01b9ce16-0002-4c77-0007-08ea001fde26] 
        SELECT DISTINCT LOCATION, LATITUDE, LONGITUDE 
        FROM DEV_DP_APP.MODELED.US_ADDRESS_LIST 
        WHERE CONTAINS(LOWER(LOCATION), LOWER('Saint Paul, MN 55101'))
        LIMIT 200
        
2025-01-18 18:54:08,227 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:54:08,227 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:54:08,227 - DEBUG - Batches read: 1
2025-01-18 18:54:08,227 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:54:08,231 - DEBUG - executing SQL/command
2025-01-18 18:54:08,231 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:54:08,231 - DEBUG - sequence counter: 124
2025-01-18 18:54:08,231 - DEBUG - Request id: 72cae567-892c-435a-8da7-eebb1c4f6e36
2025-01-18 18:54:08,231 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:54:08,231 - DEBUG - is_file_transfer: True
2025-01-18 18:54:08,231 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:08,231 - DEBUG - _cmd_query
2025-01-18 18:54:08,231 - DEBUG - serialize_to_dict() called
2025-01-18 18:54:08,231 - DEBUG - Cache Entry: (0, 1737248043618780, 0)
2025-01-18 18:54:08,232 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248043618780, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:54:08,232 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[124], is_file_transfer=[False]
2025-01-18 18:54:08,232 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:54:08,232 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:54:08,232 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:54:08,232 - DEBUG - Request guid: 174cd216-2663-4c5f-9eae-87c7fb8acf0c
2025-01-18 18:54:08,232 - DEBUG - socket timeout: 60
2025-01-18 18:54:08,294 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=72cae567-892c-435a-8da7-eebb1c4f6e36&request_guid=174cd216-2663-4c5f-9eae-87c7fb8acf0c HTTP/1.1" 200 1503
2025-01-18 18:54:08,295 - DEBUG - SUCCESS
2025-01-18 18:54:08,295 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:54:08,295 - DEBUG - ret[code] = None, after post request
2025-01-18 18:54:08,295 - DEBUG - Query id: 01b9ce16-0002-4c77-0007-08ea001fde2a
2025-01-18 18:54:08,296 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248043689475, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:54:08,296 - DEBUG - Cache Entry: (0, 1737248043618780, 0)
2025-01-18 18:54:08,296 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248043689475, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:54:08,296 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:54:08,296 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:08,296 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:08,296 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:54:08,296 - DEBUG - Cache Entry: (0, 1737248043689475, 0)
2025-01-18 18:54:08,296 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:08,296 - DEBUG - sfqid: 01b9ce16-0002-4c77-0007-08ea001fde2a
2025-01-18 18:54:08,296 - DEBUG - query execution done
2025-01-18 18:54:08,296 - DEBUG - SUCCESS
2025-01-18 18:54:08,296 - DEBUG - PUT OR GET: False
2025-01-18 18:54:08,296 - DEBUG - Query result format: arrow
2025-01-18 18:54:08,296 - INFO - Number of results in first chunk: 0
2025-01-18 18:54:08,297 - DEBUG - executing SQL/command
2025-01-18 18:54:08,297 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:54:08,297 - DEBUG - sequence counter: 125
2025-01-18 18:54:08,297 - DEBUG - Request id: 644f5301-0498-45cf-8286-7eb1dc75342d
2025-01-18 18:54:08,297 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:54:08,297 - DEBUG - is_file_transfer: True
2025-01-18 18:54:08,297 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:08,298 - DEBUG - _cmd_query
2025-01-18 18:54:08,298 - DEBUG - serialize_to_dict() called
2025-01-18 18:54:08,298 - DEBUG - Cache Entry: (0, 1737248043689475, 0)
2025-01-18 18:54:08,298 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248043689475, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:54:08,298 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[125], is_file_transfer=[False]
2025-01-18 18:54:08,299 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:54:08,299 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:54:08,299 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:54:08,299 - DEBUG - Request guid: 2d14d5d2-d3d1-45d3-b650-9e37ab0916d9
2025-01-18 18:54:08,299 - DEBUG - socket timeout: 60
2025-01-18 18:54:08,362 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=644f5301-0498-45cf-8286-7eb1dc75342d&request_guid=2d14d5d2-d3d1-45d3-b650-9e37ab0916d9 HTTP/1.1" 200 1373
2025-01-18 18:54:08,363 - DEBUG - SUCCESS
2025-01-18 18:54:08,363 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:54:08,363 - DEBUG - ret[code] = None, after post request
2025-01-18 18:54:08,363 - DEBUG - Query id: 01b9ce16-0002-4d87-0007-08ea001fe732
2025-01-18 18:54:08,363 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248043737675, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:54:08,363 - DEBUG - Cache Entry: (0, 1737248043689475, 0)
2025-01-18 18:54:08,363 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248043737675, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:54:08,363 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:54:08,363 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:08,363 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:08,363 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:54:08,363 - DEBUG - Cache Entry: (0, 1737248043737675, 0)
2025-01-18 18:54:08,363 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:08,363 - DEBUG - sfqid: 01b9ce16-0002-4d87-0007-08ea001fe732
2025-01-18 18:54:08,363 - DEBUG - query execution done
2025-01-18 18:54:08,364 - DEBUG - SUCCESS
2025-01-18 18:54:08,364 - DEBUG - PUT OR GET: False
2025-01-18 18:54:08,364 - DEBUG - Query result format: arrow
2025-01-18 18:54:08,364 - INFO - Number of results in first chunk: 0
2025-01-18 18:54:08,365 - DEBUG - executing SQL/command
2025-01-18 18:54:08,365 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:54:08,365 - DEBUG - sequence counter: 126
2025-01-18 18:54:08,365 - DEBUG - Request id: 5b2d3177-afb1-4be1-b1a8-f87913c96518
2025-01-18 18:54:08,365 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:54:08,365 - DEBUG - is_file_transfer: True
2025-01-18 18:54:08,365 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:08,365 - DEBUG - _cmd_query
2025-01-18 18:54:08,365 - DEBUG - serialize_to_dict() called
2025-01-18 18:54:08,365 - DEBUG - Cache Entry: (0, 1737248043737675, 0)
2025-01-18 18:54:08,365 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248043737675, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:54:08,365 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[126], is_file_transfer=[False]
2025-01-18 18:54:08,366 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:54:08,366 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:54:08,366 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:54:08,366 - DEBUG - Request guid: 6c3fda37-6653-4d10-9ebe-c752c5667019
2025-01-18 18:54:08,366 - DEBUG - socket timeout: 60
2025-01-18 18:54:08,416 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=5b2d3177-afb1-4be1-b1a8-f87913c96518&request_guid=6c3fda37-6653-4d10-9ebe-c752c5667019 HTTP/1.1" 200 1372
2025-01-18 18:54:08,416 - DEBUG - SUCCESS
2025-01-18 18:54:08,417 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:54:08,417 - DEBUG - ret[code] = None, after post request
2025-01-18 18:54:08,417 - DEBUG - Query id: 01b9ce16-0002-4c71-0007-08ea002021a6
2025-01-18 18:54:08,417 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248043815771, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 18:54:08,417 - DEBUG - Cache Entry: (0, 1737248043737675, 0)
2025-01-18 18:54:08,417 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248043815771, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 18:54:08,417 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:54:08,417 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:08,417 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:08,417 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:54:08,417 - DEBUG - Cache Entry: (0, 1737248043815771, 0)
2025-01-18 18:54:08,417 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:08,418 - DEBUG - sfqid: 01b9ce16-0002-4c71-0007-08ea002021a6
2025-01-18 18:54:08,418 - DEBUG - query execution done
2025-01-18 18:54:08,418 - DEBUG - SUCCESS
2025-01-18 18:54:08,418 - DEBUG - PUT OR GET: False
2025-01-18 18:54:08,418 - DEBUG - Query result format: arrow
2025-01-18 18:54:08,418 - INFO - Number of results in first chunk: 0
2025-01-18 18:54:08,418 - DEBUG - executing SQL/command
2025-01-18 18:54:08,418 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:54:08,418 - DEBUG - sequence counter: 127
2025-01-18 18:54:08,419 - DEBUG - Request id: 1e1f2229-ec11-4bf4-b8bb-26081f137813
2025-01-18 18:54:08,419 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:54:08,419 - DEBUG - is_file_transfer: True
2025-01-18 18:54:08,419 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:08,419 - DEBUG - _cmd_query
2025-01-18 18:54:08,419 - DEBUG - serialize_to_dict() called
2025-01-18 18:54:08,419 - DEBUG - Cache Entry: (0, 1737248043815771, 0)
2025-01-18 18:54:08,419 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248043815771, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 18:54:08,419 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[127], is_file_transfer=[False]
2025-01-18 18:54:08,419 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:54:08,420 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:54:08,420 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:54:08,420 - DEBUG - Request guid: a8a9e098-33d4-4f6e-97bb-30326a92f3fe
2025-01-18 18:54:08,420 - DEBUG - socket timeout: 60
2025-01-18 18:54:08,510 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=1e1f2229-ec11-4bf4-b8bb-26081f137813&request_guid=a8a9e098-33d4-4f6e-97bb-30326a92f3fe HTTP/1.1" 200 2617
2025-01-18 18:54:08,511 - DEBUG - SUCCESS
2025-01-18 18:54:08,511 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:54:08,511 - DEBUG - ret[code] = None, after post request
2025-01-18 18:54:08,511 - DEBUG - Query id: 01b9ce16-0002-4c71-0007-08ea002021aa
2025-01-18 18:54:08,511 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248043903995, 'priority': 0, 'context': 'CMbjJA=='}]}
2025-01-18 18:54:08,511 - DEBUG - Cache Entry: (0, 1737248043815771, 0)
2025-01-18 18:54:08,511 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248043903995, 'priority': 0, 'context': 'CMbjJA=='}
2025-01-18 18:54:08,512 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:54:08,512 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:08,512 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:08,512 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:54:08,512 - DEBUG - Cache Entry: (0, 1737248043903995, 0)
2025-01-18 18:54:08,512 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:08,512 - DEBUG - sfqid: 01b9ce16-0002-4c71-0007-08ea002021aa
2025-01-18 18:54:08,512 - DEBUG - query execution done
2025-01-18 18:54:08,512 - DEBUG - SUCCESS
2025-01-18 18:54:08,512 - DEBUG - PUT OR GET: False
2025-01-18 18:54:08,512 - DEBUG - Query result format: arrow
2025-01-18 18:54:08,512 - INFO - Number of results in first chunk: 54
2025-01-18 18:54:08,512 - DEBUG - Execute query [queryID: 01b9ce16-0002-4c71-0007-08ea002021aa]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:54:08,512 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:54:08,512 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:54:08,512 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:54:08,512 - DEBUG - Batches read: 0
2025-01-18 18:54:08,512 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:54:08,512 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:54:08,519 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:54:08,520 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:54:09,143 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:54:09,168 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:54:09,169 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:54:09,552 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:54:09,575 - DEBUG - Starting new HTTP connection (1): api.openweathermap.org:80
2025-01-18 18:54:09,720 - DEBUG - http://api.openweathermap.org:80 "GET /data/3.0/onecall?lat=44.9452993&lon=-93.0920953&appid=cda556004c6679cd7773dfc27c7be9a7&exclude=current,minutely,hourly,alerts&units=imperial HTTP/1.1" 200 4451
2025-01-18 18:54:09,722 - DEBUG - calling method search on class CortexSearchServiceResource after submitting telemetry if enabled
2025-01-18 18:54:09,722 - INFO - performing a HTTP POST call to /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query
2025-01-18 18:54:09,722 - DEBUG - request has path params: {'database': 'DEV_SRC_INGEST', 'schema': 'EPA_PROCESSED', 'service_name': 'CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST'}, query_params: [], header params: {'Accept': 'application/json', 'Content-Type': 'application/json'} and body: QueryRequest(query='whats the weather tomorrow?', columns=['chunk', 'relative_path', 'PRODUCTNAME', 'COMPANYNAME', 'CATEGORY_EPA_TYPE', 'SIGNAL_WORD'], filter=None, limit=10, experimental=None)
2025-01-18 18:54:09,723 - DEBUG - making an http POST call to 'https://gmcpdcz-mt01740.snowflakecomputing.com:443/api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query'
2025-01-18 18:54:09,723 - DEBUG - Resetting dropped connection: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:54:10,167 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query HTTP/1.1" 200 None
2025-01-18 18:54:10,167 - DEBUG - created a RESTResponse with status 200 and length of 17820
2025-01-18 18:54:10,167 - DEBUG - response body: b'{\n  "results" : [ {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "",\n    "chunk" : "[and] [first aid] statements] [[use] directions [for use]]\\\\n* 0 Peel [back] [book] [here] [to open] [>] [->] {may be accompanied by an ar- row or other indicator}\\\\n* o Peel here [for [additional] [more] [complete] label instructions]. {may be accompanied by an arrow or other graphic indicating location of peel back corner}\\\\n* Hotline Number Text {may be used in place of or in addition to the current \\\\\\"Hot Line Number 1-800-255-3924\\\\\\"}\\\\n* { } Symbolizes explanatory text to the reviewer\\\\n\\\\n* [ ] Indicates optional text\\\\n  \\\\nMASTER LABELRevision Date: 2017-09-06 v2  \\\\nMASTER LABEL Revision Date: 2017-09-06 v2 SOILGARD@ WDG, EPA File Symbol 70051-RER (121) Revises: 2017-09-06 Draft v1  \\\\nSOILGARD@ WDG, EPA File Symbol 70051-RER (121)  \\\\nRevises: 2017-09-06 Draft v1\\\\n* In the event of a medical or chemical emergency, [\\\\n  \\\\nIn the event of a medical or chemical ChemTel INc.KK contact North  \\\\nChemTel INC.INc.KK contact North America 1-800-255-3924 or Worldwide Intl. +01-813-248-0585.\\\\n* o In case of emergency [endangering health or the environment] [involving this product], call [INFOTRAC] [other hotline] at [phone number].\\\\n  \\\\nPRN 97-4 Access Numbers/Website References\\\\n* 0 Visit us at: [company website address}\\\\n* 0 [Product] Questions[?] [company phone number]\\\\n* o Comments[?]: [company phone number and/or website address]\\\\n  \\\\n. Other Miscellaneous Items\\\\n* o Barcodes/SKUs\\\\n* o Label revision numbers\\\\n* Allow the insertion of \\\\\\"this product\\\\\\" in place of the product name every- where it",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "SoilGard WDG",\n    "relative_path" : "EPA_LABEL_PDF/SoilGard_WDG_70051-121.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "CATEGORY_EPA_TYPE" : "",\n    "chunk" : "[to open] [>] [->] {may be accompanied by an ar- row or other indicator}\\\\n* 0 Peel here [for [additional] [more] [complete] label instructions]. {may be accompanied by an arrow or other graphic indicating location of peel back corner}\\\\n* { } Symbolizes explanatory text to the reviewer\\\\n[ ] Indicates optional textRevision Date: 2017-09-06 v2\\\\n# MASTER LABEL\\\\n  \\\\nMASTER LABEL Revision Date: 2017-09-06 v2 SOILGARD@ WDG, EPA File Symbol 70051-RER (121 Revises: 2017-09-06 Draft v1  \\\\nSOILGARD@ WDG, EPA File Symbol 70051-RER (121  \\\\n2017-09-06 Draft v1\\\\n* . Hotline Number Text {may be used in place of or in addition to the current \\\\\\"Hot Line Number 1-800-255-3924\\\\\\"}\\\\n* o_ In the event of a medical or chemical emergency, [\\\\n  \\\\nChemTel INC.INC. contact North America 1-800-255-3924 or Worldwide Intl. +01-813-248-0585.\\\\n* o In case of emergency [endangering health or the environment] [involving this product], call [INFOTRAC] [other hotline] at [phone number]\\\\n  \\\\nPRN 97-4 Access Numbers/Website References\\\\n* 0 Visit us at: [company website address}\\\\n* 0 [Product] Questions[?] [company phone number]\\\\n* Comments[?]: [company phone number and/or website address]\\\\n  \\\\nOther Miscellaneous Items\\\\n* o Barcodes/SKUs\\\\n* o Label revision numbers\\\\n* Allow the insertion of \\\\\\"this product\\\\\\" in place of the product name every- where it appears in the directions for use.\\\\n* 0 Allow the use of equivalent units of measures (e.g., \\\\\\"1% \\\\\\" in place of \\\\\\"1.5\\\\\\") and appropriate equivalent abbreviations (e.g., \\\\\\"2-4",\n    "PRODUCTNAME" : "SoilGard WDG",\n    "relative_path" : "EPA_LABEL_PDF/SoilGard_WDG_70051-121.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"INSECTICIDE\\"\\n]",\n    "chunk" : "to remain close. to the ground and move laterally in a concentrated cloud. Temperature inversions are characterized by increasing temperature with altitude and are common on nights with limited cloud cover and light to no wind. They begin to form as the sun sets and often continue into the morning. Their presence can be indicated by ground fog. However, if fog is not present, the movement of smoke from a ground source can also identify inversions. Smoke that layers and moves laterally in a concentrated cloud (under low wind conditions) indicates an inversion, while smoke that moves upward and rapidly dissipates indicates good vertical mixing.\\\\n## No-Spray Zone Requirements for Foliar Applications\\\\nDo not apply by ground within 25 feet, or by air within 150 feet of lakes; reservoirs; rivers; permanent streams, marshes or natural ponds; estuaries and commercial fish farm ponds.\\\\n## RUNOFF MANAGEMENT\\\\nThis product may contaminate water through runoff or drift of spray in wind. This product has a high potential for runoff for several weeks after application in the Run Off Management section directly following This product may contaminate water through runoff or drift of spray in wind. Poorly draining soils and soils with shallow water tables are more prone to produce runoff that contains this product. Do not cultivate within 10 feet of the aquatic areas to allow growth of a vegetative filter strip. A level well maintained vegetative buffer strip between areas to which this prod\xc3\xbcct is",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "Movento RC",\n    "relative_path" : "EPA_LABEL_PDF/Movento_RC_264-1170.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "",\n    "chunk" : "is made when heavy dew, fog, mist or rain are present or when weeds are under stress due to drought, cool temperatures, or extended periods of cloudiness.When applying for control of lambsquarters and velvetleaf, make applications between dawn and 2 hours before sunset to avoid the possibility of reduced control.The addition of ammonium sulfate at 1.5 Ibs to 3.0 lbs/acre may improve weed control. Rates are dependent on tankmix partners, environmental conditions, temperatures and potential for leaf burn.S pray volume of 15 gallons of water per acre minimum. If dense canopy, large weeds or unfavorable growing conditions are present, increase water volume to 20 gallons of water per acre.For optimal yield, early season weed removal is important.\\\\n## To maximize weed control, DO NOT cultivate from 5 days before an application to 7 days after an application.\\\\nGFA 280 herbicide is rainfast 4 hours after application; therefore rainfall within 4 hours may necessitate retreatment.Consult your local Cooperative Extension Service for guidelines on optimum application timing for GFA 280 Herbicide in your region.\\\\n|COTTON||\\\\n| :---: | :---: |\\\\n|||\\\\n|OPTION 1(choose one of two use scenarios) Burndown (P rior to Planting or P rior to Crop Emergence) In-Season (Post E mergent to the Crop)|1st application 29.0 - 43.0 fl oz/A (0.53 - 0.79 Ibs ai/A) 2nd application 22.0 - 29.0 fl oz/A (0.40 - 0.53 lbs ai/A)|\\\\n|Directions:||\\\\n|. Apply to emerged, young, actively growing weeds. Uniform, thorough spray",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "relative_path" : "EPA_LABEL_PDF/GFA_280_HERBICIDE_264-1224.pdf",\n    "PRODUCTNAME" : "GFA 280 HERBICIDE"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "",\n    "chunk" : "WIND\\\\nDrift potential increases at wind speeds of less than 3. mph (due to inversion potential) or more than 10 mph. However, many factors, including droplet size and equipment type determine drift potential at any given wind speed. AVOID APPLICATIONS DURING GUSTY OR WINDLESS CONDITIONS:Note: Local terrain can influence wind patterns. Every applicator needs to be familiar be familiar with local windpatterns and how they affect spray drift.\\\\n## TEMPERATURE AND HUMIDITY\\\\nWhen making applications in hot and dry conditions, set up equipment to produce larger droplets to reduce effects of evaporation.\\\\n## TEMPERATURE INVERSIONS\\\\nDrift potential is high during a temperature inversion. Temperature inversions restrict vertical air mixing, which causessmall suspended droplets to remain close to the ground and move laterally in a concentrated cloud. Temperature inversions are characterized by increasing temperature with altitude and are common on nights with limited cloud cover and light to no wind. They begin to form as the sun sets and often continue into the morning. Their presence can be indicated by ground fog; however, if fog is not present, inversions can also be identified by the movement of smoke from a ground source or an aircraft smoke generator. Smoke that layers and moves laterally in a concentratedcloud (under low wind conditions) indicates an inversion, while smoke that moves upward and rapidly dissipates indicates good vertical air mixing.\\\\n## SHIELDED SPRAYERS\\\\nShielding the boom",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "GFA 280 HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/GFA_280_HERBICIDE_264-1224.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "drift\\\\n## Temperature and Humidity\\\\nWhen making applications in low relative humidity, set up equipment to produce larger droplets to compensate for evaporation. Droplet evaporation is most severe when conditions are both hot and dry.\\\\n## Temperature Inversions\\\\nApplications should not occur during a temperature inversion because drift potential is high. Temperature inversions restrict vertical air mixing, which causes small suspended droplets to remain in a concentrated cioud. This cloud can move in unpredictable directions due to the light variable winds common during inversions. Temperature inversions are characterized by increasing temperatures with altitude and are common on nights with limited cloud cover and light to no wind. They begin to forn as the sunsets and often continue into the morning. Their presence can be indicated by ground fog; however, if fog is not present, inversions can also be identified by the movement of smoke from a ground source or an aircraft smoke generator. Smoke that layers and moves lateraliy in a concentrated cloud (under low wind conditions) indicates an inversion, while smoke that moves upward and rapidly dissipates indicates good vertical air mixing.\\\\n## Sensitive Areas\\\\nThis product should only be applied when the potential for drift to adjacent sensitive areas (e.g. residential areas, bodies of water, known habitat for threatened or endangered species, non-target crops) is minimal (e.g. when wind is blowing away from the sensitive areas).\\\\n## 7.1",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"INSECTICIDE\\"\\n]",\n    "chunk" : "(OBs) per Liter.\\\\n||KEEP OUT OF REACH OF|CHILDREN|\\\\n| :---: | :---: | :---: |\\\\n||CAUTION||\\\\n  \\\\nNet Contents:- [6 fluid ounces,[1 Quart]\\\\n## Lot No.:\\\\nEPA Reg. No. 70051-112 EPA Est. No. 70051-CA-001Manufactured by: Certis USA LLC 9145 Guilford Road Suite 175 Columbia, MD 21046  \\\\nCERTIS CERTIS Biologicals  \\\\nSee [InsideTSide][PanelTPanels] for [Additional][Precautionary StatementsT,] [Directions for Use][,1[and][Storage and Disposal]SEE SIDE PANEL FOR ADDITlONAL PRECAUTIONARY STATEMENTS See inside panels for First Aid, Additional Precautionary Statements, and Directions For Use and Warranty StatementCYD-X@ PLUS is an insecticidal virus product for control of larvae of the codling moth. Read this label carefully. Refer to the Technical Bulletin for Additional Guidelines for Use.{} Symbolizes explanatory text to the reviewer[] Indicates optional text  \\\\nRevision Date: 2024-08-05 Revises: 2024-06-11 ESLCYD-X PLUS Master Label Notification- Graphics{ } Symbolizes explanatory text to the reviewer[ ] Indicates optional text  \\\\nRevision Date: 2024-08-05 Revises: 2024-06-11 ESLCYD-X PLUS Master Label Notification- Graphics\\\\n|inhaled: Move person to fresh air. If person is not breathing, call 911 or an ambulance, then give artificial respiration, preferably by.mouth-to-mouth, if possible. Call a poison control center or doctor treatment advice.|\\\\n| :---: |\\\\n|on skin or clothing: Take off contaminated clothing. Rinse skin immediately with plenty of water 15-20 minutes. Call a poison control",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "CYD-X PLUS",\n    "relative_path" : "EPA_LABEL_PDF/CYD-X_PLUS_70051-112.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "influence wind patterns. Every applicator should be familiar with local wind patterns and how they affect drift.\\\\n## Temperature and Humidity\\\\nWhen making applications in low relative humidity, set up equipment to produce larger droplets to compensate for evaporation. Droplet evaporation is most severe when conditions are both hot and dry.\\\\n## Temperature Inversions\\\\nApplications should not occur during a temperature inversion because drift potential is high. Temperature inversions restrict vertical air mixing, which causes small suspended droplets to remain in a concentrated cloud. This cloud can move in unpredictable directions due to the light variable winds common during inversions. Temperature inversions are characterized by increasing temperatures with altitude and are common on nights with limited cloud cover and light to no wind. They begin to form as the sun sets and often continue into the morning. Their presence can be indicated by ground fog; however, if fog is not present, the movement of smoke produced by a ground source or an aircraft smoke generator can also identify temperature inversions. Smoke that layers and moves laterally in a concentrated cloud (under low wind conditions) indicates an inversion, while smoke that moves upward and rapidly dissipates indicates good vertical air mixing.\\\\n## Sensitive Areas\\\\nApply this product only when the potential for drift to adjacent sensitive areas (e.g. residential areas, bodies of water, known habitat for threatened or",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "",\n    "chunk" : "Code: Net Weight:  \\\\nMANUFACTURED BY :  \\\\nCertis USA LLC 9145 Guilford Road, Suite 175 Columbia, MD 21046  \\\\nCERTIS{} Symbolizes explanatory text to the reviewer[ ] Indicates optional text  \\\\nMASTER LABELRevision Date: 2017-09-06 v2  \\\\nRevision Date: 2017-09-06 SOILGARD@ WDG, EPA File Symbol 70051-RER (121 Revises: 2017-09-06 Draft v1  \\\\nSOILGARD@ WDG, EPA File Symbol 70051-RER (121  \\\\n2017-09-06 Draft v1\\\\n||FIRST AID|\\\\n| :---: | :---: |\\\\n|If|Move person to fresh air. If person is not breathing, call 911 or an ambu-|\\\\n|son|center or doctor for treatment advice.|\\\\n|Have|product container or label with you when calling a poison control center or|\\\\n|doctor,|or going for treatment. Hot Line Number: 1-800-255-3924.|\\\\n\\\\n## PRECAUTIONARY STATEMENTS HAZARDS TO HUMANS AND DOMESTIC ANIMALS\\\\nCAUTloN: Harmful if inhaled. Avoid breathing dust or spray mist. Remove and wash contaminated clothing before reuse.  \\\\nPERSONAL PROTECTIVE EQUIPMENT  \\\\nApplicators and other handlers must wear:\\\\n* . Long-sleeved shirt and long pants\\\\n* : Shoes plus socks\\\\n  \\\\nMixer/loaders and applicators must wear:\\\\n* . NIOSH-approved particulate respirator with any N, R, or P filter with NIOSH approv- al number prefix TC-84A (if tank mixing with any oil-based adjuvants, spreaders, or spreader/stickers, use only R or P filters); or\\\\n* . NIOSH-approved powered air purifying respirator with an HE filter with NIOSH ap- proval number prefix TC-21C.\\\\n* . Repeated exposure to high concentrations of microbial proteins can cause",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "SoilGard WDG",\n    "relative_path" : "EPA_LABEL_PDF/SoilGard_WDG_70051-121.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "chunk" : "Road, Suite 175 Columbia,MD 21046  \\\\nCERTIS{} Symbolizes explanatory text to the reviewer[] Indicates optional textRevision Date: 2019-10-15  \\\\nMASTER LABEL  \\\\nSil-MATRIX@ LC,EPA File Symbol 70051-RET  \\\\nRevises: 2019-06-21 draft\\\\n||FIRST AID|\\\\n| :---: | :---: |\\\\n|If in eyes:|Hold eye open and rinse slowly and gently with water for 15 - 20 minutes. Remove contact lenses, if present, after the first 5 minutes, then continue rinsing eye. Call a poison control center or doctor for treatment advice.|\\\\n|If on skin or clothing:|Take off contaminated clothing. Rinse skin immediately with plenty of water for 15 - 20 minutes Call a poison control center or doctor for treatment advice.|\\\\n|Hotline Number: Have the center or doctor, or going for emergency medical|product container or label with you when calling a poison control for treatment. You may also contact 1-800-255-3924 day or night, treatment information.|\\\\n\\\\n## PRECAUTIONARY STATEMENTS HAZARDS TO HUMANS AND DOMESTIC ANIMALS\\\\nCAuTION: Causes moderate eye irritation. Do not get in eyes or on clothing. Wear goggles or face shield when handling concentrate. After product is diluted in accordance with the directions for use, goggles or face shield are not required. Avoid contact with skin, eyes or clothing. Wash thoroughly with soap and water after handling and before eating, drinking, chewing gum, or using tobacco. Wear appropriate personal protective equipment (PPE).  \\\\nPERSONAL PROTECTIVE EQUIPMENT  \\\\nApplicators and other handlers must",\n    "CATEGORY_EPA_TYPE" : "",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "PRODUCTNAME" : "Sil-MATRIX LC",\n    "relative_path" : "EPA_LABEL_PDF/Sil-MATRIX_LC_70051-127.pdf"\n  } ],\n  "request_id" : "057d22ac-c182-494a-952e-fe3f531dfa83"\n}'
2025-01-18 18:54:10,171 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:54:10,173 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:54:10,602 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:54:14,723 - DEBUG - executing SQL/command
2025-01-18 18:54:14,724 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/Moven...]
2025-01-18 18:54:14,724 - DEBUG - sequence counter: 128
2025-01-18 18:54:14,724 - DEBUG - Request id: dc340c11-935f-4ef7-aeaf-a208bdebea89
2025-01-18 18:54:14,724 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/Moven...]
2025-01-18 18:54:14,724 - DEBUG - is_file_transfer: True
2025-01-18 18:54:14,724 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:14,724 - DEBUG - _cmd_query
2025-01-18 18:54:14,724 - DEBUG - serialize_to_dict() called
2025-01-18 18:54:14,724 - DEBUG - Cache Entry: (0, 1737248043903995, 0)
2025-01-18 18:54:14,724 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248043903995, 'priority': 0, 'context': {'base64Data': 'CMbjJA=='}}]}
2025-01-18 18:54:14,724 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/Moven...], sequence_id=[128], is_file_transfer=[False]
2025-01-18 18:54:14,725 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:54:14,725 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:54:14,725 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:54:14,725 - DEBUG - Request guid: 75d7ea3b-a9dd-4606-805c-4e8901b647a5
2025-01-18 18:54:14,725 - DEBUG - socket timeout: 60
2025-01-18 18:54:15,103 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=dc340c11-935f-4ef7-aeaf-a208bdebea89&request_guid=75d7ea3b-a9dd-4606-805c-4e8901b647a5 HTTP/1.1" 200 3459
2025-01-18 18:54:15,104 - DEBUG - SUCCESS
2025-01-18 18:54:15,104 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:54:15,104 - DEBUG - ret[code] = None, after post request
2025-01-18 18:54:15,104 - DEBUG - Query id: 01b9ce16-0002-4c70-0007-08ea00204072
2025-01-18 18:54:15,104 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248050499792, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:54:15,104 - DEBUG - Cache Entry: (0, 1737248043903995, 0)
2025-01-18 18:54:15,104 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248050499792, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:54:15,104 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:54:15,104 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:15,104 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:15,104 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:54:15,104 - DEBUG - Cache Entry: (0, 1737248050499792, 0)
2025-01-18 18:54:15,105 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:15,105 - DEBUG - sfqid: 01b9ce16-0002-4c70-0007-08ea00204072
2025-01-18 18:54:15,105 - DEBUG - query execution done
2025-01-18 18:54:15,105 - DEBUG - SUCCESS
2025-01-18 18:54:15,105 - DEBUG - PUT OR GET: False
2025-01-18 18:54:15,105 - DEBUG - Query result format: arrow
2025-01-18 18:54:15,105 - INFO - Number of results in first chunk: 54
2025-01-18 18:54:15,105 - DEBUG - Execute query [queryID: 01b9ce16-0002-4c70-0007-08ea00204072] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/Movento_RC_264-1170.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:54:15,105 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:54:15,105 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:54:15,105 - DEBUG - Batches read: 1
2025-01-18 18:54:15,106 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:54:15,108 - DEBUG - executing SQL/command
2025-01-18 18:54:15,108 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SoilG...]
2025-01-18 18:54:15,108 - DEBUG - sequence counter: 129
2025-01-18 18:54:15,108 - DEBUG - Request id: 9e86e6b4-44da-43ce-bff6-5665c02215e6
2025-01-18 18:54:15,109 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SoilG...]
2025-01-18 18:54:15,109 - DEBUG - is_file_transfer: True
2025-01-18 18:54:15,109 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:15,109 - DEBUG - _cmd_query
2025-01-18 18:54:15,109 - DEBUG - serialize_to_dict() called
2025-01-18 18:54:15,109 - DEBUG - Cache Entry: (0, 1737248050499792, 0)
2025-01-18 18:54:15,109 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248050499792, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:54:15,109 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SoilG...], sequence_id=[129], is_file_transfer=[False]
2025-01-18 18:54:15,110 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:54:15,110 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:54:15,110 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:54:15,110 - DEBUG - Request guid: bde45ffa-99a2-46b1-bc9c-3a1fde8e8456
2025-01-18 18:54:15,110 - DEBUG - socket timeout: 60
2025-01-18 18:54:15,265 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=9e86e6b4-44da-43ce-bff6-5665c02215e6&request_guid=bde45ffa-99a2-46b1-bc9c-3a1fde8e8456 HTTP/1.1" 200 3471
2025-01-18 18:54:15,265 - DEBUG - SUCCESS
2025-01-18 18:54:15,265 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:54:15,265 - DEBUG - ret[code] = None, after post request
2025-01-18 18:54:15,265 - DEBUG - Query id: 01b9ce16-0002-4c79-0007-08ea0020027a
2025-01-18 18:54:15,265 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248050638725, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:54:15,265 - DEBUG - Cache Entry: (0, 1737248050499792, 0)
2025-01-18 18:54:15,266 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248050638725, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:54:15,266 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:54:15,266 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:15,266 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:15,266 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:54:15,266 - DEBUG - Cache Entry: (0, 1737248050638725, 0)
2025-01-18 18:54:15,266 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:15,266 - DEBUG - sfqid: 01b9ce16-0002-4c79-0007-08ea0020027a
2025-01-18 18:54:15,266 - DEBUG - query execution done
2025-01-18 18:54:15,266 - DEBUG - SUCCESS
2025-01-18 18:54:15,266 - DEBUG - PUT OR GET: False
2025-01-18 18:54:15,266 - DEBUG - Query result format: arrow
2025-01-18 18:54:15,266 - INFO - Number of results in first chunk: 54
2025-01-18 18:54:15,266 - DEBUG - Execute query [queryID: 01b9ce16-0002-4c79-0007-08ea0020027a] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SoilGard_WDG_70051-121.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:54:15,267 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:54:15,267 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:54:15,267 - DEBUG - Batches read: 1
2025-01-18 18:54:15,267 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:54:15,269 - DEBUG - executing SQL/command
2025-01-18 18:54:15,269 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/GFA_2...]
2025-01-18 18:54:15,269 - DEBUG - sequence counter: 130
2025-01-18 18:54:15,269 - DEBUG - Request id: 265c035f-66fa-4ba8-923b-335965966769
2025-01-18 18:54:15,269 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/GFA_2...]
2025-01-18 18:54:15,269 - DEBUG - is_file_transfer: True
2025-01-18 18:54:15,269 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:15,269 - DEBUG - _cmd_query
2025-01-18 18:54:15,269 - DEBUG - serialize_to_dict() called
2025-01-18 18:54:15,269 - DEBUG - Cache Entry: (0, 1737248050638725, 0)
2025-01-18 18:54:15,269 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248050638725, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:54:15,269 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/GFA_2...], sequence_id=[130], is_file_transfer=[False]
2025-01-18 18:54:15,270 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:54:15,272 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:54:15,272 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:54:15,272 - DEBUG - Request guid: 201eec1c-840d-4fc5-9304-c53d24982286
2025-01-18 18:54:15,272 - DEBUG - socket timeout: 60
2025-01-18 18:54:15,406 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=265c035f-66fa-4ba8-923b-335965966769&request_guid=201eec1c-840d-4fc5-9304-c53d24982286 HTTP/1.1" 200 2708
2025-01-18 18:54:15,406 - DEBUG - SUCCESS
2025-01-18 18:54:15,407 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:54:15,407 - DEBUG - ret[code] = None, after post request
2025-01-18 18:54:15,407 - DEBUG - Query id: 01b9ce16-0002-4d87-0007-08ea001fe736
2025-01-18 18:54:15,407 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248050802369, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:54:15,407 - DEBUG - Cache Entry: (0, 1737248050638725, 0)
2025-01-18 18:54:15,407 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248050802369, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:54:15,407 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:54:15,407 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:15,407 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:15,407 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:54:15,407 - DEBUG - Cache Entry: (0, 1737248050802369, 0)
2025-01-18 18:54:15,407 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:15,407 - DEBUG - sfqid: 01b9ce16-0002-4d87-0007-08ea001fe736
2025-01-18 18:54:15,407 - DEBUG - query execution done
2025-01-18 18:54:15,407 - DEBUG - SUCCESS
2025-01-18 18:54:15,407 - DEBUG - PUT OR GET: False
2025-01-18 18:54:15,407 - DEBUG - Query result format: arrow
2025-01-18 18:54:15,408 - INFO - Number of results in first chunk: 54
2025-01-18 18:54:15,408 - DEBUG - Execute query [queryID: 01b9ce16-0002-4d87-0007-08ea001fe736] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/GFA_280_HERBICIDE_264-1224.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:54:15,408 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:54:15,408 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:54:15,408 - DEBUG - Batches read: 1
2025-01-18 18:54:15,408 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:54:15,410 - DEBUG - executing SQL/command
2025-01-18 18:54:15,410 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/Sil-M...]
2025-01-18 18:54:15,411 - DEBUG - sequence counter: 131
2025-01-18 18:54:15,411 - DEBUG - Request id: ed3324b6-79f9-4457-bd22-03af2789ca75
2025-01-18 18:54:15,411 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/Sil-M...]
2025-01-18 18:54:15,411 - DEBUG - is_file_transfer: True
2025-01-18 18:54:15,411 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:15,411 - DEBUG - _cmd_query
2025-01-18 18:54:15,411 - DEBUG - serialize_to_dict() called
2025-01-18 18:54:15,411 - DEBUG - Cache Entry: (0, 1737248050802369, 0)
2025-01-18 18:54:15,411 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248050802369, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:54:15,411 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/Sil-M...], sequence_id=[131], is_file_transfer=[False]
2025-01-18 18:54:15,412 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:54:15,412 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:54:15,412 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:54:15,412 - DEBUG - Request guid: 3baa2c91-fbcb-4194-99dc-2fd6d1d5512f
2025-01-18 18:54:15,412 - DEBUG - socket timeout: 60
2025-01-18 18:54:15,744 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=ed3324b6-79f9-4457-bd22-03af2789ca75&request_guid=3baa2c91-fbcb-4194-99dc-2fd6d1d5512f HTTP/1.1" 200 2699
2025-01-18 18:54:15,745 - DEBUG - SUCCESS
2025-01-18 18:54:15,745 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:54:15,745 - DEBUG - ret[code] = None, after post request
2025-01-18 18:54:15,745 - DEBUG - Query id: 01b9ce16-0002-4c5d-0007-08ea001fce4e
2025-01-18 18:54:15,745 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248051118901, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:54:15,746 - DEBUG - Cache Entry: (0, 1737248050802369, 0)
2025-01-18 18:54:15,746 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248051118901, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:54:15,746 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:54:15,746 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:15,746 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:15,746 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:54:15,746 - DEBUG - Cache Entry: (0, 1737248051118901, 0)
2025-01-18 18:54:15,746 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:15,746 - DEBUG - sfqid: 01b9ce16-0002-4c5d-0007-08ea001fce4e
2025-01-18 18:54:15,746 - DEBUG - query execution done
2025-01-18 18:54:15,746 - DEBUG - SUCCESS
2025-01-18 18:54:15,746 - DEBUG - PUT OR GET: False
2025-01-18 18:54:15,746 - DEBUG - Query result format: arrow
2025-01-18 18:54:15,746 - INFO - Number of results in first chunk: 54
2025-01-18 18:54:15,746 - DEBUG - Execute query [queryID: 01b9ce16-0002-4c5d-0007-08ea001fce4e] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/Sil-MATRIX_LC_70051-127.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:54:15,746 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:54:15,746 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:54:15,746 - DEBUG - Batches read: 1
2025-01-18 18:54:15,747 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:54:15,748 - DEBUG - executing SQL/command
2025-01-18 18:54:15,749 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...]
2025-01-18 18:54:15,749 - DEBUG - sequence counter: 132
2025-01-18 18:54:15,749 - DEBUG - Request id: c69b1e7a-b93a-4915-b161-4745cea43753
2025-01-18 18:54:15,749 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...]
2025-01-18 18:54:15,749 - DEBUG - is_file_transfer: True
2025-01-18 18:54:15,750 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:15,750 - DEBUG - _cmd_query
2025-01-18 18:54:15,750 - DEBUG - serialize_to_dict() called
2025-01-18 18:54:15,750 - DEBUG - Cache Entry: (0, 1737248051118901, 0)
2025-01-18 18:54:15,750 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248051118901, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:54:15,750 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...], sequence_id=[132], is_file_transfer=[False]
2025-01-18 18:54:15,751 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:54:15,751 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:54:15,751 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:54:15,751 - DEBUG - Request guid: c5fb503a-ee46-41ad-b2c5-b0ddc5123086
2025-01-18 18:54:15,751 - DEBUG - socket timeout: 60
2025-01-18 18:54:15,899 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=c69b1e7a-b93a-4915-b161-4745cea43753&request_guid=c5fb503a-ee46-41ad-b2c5-b0ddc5123086 HTTP/1.1" 200 3517
2025-01-18 18:54:15,900 - DEBUG - SUCCESS
2025-01-18 18:54:15,900 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:54:15,900 - DEBUG - ret[code] = None, after post request
2025-01-18 18:54:15,900 - DEBUG - Query id: 01b9ce16-0002-4c70-0007-08ea00204076
2025-01-18 18:54:15,900 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248051285678, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:54:15,900 - DEBUG - Cache Entry: (0, 1737248051118901, 0)
2025-01-18 18:54:15,900 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248051285678, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:54:15,900 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:54:15,900 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:15,901 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:15,901 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:54:15,901 - DEBUG - Cache Entry: (0, 1737248051285678, 0)
2025-01-18 18:54:15,901 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:15,901 - DEBUG - sfqid: 01b9ce16-0002-4c70-0007-08ea00204076
2025-01-18 18:54:15,901 - DEBUG - query execution done
2025-01-18 18:54:15,901 - DEBUG - SUCCESS
2025-01-18 18:54:15,901 - DEBUG - PUT OR GET: False
2025-01-18 18:54:15,901 - DEBUG - Query result format: arrow
2025-01-18 18:54:15,901 - INFO - Number of results in first chunk: 54
2025-01-18 18:54:15,901 - DEBUG - Execute query [queryID: 01b9ce16-0002-4c70-0007-08ea00204076] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:54:15,901 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:54:15,901 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:54:15,901 - DEBUG - Batches read: 1
2025-01-18 18:54:15,902 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:54:15,904 - DEBUG - executing SQL/command
2025-01-18 18:54:15,904 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/CYD-X...]
2025-01-18 18:54:15,904 - DEBUG - sequence counter: 133
2025-01-18 18:54:15,904 - DEBUG - Request id: 91f7570b-603b-453a-abfb-9df458bd6566
2025-01-18 18:54:15,904 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/CYD-X...]
2025-01-18 18:54:15,904 - DEBUG - is_file_transfer: True
2025-01-18 18:54:15,904 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:15,904 - DEBUG - _cmd_query
2025-01-18 18:54:15,905 - DEBUG - serialize_to_dict() called
2025-01-18 18:54:15,905 - DEBUG - Cache Entry: (0, 1737248051285678, 0)
2025-01-18 18:54:15,905 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248051285678, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:54:15,905 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/CYD-X...], sequence_id=[133], is_file_transfer=[False]
2025-01-18 18:54:15,905 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:54:15,905 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:54:15,906 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:54:15,906 - DEBUG - Request guid: d5ec48f3-5452-409a-9f10-28b5d468942d
2025-01-18 18:54:15,906 - DEBUG - socket timeout: 60
2025-01-18 18:54:16,046 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=91f7570b-603b-453a-abfb-9df458bd6566&request_guid=d5ec48f3-5452-409a-9f10-28b5d468942d HTTP/1.1" 200 2705
2025-01-18 18:54:16,047 - DEBUG - SUCCESS
2025-01-18 18:54:16,047 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:54:16,047 - DEBUG - ret[code] = None, after post request
2025-01-18 18:54:16,047 - DEBUG - Query id: 01b9ce16-0002-4c77-0007-08ea001fde2e
2025-01-18 18:54:16,047 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248051438862, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:54:16,047 - DEBUG - Cache Entry: (0, 1737248051285678, 0)
2025-01-18 18:54:16,047 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248051438862, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:54:16,047 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:54:16,047 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:16,047 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:54:16,047 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:54:16,047 - DEBUG - Cache Entry: (0, 1737248051438862, 0)
2025-01-18 18:54:16,047 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:54:16,047 - DEBUG - sfqid: 01b9ce16-0002-4c77-0007-08ea001fde2e
2025-01-18 18:54:16,048 - DEBUG - query execution done
2025-01-18 18:54:16,048 - DEBUG - SUCCESS
2025-01-18 18:54:16,048 - DEBUG - PUT OR GET: False
2025-01-18 18:54:16,048 - DEBUG - Query result format: arrow
2025-01-18 18:54:16,048 - INFO - Number of results in first chunk: 54
2025-01-18 18:54:16,048 - DEBUG - Execute query [queryID: 01b9ce16-0002-4c77-0007-08ea001fde2e] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/CYD-X_PLUS_70051-112.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:54:16,048 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:54:16,048 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:54:16,048 - DEBUG - Batches read: 1
2025-01-18 18:54:16,048 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:59:27,593 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:59:27,593 - INFO - Querying the server for client info
2025-01-18 18:59:27,593 - DEBUG - cursor
2025-01-18 18:59:27,593 - DEBUG - executing SQL/command
2025-01-18 18:59:27,594 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:59:27,594 - DEBUG - sequence counter: 134
2025-01-18 18:59:27,594 - DEBUG - Request id: d2f0a2ff-31ab-450c-a292-1c029045c31e
2025-01-18 18:59:27,594 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:59:27,594 - DEBUG - is_file_transfer: True
2025-01-18 18:59:27,594 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:27,594 - DEBUG - _cmd_query
2025-01-18 18:59:27,594 - DEBUG - serialize_to_dict() called
2025-01-18 18:59:27,594 - DEBUG - Cache Entry: (0, 1737248051438862, 0)
2025-01-18 18:59:27,594 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248051438862, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:59:27,595 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[134], is_file_transfer=[False]
2025-01-18 18:59:27,596 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:59:27,597 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:59:27,597 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:59:27,597 - DEBUG - Request guid: 03c02225-39cb-442a-bec6-33ae5cd249b3
2025-01-18 18:59:27,597 - DEBUG - socket timeout: 60
2025-01-18 18:59:27,599 - DEBUG - Resetting dropped connection: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:59:28,126 - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None
2025-01-18 18:59:28,127 - DEBUG - ocsp_response_cache_uri: file://C:/Users/ajjay/AppData/Local/Snowflake/Caches/ocsp_response_cache.json
2025-01-18 18:59:28,127 - DEBUG - OCSP_VALIDATION_CACHE size: 310
2025-01-18 18:59:28,127 - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json
2025-01-18 18:59:28,127 - DEBUG - OCSP dynamic cache server RETRY URL: None
2025-01-18 18:59:28,127 - DEBUG - validating certificate: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:59:28,127 - DEBUG - # of certificates: 4
2025-01-18 18:59:28,128 - DEBUG - subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:59:28,128 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:59:28,129 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:59:28,129 - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:59:28,131 - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])
2025-01-18 18:59:28,132 - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.us-east-2.snowflakecomputing.com')])
2025-01-18 18:59:28,134 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:59:28,134 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon RSA 2048 M02')])
2025-01-18 18:59:28,135 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2026-07-22 00:00:00+00:00
2025-01-18 18:59:28,136 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])
2025-01-18 18:59:28,137 - DEBUG - Verifying the attached certificate is signed by the issuer. Valid Not After: 2025-05-07 12:00:00+00:00
2025-01-18 18:59:28,137 - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])
2025-01-18 18:59:28,139 - DEBUG - ok
2025-01-18 18:59:28,279 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=d2f0a2ff-31ab-450c-a292-1c029045c31e&request_guid=03c02225-39cb-442a-bec6-33ae5cd249b3 HTTP/1.1" 200 2618
2025-01-18 18:59:28,279 - DEBUG - SUCCESS
2025-01-18 18:59:28,279 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:59:28,280 - DEBUG - ret[code] = None, after post request
2025-01-18 18:59:28,280 - DEBUG - Query id: 01b9ce1b-0002-4c70-0007-08ea002040a6
2025-01-18 18:59:28,280 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248363677477, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:59:28,280 - DEBUG - Cache Entry: (0, 1737248051438862, 0)
2025-01-18 18:59:28,280 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248363677477, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:59:28,280 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:59:28,280 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:28,280 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:28,280 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:59:28,280 - DEBUG - Cache Entry: (0, 1737248363677477, 0)
2025-01-18 18:59:28,280 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:28,280 - DEBUG - sfqid: 01b9ce1b-0002-4c70-0007-08ea002040a6
2025-01-18 18:59:28,280 - DEBUG - query execution done
2025-01-18 18:59:28,280 - DEBUG - SUCCESS
2025-01-18 18:59:28,280 - DEBUG - PUT OR GET: False
2025-01-18 18:59:28,280 - DEBUG - Query result format: arrow
2025-01-18 18:59:28,281 - INFO - Number of results in first chunk: 1
2025-01-18 18:59:28,281 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:59:28,281 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:59:28,281 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:59:28,281 - DEBUG - Batches read: 0
2025-01-18 18:59:28,281 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:59:28,281 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:59:28,281 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:59:28,281 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:59:28,281 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:59:28,282 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:59:28,282 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:59:28,283 - DEBUG - cursor
2025-01-18 18:59:28,284 - DEBUG - executing SQL/command
2025-01-18 18:59:28,284 - DEBUG - query: [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:59:28,284 - DEBUG - sequence counter: 135
2025-01-18 18:59:28,285 - DEBUG - Request id: 2241ec7a-cb24-4c4d-944b-b153e7539302
2025-01-18 18:59:28,285 - DEBUG - running query [SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...]
2025-01-18 18:59:28,285 - DEBUG - is_file_transfer: True
2025-01-18 18:59:28,285 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:28,285 - DEBUG - _cmd_query
2025-01-18 18:59:28,285 - DEBUG - serialize_to_dict() called
2025-01-18 18:59:28,285 - DEBUG - Cache Entry: (0, 1737248363677477, 0)
2025-01-18 18:59:28,285 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248363677477, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:59:28,285 - DEBUG - sql=[SELECT LOCATION, LATITUDE, LONGITUDE FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS WH...], sequence_id=[135], is_file_transfer=[False]
2025-01-18 18:59:28,286 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:59:28,286 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:59:28,286 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:59:28,286 - DEBUG - Request guid: 53944b46-5d78-499c-8b41-6e3282fe2a72
2025-01-18 18:59:28,286 - DEBUG - socket timeout: 60
2025-01-18 18:59:28,391 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=2241ec7a-cb24-4c4d-944b-b153e7539302&request_guid=53944b46-5d78-499c-8b41-6e3282fe2a72 HTTP/1.1" 200 2114
2025-01-18 18:59:28,392 - DEBUG - SUCCESS
2025-01-18 18:59:28,392 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:59:28,392 - DEBUG - ret[code] = None, after post request
2025-01-18 18:59:28,392 - DEBUG - Query id: 01b9ce1b-0002-4c5d-0007-08ea001fcea6
2025-01-18 18:59:28,392 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248363789074, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:59:28,392 - DEBUG - Cache Entry: (0, 1737248363677477, 0)
2025-01-18 18:59:28,392 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248363789074, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:59:28,393 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:59:28,393 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:28,393 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:28,393 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:59:28,393 - DEBUG - Cache Entry: (0, 1737248363789074, 0)
2025-01-18 18:59:28,393 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:28,393 - DEBUG - sfqid: 01b9ce1b-0002-4c5d-0007-08ea001fcea6
2025-01-18 18:59:28,393 - DEBUG - query execution done
2025-01-18 18:59:28,393 - DEBUG - SUCCESS
2025-01-18 18:59:28,393 - DEBUG - PUT OR GET: False
2025-01-18 18:59:28,393 - DEBUG - Query result format: arrow
2025-01-18 18:59:28,393 - INFO - Number of results in first chunk: 1
2025-01-18 18:59:28,393 - DEBUG - Execute query [queryID: 01b9ce1b-0002-4c5d-0007-08ea001fcea6] 
        SELECT LOCATION, LATITUDE, LONGITUDE
        FROM DEV_DP_APP.APP_ASSETS.USER_SETTINGS 
        WHERE USER_ID = 'default_user'
        
2025-01-18 18:59:28,393 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:59:28,394 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:59:28,394 - DEBUG - Arrow chunk info: batchCount 1, columnCount 3, use_numpy: 0
2025-01-18 18:59:28,394 - DEBUG - Batches read: 0
2025-01-18 18:59:28,394 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:59:28,394 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:59:28,399 - DEBUG - executing SQL/command
2025-01-18 18:59:28,399 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:59:28,399 - DEBUG - sequence counter: 136
2025-01-18 18:59:28,399 - DEBUG - Request id: dddef34a-cca0-4b1d-aa61-da6d1bf74d4b
2025-01-18 18:59:28,399 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:59:28,399 - DEBUG - is_file_transfer: True
2025-01-18 18:59:28,399 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:28,399 - DEBUG - _cmd_query
2025-01-18 18:59:28,399 - DEBUG - serialize_to_dict() called
2025-01-18 18:59:28,399 - DEBUG - Cache Entry: (0, 1737248363789074, 0)
2025-01-18 18:59:28,399 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248363789074, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:59:28,399 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[136], is_file_transfer=[False]
2025-01-18 18:59:28,400 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:59:28,400 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:59:28,400 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:59:28,400 - DEBUG - Request guid: e5981365-5cf7-44c2-a2f4-fbd43d9d0c50
2025-01-18 18:59:28,400 - DEBUG - socket timeout: 60
2025-01-18 18:59:28,471 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=dddef34a-cca0-4b1d-aa61-da6d1bf74d4b&request_guid=e5981365-5cf7-44c2-a2f4-fbd43d9d0c50 HTTP/1.1" 200 1503
2025-01-18 18:59:28,471 - DEBUG - SUCCESS
2025-01-18 18:59:28,471 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:59:28,471 - DEBUG - ret[code] = None, after post request
2025-01-18 18:59:28,471 - DEBUG - Query id: 01b9ce1b-0002-4c77-0007-08ea001fde92
2025-01-18 18:59:28,471 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248363862449, 'priority': 0, 'context': 'CN7jJA=='}]}
2025-01-18 18:59:28,471 - DEBUG - Cache Entry: (0, 1737248363789074, 0)
2025-01-18 18:59:28,471 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248363862449, 'priority': 0, 'context': 'CN7jJA=='}
2025-01-18 18:59:28,471 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:59:28,472 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:28,472 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:28,472 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:59:28,472 - DEBUG - Cache Entry: (0, 1737248363862449, 0)
2025-01-18 18:59:28,472 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:28,472 - DEBUG - sfqid: 01b9ce1b-0002-4c77-0007-08ea001fde92
2025-01-18 18:59:28,472 - DEBUG - query execution done
2025-01-18 18:59:28,472 - DEBUG - SUCCESS
2025-01-18 18:59:28,472 - DEBUG - PUT OR GET: False
2025-01-18 18:59:28,472 - DEBUG - Query result format: arrow
2025-01-18 18:59:28,472 - INFO - Number of results in first chunk: 0
2025-01-18 18:59:28,473 - DEBUG - executing SQL/command
2025-01-18 18:59:28,473 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:59:28,474 - DEBUG - sequence counter: 137
2025-01-18 18:59:28,474 - DEBUG - Request id: 97f93a9f-3845-4c90-aa2d-90cd90d216ce
2025-01-18 18:59:28,474 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:59:28,474 - DEBUG - is_file_transfer: True
2025-01-18 18:59:28,474 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:28,474 - DEBUG - _cmd_query
2025-01-18 18:59:28,474 - DEBUG - serialize_to_dict() called
2025-01-18 18:59:28,474 - DEBUG - Cache Entry: (0, 1737248363862449, 0)
2025-01-18 18:59:28,474 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248363862449, 'priority': 0, 'context': {'base64Data': 'CN7jJA=='}}]}
2025-01-18 18:59:28,474 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[137], is_file_transfer=[False]
2025-01-18 18:59:28,475 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:59:28,475 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:59:28,475 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:59:28,475 - DEBUG - Request guid: b66a1643-ad4e-431a-bb5b-1e82c1ca8cb2
2025-01-18 18:59:28,475 - DEBUG - socket timeout: 60
2025-01-18 18:59:28,579 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=97f93a9f-3845-4c90-aa2d-90cd90d216ce&request_guid=b66a1643-ad4e-431a-bb5b-1e82c1ca8cb2 HTTP/1.1" 200 1373
2025-01-18 18:59:28,580 - DEBUG - SUCCESS
2025-01-18 18:59:28,580 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:59:28,580 - DEBUG - ret[code] = None, after post request
2025-01-18 18:59:28,580 - DEBUG - Query id: 01b9ce1b-0002-4c72-0007-08ea00203136
2025-01-18 18:59:28,580 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248363972844, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:59:28,581 - DEBUG - Cache Entry: (0, 1737248363862449, 0)
2025-01-18 18:59:28,581 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248363972844, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:59:28,581 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:59:28,581 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:28,581 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:28,581 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:59:28,581 - DEBUG - Cache Entry: (0, 1737248363972844, 0)
2025-01-18 18:59:28,581 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:28,581 - DEBUG - sfqid: 01b9ce1b-0002-4c72-0007-08ea00203136
2025-01-18 18:59:28,581 - DEBUG - query execution done
2025-01-18 18:59:28,581 - DEBUG - SUCCESS
2025-01-18 18:59:28,581 - DEBUG - PUT OR GET: False
2025-01-18 18:59:28,581 - DEBUG - Query result format: arrow
2025-01-18 18:59:28,581 - INFO - Number of results in first chunk: 0
2025-01-18 18:59:28,582 - DEBUG - executing SQL/command
2025-01-18 18:59:28,583 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:59:28,583 - DEBUG - sequence counter: 138
2025-01-18 18:59:28,583 - DEBUG - Request id: be38e25b-cec7-4855-b817-9966f5a73ea4
2025-01-18 18:59:28,583 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:59:28,583 - DEBUG - is_file_transfer: True
2025-01-18 18:59:28,583 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:28,583 - DEBUG - _cmd_query
2025-01-18 18:59:28,583 - DEBUG - serialize_to_dict() called
2025-01-18 18:59:28,583 - DEBUG - Cache Entry: (0, 1737248363972844, 0)
2025-01-18 18:59:28,583 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248363972844, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:59:28,583 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[138], is_file_transfer=[False]
2025-01-18 18:59:28,584 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:59:28,585 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:59:28,585 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:59:28,585 - DEBUG - Request guid: b3b94758-38db-4e9e-a4b9-35460c5fa8f7
2025-01-18 18:59:28,585 - DEBUG - socket timeout: 60
2025-01-18 18:59:28,651 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=be38e25b-cec7-4855-b817-9966f5a73ea4&request_guid=b3b94758-38db-4e9e-a4b9-35460c5fa8f7 HTTP/1.1" 200 1377
2025-01-18 18:59:28,651 - DEBUG - SUCCESS
2025-01-18 18:59:28,651 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:59:28,651 - DEBUG - ret[code] = None, after post request
2025-01-18 18:59:28,651 - DEBUG - Query id: 01b9ce1b-0002-4c7a-0007-08ea001ff7a2
2025-01-18 18:59:28,651 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248363985622, 'priority': 0, 'context': 'COrjJA=='}]}
2025-01-18 18:59:28,651 - DEBUG - Cache Entry: (0, 1737248363972844, 0)
2025-01-18 18:59:28,651 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248363985622, 'priority': 0, 'context': 'COrjJA=='}
2025-01-18 18:59:28,652 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:59:28,652 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:28,652 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:28,652 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:59:28,652 - DEBUG - Cache Entry: (0, 1737248363985622, 0)
2025-01-18 18:59:28,652 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:28,652 - DEBUG - sfqid: 01b9ce1b-0002-4c7a-0007-08ea001ff7a2
2025-01-18 18:59:28,652 - DEBUG - query execution done
2025-01-18 18:59:28,652 - DEBUG - SUCCESS
2025-01-18 18:59:28,652 - DEBUG - PUT OR GET: False
2025-01-18 18:59:28,652 - DEBUG - Query result format: arrow
2025-01-18 18:59:28,652 - INFO - Number of results in first chunk: 0
2025-01-18 18:59:28,653 - DEBUG - executing SQL/command
2025-01-18 18:59:28,653 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:59:28,653 - DEBUG - sequence counter: 139
2025-01-18 18:59:28,653 - DEBUG - Request id: 8d52ccba-96cd-4a0c-92b9-db0bd7194f54
2025-01-18 18:59:28,653 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:59:28,653 - DEBUG - is_file_transfer: True
2025-01-18 18:59:28,653 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:28,653 - DEBUG - _cmd_query
2025-01-18 18:59:28,653 - DEBUG - serialize_to_dict() called
2025-01-18 18:59:28,653 - DEBUG - Cache Entry: (0, 1737248363985622, 0)
2025-01-18 18:59:28,653 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248363985622, 'priority': 0, 'context': {'base64Data': 'COrjJA=='}}]}
2025-01-18 18:59:28,653 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[139], is_file_transfer=[False]
2025-01-18 18:59:28,654 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:59:28,654 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:59:28,654 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:59:28,654 - DEBUG - Request guid: febbd683-13ff-4c8f-952c-22675cf54472
2025-01-18 18:59:28,654 - DEBUG - socket timeout: 60
2025-01-18 18:59:28,770 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=8d52ccba-96cd-4a0c-92b9-db0bd7194f54&request_guid=febbd683-13ff-4c8f-952c-22675cf54472 HTTP/1.1" 200 2613
2025-01-18 18:59:28,770 - DEBUG - SUCCESS
2025-01-18 18:59:28,771 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:59:28,771 - DEBUG - ret[code] = None, after post request
2025-01-18 18:59:28,771 - DEBUG - Query id: 01b9ce1b-0002-4c70-0007-08ea002040aa
2025-01-18 18:59:28,771 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248364170980, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:59:28,771 - DEBUG - Cache Entry: (0, 1737248363985622, 0)
2025-01-18 18:59:28,771 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248364170980, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:59:28,771 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:59:28,771 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:28,771 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:28,771 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:59:28,771 - DEBUG - Cache Entry: (0, 1737248364170980, 0)
2025-01-18 18:59:28,771 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:28,772 - DEBUG - sfqid: 01b9ce1b-0002-4c70-0007-08ea002040aa
2025-01-18 18:59:28,772 - DEBUG - query execution done
2025-01-18 18:59:28,772 - DEBUG - SUCCESS
2025-01-18 18:59:28,772 - DEBUG - PUT OR GET: False
2025-01-18 18:59:28,772 - DEBUG - Query result format: arrow
2025-01-18 18:59:28,772 - INFO - Number of results in first chunk: 54
2025-01-18 18:59:28,772 - DEBUG - Execute query [queryID: 01b9ce1b-0002-4c70-0007-08ea002040aa]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:59:28,772 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:59:28,772 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:59:28,772 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:59:28,772 - DEBUG - Batches read: 0
2025-01-18 18:59:28,772 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:59:28,772 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:59:36,493 - INFO - New root object was created for <snowflake.snowpark.session.Session object at 0x00000276FA813BB0>
2025-01-18 18:59:36,493 - INFO - Querying the server for client info
2025-01-18 18:59:36,493 - DEBUG - cursor
2025-01-18 18:59:36,493 - DEBUG - executing SQL/command
2025-01-18 18:59:36,493 - DEBUG - query: [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:59:36,493 - DEBUG - sequence counter: 140
2025-01-18 18:59:36,493 - DEBUG - Request id: 0642ce32-2216-4f00-a641-e4e5019128ba
2025-01-18 18:59:36,493 - DEBUG - running query [SELECT SYSTEM$CLIENT_VERSION_INFO()]
2025-01-18 18:59:36,493 - DEBUG - is_file_transfer: True
2025-01-18 18:59:36,493 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:36,493 - DEBUG - _cmd_query
2025-01-18 18:59:36,493 - DEBUG - serialize_to_dict() called
2025-01-18 18:59:36,493 - DEBUG - Cache Entry: (0, 1737248364170980, 0)
2025-01-18 18:59:36,493 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248364170980, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:59:36,493 - DEBUG - sql=[SELECT SYSTEM$CLIENT_VERSION_INFO()], sequence_id=[140], is_file_transfer=[False]
2025-01-18 18:59:36,495 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:59:36,495 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:59:36,495 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:59:36,496 - DEBUG - Request guid: a45e80c6-be60-4526-ba54-c90d7e4cc4d8
2025-01-18 18:59:36,496 - DEBUG - socket timeout: 60
2025-01-18 18:59:36,631 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=0642ce32-2216-4f00-a641-e4e5019128ba&request_guid=a45e80c6-be60-4526-ba54-c90d7e4cc4d8 HTTP/1.1" 200 2618
2025-01-18 18:59:36,631 - DEBUG - SUCCESS
2025-01-18 18:59:36,631 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:59:36,631 - DEBUG - ret[code] = None, after post request
2025-01-18 18:59:36,631 - DEBUG - Query id: 01b9ce1b-0002-4d87-0007-08ea001fe74e
2025-01-18 18:59:36,631 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248372025877, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:59:36,631 - DEBUG - Cache Entry: (0, 1737248364170980, 0)
2025-01-18 18:59:36,631 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248372025877, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:59:36,632 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:59:36,632 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:36,632 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:36,632 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:59:36,632 - DEBUG - Cache Entry: (0, 1737248372025877, 0)
2025-01-18 18:59:36,632 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:36,632 - DEBUG - sfqid: 01b9ce1b-0002-4d87-0007-08ea001fe74e
2025-01-18 18:59:36,632 - DEBUG - query execution done
2025-01-18 18:59:36,632 - DEBUG - SUCCESS
2025-01-18 18:59:36,632 - DEBUG - PUT OR GET: False
2025-01-18 18:59:36,632 - DEBUG - Query result format: arrow
2025-01-18 18:59:36,632 - INFO - Number of results in first chunk: 1
2025-01-18 18:59:36,632 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:59:36,632 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:59:36,632 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:59:36,632 - DEBUG - Batches read: 0
2025-01-18 18:59:36,632 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:59:36,632 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:59:36,633 - INFO - telemetry client created for <snowflake.connector.connection.SnowflakeConnection object at 0x00000276FA28A470>, telemetry enabled: True
2025-01-18 18:59:36,633 - INFO - Snowflake Core version: 1.0.2, on Python 3.10.11, on platform: Windows-10-10.0.22635-SP0
2025-01-18 18:59:36,633 - INFO - Parameter PARAM_USE_CLIENT_RETRY: None
2025-01-18 18:59:36,633 - INFO - Parameter PARAM_PRINT_VERBOSE_STACK_TRACE: None
2025-01-18 18:59:36,633 - INFO - Parameter PARAM_FIX_HOSTNAME: true
2025-01-18 18:59:36,637 - DEBUG - cursor
2025-01-18 18:59:36,637 - DEBUG - executing SQL/command
2025-01-18 18:59:36,637 - DEBUG - query: [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:59:36,637 - DEBUG - sequence counter: 141
2025-01-18 18:59:36,637 - DEBUG - Request id: 60ed81be-91a1-49ff-903d-e5f7e78ffc1d
2025-01-18 18:59:36,637 - DEBUG - running query [SELECT  *  FROM DOCS_CHUNKS_TABLE]
2025-01-18 18:59:36,637 - DEBUG - is_file_transfer: True
2025-01-18 18:59:36,638 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:36,638 - DEBUG - _cmd_query
2025-01-18 18:59:36,638 - DEBUG - serialize_to_dict() called
2025-01-18 18:59:36,638 - DEBUG - Cache Entry: (0, 1737248372025877, 0)
2025-01-18 18:59:36,638 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248372025877, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:59:36,638 - DEBUG - sql=[SELECT  *  FROM DOCS_CHUNKS_TABLE], sequence_id=[141], is_file_transfer=[False]
2025-01-18 18:59:36,638 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:59:36,639 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:59:36,639 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:59:36,639 - DEBUG - Request guid: c1eecae8-1fb1-42c1-a4ce-6df8fe9ce8e8
2025-01-18 18:59:36,639 - DEBUG - socket timeout: 60
2025-01-18 18:59:36,747 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=60ed81be-91a1-49ff-903d-e5f7e78ffc1d&request_guid=c1eecae8-1fb1-42c1-a4ce-6df8fe9ce8e8 HTTP/1.1" 200 1499
2025-01-18 18:59:36,747 - DEBUG - SUCCESS
2025-01-18 18:59:36,748 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:59:36,748 - DEBUG - ret[code] = None, after post request
2025-01-18 18:59:36,748 - DEBUG - Query id: 01b9ce1b-0002-4c78-0007-08ea00201232
2025-01-18 18:59:36,748 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248372138431, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:59:36,748 - DEBUG - Cache Entry: (0, 1737248372025877, 0)
2025-01-18 18:59:36,748 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248372138431, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:59:36,748 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:59:36,748 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:36,748 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:36,748 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:59:36,748 - DEBUG - Cache Entry: (0, 1737248372138431, 0)
2025-01-18 18:59:36,748 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:36,748 - DEBUG - sfqid: 01b9ce1b-0002-4c78-0007-08ea00201232
2025-01-18 18:59:36,748 - DEBUG - query execution done
2025-01-18 18:59:36,748 - DEBUG - SUCCESS
2025-01-18 18:59:36,748 - DEBUG - PUT OR GET: False
2025-01-18 18:59:36,748 - DEBUG - Query result format: arrow
2025-01-18 18:59:36,748 - INFO - Number of results in first chunk: 0
2025-01-18 18:59:36,756 - DEBUG - Sending 1 logs to telemetry. Data is {'logs': [{'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '6ca46d79-d1f4-4b07-849f-42ff3d143f61', 'query_plan_complexity': {'column': 1}, 'thread_ident': 20720}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce13-0002-4c71-0007-08ea0020215a']}}, 'timestamp': '1737247886038'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c72-0007-08ea002030c6', 'value': 4595}, 'timestamp': '1737247886105'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.064361572265625, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737247886105'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c76-0007-08ea001fbf16', 'value': 4596}, 'timestamp': '1737247886168'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.06215858459472656, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737247886168'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c72-0007-08ea002030ca', 'value': 4594}, 'timestamp': '1737247886225'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.056231021881103516, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737247886225'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce13-0002-4c79-0007-08ea0020025a', 'value': 4595}, 'timestamp': '1737247886301'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce13-0002-4c79-0007-08ea0020025a', 'value': 1}, 'timestamp': '1737247886302'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'eb21ea38-d0d3-4d77-a0a8-acfbf6f96ec5', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 20720}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce13-0002-4c79-0007-08ea0020025a']}}, 'timestamp': '1737247886302'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce15-0002-4c78-0007-08ea002011fe', 'value': 4594}, 'timestamp': '1737248033720'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 16632}}, 'timestamp': '1737248033723'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce15-0002-4c77-0007-08ea001fde1a', 'value': 4595}, 'timestamp': '1737248033872'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce15-0002-4c77-0007-08ea001fde1a', 'value': 0}, 'timestamp': '1737248033872'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '5cae9257-1403-4a97-afc8-02eba4dce85f', 'query_plan_complexity': {'column': 1}, 'thread_ident': 16632}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce15-0002-4c77-0007-08ea001fde1a']}}, 'timestamp': '1737248033873'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce15-0002-4c71-0007-08ea0020219e', 'value': 4595}, 'timestamp': '1737248033953'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.07706117630004883, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737248033954'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce15-0002-4c72-0007-08ea002030e6', 'value': 4597}, 'timestamp': '1737248034028'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.07320189476013184, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737248034029'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce15-0002-4c79-0007-08ea00200276', 'value': 4596}, 'timestamp': '1737248034086'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.057134389877319336, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737248034086'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce15-0002-4c70-0007-08ea0020406e', 'value': 4596}, 'timestamp': '1737248034185'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce15-0002-4c70-0007-08ea0020406e', 'value': 1}, 'timestamp': '1737248034186'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '805e1897-71c5-42eb-811a-9888d43ce732', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 16632}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce15-0002-4c70-0007-08ea0020406e']}}, 'timestamp': '1737248034186'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce15-0002-4c78-0007-08ea00201206', 'value': 4608}, 'timestamp': '1737248035984'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 16416}}, 'timestamp': '1737248035992'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce15-0002-4c77-0007-08ea001fde1e', 'value': 4597}, 'timestamp': '1737248036095'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce15-0002-4c77-0007-08ea001fde1e', 'value': 1}, 'timestamp': '1737248036095'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce15-0002-4c77-0007-08ea001fde1e', 'value': 1}, 'timestamp': '1737248036096'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '7c060c69-6c7c-4837-9eac-197945025216', 'query_plan_complexity': {'column': 1}, 'thread_ident': 16416}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce15-0002-4c77-0007-08ea001fde1e']}}, 'timestamp': '1737248036096'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce15-0002-4c7a-0007-08ea001ff782', 'value': 4601}, 'timestamp': '1737248036167'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.06614422798156738, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737248036167'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce15-0002-4c71-0007-08ea002021a2', 'value': 4598}, 'timestamp': '1737248036226'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.05802750587463379, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737248036226'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce15-0002-4c77-0007-08ea001fde22', 'value': 4596}, 'timestamp': '1737248036292'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.06604146957397461, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737248036293'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce15-0002-4c76-0007-08ea001fbf2a', 'value': 4595}, 'timestamp': '1737248036408'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce15-0002-4c76-0007-08ea001fbf2a', 'value': 1}, 'timestamp': '1737248036409'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '562c7981-92d1-4527-bd2d-8a59786461d5', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 16416}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce15-0002-4c76-0007-08ea001fbf2a']}}, 'timestamp': '1737248036409'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce16-0002-4c5d-0007-08ea001fce4a', 'value': 4596}, 'timestamp': '1737248048151'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 17352}}, 'timestamp': '1737248048154'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce16-0002-4c77-0007-08ea001fde26', 'value': 4597}, 'timestamp': '1737248048226'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce16-0002-4c77-0007-08ea001fde26', 'value': 1}, 'timestamp': '1737248048227'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce16-0002-4c77-0007-08ea001fde26', 'value': 1}, 'timestamp': '1737248048227'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '698e465e-7b45-4ac6-9a0d-aca822747085', 'query_plan_complexity': {'column': 1}, 'thread_ident': 17352}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce16-0002-4c77-0007-08ea001fde26']}}, 'timestamp': '1737248048228'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce16-0002-4c77-0007-08ea001fde2a', 'value': 4597}, 'timestamp': '1737248048296'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.06511306762695312, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737248048296'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce16-0002-4d87-0007-08ea001fe732', 'value': 4596}, 'timestamp': '1737248048364'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.06703352928161621, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737248048364'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce16-0002-4c71-0007-08ea002021a6', 'value': 4597}, 'timestamp': '1737248048418'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.05368995666503906, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737248048418'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce16-0002-4c71-0007-08ea002021aa', 'value': 4596}, 'timestamp': '1737248048512'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce16-0002-4c71-0007-08ea002021aa', 'value': 1}, 'timestamp': '1737248048513'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'ec4e5166-0535-4247-9342-984078824040', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 17352}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce16-0002-4c71-0007-08ea002021aa']}}, 'timestamp': '1737248048513'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737248049164'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737248049573'}, {'message': {'source': 'snowflake.core', 'version': '1.0.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'python_api', 'data': {'class_name': 'CortexSearchServiceResource', 'func_name': 'search'}}, 'timestamp': '1737248049722'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737248054721'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce16-0002-4c70-0007-08ea00204072', 'value': 4596}, 'timestamp': '1737248055105'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce16-0002-4c70-0007-08ea00204072', 'value': 1}, 'timestamp': '1737248055105'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce16-0002-4c70-0007-08ea00204072', 'value': 1}, 'timestamp': '1737248055106'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'a408d41e-cb35-422f-b6cd-721b3dcb9804', 'query_plan_complexity': {'column': 1}, 'thread_ident': 17352}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce16-0002-4c70-0007-08ea00204072']}}, 'timestamp': '1737248055106'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce16-0002-4c79-0007-08ea0020027a', 'value': 4597}, 'timestamp': '1737248055266'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce16-0002-4c79-0007-08ea0020027a', 'value': 1}, 'timestamp': '1737248055266'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce16-0002-4c79-0007-08ea0020027a', 'value': 1}, 'timestamp': '1737248055267'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '70a51363-3e2b-4de4-9ae4-f0e8dedb811d', 'query_plan_complexity': {'column': 1}, 'thread_ident': 17352}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce16-0002-4c79-0007-08ea0020027a']}}, 'timestamp': '1737248055268'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce16-0002-4d87-0007-08ea001fe736', 'value': 4595}, 'timestamp': '1737248055407'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce16-0002-4d87-0007-08ea001fe736', 'value': 1}, 'timestamp': '1737248055408'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce16-0002-4d87-0007-08ea001fe736', 'value': 1}, 'timestamp': '1737248055408'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '328a5ef9-cae5-435f-b62a-51f7233bc0cb', 'query_plan_complexity': {'column': 1}, 'thread_ident': 17352}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce16-0002-4d87-0007-08ea001fe736']}}, 'timestamp': '1737248055409'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce16-0002-4c5d-0007-08ea001fce4e', 'value': 4596}, 'timestamp': '1737248055746'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce16-0002-4c5d-0007-08ea001fce4e', 'value': 1}, 'timestamp': '1737248055746'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce16-0002-4c5d-0007-08ea001fce4e', 'value': 1}, 'timestamp': '1737248055747'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'f4ed29b2-55d1-48a5-83a8-44061c87280d', 'query_plan_complexity': {'column': 1}, 'thread_ident': 17352}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce16-0002-4c5d-0007-08ea001fce4e']}}, 'timestamp': '1737248055747'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce16-0002-4c70-0007-08ea00204076', 'value': 4597}, 'timestamp': '1737248055901'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce16-0002-4c70-0007-08ea00204076', 'value': 1}, 'timestamp': '1737248055901'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce16-0002-4c70-0007-08ea00204076', 'value': 1}, 'timestamp': '1737248055902'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'a2ca0104-432f-4050-82f4-53d95332883b', 'query_plan_complexity': {'column': 1}, 'thread_ident': 17352}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce16-0002-4c70-0007-08ea00204076']}}, 'timestamp': '1737248055902'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce16-0002-4c77-0007-08ea001fde2e', 'value': 4596}, 'timestamp': '1737248056048'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce16-0002-4c77-0007-08ea001fde2e', 'value': 1}, 'timestamp': '1737248056048'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce16-0002-4c77-0007-08ea001fde2e', 'value': 1}, 'timestamp': '1737248056049'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '41a81a63-e90f-4481-804e-16f07d29a21a', 'query_plan_complexity': {'column': 1}, 'thread_ident': 17352}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce16-0002-4c77-0007-08ea001fde2e']}}, 'timestamp': '1737248056049'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce1b-0002-4c70-0007-08ea002040a6', 'value': 4596}, 'timestamp': '1737248368280'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 6128}}, 'timestamp': '1737248368284'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce1b-0002-4c5d-0007-08ea001fcea6', 'value': 4599}, 'timestamp': '1737248368393'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce1b-0002-4c5d-0007-08ea001fcea6', 'value': 1}, 'timestamp': '1737248368394'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '691f730b-182b-48c5-be23-95636b5f044b', 'query_plan_complexity': {'column': 1}, 'thread_ident': 6128}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce1b-0002-4c5d-0007-08ea001fcea6']}}, 'timestamp': '1737248368394'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce1b-0002-4c77-0007-08ea001fde92', 'value': 4596}, 'timestamp': '1737248368472'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.07371068000793457, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737248368472'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce1b-0002-4c72-0007-08ea00203136', 'value': 4600}, 'timestamp': '1737248368581'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.10854005813598633, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737248368582'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce1b-0002-4c7a-0007-08ea001ff7a2', 'value': 4597}, 'timestamp': '1737248368652'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.07041549682617188, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737248368652'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce1b-0002-4c70-0007-08ea002040aa', 'value': 4596}, 'timestamp': '1737248368772'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce1b-0002-4c70-0007-08ea002040aa', 'value': 0}, 'timestamp': '1737248368772'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '2027c9a4-03c3-418e-b592-7961a2fe5734', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 6128}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce1b-0002-4c70-0007-08ea002040aa']}}, 'timestamp': '1737248368773'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce1b-0002-4d87-0007-08ea001fe74e', 'value': 4597}, 'timestamp': '1737248376632'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 27536}}, 'timestamp': '1737248376637'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce1b-0002-4c78-0007-08ea00201232', 'value': 4599}, 'timestamp': '1737248376748'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT  *  FROM DOCS_CHUNKS_TABLE', 'e2e_time': 0.11042356491088867, 'stack_trace': ["categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', 'return self._with_plan(self._select_statement.select(names), _ast_stmt=stmt)', 'new_column_states = derive_column_states_from_subquery(cols, self)', 'from_c_state = from_.column_states.get(quoted_c_name)', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737248376749'}]}.
2025-01-18 18:59:36,757 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:59:36,758 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:59:36,758 - DEBUG - remaining request timeout: 5000 ms, retry cnt: 1
2025-01-18 18:59:36,758 - DEBUG - Request guid: a53af458-a132-491e-8b46-376ea7d04914
2025-01-18 18:59:36,758 - DEBUG - socket timeout: 60
2025-01-18 18:59:36,805 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /telemetry/send?request_guid=a53af458-a132-491e-8b46-376ea7d04914 HTTP/1.1" 200 86
2025-01-18 18:59:36,805 - DEBUG - SUCCESS
2025-01-18 18:59:36,805 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:59:36,805 - DEBUG - ret[code] = None, after post request
2025-01-18 18:59:36,805 - DEBUG - Successfully uploading metrics to telemetry.
2025-01-18 18:59:36,806 - DEBUG - executing SQL/command
2025-01-18 18:59:36,806 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:59:36,806 - DEBUG - sequence counter: 142
2025-01-18 18:59:36,806 - DEBUG - Request id: 5865b36f-e39f-405d-a06b-85055437a15d
2025-01-18 18:59:36,806 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)]
2025-01-18 18:59:36,806 - DEBUG - is_file_transfer: True
2025-01-18 18:59:36,807 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:36,807 - DEBUG - _cmd_query
2025-01-18 18:59:36,807 - DEBUG - serialize_to_dict() called
2025-01-18 18:59:36,807 - DEBUG - Cache Entry: (0, 1737248372138431, 0)
2025-01-18 18:59:36,807 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248372138431, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:59:36,807 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)], sequence_id=[142], is_file_transfer=[False]
2025-01-18 18:59:36,808 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:59:36,808 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:59:36,808 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:59:36,808 - DEBUG - Request guid: 440024a0-e7b4-4bb1-b1b9-01c72fffa355
2025-01-18 18:59:36,808 - DEBUG - socket timeout: 60
2025-01-18 18:59:36,859 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=5865b36f-e39f-405d-a06b-85055437a15d&request_guid=440024a0-e7b4-4bb1-b1b9-01c72fffa355 HTTP/1.1" 200 1372
2025-01-18 18:59:36,860 - DEBUG - SUCCESS
2025-01-18 18:59:36,860 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:59:36,860 - DEBUG - ret[code] = None, after post request
2025-01-18 18:59:36,861 - DEBUG - Query id: 01b9ce1b-0002-4c70-0007-08ea002040ae
2025-01-18 18:59:36,861 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248372247552, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:59:36,861 - DEBUG - Cache Entry: (0, 1737248372138431, 0)
2025-01-18 18:59:36,861 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248372247552, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:59:36,861 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:59:36,861 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:36,861 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:36,861 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:59:36,861 - DEBUG - Cache Entry: (0, 1737248372247552, 0)
2025-01-18 18:59:36,861 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:36,861 - DEBUG - sfqid: 01b9ce1b-0002-4c70-0007-08ea002040ae
2025-01-18 18:59:36,861 - DEBUG - query execution done
2025-01-18 18:59:36,861 - DEBUG - SUCCESS
2025-01-18 18:59:36,861 - DEBUG - PUT OR GET: False
2025-01-18 18:59:36,861 - DEBUG - Query result format: arrow
2025-01-18 18:59:36,861 - INFO - Number of results in first chunk: 0
2025-01-18 18:59:36,861 - DEBUG - executing SQL/command
2025-01-18 18:59:36,863 - DEBUG - query: [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:59:36,863 - DEBUG - sequence counter: 143
2025-01-18 18:59:36,863 - DEBUG - Request id: e076c47a-50f4-4bc7-8b39-a7180b11eee5
2025-01-18 18:59:36,863 - DEBUG - running query [SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...]
2025-01-18 18:59:36,863 - DEBUG - is_file_transfer: True
2025-01-18 18:59:36,863 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:36,863 - DEBUG - _cmd_query
2025-01-18 18:59:36,863 - DEBUG - serialize_to_dict() called
2025-01-18 18:59:36,863 - DEBUG - Cache Entry: (0, 1737248372247552, 0)
2025-01-18 18:59:36,863 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248372247552, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:59:36,863 - DEBUG - sql=[SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHU...], sequence_id=[143], is_file_transfer=[False]
2025-01-18 18:59:36,864 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:59:36,864 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:59:36,864 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:59:36,864 - DEBUG - Request guid: 79609f25-8429-413f-aaa2-c596db5ce821
2025-01-18 18:59:36,864 - DEBUG - socket timeout: 60
2025-01-18 18:59:36,920 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=e076c47a-50f4-4bc7-8b39-a7180b11eee5&request_guid=79609f25-8429-413f-aaa2-c596db5ce821 HTTP/1.1" 200 1372
2025-01-18 18:59:36,921 - DEBUG - SUCCESS
2025-01-18 18:59:36,921 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:59:36,921 - DEBUG - ret[code] = None, after post request
2025-01-18 18:59:36,922 - DEBUG - Query id: 01b9ce1b-0002-4c72-0007-08ea0020313e
2025-01-18 18:59:36,922 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248372314354, 'priority': 0, 'context': 'CMrjJA=='}]}
2025-01-18 18:59:36,922 - DEBUG - Cache Entry: (0, 1737248372247552, 0)
2025-01-18 18:59:36,922 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248372314354, 'priority': 0, 'context': 'CMrjJA=='}
2025-01-18 18:59:36,922 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:59:36,922 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:36,922 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:36,922 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:59:36,922 - DEBUG - Cache Entry: (0, 1737248372314354, 0)
2025-01-18 18:59:36,922 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:36,922 - DEBUG - sfqid: 01b9ce1b-0002-4c72-0007-08ea0020313e
2025-01-18 18:59:36,922 - DEBUG - query execution done
2025-01-18 18:59:36,922 - DEBUG - SUCCESS
2025-01-18 18:59:36,922 - DEBUG - PUT OR GET: False
2025-01-18 18:59:36,922 - DEBUG - Query result format: arrow
2025-01-18 18:59:36,922 - INFO - Number of results in first chunk: 0
2025-01-18 18:59:36,923 - DEBUG - executing SQL/command
2025-01-18 18:59:36,923 - DEBUG - query: [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:59:36,923 - DEBUG - sequence counter: 144
2025-01-18 18:59:36,923 - DEBUG - Request id: 918b413b-699d-4dee-b616-bd8536b31e9d
2025-01-18 18:59:36,923 - DEBUG - running query [SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...]
2025-01-18 18:59:36,923 - DEBUG - is_file_transfer: True
2025-01-18 18:59:36,923 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:36,923 - DEBUG - _cmd_query
2025-01-18 18:59:36,923 - DEBUG - serialize_to_dict() called
2025-01-18 18:59:36,923 - DEBUG - Cache Entry: (0, 1737248372314354, 0)
2025-01-18 18:59:36,923 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248372314354, 'priority': 0, 'context': {'base64Data': 'CMrjJA=='}}]}
2025-01-18 18:59:36,923 - DEBUG - sql=[SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHU...], sequence_id=[144], is_file_transfer=[False]
2025-01-18 18:59:36,924 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:59:36,924 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:59:36,924 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:59:36,924 - DEBUG - Request guid: b6ed67ee-d556-4d86-84af-2b2fcc664d5c
2025-01-18 18:59:36,924 - DEBUG - socket timeout: 60
2025-01-18 18:59:37,024 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=918b413b-699d-4dee-b616-bd8536b31e9d&request_guid=b6ed67ee-d556-4d86-84af-2b2fcc664d5c HTTP/1.1" 200 2615
2025-01-18 18:59:37,025 - DEBUG - SUCCESS
2025-01-18 18:59:37,025 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:59:37,025 - DEBUG - ret[code] = None, after post request
2025-01-18 18:59:37,025 - DEBUG - Query id: 01b9ce1b-0002-4c79-0007-08ea0020031e
2025-01-18 18:59:37,025 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248372405025, 'priority': 0, 'context': 'CObjJA=='}]}
2025-01-18 18:59:37,025 - DEBUG - Cache Entry: (0, 1737248372314354, 0)
2025-01-18 18:59:37,025 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248372405025, 'priority': 0, 'context': 'CObjJA=='}
2025-01-18 18:59:37,025 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:59:37,025 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:37,025 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:37,025 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:59:37,025 - DEBUG - Cache Entry: (0, 1737248372405025, 0)
2025-01-18 18:59:37,026 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:37,026 - DEBUG - sfqid: 01b9ce1b-0002-4c79-0007-08ea0020031e
2025-01-18 18:59:37,026 - DEBUG - query execution done
2025-01-18 18:59:37,026 - DEBUG - SUCCESS
2025-01-18 18:59:37,026 - DEBUG - PUT OR GET: False
2025-01-18 18:59:37,026 - DEBUG - Query result format: arrow
2025-01-18 18:59:37,026 - INFO - Number of results in first chunk: 54
2025-01-18 18:59:37,026 - DEBUG - Execute query [queryID: 01b9ce1b-0002-4c79-0007-08ea0020031e]  SELECT  *  FROM ( SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM DOCS_CHUNKS_TABLE) GROUP BY "PRODUCTNAME") ORDER BY "PRODUCTNAME" ASC NULLS FIRST
2025-01-18 18:59:37,026 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:59:37,026 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:59:37,026 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:59:37,026 - DEBUG - Batches read: 0
2025-01-18 18:59:37,026 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:59:37,026 - DEBUG - Current batch index: 0, rows in current batch: 54
2025-01-18 18:59:37,031 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:59:37,032 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:59:37,570 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:59:37,592 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:59:37,593 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:59:38,112 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:59:38,137 - DEBUG - Starting new HTTP connection (1): api.openweathermap.org:80
2025-01-18 18:59:38,266 - DEBUG - http://api.openweathermap.org:80 "GET /data/3.0/onecall?lat=44.9452993&lon=-93.0920953&appid=cda556004c6679cd7773dfc27c7be9a7&exclude=current,minutely,hourly,alerts&units=imperial HTTP/1.1" 200 4327
2025-01-18 18:59:38,267 - DEBUG - calling method search on class CortexSearchServiceResource after submitting telemetry if enabled
2025-01-18 18:59:38,267 - INFO - performing a HTTP POST call to /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query
2025-01-18 18:59:38,267 - DEBUG - request has path params: {'database': 'DEV_SRC_INGEST', 'schema': 'EPA_PROCESSED', 'service_name': 'CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST'}, query_params: [], header params: {'Accept': 'application/json', 'Content-Type': 'application/json'} and body: QueryRequest(query='whats the weather tomorrrow?', columns=['chunk', 'relative_path', 'PRODUCTNAME', 'COMPANYNAME', 'CATEGORY_EPA_TYPE', 'SIGNAL_WORD'], filter=None, limit=10, experimental=None)
2025-01-18 18:59:38,268 - DEBUG - making an http POST call to 'https://gmcpdcz-mt01740.snowflakecomputing.com:443/api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query'
2025-01-18 18:59:38,268 - DEBUG - Resetting dropped connection: gmcpdcz-mt01740.snowflakecomputing.com
2025-01-18 18:59:38,716 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/databases/DEV_SRC_INGEST/schemas/EPA_PROCESSED/cortex-search-services/CC_SEARCH_SERVICE_CS_DEV_SRC_INGEST:query HTTP/1.1" 200 None
2025-01-18 18:59:38,717 - DEBUG - created a RESTResponse with status 200 and length of 17979
2025-01-18 18:59:38,717 - DEBUG - response body: b'{\n  "results" : [ {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\"\\n]",\n    "chunk" : "ONLY WHEN THEAIR IS CALM...AVOID SPRAY CONTACT ON DESIRABLE PLANTS.. &. If.pay.o...drin...accidentaty contacts deairabie Vercaticn, wah of immedinety w aer. Raanaae w De ply akon 7 days Kaahidren wsand pets sweww cff traedprayed area until pry in thoroughly dry Katho wccd xwaexrynmk and apply * w K\xc5\xa1compictcly covera iha mei narpins jum bsfero theAcurcAp LAG ATU Qr 4 Woed Kiar (EPA Aag No. 54X0)tymia If certain hard to control woedk are not complately killed within 4 weeks, repet apptication. Sexasa trw ares in lawns can be reaceded xa 7 or more days afer application.WEEDS.CONTROLLED.ww RSTYwwwwwwwwwWwwwwwwWEEDS.CONTROLLED.wwBahiagrax, Barnyardgrass, Bermudagrass, Blackberryics, Cenad. Thistle, Chidkweed, Comnon Raeweod, Crabgrassc? Dandelioa, Fecucs, Ficld Bindwecd, Field Sandur, Fatail, Johnsongrass, Kentudky Blucgrax,. .s Lambsquarter Orchardgrat, erennial.Rycara, Poisoa..Iy, Poison Oek..Quackaram.Red..Clower..Shepherdepurss...Smees Rameom, Sowhilo Who Clowe and Yoow Nutaodge & oIMPORTANT+ This produc-is an-nonseloative wood kller-which cn injur ox kN all plant4 contastod. AVOI> SPRAY CONTACT ON DESIRABLB-PLANTS: ARRLY ONZY WHEN THB AIR IS CALM:If pNy # dA doMaUy Sontena deirablo vestationr wnsh-off immediatoly with watr. Do net-+ply when-rninfall is - paaod within 24 hourt. Avoid maving auting or osherviss disturbing trated vegatation for-at-lean -7 dayer (moved above\\\\n## STORAGE AND DISPOSAL (moved from above)\\\\nDo not-consaminato wetor, foodstuffc, food or coed ty ctorago or",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "relative_path" : "EPA_LABEL_PDF/SHACKLE_HERBICIDE_524-330.pdf",\n    "PRODUCTNAME" : "SHACKLE HERBICIDE"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"INSECTICIDE\\"\\n]",\n    "chunk" : "to remain close. to the ground and move laterally in a concentrated cloud. Temperature inversions are characterized by increasing temperature with altitude and are common on nights with limited cloud cover and light to no wind. They begin to form as the sun sets and often continue into the morning. Their presence can be indicated by ground fog. However, if fog is not present, the movement of smoke from a ground source can also identify inversions. Smoke that layers and moves laterally in a concentrated cloud (under low wind conditions) indicates an inversion, while smoke that moves upward and rapidly dissipates indicates good vertical mixing.\\\\n## No-Spray Zone Requirements for Foliar Applications\\\\nDo not apply by ground within 25 feet, or by air within 150 feet of lakes; reservoirs; rivers; permanent streams, marshes or natural ponds; estuaries and commercial fish farm ponds.\\\\n## RUNOFF MANAGEMENT\\\\nThis product may contaminate water through runoff or drift of spray in wind. This product has a high potential for runoff for several weeks after application in the Run Off Management section directly following This product may contaminate water through runoff or drift of spray in wind. Poorly draining soils and soils with shallow water tables are more prone to produce runoff that contains this product. Do not cultivate within 10 feet of the aquatic areas to allow growth of a vegetative filter strip. A level well maintained vegetative buffer strip between areas to which this prod\xc3\xbcct is",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "Movento RC",\n    "relative_path" : "EPA_LABEL_PDF/Movento_RC_264-1170.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "drift\\\\n## Temperature and Humidity\\\\nWhen making applications in low relative humidity, set up equipment to produce larger droplets to compensate for evaporation. Droplet evaporation is most severe when conditions are both hot and dry.\\\\n## Temperature Inversions\\\\nApplications should not occur during a temperature inversion because drift potential is high. Temperature inversions restrict vertical air mixing, which causes small suspended droplets to remain in a concentrated cioud. This cloud can move in unpredictable directions due to the light variable winds common during inversions. Temperature inversions are characterized by increasing temperatures with altitude and are common on nights with limited cloud cover and light to no wind. They begin to forn as the sunsets and often continue into the morning. Their presence can be indicated by ground fog; however, if fog is not present, inversions can also be identified by the movement of smoke from a ground source or an aircraft smoke generator. Smoke that layers and moves lateraliy in a concentrated cloud (under low wind conditions) indicates an inversion, while smoke that moves upward and rapidly dissipates indicates good vertical air mixing.\\\\n## Sensitive Areas\\\\nThis product should only be applied when the potential for drift to adjacent sensitive areas (e.g. residential areas, bodies of water, known habitat for threatened or endangered species, non-target crops) is minimal (e.g. when wind is blowing away from the sensitive areas).\\\\n## 7.1",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "chunk" : "is made when heavy dew, fog, mist or rain are present or when weeds are under stress due to drought, cool temperatures, or extended periods of cloudiness.When applying for control of lambsquarters and velvetleaf, make applications between dawn and 2 hours before sunset to avoid the possibility of reduced control.The addition of ammonium sulfate at 1.5 Ibs to 3.0 lbs/acre may improve weed control. Rates are dependent on tankmix partners, environmental conditions, temperatures and potential for leaf burn.S pray volume of 15 gallons of water per acre minimum. If dense canopy, large weeds or unfavorable growing conditions are present, increase water volume to 20 gallons of water per acre.For optimal yield, early season weed removal is important.\\\\n## To maximize weed control, DO NOT cultivate from 5 days before an application to 7 days after an application.\\\\nGFA 280 herbicide is rainfast 4 hours after application; therefore rainfall within 4 hours may necessitate retreatment.Consult your local Cooperative Extension Service for guidelines on optimum application timing for GFA 280 Herbicide in your region.\\\\n|COTTON||\\\\n| :---: | :---: |\\\\n|||\\\\n|OPTION 1(choose one of two use scenarios) Burndown (P rior to Planting or P rior to Crop Emergence) In-Season (Post E mergent to the Crop)|1st application 29.0 - 43.0 fl oz/A (0.53 - 0.79 Ibs ai/A) 2nd application 22.0 - 29.0 fl oz/A (0.40 - 0.53 lbs ai/A)|\\\\n|Directions:||\\\\n|. Apply to emerged, young, actively growing weeds. Uniform, thorough spray",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "CATEGORY_EPA_TYPE" : "",\n    "PRODUCTNAME" : "GFA 280 HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/GFA_280_HERBICIDE_264-1224.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "",\n    "chunk" : "WIND\\\\nDrift potential increases at wind speeds of less than 3. mph (due to inversion potential) or more than 10 mph. However, many factors, including droplet size and equipment type determine drift potential at any given wind speed. AVOID APPLICATIONS DURING GUSTY OR WINDLESS CONDITIONS:Note: Local terrain can influence wind patterns. Every applicator needs to be familiar be familiar with local windpatterns and how they affect spray drift.\\\\n## TEMPERATURE AND HUMIDITY\\\\nWhen making applications in hot and dry conditions, set up equipment to produce larger droplets to reduce effects of evaporation.\\\\n## TEMPERATURE INVERSIONS\\\\nDrift potential is high during a temperature inversion. Temperature inversions restrict vertical air mixing, which causessmall suspended droplets to remain close to the ground and move laterally in a concentrated cloud. Temperature inversions are characterized by increasing temperature with altitude and are common on nights with limited cloud cover and light to no wind. They begin to form as the sun sets and often continue into the morning. Their presence can be indicated by ground fog; however, if fog is not present, inversions can also be identified by the movement of smoke from a ground source or an aircraft smoke generator. Smoke that layers and moves laterally in a concentratedcloud (under low wind conditions) indicates an inversion, while smoke that moves upward and rapidly dissipates indicates good vertical air mixing.\\\\n## SHIELDED SPRAYERS\\\\nShielding the boom",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "GFA 280 HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/GFA_280_HERBICIDE_264-1224.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "chunk" : "Temperature inversions are characterized by increasing temperature with altitude and are common on nights with limited cloud cover and light to no wind. The presence of an inversion can be indicated by ground fog or by the movement of smoke from a ground source or an aircraft smoke generator. Smoke that layers and moves laterally in a concentrated cloud (under low wind conditions) indicates an inversion, while smoke that moves upward and rapidly dissipates indicates good vertical air mixing. Avoid applications during temperature inversions.\\\\n## WIND\\\\nDrift potential generally increases with wind speed. AVOID APPLICATIONS DURING GUSTY WIND CONDITIONS. Applicators need to be familiar with local wind patterns and terrain that could affect spray drift\\\\n## GENERAL APPLICATION INSTRUCTIONS\\\\nEsendotM Fungicide can be applied as a foliar spray. Esendo Fungicide can also be applied through various types of chemigation application as described in the Chemigation section of this label.Mix and apply Esendo Fungicide in a sufficient volume of water to ensure uniform dispersion of product in the tank. Constant agitation during mixing and application is necessary to maintain uniform suspension.Esendo Fungicide should be used in a protectant disease control program, good coverage of the foliage is needed to ensure performance. Apply in sufficient volume and pressure to ensure canopy penetration and complete coverage of the foliage.Refer to the Crop-Specific Directions for Use tables of the label for",\n    "COMPANYNAME" : "CERTIS USA, LLC",\n    "CATEGORY_EPA_TYPE" : "",\n    "relative_path" : "EPA_LABEL_PDF/Esendo_Fungicide_70051-144.pdf",\n    "PRODUCTNAME" : "Esendo Fungicide"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "influence wind patterns. Every applicator should be familiar with local wind patterns and how they affect drift.\\\\n## Temperature and Humidity\\\\nWhen making applications in low relative humidity, set up equipment to produce larger droplets to compensate for evaporation. Droplet evaporation is most severe when conditions are both hot and dry.\\\\n## Temperature Inversions\\\\nApplications should not occur during a temperature inversion because drift potential is high. Temperature inversions restrict vertical air mixing, which causes small suspended droplets to remain in a concentrated cloud. This cloud can move in unpredictable directions due to the light variable winds common during inversions. Temperature inversions are characterized by increasing temperatures with altitude and are common on nights with limited cloud cover and light to no wind. They begin to form as the sun sets and often continue into the morning. Their presence can be indicated by ground fog; however, if fog is not present, the movement of smoke produced by a ground source or an aircraft smoke generator can also identify temperature inversions. Smoke that layers and moves laterally in a concentrated cloud (under low wind conditions) indicates an inversion, while smoke that moves upward and rapidly dissipates indicates good vertical air mixing.\\\\n## Sensitive Areas\\\\nApply this product only when the potential for drift to adjacent sensitive areas (e.g. residential areas, bodies of water, known habitat for threatened or",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "\\\\\\"Wind\\\\\\", Temperature and Humidity\\\\\\", and \\\\\\"Temperature Inversion\\\\\\" sections of this label).  \\\\nControlling Droplet Size\\\\n* .Volume: Use high flow rate nozzles to apply the highest practical spray volume. Nozzles with the higher rated flows produce iarger droplets.\\\\n* .Pressure: se the lower spray pressures recommended for the nozzle. Higher pressure reduces droplet size and does not improve canopy penetration. When higher flow rates are needed, use higher flow rate nozzles instead of increasing pressure.\\\\n* . Number of nozzies: Use the minimum number of nozzles that provide uniform coverage.\\\\n* Nozzle orientation:. Orienting nozzles so that the spray is released backwards, parallel to the airstream, will produce larger droplets than other orientations. Significant deflection from the horizontal will reduce droplet size and increase drift potential.\\\\n* Nozzle type: Use a nozzle type that is designed for the intended application. With most nozzle types, narrower spray angles produce larger droplets. Consider using low-drift nozzles. Solid stream nozzles oriented straight back produce larger droplets than other nozzle types.\\\\n* Boom length: For some use patterns, reducing the effective boom length to less than 3/4 of the wingspan or rotor length may further reduce drift without reducing swath width.\\\\nMaster Label 524-454Version: 3-Jun-2006  \\\\nII. MAIN LABEL FOR INDUSTRIAL, TURF, AND ORNAMENTAL USES\\\\n* Application height: Applications should not be made at a height greater than 10 feet",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf"\n  }, {\n    "SIGNAL_WORD" : "Caution",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\"\\n]",\n    "chunk" : "inversions restrict vertical air mixing, which causes smali suspended dropiets to rernain in a concentrated cloud. This cloud can move in unpredictable directions due to the light variabie winds commnon during inversions. Temperature inversions are characterized by increasing temperatures with attitude and are common on nights with limited cloud cover and light to no wind. They begin to form as the sun sets and often continue into the morning.. Their presence can be indicated by ground fog; however, if fog is not present, inversions can also be identified by the movement of smoke frorm a ground source or an aircraft smoke generator. Smoke that layers and moves lateratly in a concentrated cloud (under low wind conditions) indicates an inversion, while srmoke that rnoves upward and rapidly dissipates indicates good vertical air mixing.\\\\n## Sensitive areas\\\\nThe pesticide should only be applied when the potential for dritt to adjacent sensitive aeas {e.g. residential areas, bodies of water, known habitat for threatened or endangered species, on-target crops) is minimal (e.g. when wind is blowing away from the sensitive areas). . \\\\\\" :  \\\\n7.1 Aerial Equipment  \\\\n08/31/99ACCORD XL for utility sites0250:0086DO NOT APPLY THIS PRODUCT USING AERIAL SPRAY EQUIPMENT EXCEPT UNDER CONDITIONS AS SPECIFIED WITHIN THIS i.ABEL.FOR AERIAL APPLICATION IN CALIFORNIA, REFERTO THE FEDERAL SUPPLEMENTAL LABEL FOR AERIAL APPLICATIONS IN THAT STATE FOR SPECIFIC INSTRUCTIONS. RESTR1CTIONS AND REQUiREMENTSThis",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "PRODUCTNAME" : "ACCORD XL HERBICIDE",\n    "relative_path" : "EPA_LABEL_PDF/ACCORD_XL_HERBICIDE_524-517.pdf"\n  }, {\n    "SIGNAL_WORD" : "Warning",\n    "CATEGORY_EPA_TYPE" : "[\\n  \\"HERBICIDE TERRESTRIAL\\",\\n  \\"REGULATOR\\"\\n]",\n    "chunk" : "product unopened at once.TMArsenal is a trademark of American Cyanamid Company.TMBanvel is a trademark of Sandoz Crop Protection Corporation.TMGarlon and Spike are trademarks of Dow AgroSciences LLCTMHyvar, Krovar and Oust are trademarks of E. I duPont de Nemours and Company.\\\\n|N.|FOR GROUND AND AERIAL APPLICATIONS TO BRUSH AND CHAPARRAL IN|\\\\n| :---: | :---: |\\\\n|CALIFORNIA|ONLY|\\\\n\\\\n## DIRECTIONS FOR USE\\\\nRepeat treatments may be necessary to control weeds regenerating from underground parts or seeds.Nonionic surfactants which are labeled for use with herbicides may be used to improve wetting of foliage. Do not reduce rates of [INSERT BRAND NAME] when adding surfactant. Read and carefully observe surfactant rates, cautionary statements, and other information appearing on the surfactant label.TIMING OF APPLICATION: Apply this product as a broadcast spray when plants are actively growing for partial control of undesirable vegetation listed on this label. Best results are obtained when application is made in the spring to early sunmer when brush species are at a high moisture content and flowering.  \\\\nThis product may be used as recommended for:\\\\n* . Aid to burning treatment to establish and maintain fuel breaks\\\\n*1 Establishing fire perimeters and black lines\\\\n* . Aid to prescribed burning\\\\n* . Along fire roads and rights-of-way\\\\nAPPLICATION RECOMMENDATION: Apply 2 quarts of this product per acre for partial control of the following emerged brush and chaparral species:Master Label",\n    "COMPANYNAME" : "BAYER CROPSCIENCE LP",\n    "relative_path" : "EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf",\n    "PRODUCTNAME" : "ROUNDUP ORIGINAL II HERBICIDE"\n  } ],\n  "request_id" : "ff9351df-e7e0-4a15-a054-6096e6ce4fd3"\n}'
2025-01-18 18:59:38,721 - DEBUG - making POST request to https://gmcpdcz-mt01740.snowflakecomputing.com/api/v2/cortex/inference:complete (model=mistral-large2)
2025-01-18 18:59:38,722 - DEBUG - Starting new HTTPS connection (1): gmcpdcz-mt01740.snowflakecomputing.com:443
2025-01-18 18:59:39,292 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /api/v2/cortex/inference:complete HTTP/1.1" 200 None
2025-01-18 18:59:43,732 - DEBUG - executing SQL/command
2025-01-18 18:59:43,733 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/Moven...]
2025-01-18 18:59:43,733 - DEBUG - sequence counter: 145
2025-01-18 18:59:43,733 - DEBUG - Request id: d5bd72d0-3b86-434d-8b97-e5b555cf9e73
2025-01-18 18:59:43,733 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/Moven...]
2025-01-18 18:59:43,733 - DEBUG - is_file_transfer: True
2025-01-18 18:59:43,733 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:43,733 - DEBUG - _cmd_query
2025-01-18 18:59:43,733 - DEBUG - serialize_to_dict() called
2025-01-18 18:59:43,733 - DEBUG - Cache Entry: (0, 1737248372405025, 0)
2025-01-18 18:59:43,733 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248372405025, 'priority': 0, 'context': {'base64Data': 'CObjJA=='}}]}
2025-01-18 18:59:43,733 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/Moven...], sequence_id=[145], is_file_transfer=[False]
2025-01-18 18:59:43,735 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:59:43,735 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:59:43,735 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:59:43,735 - DEBUG - Request guid: 14d3ad9e-4550-4a41-927b-8fc483748dbb
2025-01-18 18:59:43,735 - DEBUG - socket timeout: 60
2025-01-18 18:59:44,233 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=d5bd72d0-3b86-434d-8b97-e5b555cf9e73&request_guid=14d3ad9e-4550-4a41-927b-8fc483748dbb HTTP/1.1" 200 3457
2025-01-18 18:59:44,234 - DEBUG - SUCCESS
2025-01-18 18:59:44,234 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:59:44,234 - DEBUG - ret[code] = None, after post request
2025-01-18 18:59:44,234 - DEBUG - Query id: 01b9ce1b-0002-4c76-0007-08ea001fbf7a
2025-01-18 18:59:44,235 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248379621240, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:59:44,235 - DEBUG - Cache Entry: (0, 1737248372405025, 0)
2025-01-18 18:59:44,235 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248379621240, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:59:44,235 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:59:44,235 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:44,235 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:44,235 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:59:44,235 - DEBUG - Cache Entry: (0, 1737248379621240, 0)
2025-01-18 18:59:44,235 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:44,235 - DEBUG - sfqid: 01b9ce1b-0002-4c76-0007-08ea001fbf7a
2025-01-18 18:59:44,235 - DEBUG - query execution done
2025-01-18 18:59:44,235 - DEBUG - SUCCESS
2025-01-18 18:59:44,235 - DEBUG - PUT OR GET: False
2025-01-18 18:59:44,235 - DEBUG - Query result format: arrow
2025-01-18 18:59:44,235 - INFO - Number of results in first chunk: 54
2025-01-18 18:59:44,235 - DEBUG - Execute query [queryID: 01b9ce1b-0002-4c76-0007-08ea001fbf7a] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/Movento_RC_264-1170.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:59:44,235 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:59:44,236 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:59:44,236 - DEBUG - Batches read: 1
2025-01-18 18:59:44,236 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:59:44,238 - DEBUG - executing SQL/command
2025-01-18 18:59:44,238 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/GFA_2...]
2025-01-18 18:59:44,238 - DEBUG - sequence counter: 146
2025-01-18 18:59:44,238 - DEBUG - Request id: 591687f9-810a-438d-ae7f-c1230af47412
2025-01-18 18:59:44,238 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/GFA_2...]
2025-01-18 18:59:44,238 - DEBUG - is_file_transfer: True
2025-01-18 18:59:44,238 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:44,238 - DEBUG - _cmd_query
2025-01-18 18:59:44,238 - DEBUG - serialize_to_dict() called
2025-01-18 18:59:44,238 - DEBUG - Cache Entry: (0, 1737248379621240, 0)
2025-01-18 18:59:44,238 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248379621240, 'priority': 0, 'context': {'base64Data': 'CNrjJA=='}}]}
2025-01-18 18:59:44,238 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/GFA_2...], sequence_id=[146], is_file_transfer=[False]
2025-01-18 18:59:44,240 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:59:44,240 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:59:44,240 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:59:44,240 - DEBUG - Request guid: 06ccc517-362c-4c9d-8e64-1dc2e80b956b
2025-01-18 18:59:44,240 - DEBUG - socket timeout: 60
2025-01-18 18:59:44,563 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=591687f9-810a-438d-ae7f-c1230af47412&request_guid=06ccc517-362c-4c9d-8e64-1dc2e80b956b HTTP/1.1" 200 2715
2025-01-18 18:59:44,563 - DEBUG - SUCCESS
2025-01-18 18:59:44,564 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:59:44,564 - DEBUG - ret[code] = None, after post request
2025-01-18 18:59:44,564 - DEBUG - Query id: 01b9ce1b-0002-4d87-0007-08ea001fe752
2025-01-18 18:59:44,564 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248379952691, 'priority': 0, 'context': 'CJ7sJA=='}]}
2025-01-18 18:59:44,564 - DEBUG - Cache Entry: (0, 1737248379621240, 0)
2025-01-18 18:59:44,564 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248379952691, 'priority': 0, 'context': 'CJ7sJA=='}
2025-01-18 18:59:44,564 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:59:44,564 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:44,564 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:44,564 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:59:44,564 - DEBUG - Cache Entry: (0, 1737248379952691, 0)
2025-01-18 18:59:44,564 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:44,564 - DEBUG - sfqid: 01b9ce1b-0002-4d87-0007-08ea001fe752
2025-01-18 18:59:44,564 - DEBUG - query execution done
2025-01-18 18:59:44,564 - DEBUG - SUCCESS
2025-01-18 18:59:44,564 - DEBUG - PUT OR GET: False
2025-01-18 18:59:44,564 - DEBUG - Query result format: arrow
2025-01-18 18:59:44,564 - INFO - Number of results in first chunk: 54
2025-01-18 18:59:44,564 - DEBUG - Execute query [queryID: 01b9ce1b-0002-4d87-0007-08ea001fe752] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/GFA_280_HERBICIDE_264-1224.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:59:44,565 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:59:44,565 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:59:44,565 - DEBUG - Batches read: 1
2025-01-18 18:59:44,565 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:59:44,567 - DEBUG - executing SQL/command
2025-01-18 18:59:44,567 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACK...]
2025-01-18 18:59:44,567 - DEBUG - sequence counter: 147
2025-01-18 18:59:44,567 - DEBUG - Request id: 5de0bde3-1733-4e7a-8ac7-2916db20a52c
2025-01-18 18:59:44,567 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACK...]
2025-01-18 18:59:44,567 - DEBUG - is_file_transfer: True
2025-01-18 18:59:44,567 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:44,568 - DEBUG - _cmd_query
2025-01-18 18:59:44,568 - DEBUG - serialize_to_dict() called
2025-01-18 18:59:44,568 - DEBUG - Cache Entry: (0, 1737248379952691, 0)
2025-01-18 18:59:44,568 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248379952691, 'priority': 0, 'context': {'base64Data': 'CJ7sJA=='}}]}
2025-01-18 18:59:44,568 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACK...], sequence_id=[147], is_file_transfer=[False]
2025-01-18 18:59:44,569 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:59:44,569 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:59:44,569 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:59:44,569 - DEBUG - Request guid: 67b51ff4-5beb-43f6-8864-22fd2d5a99f7
2025-01-18 18:59:44,569 - DEBUG - socket timeout: 60
2025-01-18 18:59:44,887 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=5de0bde3-1733-4e7a-8ac7-2916db20a52c&request_guid=67b51ff4-5beb-43f6-8864-22fd2d5a99f7 HTTP/1.1" 200 3455
2025-01-18 18:59:44,888 - DEBUG - SUCCESS
2025-01-18 18:59:44,888 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:59:44,888 - DEBUG - ret[code] = None, after post request
2025-01-18 18:59:44,888 - DEBUG - Query id: 01b9ce1b-0002-4c78-0007-08ea00201236
2025-01-18 18:59:44,888 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248380285754, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:59:44,888 - DEBUG - Cache Entry: (0, 1737248379952691, 0)
2025-01-18 18:59:44,888 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248380285754, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:59:44,888 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:59:44,888 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:44,889 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:44,889 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:59:44,889 - DEBUG - Cache Entry: (0, 1737248380285754, 0)
2025-01-18 18:59:44,889 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:44,889 - DEBUG - sfqid: 01b9ce1b-0002-4c78-0007-08ea00201236
2025-01-18 18:59:44,889 - DEBUG - query execution done
2025-01-18 18:59:44,889 - DEBUG - SUCCESS
2025-01-18 18:59:44,889 - DEBUG - PUT OR GET: False
2025-01-18 18:59:44,889 - DEBUG - Query result format: arrow
2025-01-18 18:59:44,890 - INFO - Number of results in first chunk: 54
2025-01-18 18:59:44,890 - DEBUG - Execute query [queryID: 01b9ce1b-0002-4c78-0007-08ea00201236] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/SHACKLE_HERBICIDE_524-330.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:59:44,890 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:59:44,890 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:59:44,890 - DEBUG - Batches read: 1
2025-01-18 18:59:44,890 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:59:44,892 - DEBUG - executing SQL/command
2025-01-18 18:59:44,892 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...]
2025-01-18 18:59:44,892 - DEBUG - sequence counter: 148
2025-01-18 18:59:44,892 - DEBUG - Request id: 9aaee5c5-6157-451b-94dd-13e37d1ec9df
2025-01-18 18:59:44,893 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...]
2025-01-18 18:59:44,893 - DEBUG - is_file_transfer: True
2025-01-18 18:59:44,893 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:44,893 - DEBUG - _cmd_query
2025-01-18 18:59:44,893 - DEBUG - serialize_to_dict() called
2025-01-18 18:59:44,893 - DEBUG - Cache Entry: (0, 1737248380285754, 0)
2025-01-18 18:59:44,893 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248380285754, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:59:44,893 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUND...], sequence_id=[148], is_file_transfer=[False]
2025-01-18 18:59:44,894 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:59:44,894 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:59:44,894 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:59:44,894 - DEBUG - Request guid: c8769e4d-5849-4fcf-8827-8cadf8ff9ff0
2025-01-18 18:59:44,894 - DEBUG - socket timeout: 60
2025-01-18 18:59:45,228 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=9aaee5c5-6157-451b-94dd-13e37d1ec9df&request_guid=c8769e4d-5849-4fcf-8827-8cadf8ff9ff0 HTTP/1.1" 200 3516
2025-01-18 18:59:45,229 - DEBUG - SUCCESS
2025-01-18 18:59:45,229 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:59:45,229 - DEBUG - ret[code] = None, after post request
2025-01-18 18:59:45,229 - DEBUG - Query id: 01b9ce1b-0002-4c70-0007-08ea002040b2
2025-01-18 18:59:45,229 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248380622437, 'priority': 0, 'context': 'CMLjJA=='}]}
2025-01-18 18:59:45,229 - DEBUG - Cache Entry: (0, 1737248380285754, 0)
2025-01-18 18:59:45,229 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248380622437, 'priority': 0, 'context': 'CMLjJA=='}
2025-01-18 18:59:45,229 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:59:45,229 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:45,229 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:45,229 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:59:45,229 - DEBUG - Cache Entry: (0, 1737248380622437, 0)
2025-01-18 18:59:45,230 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:45,230 - DEBUG - sfqid: 01b9ce1b-0002-4c70-0007-08ea002040b2
2025-01-18 18:59:45,230 - DEBUG - query execution done
2025-01-18 18:59:45,230 - DEBUG - SUCCESS
2025-01-18 18:59:45,230 - DEBUG - PUT OR GET: False
2025-01-18 18:59:45,230 - DEBUG - Query result format: arrow
2025-01-18 18:59:45,230 - INFO - Number of results in first chunk: 54
2025-01-18 18:59:45,230 - DEBUG - Execute query [queryID: 01b9ce1b-0002-4c70-0007-08ea002040b2] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ROUNDUP_ORIGINAL_II_HERBICIDE_524-454.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:59:45,230 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:59:45,230 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:59:45,230 - DEBUG - Batches read: 1
2025-01-18 18:59:45,231 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:59:45,232 - DEBUG - executing SQL/command
2025-01-18 18:59:45,233 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/Esend...]
2025-01-18 18:59:45,233 - DEBUG - sequence counter: 149
2025-01-18 18:59:45,233 - DEBUG - Request id: 70748ee5-2772-4095-b993-012d241db6c3
2025-01-18 18:59:45,233 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/Esend...]
2025-01-18 18:59:45,233 - DEBUG - is_file_transfer: True
2025-01-18 18:59:45,233 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:45,233 - DEBUG - _cmd_query
2025-01-18 18:59:45,233 - DEBUG - serialize_to_dict() called
2025-01-18 18:59:45,233 - DEBUG - Cache Entry: (0, 1737248380622437, 0)
2025-01-18 18:59:45,233 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248380622437, 'priority': 0, 'context': {'base64Data': 'CMLjJA=='}}]}
2025-01-18 18:59:45,233 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/Esend...], sequence_id=[149], is_file_transfer=[False]
2025-01-18 18:59:45,235 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:59:45,235 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:59:45,235 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:59:45,235 - DEBUG - Request guid: e26c4a1a-cb8e-4b7f-94d9-e8efd5d7634a
2025-01-18 18:59:45,235 - DEBUG - socket timeout: 60
2025-01-18 18:59:45,535 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=70748ee5-2772-4095-b993-012d241db6c3&request_guid=e26c4a1a-cb8e-4b7f-94d9-e8efd5d7634a HTTP/1.1" 200 2704
2025-01-18 18:59:45,536 - DEBUG - SUCCESS
2025-01-18 18:59:45,536 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:59:45,536 - DEBUG - ret[code] = None, after post request
2025-01-18 18:59:45,536 - DEBUG - Query id: 01b9ce1b-0002-4c5d-0007-08ea001fcee2
2025-01-18 18:59:45,536 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248380917810, 'priority': 0, 'context': 'CPbiJA=='}]}
2025-01-18 18:59:45,536 - DEBUG - Cache Entry: (0, 1737248380622437, 0)
2025-01-18 18:59:45,536 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248380917810, 'priority': 0, 'context': 'CPbiJA=='}
2025-01-18 18:59:45,536 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:59:45,536 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:45,536 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:45,536 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:59:45,536 - DEBUG - Cache Entry: (0, 1737248380917810, 0)
2025-01-18 18:59:45,536 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:45,536 - DEBUG - sfqid: 01b9ce1b-0002-4c5d-0007-08ea001fcee2
2025-01-18 18:59:45,536 - DEBUG - query execution done
2025-01-18 18:59:45,536 - DEBUG - SUCCESS
2025-01-18 18:59:45,536 - DEBUG - PUT OR GET: False
2025-01-18 18:59:45,537 - DEBUG - Query result format: arrow
2025-01-18 18:59:45,537 - INFO - Number of results in first chunk: 54
2025-01-18 18:59:45,537 - DEBUG - Execute query [queryID: 01b9ce1b-0002-4c5d-0007-08ea001fcee2] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/Esendo_Fungicide_70051-144.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:59:45,537 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:59:45,537 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:59:45,537 - DEBUG - Batches read: 1
2025-01-18 18:59:45,537 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:59:45,539 - DEBUG - executing SQL/command
2025-01-18 18:59:45,540 - DEBUG - query: [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ACCOR...]
2025-01-18 18:59:45,540 - DEBUG - sequence counter: 150
2025-01-18 18:59:45,540 - DEBUG - Request id: 886322c3-8389-4c36-8080-64a304a9cd6c
2025-01-18 18:59:45,540 - DEBUG - running query [select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ACCOR...]
2025-01-18 18:59:45,540 - DEBUG - is_file_transfer: True
2025-01-18 18:59:45,540 - DEBUG - Failed to set SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:45,540 - DEBUG - _cmd_query
2025-01-18 18:59:45,540 - DEBUG - serialize_to_dict() called
2025-01-18 18:59:45,540 - DEBUG - Cache Entry: (0, 1737248380917810, 0)
2025-01-18 18:59:45,540 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248380917810, 'priority': 0, 'context': {'base64Data': 'CPbiJA=='}}]}
2025-01-18 18:59:45,540 - DEBUG - sql=[select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ACCOR...], sequence_id=[150], is_file_transfer=[False]
2025-01-18 18:59:45,542 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:59:45,542 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:59:45,542 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:59:45,542 - DEBUG - Request guid: 8f59ae55-e345-47f4-bdd1-5b3ce4c84384
2025-01-18 18:59:45,542 - DEBUG - socket timeout: 60
2025-01-18 18:59:45,696 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=886322c3-8389-4c36-8080-64a304a9cd6c&request_guid=8f59ae55-e345-47f4-bdd1-5b3ce4c84384 HTTP/1.1" 200 3476
2025-01-18 18:59:45,697 - DEBUG - SUCCESS
2025-01-18 18:59:45,698 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:59:45,698 - DEBUG - ret[code] = None, after post request
2025-01-18 18:59:45,698 - DEBUG - Query id: 01b9ce1b-0002-4c78-0007-08ea0020123a
2025-01-18 18:59:45,698 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248381094119, 'priority': 0, 'context': 'COLjJA=='}]}
2025-01-18 18:59:45,698 - DEBUG - Cache Entry: (0, 1737248380917810, 0)
2025-01-18 18:59:45,698 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248381094119, 'priority': 0, 'context': 'COLjJA=='}
2025-01-18 18:59:45,698 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:59:45,698 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:45,698 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:45,698 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:59:45,698 - DEBUG - Cache Entry: (0, 1737248381094119, 0)
2025-01-18 18:59:45,698 - DEBUG - Failed to reset SIGINT handler. Not in main thread. Ignored...
2025-01-18 18:59:45,698 - DEBUG - sfqid: 01b9ce1b-0002-4c78-0007-08ea0020123a
2025-01-18 18:59:45,698 - DEBUG - query execution done
2025-01-18 18:59:45,698 - DEBUG - SUCCESS
2025-01-18 18:59:45,698 - DEBUG - PUT OR GET: False
2025-01-18 18:59:45,698 - DEBUG - Query result format: arrow
2025-01-18 18:59:45,698 - INFO - Number of results in first chunk: 54
2025-01-18 18:59:45,699 - DEBUG - Execute query [queryID: 01b9ce1b-0002-4c78-0007-08ea0020123a] select GET_PRESIGNED_URL(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE, 'EPA_LABEL_PDF/ACCORD_XL_HERBICIDE_524-517.pdf', 360) as URL_LINK from directory(@DEV_SRC_INGEST.EPA_RAW.PDF_STORE)
2025-01-18 18:59:45,699 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:59:45,699 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:59:45,699 - DEBUG - Batches read: 1
2025-01-18 18:59:45,699 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:59:57,676 - INFO - Closing session: 1980125954386766
2025-01-18 18:59:57,676 - INFO - Canceling all running queries
2025-01-18 18:59:57,676 - DEBUG - cursor
2025-01-18 18:59:57,676 - DEBUG - executing SQL/command
2025-01-18 18:59:57,676 - DEBUG - query: [select system$cancel_all_queries(1980125954386766)]
2025-01-18 18:59:57,676 - DEBUG - sequence counter: 151
2025-01-18 18:59:57,676 - DEBUG - Request id: 2813b4eb-7afc-4e9a-86d7-811adee38cc1
2025-01-18 18:59:57,676 - DEBUG - running query [select system$cancel_all_queries(1980125954386766)]
2025-01-18 18:59:57,676 - DEBUG - is_file_transfer: True
2025-01-18 18:59:57,676 - DEBUG - _cmd_query
2025-01-18 18:59:57,676 - DEBUG - serialize_to_dict() called
2025-01-18 18:59:57,676 - DEBUG - Cache Entry: (0, 1737248381094119, 0)
2025-01-18 18:59:57,676 - DEBUG - serialize_to_dict(): data to send to server {'entries': [{'id': 0, 'timestamp': 1737248381094119, 'priority': 0, 'context': {'base64Data': 'COLjJA=='}}]}
2025-01-18 18:59:57,676 - DEBUG - sql=[select system$cancel_all_queries(1980125954386766)], sequence_id=[151], is_file_transfer=[False]
2025-01-18 18:59:57,678 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:59:57,678 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:59:57,678 - DEBUG - remaining request timeout: N/A ms, retry cnt: 1
2025-01-18 18:59:57,678 - DEBUG - Request guid: 5e4b8e5a-90d5-4596-a367-de0d8d2bbe20
2025-01-18 18:59:57,678 - DEBUG - socket timeout: 60
2025-01-18 18:59:57,799 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=2813b4eb-7afc-4e9a-86d7-811adee38cc1&request_guid=5e4b8e5a-90d5-4596-a367-de0d8d2bbe20 HTTP/1.1" 200 1762
2025-01-18 18:59:57,800 - DEBUG - SUCCESS
2025-01-18 18:59:57,800 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:59:57,800 - DEBUG - ret[code] = None, after post request
2025-01-18 18:59:57,800 - DEBUG - Query id: 01b9ce1b-0002-4c76-0007-08ea001fbf7e
2025-01-18 18:59:57,801 - DEBUG - deserialize_json_dict() called: data from server: {'entries': [{'id': 0, 'timestamp': 1737248393184445, 'priority': 0, 'context': 'CNrjJA=='}]}
2025-01-18 18:59:57,801 - DEBUG - Cache Entry: (0, 1737248381094119, 0)
2025-01-18 18:59:57,801 - DEBUG - deserialize {'id': 0, 'timestamp': 1737248393184445, 'priority': 0, 'context': 'CNrjJA=='}
2025-01-18 18:59:57,801 - DEBUG - sync_priority_map called priority_map size = 0, new_priority_map size = 1
2025-01-18 18:59:57,801 - DEBUG - trim_cache() called. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:57,801 - DEBUG - trim_cache() returns. treeSet size is 1 and cache capacity is 5
2025-01-18 18:59:57,801 - DEBUG - deserialize_json_dict() returns
2025-01-18 18:59:57,801 - DEBUG - Cache Entry: (0, 1737248393184445, 0)
2025-01-18 18:59:57,801 - DEBUG - sfqid: 01b9ce1b-0002-4c76-0007-08ea001fbf7e
2025-01-18 18:59:57,801 - DEBUG - query execution done
2025-01-18 18:59:57,801 - DEBUG - SUCCESS
2025-01-18 18:59:57,801 - DEBUG - PUT OR GET: False
2025-01-18 18:59:57,801 - DEBUG - Query result format: arrow
2025-01-18 18:59:57,801 - INFO - Number of results in first chunk: 1
2025-01-18 18:59:57,801 - DEBUG - Execute query [queryID: 01b9ce1b-0002-4c76-0007-08ea001fbf7e] select system$cancel_all_queries(1980125954386766)
2025-01-18 18:59:57,801 - DEBUG - Using nanoarrow as the arrow data converter
2025-01-18 18:59:57,801 - DEBUG - Arrow BatchSize: 1
2025-01-18 18:59:57,801 - DEBUG - Arrow chunk info: batchCount 1, columnCount 1, use_numpy: 0
2025-01-18 18:59:57,801 - DEBUG - Batches read: 0
2025-01-18 18:59:57,802 - DEBUG - beginning to schedule result batch downloads
2025-01-18 18:59:57,802 - DEBUG - Current batch index: 0, rows in current batch: 1
2025-01-18 18:59:57,802 - INFO - closed
2025-01-18 18:59:57,802 - DEBUG - Closing telemetry client.
2025-01-18 18:59:57,804 - DEBUG - Sending 1 logs to telemetry. Data is {'logs': [{'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce1b-0002-4c70-0007-08ea002040ae', 'value': 4597}, 'timestamp': '1737248376861'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)', 'e2e_time': 0.05572247505187988, 'stack_trace': ['main()', 'config_options()', "categories = session.table('DOCS_CHUNKS_TABLE').select('PRODUCTNAME').distinct().order_by('PRODUCTNAME').collect()", 'r = func(*args, **kwargs)', 'return func(*args, **kwargs)', '[self.col(quote_name(f.name), _emit_ast=False) for f in self.schema.fields],', 'val = self.func(instance)', 'return StructType._from_attributes(self._plan.attributes)', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737248376861'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce1b-0002-4c72-0007-08ea0020313e', 'value': 4598}, 'timestamp': '1737248376922'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_describe_query_details', 'data': {'session_id': 1980125954386766, 'sql_text': ' SELECT "PRODUCTNAME" FROM ( SELECT "PRODUCTNAME" FROM ( SELECT  *  FROM DOCS_CHUNKS_TABLE)) GROUP BY "PRODUCTNAME"', 'e2e_time': 0.06030464172363281, 'stack_trace': ['exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'exprs = [convert(col) for col in parse_positional_args_to_list(*cols)]', 'return self._resolve(col)', 'lambda attr: quote_name(attr.name) == normalized_col_name, self._output', 'val = self.func(instance)', 'self._select_statement.column_states.projection', 'self.column_states = self.from_.column_states', 'column_attrs = self.snowflake_plan.attributes', 'attributes = analyze_attributes(self.schema_query, self.session)']}}, 'timestamp': '1737248376922'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce1b-0002-4c79-0007-08ea0020031e', 'value': 4596}, 'timestamp': '1737248377026'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce1b-0002-4c79-0007-08ea0020031e', 'value': 0}, 'timestamp': '1737248377026'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_collect', 'category': 'action', 'api_calls': [{'name': 'Session.table', 'sql_simplifier_enabled': True, 'query_plan_height': 4, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'ef825680-8990-4422-b2f1-6c59cd4bf1de', 'query_plan_complexity': {'others': 1, 'column': 5, 'order_by': 1, 'group_by': 1}, 'thread_ident': 27536}, {'name': 'DataFrame.select'}, {'name': 'DataFrame.distinct', 'subcalls': [{'name': 'DataFrame.group_by'}, {'name': 'RelationalGroupedDataFrame.agg'}]}, {'name': 'DataFrame.sort'}, {'name': 'DataFrame.collect'}], 'sfqids': ['01b9ce1b-0002-4c79-0007-08ea0020031e']}}, 'timestamp': '1737248377027'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737248377590'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737248378135'}, {'message': {'source': 'snowflake.core', 'version': '1.0.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'python_api', 'data': {'class_name': 'CortexSearchServiceResource', 'func_name': 'search'}}, 'timestamp': '1737248378267'}, {'message': {'source': 'SnowML', 'project': 'CortexFunctions', 'subproject': None, 'version': '1.7.2', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowml_function_usage', 'data': {'func_name': 'snowflake.cortex._complete.Complete', 'category': 'usage', 'api_calls': [{'name': 'snowflake.cortex._complete.Complete'}]}}, 'timestamp': '1737248383731'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce1b-0002-4c76-0007-08ea001fbf7a', 'value': 4597}, 'timestamp': '1737248384235'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce1b-0002-4c76-0007-08ea001fbf7a', 'value': 1}, 'timestamp': '1737248384235'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce1b-0002-4c76-0007-08ea001fbf7a', 'value': 1}, 'timestamp': '1737248384236'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '02d49d30-0a4b-4f49-b917-0b084aa7cb76', 'query_plan_complexity': {'column': 1}, 'thread_ident': 27536}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce1b-0002-4c76-0007-08ea001fbf7a']}}, 'timestamp': '1737248384237'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce1b-0002-4d87-0007-08ea001fe752', 'value': 4596}, 'timestamp': '1737248384564'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce1b-0002-4d87-0007-08ea001fe752', 'value': 1}, 'timestamp': '1737248384564'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce1b-0002-4d87-0007-08ea001fe752', 'value': 1}, 'timestamp': '1737248384565'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '879e3077-ca60-4396-9f6c-5aeb6cc96437', 'query_plan_complexity': {'column': 1}, 'thread_ident': 27536}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce1b-0002-4d87-0007-08ea001fe752']}}, 'timestamp': '1737248384566'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce1b-0002-4c78-0007-08ea00201236', 'value': 4597}, 'timestamp': '1737248384889'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce1b-0002-4c78-0007-08ea00201236', 'value': 1}, 'timestamp': '1737248384890'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce1b-0002-4c78-0007-08ea00201236', 'value': 1}, 'timestamp': '1737248384890'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'cb61ab1f-a233-4cd5-b635-f372980b8144', 'query_plan_complexity': {'column': 1}, 'thread_ident': 27536}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce1b-0002-4c78-0007-08ea00201236']}}, 'timestamp': '1737248384891'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce1b-0002-4c70-0007-08ea002040b2', 'value': 4601}, 'timestamp': '1737248385230'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce1b-0002-4c70-0007-08ea002040b2', 'value': 1}, 'timestamp': '1737248385230'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce1b-0002-4c70-0007-08ea002040b2', 'value': 1}, 'timestamp': '1737248385231'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': '8879a8c8-410a-4653-81b7-3b48189d194e', 'query_plan_complexity': {'column': 1}, 'thread_ident': 27536}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce1b-0002-4c70-0007-08ea002040b2']}}, 'timestamp': '1737248385231'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce1b-0002-4c5d-0007-08ea001fcee2', 'value': 4597}, 'timestamp': '1737248385536'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce1b-0002-4c5d-0007-08ea001fcee2', 'value': 1}, 'timestamp': '1737248385537'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce1b-0002-4c5d-0007-08ea001fcee2', 'value': 1}, 'timestamp': '1737248385537'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'a7362e90-3afb-4ac2-bbe3-bc6684290ebe', 'query_plan_complexity': {'column': 1}, 'thread_ident': 27536}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce1b-0002-4c5d-0007-08ea001fcee2']}}, 'timestamp': '1737248385538'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce1b-0002-4c78-0007-08ea0020123a', 'value': 4597}, 'timestamp': '1737248385698'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_fetch_pandas_all', 'query_id': '01b9ce1b-0002-4c78-0007-08ea0020123a', 'value': 1}, 'timestamp': '1737248385699'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce1b-0002-4c78-0007-08ea0020123a', 'value': 1}, 'timestamp': '1737248385699'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_function_usage', 'data': {'func_name': 'action_to_pandas', 'category': 'action', 'api_calls': [{'name': 'Session.sql', 'sql_simplifier_enabled': True, 'query_plan_height': 2, 'query_plan_num_selects_with_complexity_merged': 0, 'query_plan_num_duplicate_nodes': 0, 'query_plan_duplicated_node_complexity_distribution': [0, 0, 0, 0, 0, 0, 0], 'plan_uuid': 'c05c6786-d8c7-4a4e-9a0b-a9e7b8d00a1d', 'query_plan_complexity': {'column': 1}, 'thread_ident': 27536}, {'name': 'DataFrame.to_pandas'}], 'sfqids': ['01b9ce1b-0002-4c78-0007-08ea0020123a']}}, 'timestamp': '1737248385700'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_cursor_created', 'data': {'session_id': 1980125954386766, 'thread_ident': 32300}}, 'timestamp': '1737248397676'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_first_result', 'query_id': '01b9ce1b-0002-4c76-0007-08ea001fbf7e', 'value': 4601}, 'timestamp': '1737248397801'}, {'message': {'driver_type': 'PythonConnector', 'driver_version': '3.12.4', 'source': 'streamlit', 'type': 'client_time_consume_last_result', 'query_id': '01b9ce1b-0002-4c76-0007-08ea001fbf7e', 'value': 1}, 'timestamp': '1737248397802'}, {'message': {'source': 'PythonSnowpark', 'version': '1.26.0', 'python_version': '3.10.11', 'operating_system': 'Windows', 'type': 'snowpark_temp_table_cleanup', 'data': {'session_id': 1980125954386766, 'temp_table_cleaner_enabled': False, 'num_temp_tables_cleaned': 0, 'num_temp_tables_created': 0}}, 'timestamp': '1737248397802'}]}.
2025-01-18 18:59:57,805 - DEBUG - Opentelemtry otel injection failed
ModuleNotFoundError: No module named 'opentelemetry'
2025-01-18 18:59:57,805 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:59:57,806 - DEBUG - remaining request timeout: 5000 ms, retry cnt: 1
2025-01-18 18:59:57,806 - DEBUG - Request guid: 646a0f54-39fa-4212-99f2-ae618a5f84bf
2025-01-18 18:59:57,806 - DEBUG - socket timeout: 60
2025-01-18 18:59:57,858 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /telemetry/send?request_guid=646a0f54-39fa-4212-99f2-ae618a5f84bf HTTP/1.1" 200 86
2025-01-18 18:59:57,859 - DEBUG - SUCCESS
2025-01-18 18:59:57,859 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:59:57,859 - DEBUG - ret[code] = None, after post request
2025-01-18 18:59:57,859 - DEBUG - Successfully uploading metrics to telemetry.
2025-01-18 18:59:57,859 - INFO - No async queries seem to be running, deleting session
2025-01-18 18:59:57,859 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 1/2 active sessions
2025-01-18 18:59:57,859 - DEBUG - remaining request timeout: 5000 ms, retry cnt: 1
2025-01-18 18:59:57,859 - DEBUG - Request guid: 50338bb5-4c4d-47be-a679-1ef42fbc15bb
2025-01-18 18:59:57,859 - DEBUG - socket timeout: 60
2025-01-18 18:59:57,905 - DEBUG - https://gmcpdcz-mt01740.snowflakecomputing.com:443 "POST /session?delete=true&request_guid=50338bb5-4c4d-47be-a679-1ef42fbc15bb HTTP/1.1" 200 76
2025-01-18 18:59:57,906 - DEBUG - SUCCESS
2025-01-18 18:59:57,906 - DEBUG - Session status for SessionPool 'gmcpdcz-mt01740.snowflakecomputing.com', SessionPool 0/2 active sessions
2025-01-18 18:59:57,906 - DEBUG - ret[code] = None, after post request
2025-01-18 18:59:57,908 - DEBUG - clear_cache() called
2025-01-18 18:59:57,909 - DEBUG - Session is closed
2025-01-18 18:59:57,909 - INFO - Closed session: 1980125954386766
